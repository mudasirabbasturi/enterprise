{
  "version": 3,
  "sources": ["../../tinymce/plugins/code/plugin.js", "../../tinymce/plugins/code/index.js"],
  "sourcesContent": ["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const setContent = (editor, html) => {\n        // We get a lovely \"Wrong document\" error in IE 11 if we\n        // don't move the focus to the editor before creating an undo\n        // transaction since it tries to make a bookmark for the current selection\n        editor.focus();\n        editor.undoManager.transact(() => {\n            editor.setContent(html);\n        });\n        editor.selection.setCursorLocation();\n        editor.nodeChanged();\n    };\n    const getContent = (editor) => {\n        return editor.getContent({ source_view: true });\n    };\n\n    const open = (editor) => {\n        const editorContent = getContent(editor);\n        editor.windowManager.open({\n            title: 'Source Code',\n            size: 'large',\n            body: {\n                type: 'panel',\n                items: [\n                    {\n                        type: 'textarea',\n                        name: 'code'\n                    }\n                ]\n            },\n            buttons: [\n                {\n                    type: 'cancel',\n                    name: 'cancel',\n                    text: 'Cancel'\n                },\n                {\n                    type: 'submit',\n                    name: 'save',\n                    text: 'Save',\n                    primary: true\n                }\n            ],\n            initialData: {\n                code: editorContent\n            },\n            onSubmit: (api) => {\n                setContent(editor, api.getData().code);\n                api.close();\n            }\n        });\n    };\n\n    const register$1 = (editor) => {\n        editor.addCommand('mceCodeEditor', () => {\n            open(editor);\n        });\n    };\n\n    const register = (editor) => {\n        const onAction = () => editor.execCommand('mceCodeEditor');\n        editor.ui.registry.addButton('code', {\n            icon: 'sourcecode',\n            tooltip: 'Source code',\n            onAction\n        });\n        editor.ui.registry.addMenuItem('code', {\n            icon: 'sourcecode',\n            text: 'Source code',\n            onAction\n        });\n    };\n\n    var Plugin = () => {\n        global.add('code', (editor) => {\n            register$1(editor);\n            register(editor);\n            return {};\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n", "// Exports the \"code\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/code')\n//   ES2015:\n//     import 'tinymce/plugins/code'\nrequire('./plugin.js');"],
  "mappings": ";;;;;AAAA;AAAA;AAIA,KAAC,WAAY;AACT;AAEA,UAAI,SAAS,QAAQ,KAAK,MAAM,QAAQ,uBAAuB;AAE/D,YAAM,aAAa,CAAC,QAAQ,SAAS;AAIjC,eAAO,MAAM;AACb,eAAO,YAAY,SAAS,MAAM;AAC9B,iBAAO,WAAW,IAAI;AAAA,QAC1B,CAAC;AACD,eAAO,UAAU,kBAAkB;AACnC,eAAO,YAAY;AAAA,MACvB;AACA,YAAM,aAAa,CAAC,WAAW;AAC3B,eAAO,OAAO,WAAW,EAAE,aAAa,KAAK,CAAC;AAAA,MAClD;AAEA,YAAM,OAAO,CAAC,WAAW;AACrB,cAAM,gBAAgB,WAAW,MAAM;AACvC,eAAO,cAAc,KAAK;AAAA,UACtB,OAAO;AAAA,UACP,MAAM;AAAA,UACN,MAAM;AAAA,YACF,MAAM;AAAA,YACN,OAAO;AAAA,cACH;AAAA,gBACI,MAAM;AAAA,gBACN,MAAM;AAAA,cACV;AAAA,YACJ;AAAA,UACJ;AAAA,UACA,SAAS;AAAA,YACL;AAAA,cACI,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,YACV;AAAA,YACA;AAAA,cACI,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS;AAAA,YACb;AAAA,UACJ;AAAA,UACA,aAAa;AAAA,YACT,MAAM;AAAA,UACV;AAAA,UACA,UAAU,CAAC,QAAQ;AACf,uBAAW,QAAQ,IAAI,QAAQ,EAAE,IAAI;AACrC,gBAAI,MAAM;AAAA,UACd;AAAA,QACJ,CAAC;AAAA,MACL;AAEA,YAAM,aAAa,CAAC,WAAW;AAC3B,eAAO,WAAW,iBAAiB,MAAM;AACrC,eAAK,MAAM;AAAA,QACf,CAAC;AAAA,MACL;AAEA,YAAM,WAAW,CAAC,WAAW;AACzB,cAAM,WAAW,MAAM,OAAO,YAAY,eAAe;AACzD,eAAO,GAAG,SAAS,UAAU,QAAQ;AAAA,UACjC,MAAM;AAAA,UACN,SAAS;AAAA,UACT;AAAA,QACJ,CAAC;AACD,eAAO,GAAG,SAAS,YAAY,QAAQ;AAAA,UACnC,MAAM;AAAA,UACN,MAAM;AAAA,UACN;AAAA,QACJ,CAAC;AAAA,MACL;AAEA,UAAI,SAAS,MAAM;AACf,eAAO,IAAI,QAAQ,CAAC,WAAW;AAC3B,qBAAW,MAAM;AACjB,mBAAS,MAAM;AACf,iBAAO,CAAC;AAAA,QACZ,CAAC;AAAA,MACL;AAEA,aAAO;AAAA,IAOX,GAAG;AAAA;AAAA;;;AC1FH;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../tinymce/plugins/link/plugin.js", "../../tinymce/plugins/link/index.js"],
  "sourcesContent": ["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType = (type) => (value) => typeOf(value) === type;\n    const isSimpleType = (type) => (value) => typeof value === type;\n    const eq = (t) => (a) => t === a;\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isArray = isType('array');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isArrayOf = (value, pred) => {\n        if (isArray(value)) {\n            for (let i = 0, len = value.length; i < len; ++i) {\n                if (!(pred(value[i]))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n\n    const noop = () => { };\n    const constant = (value) => {\n        return () => {\n            return value;\n        };\n    };\n    const tripleEquals = (a, b) => {\n        return a === b;\n    };\n\n    /**\n     * The `Optional` type represents a value (of any type) that potentially does\n     * not exist. Any `Optional<T>` can either be a `Some<T>` (in which case the\n     * value does exist) or a `None` (in which case the value does not exist). This\n     * module defines a whole lot of FP-inspired utility functions for dealing with\n     * `Optional` objects.\n     *\n     * Comparison with null or undefined:\n     * - We don't get fancy null coalescing operators with `Optional`\n     * - We do get fancy helper functions with `Optional`\n     * - `Optional` support nesting, and allow for the type to still be nullable (or\n     * another `Optional`)\n     * - There is no option to turn off strict-optional-checks like there is for\n     * strict-null-checks\n     */\n    class Optional {\n        // The internal representation has a `tag` and a `value`, but both are\n        // private: able to be console.logged, but not able to be accessed by code\n        constructor(tag, value) {\n            this.tag = tag;\n            this.value = value;\n        }\n        // --- Identities ---\n        /**\n         * Creates a new `Optional<T>` that **does** contain a value.\n         */\n        static some(value) {\n            return new Optional(true, value);\n        }\n        /**\n         * Create a new `Optional<T>` that **does not** contain a value. `T` can be\n         * any type because we don't actually have a `T`.\n         */\n        static none() {\n            return Optional.singletonNone;\n        }\n        /**\n         * Perform a transform on an `Optional` type. Regardless of whether this\n         * `Optional` contains a value or not, `fold` will return a value of type `U`.\n         * If this `Optional` does not contain a value, the `U` will be created by\n         * calling `onNone`. If this `Optional` does contain a value, the `U` will be\n         * created by calling `onSome`.\n         *\n         * For the FP enthusiasts in the room, this function:\n         * 1. Could be used to implement all of the functions below\n         * 2. Forms a catamorphism\n         */\n        fold(onNone, onSome) {\n            if (this.tag) {\n                return onSome(this.value);\n            }\n            else {\n                return onNone();\n            }\n        }\n        /**\n         * Determine if this `Optional` object contains a value.\n         */\n        isSome() {\n            return this.tag;\n        }\n        /**\n         * Determine if this `Optional` object **does not** contain a value.\n         */\n        isNone() {\n            return !this.tag;\n        }\n        // --- Functor (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value. If\n         * you provide a function to turn a T into a U, this is the function you use\n         * to turn an `Optional<T>` into an `Optional<U>`. If this **does** contain\n         * a value then the output will also contain a value (that value being the\n         * output of `mapper(this.value)`), and if this **does not** contain a value\n         * then neither will the output.\n         */\n        map(mapper) {\n            if (this.tag) {\n                return Optional.some(mapper(this.value));\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Monad (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value.\n         * Unlike `map`, here the transform itself also returns an `Optional`.\n         */\n        bind(binder) {\n            if (this.tag) {\n                return binder(this.value);\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Traversable (name stolen from Haskell / maths) ---\n        /**\n         * For a given predicate, this function finds out if there **exists** a value\n         * inside this `Optional` object that meets the predicate. In practice, this\n         * means that for `Optional`s that do not contain a value it returns false (as\n         * no predicate-meeting value exists).\n         */\n        exists(predicate) {\n            return this.tag && predicate(this.value);\n        }\n        /**\n         * For a given predicate, this function finds out if **all** the values inside\n         * this `Optional` object meet the predicate. In practice, this means that\n         * for `Optional`s that do not contain a value it returns true (as all 0\n         * objects do meet the predicate).\n         */\n        forall(predicate) {\n            return !this.tag || predicate(this.value);\n        }\n        filter(predicate) {\n            if (!this.tag || predicate(this.value)) {\n                return this;\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Getters ---\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.\n         */\n        getOr(replacement) {\n            return this.tag ? this.value : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.  Unlike `getOr`, in this method the `replacement` object is also\n         * `Optional` - meaning that this method will always return an `Optional`.\n         */\n        or(replacement) {\n            return this.tag ? this : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value. Unlike `getOr`, in this method the `replacement` value is\n         * \"thunked\" - that is to say that you don't pass a value to `getOrThunk`, you\n         * pass a function which (if called) will **return** the `value` you want to\n         * use.\n         */\n        getOrThunk(thunk) {\n            return this.tag ? this.value : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided Optional object does not contain a\n         * value.\n         *\n         * Unlike `or`, in this method the `replacement` value is \"thunked\" - that is\n         * to say that you don't pass a value to `orThunk`, you pass a function which\n         * (if called) will **return** the `value` you want to use.\n         *\n         * Unlike `getOrThunk`, in this method the `replacement` value is also\n         * `Optional`, meaning that this method will always return an `Optional`.\n         */\n        orThunk(thunk) {\n            return this.tag ? this : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, throwing an\n         * exception if the provided `Optional` object does not contain a value.\n         *\n         * WARNING:\n         * You should only be using this function if you know that the `Optional`\n         * object **is not** empty (otherwise you're throwing exceptions in production\n         * code, which is bad).\n         *\n         * In tests this is more acceptable.\n         *\n         * Prefer other methods to this, such as `.each`.\n         */\n        getOrDie(message) {\n            if (!this.tag) {\n                throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n            }\n            else {\n                return this.value;\n            }\n        }\n        // --- Interop with null and undefined ---\n        /**\n         * Creates an `Optional` value from a nullable (or undefined-able) input.\n         * Null, or undefined, is converted to `None`, and anything else is converted\n         * to `Some`.\n         */\n        static from(value) {\n            return isNonNullable(value) ? Optional.some(value) : Optional.none();\n        }\n        /**\n         * Converts an `Optional` to a nullable type, by getting the value if it\n         * exists, or returning `null` if it does not.\n         */\n        getOrNull() {\n            return this.tag ? this.value : null;\n        }\n        /**\n         * Converts an `Optional` to an undefined-able type, by getting the value if\n         * it exists, or returning `undefined` if it does not.\n         */\n        getOrUndefined() {\n            return this.value;\n        }\n        // --- Utilities ---\n        /**\n         * If the `Optional` contains a value, perform an action on that value.\n         * Unlike the rest of the methods on this type, `.each` has side-effects. If\n         * you want to transform an `Optional<T>` **into** something, then this is not\n         * the method for you. If you want to use an `Optional<T>` to **do**\n         * something, then this is the method for you - provided you're okay with not\n         * doing anything in the case where the `Optional` doesn't have a value inside\n         * it. If you're not sure whether your use-case fits into transforming\n         * **into** something or **doing** something, check whether it has a return\n         * value. If it does, you should be performing a transform.\n         */\n        each(worker) {\n            if (this.tag) {\n                worker(this.value);\n            }\n        }\n        /**\n         * Turn the `Optional` object into an array that contains all of the values\n         * stored inside the `Optional`. In practice, this means the output will have\n         * either 0 or 1 elements.\n         */\n        toArray() {\n            return this.tag ? [this.value] : [];\n        }\n        /**\n         * Turn the `Optional` object into a string for debugging or printing. Not\n         * recommended for production code, but good for debugging. Also note that\n         * these days an `Optional` object can be logged to the console directly, and\n         * its inner value (if it exists) will be visible.\n         */\n        toString() {\n            return this.tag ? `some(${this.value})` : 'none()';\n        }\n    }\n    // Sneaky optimisation: every instance of Optional.none is identical, so just\n    // reuse the same object\n    Optional.singletonNone = new Optional(false);\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    /* eslint-enable */\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains = (xs, x) => rawIndexOf(xs, x) > -1;\n    const map = (xs, f) => {\n        // pre-allocating array size when it's guaranteed to be known\n        // http://jsperf.com/push-allocated-vs-dynamic/22\n        const len = xs.length;\n        const r = new Array(len);\n        for (let i = 0; i < len; i++) {\n            const x = xs[i];\n            r[i] = f(x, i);\n        }\n        return r;\n    };\n    // Unwound implementing other functions in terms of each.\n    // The code size is roughly the same, and it should allow for better optimisation.\n    // const each = function<T, U>(xs: T[], f: (x: T, i?: number, xs?: T[]) => void): void {\n    const each$1 = (xs, f) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            f(x, i);\n        }\n    };\n    const foldl = (xs, f, acc) => {\n        each$1(xs, (x, i) => {\n            acc = f(acc, x, i);\n        });\n        return acc;\n    };\n    const flatten = (xs) => {\n        // Note, this is possible because push supports multiple arguments:\n        // http://jsperf.com/concat-push/6\n        // Note that in the past, concat() would silently work (very slowly) for array-like objects.\n        // With this change it will throw an error.\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; ++i) {\n            // Ensure that each value is an array itself\n            if (!isArray(xs[i])) {\n                throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n            }\n            nativePush.apply(r, xs[i]);\n        }\n        return r;\n    };\n    const bind = (xs, f) => flatten(map(xs, f));\n    isFunction(Array.from) ? Array.from : (x) => nativeSlice.call(x);\n    const findMap = (arr, f) => {\n        for (let i = 0; i < arr.length; i++) {\n            const r = f(arr[i], i);\n            if (r.isSome()) {\n                return r;\n            }\n        }\n        return Optional.none();\n    };\n\n    // There are many variations of Object iteration that are faster than the 'for-in' style:\n    // http://jsperf.com/object-keys-iteration/107\n    //\n    // Use the native keys if it is available (IE9+), otherwise fall back to manually filtering\n    const keys = Object.keys;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n        const props = keys(obj);\n        for (let k = 0, len = props.length; k < len; k++) {\n            const i = props[k];\n            const x = obj[i];\n            f(x, i);\n        }\n    };\n    const objAcc = (r) => (x, i) => {\n        r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n        each(obj, (x, i) => {\n            (pred(x, i) ? onTrue : onFalse)(x, i);\n        });\n    };\n    const filter = (obj, pred) => {\n        const t = {};\n        internalFilter(obj, pred, objAcc(t), noop);\n        return t;\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    const Cell = (initial) => {\n        let value = initial;\n        const get = () => {\n            return value;\n        };\n        const set = (v) => {\n            value = v;\n        };\n        return {\n            get,\n            set\n        };\n    };\n\n    /**\n     * **Is** the value stored inside this Optional object equal to `rhs`?\n     */\n    const is = (lhs, rhs, comparator = tripleEquals) => lhs.exists((left) => comparator(left, rhs));\n    const cat = (arr) => {\n        const r = [];\n        const push = (x) => {\n            r.push(x);\n        };\n        for (let i = 0; i < arr.length; i++) {\n            arr[i].each(push);\n        }\n        return r;\n    };\n    // This can help with type inference, by specifying the type param on the none case, so the caller doesn't have to.\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const singleton = (doRevoke) => {\n        const subject = Cell(Optional.none());\n        const revoke = () => subject.get().each(doRevoke);\n        const clear = () => {\n            revoke();\n            subject.set(Optional.none());\n        };\n        const isSet = () => subject.get().isSome();\n        const get = () => subject.get();\n        const set = (s) => {\n            revoke();\n            subject.set(Optional.some(s));\n        };\n        return {\n            clear,\n            isSet,\n            get,\n            set\n        };\n    };\n    const value = () => {\n        const subject = singleton(noop);\n        const on = (f) => subject.get().each(f);\n        return {\n            ...subject,\n            on\n        };\n    };\n\n    const removeFromStart = (str, numChars) => {\n        return str.substring(numChars);\n    };\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const removeLeading = (str, prefix) => {\n        return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n    };\n    /** Does 'str' start with 'prefix'?\n     *  Note: all strings start with the empty string.\n     *        More formally, for all strings x, startsWith(x, \"\").\n     *        This is so that for all strings x and y, startsWith(y + x, y)\n     */\n    const startsWith = (str, prefix) => {\n        return checkRange(str, prefix, 0);\n    };\n\n    const option = (name) => (editor) => editor.options.get(name);\n    const register$1 = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('link_assume_external_targets', {\n            processor: (value) => {\n                const valid = isString(value) || isBoolean(value);\n                if (valid) {\n                    if (value === true) {\n                        return { value: 1 /* AssumeExternalTargets.WARN */, valid };\n                    }\n                    else if (value === \"http\" /* AssumeExternalTargets.ALWAYS_HTTP */ || value === \"https\" /* AssumeExternalTargets.ALWAYS_HTTPS */) {\n                        return { value, valid };\n                    }\n                    else {\n                        return { value: 0 /* AssumeExternalTargets.OFF */, valid };\n                    }\n                }\n                else {\n                    return { valid: false, message: 'Must be a string or a boolean.' };\n                }\n            },\n            default: false\n        });\n        registerOption('link_context_toolbar', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('link_list', {\n            processor: (value) => isString(value) || isFunction(value) || isArrayOf(value, isObject)\n        });\n        registerOption('link_default_target', {\n            processor: 'string'\n        });\n        registerOption('link_default_protocol', {\n            processor: 'string',\n            default: 'https'\n        });\n        registerOption('link_target_list', {\n            processor: (value) => isBoolean(value) || isArrayOf(value, isObject),\n            default: true\n        });\n        registerOption('link_rel_list', {\n            processor: 'object[]',\n            default: []\n        });\n        registerOption('link_class_list', {\n            processor: 'object[]',\n            default: []\n        });\n        registerOption('link_title', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('allow_unsafe_link_target', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('link_quicklink', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('link_attributes_postprocess', {\n            processor: 'function',\n        });\n    };\n    const assumeExternalTargets = option('link_assume_external_targets');\n    const hasContextToolbar = option('link_context_toolbar');\n    const getLinkList = option('link_list');\n    const getDefaultLinkTarget = option('link_default_target');\n    const getDefaultLinkProtocol = option('link_default_protocol');\n    const getTargetList = option('link_target_list');\n    const getRelList = option('link_rel_list');\n    const getLinkClassList = option('link_class_list');\n    const shouldShowLinkTitle = option('link_title');\n    const allowUnsafeLinkTarget = option('allow_unsafe_link_target');\n    const useQuickLink = option('link_quicklink');\n    const attributesPostProcess = option('link_attributes_postprocess');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const isAnchor = (elm) => isNonNullable(elm) && elm.nodeName.toLowerCase() === 'a';\n    const isLink = (elm) => isAnchor(elm) && !!getHref(elm);\n    const collectNodesInRange = (rng, predicate) => {\n        if (rng.collapsed) {\n            return [];\n        }\n        else {\n            const contents = rng.cloneContents();\n            const firstChild = contents.firstChild;\n            const walker = new global$3(firstChild, contents);\n            const elements = [];\n            let current = firstChild;\n            do {\n                if (predicate(current)) {\n                    elements.push(current);\n                }\n            } while ((current = walker.next()));\n            return elements;\n        }\n    };\n    const hasProtocol = (url) => /^\\w+:/i.test(url);\n    const getHref = (elm) => {\n        var _a, _b;\n        // Returns the real href value not the resolved a.href value\n        return (_b = (_a = elm.getAttribute('data-mce-href')) !== null && _a !== void 0 ? _a : elm.getAttribute('href')) !== null && _b !== void 0 ? _b : '';\n    };\n    const applyRelTargetRules = (rel, isUnsafe) => {\n        const rules = ['noopener'];\n        const rels = rel ? rel.split(/\\s+/) : [];\n        const toString = (rels) => global$2.trim(rels.sort().join(' '));\n        const addTargetRules = (rels) => {\n            rels = removeTargetRules(rels);\n            return rels.length > 0 ? rels.concat(rules) : rules;\n        };\n        const removeTargetRules = (rels) => rels.filter((val) => global$2.inArray(rules, val) === -1);\n        const newRels = isUnsafe ? addTargetRules(rels) : removeTargetRules(rels);\n        return newRels.length > 0 ? toString(newRels) : '';\n    };\n    const trimCaretContainers = (text) => text.replace(/\\uFEFF/g, '');\n    const getAnchorElement = (editor, selectedElm) => {\n        selectedElm = selectedElm || getLinksInSelection(editor.selection.getRng())[0] || editor.selection.getNode();\n        if (isImageFigure(selectedElm)) {\n            // for an image contained in a figure we look for a link inside the selected element\n            return Optional.from(editor.dom.select('a[href]', selectedElm)[0]);\n        }\n        else {\n            return Optional.from(editor.dom.getParent(selectedElm, 'a[href]'));\n        }\n    };\n    const isInAnchor = (editor, selectedElm) => getAnchorElement(editor, selectedElm).isSome();\n    const getAnchorText = (selection, anchorElm) => {\n        const text = anchorElm.fold(() => selection.getContent({ format: 'text' }), (anchorElm) => anchorElm.innerText || anchorElm.textContent || '');\n        return trimCaretContainers(text);\n    };\n    const getLinksInSelection = (rng) => collectNodesInRange(rng, isLink);\n    const getLinks$1 = (elements) => global$2.grep(elements, isLink);\n    const hasLinks = (elements) => getLinks$1(elements).length > 0;\n    const hasLinksInSelection = (rng) => getLinksInSelection(rng).length > 0;\n    const isOnlyTextSelected = (editor) => {\n        // Allow anchor and inline text elements to be in the selection but nothing else\n        const inlineTextElements = editor.schema.getTextInlineElements();\n        const isElement = (elm) => elm.nodeType === 1 && !isAnchor(elm) && !has(inlineTextElements, elm.nodeName.toLowerCase());\n        // If selection is inside a block anchor then always treat it as non text only\n        const isInBlockAnchor = getAnchorElement(editor).exists((anchor) => anchor.hasAttribute('data-mce-block'));\n        if (isInBlockAnchor) {\n            return false;\n        }\n        const rng = editor.selection.getRng();\n        if (!rng.collapsed) {\n            // Collect all non inline text elements in the range and make sure no elements were found\n            const elements = collectNodesInRange(rng, isElement);\n            return elements.length === 0;\n        }\n        else {\n            return true;\n        }\n    };\n    const isImageFigure = (elm) => isNonNullable(elm) && elm.nodeName === 'FIGURE' && /\\bimage\\b/i.test(elm.className);\n\n    const getLinkAttrs = (data) => {\n        const attrs = ['title', 'rel', 'class', 'target'];\n        return foldl(attrs, (acc, key) => {\n            data[key].each((value) => {\n                // If dealing with an empty string, then treat that as being null so the attribute is removed\n                acc[key] = value.length > 0 ? value : null;\n            });\n            return acc;\n        }, {\n            href: data.href\n        });\n    };\n    const handleExternalTargets = (href, assumeExternalTargets) => {\n        if ((assumeExternalTargets === \"http\" /* AssumeExternalTargets.ALWAYS_HTTP */\n            || assumeExternalTargets === \"https\" /* AssumeExternalTargets.ALWAYS_HTTPS */)\n            && !hasProtocol(href)) {\n            return assumeExternalTargets + '://' + href;\n        }\n        return href;\n    };\n    const applyLinkOverrides = (editor, linkAttrs) => {\n        const newLinkAttrs = { ...linkAttrs };\n        if (getRelList(editor).length === 0 && !allowUnsafeLinkTarget(editor)) {\n            const newRel = applyRelTargetRules(newLinkAttrs.rel, newLinkAttrs.target === '_blank');\n            newLinkAttrs.rel = newRel ? newRel : null;\n        }\n        if (Optional.from(newLinkAttrs.target).isNone() && getTargetList(editor) === false) {\n            newLinkAttrs.target = getDefaultLinkTarget(editor);\n        }\n        newLinkAttrs.href = handleExternalTargets(newLinkAttrs.href, assumeExternalTargets(editor));\n        return newLinkAttrs;\n    };\n    const updateLink = (editor, anchorElm, text, linkAttrs) => {\n        // If we have text, then update the anchor elements text content\n        text.each((text) => {\n            if (has(anchorElm, 'innerText')) {\n                anchorElm.innerText = text;\n            }\n            else {\n                anchorElm.textContent = text;\n            }\n        });\n        editor.dom.setAttribs(anchorElm, linkAttrs);\n        // Move the cursor behind the updated link, so the user can go on typing.\n        const rng = editor.dom.createRng();\n        rng.setStartAfter(anchorElm);\n        rng.setEndAfter(anchorElm);\n        editor.selection.setRng(rng);\n    };\n    const createLink = (editor, selectedElm, text, linkAttrs) => {\n        const dom = editor.dom;\n        if (isImageFigure(selectedElm)) {\n            linkImageFigure(dom, selectedElm, linkAttrs);\n        }\n        else {\n            text.fold(() => {\n                editor.execCommand('mceInsertLink', false, linkAttrs);\n                // Now the newly inserted link is selected. Move the cursor behind the new link, so the user can go on typing.\n                const end = editor.selection.getEnd();\n                const rng = dom.createRng();\n                rng.setStartAfter(end);\n                rng.setEndAfter(end);\n                editor.selection.setRng(rng);\n            }, (text) => {\n                editor.insertContent(dom.createHTML('a', linkAttrs, dom.encode(text)));\n            });\n        }\n    };\n    const linkDomMutation = (editor, attachState, data) => {\n        const selectedElm = editor.selection.getNode();\n        const anchorElm = getAnchorElement(editor, selectedElm);\n        const linkAttrs = applyLinkOverrides(editor, getLinkAttrs(data));\n        const attributesPostProcess$1 = attributesPostProcess(editor);\n        if (isNonNullable(attributesPostProcess$1)) {\n            attributesPostProcess$1(linkAttrs);\n        }\n        editor.undoManager.transact(() => {\n            if (data.href === attachState.href) {\n                attachState.attach();\n            }\n            anchorElm.fold(() => {\n                createLink(editor, selectedElm, data.text, linkAttrs);\n            }, (elm) => {\n                editor.focus();\n                updateLink(editor, elm, data.text, linkAttrs);\n            });\n        });\n    };\n    const unlinkSelection = (editor) => {\n        const dom = editor.dom, selection = editor.selection;\n        const bookmark = selection.getBookmark();\n        const rng = selection.getRng().cloneRange();\n        // Extend the selection out to the entire anchor element\n        const startAnchorElm = dom.getParent(rng.startContainer, 'a[href]', editor.getBody());\n        const endAnchorElm = dom.getParent(rng.endContainer, 'a[href]', editor.getBody());\n        if (startAnchorElm) {\n            rng.setStartBefore(startAnchorElm);\n        }\n        if (endAnchorElm) {\n            rng.setEndAfter(endAnchorElm);\n        }\n        selection.setRng(rng);\n        // Remove the link\n        editor.execCommand('unlink');\n        selection.moveToBookmark(bookmark);\n    };\n    const unlinkDomMutation = (editor) => {\n        editor.undoManager.transact(() => {\n            const node = editor.selection.getNode();\n            if (isImageFigure(node)) {\n                unlinkImageFigure(editor, node);\n            }\n            else {\n                unlinkSelection(editor);\n            }\n            editor.focus();\n        });\n    };\n    /*\n     * RTC uses unwrapped options.\n     *\n     * To best simulate this, we unwrap to null and filter out empty values.\n     */\n    const unwrapOptions = (data) => {\n        const { class: cls, href, rel, target, text, title } = data;\n        return filter({\n            class: cls.getOrNull(),\n            href,\n            rel: rel.getOrNull(),\n            target: target.getOrNull(),\n            text: text.getOrNull(),\n            title: title.getOrNull()\n        }, (v, _k) => isNull(v) === false);\n    };\n    const sanitizeData = (editor, data) => {\n        const getOption = editor.options.get;\n        const uriOptions = {\n            allow_html_data_urls: getOption('allow_html_data_urls'),\n            allow_script_urls: getOption('allow_script_urls'),\n            allow_svg_data_urls: getOption('allow_svg_data_urls')\n        };\n        // Sanitize the URL\n        const href = data.href;\n        return {\n            ...data,\n            href: global$4.isDomSafe(href, 'a', uriOptions) ? href : ''\n        };\n    };\n    const link = (editor, attachState, data) => {\n        const sanitizedData = sanitizeData(editor, data);\n        editor.hasPlugin('rtc', true) ? editor.execCommand('createlink', false, unwrapOptions(sanitizedData)) : linkDomMutation(editor, attachState, sanitizedData);\n    };\n    const unlink = (editor) => {\n        editor.hasPlugin('rtc', true) ? editor.execCommand('unlink') : unlinkDomMutation(editor);\n    };\n    const unlinkImageFigure = (editor, fig) => {\n        var _a;\n        const img = editor.dom.select('img', fig)[0];\n        if (img) {\n            const a = editor.dom.getParents(img, 'a[href]', fig)[0];\n            if (a) {\n                (_a = a.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(img, a);\n                editor.dom.remove(a);\n            }\n        }\n    };\n    const linkImageFigure = (dom, fig, attrs) => {\n        var _a;\n        const img = dom.select('img', fig)[0];\n        if (img) {\n            const a = dom.create('a', attrs);\n            (_a = img.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(a, img);\n            a.appendChild(img);\n        }\n    };\n\n    const getValue = (item) => isString(item.value) ? item.value : '';\n    const getText = (item) => {\n        if (isString(item.text)) {\n            return item.text;\n        }\n        else if (isString(item.title)) {\n            return item.title;\n        }\n        else {\n            return '';\n        }\n    };\n    const sanitizeList = (list, extractValue) => {\n        const out = [];\n        global$2.each(list, (item) => {\n            const text = getText(item);\n            if (item.menu !== undefined) {\n                const items = sanitizeList(item.menu, extractValue);\n                out.push({ text, items }); // list group\n            }\n            else {\n                const value = extractValue(item);\n                out.push({ text, value }); // list value\n            }\n        });\n        return out;\n    };\n    const sanitizeWith = (extracter = getValue) => (list) => Optional.from(list).map((list) => sanitizeList(list, extracter));\n    const sanitize = (list) => sanitizeWith(getValue)(list);\n    // NOTE: May need to care about flattening.\n    const createUi = (name, label) => (items) => ({\n        name,\n        type: 'listbox',\n        label,\n        items\n    });\n    const ListOptions = {\n        sanitize,\n        sanitizeWith,\n        createUi,\n        getValue\n    };\n\n    const isListGroup = (item) => hasNonNullableKey(item, 'items');\n    const findTextByValue = (value, catalog) => findMap(catalog, (item) => {\n        if (isListGroup(item)) {\n            return findTextByValue(value, item.items);\n        }\n        else {\n            return someIf(item.value === value, item);\n        }\n    });\n    const getDelta = (persistentText, fieldName, catalog, data) => {\n        const value = data[fieldName];\n        const hasPersistentText = persistentText.length > 0;\n        return value !== undefined ? findTextByValue(value, catalog).map((i) => ({\n            url: {\n                value: i.value,\n                meta: {\n                    text: hasPersistentText ? persistentText : i.text,\n                    attach: noop\n                }\n            },\n            text: hasPersistentText ? persistentText : i.text\n        })) : Optional.none();\n    };\n    const findCatalog = (catalogs, fieldName) => {\n        if (fieldName === 'link') {\n            return catalogs.link;\n        }\n        else if (fieldName === 'anchor') {\n            return catalogs.anchor;\n        }\n        else {\n            return Optional.none();\n        }\n    };\n    const init = (initialData, linkCatalog) => {\n        const persistentData = {\n            text: initialData.text,\n            title: initialData.title\n        };\n        const getTitleFromUrlChange = (url) => { var _a; return someIf(persistentData.title.length <= 0, Optional.from((_a = url.meta) === null || _a === void 0 ? void 0 : _a.title).getOr('')); };\n        const getTextFromUrlChange = (url) => { var _a; return someIf(persistentData.text.length <= 0, Optional.from((_a = url.meta) === null || _a === void 0 ? void 0 : _a.text).getOr(url.value)); };\n        const onUrlChange = (data) => {\n            const text = getTextFromUrlChange(data.url);\n            const title = getTitleFromUrlChange(data.url);\n            // We are going to change the text/title because it has not been manually entered by the user.\n            if (text.isSome() || title.isSome()) {\n                return Optional.some({\n                    ...text.map((text) => ({ text })).getOr({}),\n                    ...title.map((title) => ({ title })).getOr({})\n                });\n            }\n            else {\n                return Optional.none();\n            }\n        };\n        const onCatalogChange = (data, change) => {\n            const catalog = findCatalog(linkCatalog, change).getOr([]);\n            return getDelta(persistentData.text, change, catalog, data);\n        };\n        const onChange = (getData, change) => {\n            const name = change.name;\n            if (name === 'url') {\n                return onUrlChange(getData());\n            }\n            else if (contains(['anchor', 'link'], name)) {\n                return onCatalogChange(getData(), name);\n            }\n            else if (name === 'text' || name === 'title') {\n                // Update the persistent text/title state, as a user has input custom text\n                persistentData[name] = getData()[name];\n                return Optional.none();\n            }\n            else {\n                return Optional.none();\n            }\n        };\n        return {\n            onChange\n        };\n    };\n    const DialogChanges = {\n        init,\n        getDelta\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    // Delay confirm since onSubmit will move focus\n    const delayedConfirm = (editor, message, callback) => {\n        const rng = editor.selection.getRng();\n        global$1.setEditorTimeout(editor, () => {\n            editor.windowManager.confirm(message, (state) => {\n                editor.selection.setRng(rng);\n                callback(state);\n            });\n        });\n    };\n    const tryEmailTransform = (data) => {\n        const url = data.href;\n        const suggestMailTo = url.indexOf('@') > 0 && url.indexOf('/') === -1 && url.indexOf('mailto:') === -1;\n        return suggestMailTo ? Optional.some({\n            message: 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?',\n            preprocess: (oldData) => ({ ...oldData, href: 'mailto:' + url })\n        }) : Optional.none();\n    };\n    const tryProtocolTransform = (assumeExternalTargets, defaultLinkProtocol) => (data) => {\n        const url = data.href;\n        const suggestProtocol = (assumeExternalTargets === 1 /* AssumeExternalTargets.WARN */ && !hasProtocol(url) ||\n            assumeExternalTargets === 0 /* AssumeExternalTargets.OFF */ && /^\\s*www(\\.|\\d\\.)/i.test(url));\n        return suggestProtocol ? Optional.some({\n            message: `The URL you entered seems to be an external link. Do you want to add the required ${defaultLinkProtocol}:// prefix?`,\n            preprocess: (oldData) => ({ ...oldData, href: defaultLinkProtocol + '://' + url })\n        }) : Optional.none();\n    };\n    const preprocess = (editor, data) => findMap([tryEmailTransform, tryProtocolTransform(assumeExternalTargets(editor), getDefaultLinkProtocol(editor))], (f) => f(data)).fold(() => Promise.resolve(data), (transform) => new Promise((callback) => {\n        delayedConfirm(editor, transform.message, (state) => {\n            callback(state ? transform.preprocess(data) : data);\n        });\n    }));\n    const DialogConfirms = {\n        preprocess\n    };\n\n    // NOTE: you currently need anchors in the content for this field to appear\n    const getAnchors = (editor) => {\n        const anchorNodes = editor.dom.select('a:not([href])');\n        const anchors = bind(anchorNodes, (anchor) => {\n            const id = anchor.name || anchor.id;\n            return id ? [{ text: id, value: '#' + id }] : [];\n        });\n        return anchors.length > 0 ? Optional.some([{ text: 'None', value: '' }].concat(anchors)) : Optional.none();\n    };\n    const AnchorListOptions = {\n        getAnchors\n    };\n\n    // Looks like tinymce currently renders menus, but doesn't\n    // let you choose from one.\n    const getClasses = (editor) => {\n        const list = getLinkClassList(editor);\n        if (list.length > 0) {\n            return ListOptions.sanitize(list);\n        }\n        return Optional.none();\n    };\n    const ClassListOptions = {\n        getClasses\n    };\n\n    const parseJson = (text) => {\n        // Do some proper modelling.\n        try {\n            return Optional.some(JSON.parse(text));\n        }\n        catch (_a) {\n            return Optional.none();\n        }\n    };\n    const getLinks = (editor) => {\n        const extractor = (item) => editor.convertURL(item.value || item.url || '', 'href');\n        const linkList = getLinkList(editor);\n        return new Promise((resolve) => {\n            // TODO - better handling of failure\n            if (isString(linkList)) {\n                fetch(linkList)\n                    .then((res) => res.ok ? res.text().then(parseJson) : Promise.reject())\n                    .then(resolve, () => resolve(Optional.none()));\n            }\n            else if (isFunction(linkList)) {\n                linkList((output) => resolve(Optional.some(output)));\n            }\n            else {\n                resolve(Optional.from(linkList));\n            }\n        }).then((optItems) => optItems.bind(ListOptions.sanitizeWith(extractor)).map((items) => {\n            if (items.length > 0) {\n                const noneItem = [{ text: 'None', value: '' }];\n                return noneItem.concat(items);\n            }\n            else {\n                return items;\n            }\n        }));\n    };\n    const LinkListOptions = {\n        getLinks\n    };\n\n    const getRels = (editor, initialTarget) => {\n        const list = getRelList(editor);\n        if (list.length > 0) {\n            const isTargetBlank = is(initialTarget, '_blank');\n            const enforceSafe = allowUnsafeLinkTarget(editor) === false;\n            const safeRelExtractor = (item) => applyRelTargetRules(ListOptions.getValue(item), isTargetBlank);\n            const sanitizer = enforceSafe ? ListOptions.sanitizeWith(safeRelExtractor) : ListOptions.sanitize;\n            return sanitizer(list);\n        }\n        return Optional.none();\n    };\n    const RelOptions = {\n        getRels\n    };\n\n    // In current tinymce, targets can be nested menus.\n    // Do we really want to support that?\n    const fallbacks = [\n        { text: 'Current window', value: '' },\n        { text: 'New window', value: '_blank' }\n    ];\n    const getTargets = (editor) => {\n        const list = getTargetList(editor);\n        if (isArray(list)) {\n            return ListOptions.sanitize(list).orThunk(() => Optional.some(fallbacks));\n        }\n        else if (list === false) {\n            return Optional.none();\n        }\n        return Optional.some(fallbacks);\n    };\n    const TargetOptions = {\n        getTargets\n    };\n\n    const nonEmptyAttr = (dom, elem, name) => {\n        const val = dom.getAttrib(elem, name);\n        return val !== null && val.length > 0 ? Optional.some(val) : Optional.none();\n    };\n    const extractFromAnchor = (editor, anchor) => {\n        const dom = editor.dom;\n        const onlyText = isOnlyTextSelected(editor);\n        const text = onlyText ? Optional.some(getAnchorText(editor.selection, anchor)) : Optional.none();\n        const url = anchor.bind((anchorElm) => Optional.from(dom.getAttrib(anchorElm, 'href')));\n        const target = anchor.bind((anchorElm) => Optional.from(dom.getAttrib(anchorElm, 'target')));\n        const rel = anchor.bind((anchorElm) => nonEmptyAttr(dom, anchorElm, 'rel'));\n        const linkClass = anchor.bind((anchorElm) => nonEmptyAttr(dom, anchorElm, 'class'));\n        const title = anchor.bind((anchorElm) => nonEmptyAttr(dom, anchorElm, 'title'));\n        return {\n            url,\n            text,\n            title,\n            target,\n            rel,\n            linkClass\n        };\n    };\n    const collect = (editor, linkNode) => LinkListOptions.getLinks(editor).then((links) => {\n        const anchor = extractFromAnchor(editor, linkNode);\n        return {\n            anchor,\n            catalogs: {\n                targets: TargetOptions.getTargets(editor),\n                // This should be initial target. Is anchor.target that?\n                rels: RelOptions.getRels(editor, anchor.target),\n                classes: ClassListOptions.getClasses(editor),\n                anchor: AnchorListOptions.getAnchors(editor),\n                link: links\n            },\n            optNode: linkNode,\n            flags: {\n                titleEnabled: shouldShowLinkTitle(editor)\n            }\n        };\n    });\n    const DialogInfo = {\n        collect\n    };\n\n    const handleSubmit = (editor, info) => (api) => {\n        const data = api.getData();\n        if (!data.url.value) {\n            unlink(editor);\n            // Temporary fix. TODO: TINY-2811\n            api.close();\n            return;\n        }\n        // Check if a key is defined, meaning it was a field in the dialog. If it is,\n        // then check if it's changed and return none if nothing has changed.\n        const getChangedValue = (key) => Optional.from(data[key]).filter((value) => !is(info.anchor[key], value));\n        const changedData = {\n            href: data.url.value,\n            text: getChangedValue('text'),\n            target: getChangedValue('target'),\n            rel: getChangedValue('rel'),\n            class: getChangedValue('linkClass'),\n            title: getChangedValue('title')\n        };\n        const attachState = {\n            href: data.url.value,\n            attach: data.url.meta !== undefined && data.url.meta.attach ? data.url.meta.attach : noop\n        };\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        DialogConfirms.preprocess(editor, changedData).then((pData) => {\n            link(editor, attachState, pData);\n        });\n        api.close();\n    };\n    const collectData = (editor) => {\n        const anchorNode = getAnchorElement(editor);\n        return DialogInfo.collect(editor, anchorNode);\n    };\n    const getInitialData = (info, defaultTarget) => {\n        const anchor = info.anchor;\n        const url = anchor.url.getOr('');\n        return {\n            url: {\n                value: url,\n                meta: {\n                    original: {\n                        value: url\n                    }\n                }\n            },\n            text: anchor.text.getOr(''),\n            title: anchor.title.getOr(''),\n            anchor: url,\n            link: url,\n            rel: anchor.rel.getOr(''),\n            target: anchor.target.or(defaultTarget).getOr(''),\n            linkClass: anchor.linkClass.getOr('')\n        };\n    };\n    const makeDialog = (settings, onSubmit, editor) => {\n        const urlInput = [\n            {\n                name: 'url',\n                type: 'urlinput',\n                filetype: 'file',\n                label: 'URL',\n                picker_text: 'Browse links'\n            }\n        ];\n        const displayText = settings.anchor.text.map(() => ({\n            name: 'text',\n            type: 'input',\n            label: 'Text to display'\n        })).toArray();\n        const titleText = settings.flags.titleEnabled ? [\n            {\n                name: 'title',\n                type: 'input',\n                label: 'Title'\n            }\n        ] : [];\n        const defaultTarget = Optional.from(getDefaultLinkTarget(editor));\n        const initialData = getInitialData(settings, defaultTarget);\n        const catalogs = settings.catalogs;\n        const dialogDelta = DialogChanges.init(initialData, catalogs);\n        const body = {\n            type: 'panel',\n            items: flatten([\n                urlInput,\n                displayText,\n                titleText,\n                cat([\n                    catalogs.anchor.map(ListOptions.createUi('anchor', 'Anchors')),\n                    catalogs.rels.map(ListOptions.createUi('rel', 'Rel')),\n                    catalogs.targets.map(ListOptions.createUi('target', 'Open link in...')),\n                    catalogs.link.map(ListOptions.createUi('link', 'Link list')),\n                    catalogs.classes.map(ListOptions.createUi('linkClass', 'Class'))\n                ])\n            ])\n        };\n        return {\n            title: 'Insert/Edit Link',\n            size: 'normal',\n            body,\n            buttons: [\n                {\n                    type: 'cancel',\n                    name: 'cancel',\n                    text: 'Cancel'\n                },\n                {\n                    type: 'submit',\n                    name: 'save',\n                    text: 'Save',\n                    primary: true\n                }\n            ],\n            initialData,\n            onChange: (api, { name }) => {\n                dialogDelta.onChange(api.getData, { name }).each((newData) => {\n                    api.setData(newData);\n                });\n            },\n            onSubmit\n        };\n    };\n    const open = (editor) => {\n        const data = collectData(editor);\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        data.then((info) => {\n            const onSubmit = handleSubmit(editor, info);\n            return makeDialog(info, onSubmit, editor);\n        }).then((spec) => {\n            editor.windowManager.open(spec);\n        });\n    };\n\n    const register = (editor) => {\n        editor.addCommand('mceLink', (_ui, value) => {\n            if ((value === null || value === void 0 ? void 0 : value.dialog) === true || !useQuickLink(editor)) {\n                open(editor);\n            }\n            else {\n                editor.dispatch('contexttoolbar-show', {\n                    toolbarKey: 'quicklink'\n                });\n            }\n        });\n    };\n\n    const setup$2 = (editor) => {\n        editor.addShortcut('Meta+K', '', () => {\n            editor.execCommand('mceLink');\n        });\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    const appendClickRemove = (link, evt) => {\n        document.body.appendChild(link);\n        link.dispatchEvent(evt);\n        document.body.removeChild(link);\n    };\n    const openLink = (url) => {\n        const link = document.createElement('a');\n        link.target = '_blank';\n        link.href = url;\n        link.rel = 'noreferrer noopener';\n        const evt = new MouseEvent('click', {\n            bubbles: true,\n            cancelable: true,\n            view: window\n        });\n        document.dispatchEvent(evt);\n        appendClickRemove(link, evt);\n    };\n    const hasOnlyAltModifier = (e) => {\n        return e.altKey === true && e.shiftKey === false && e.ctrlKey === false && e.metaKey === false;\n    };\n    const gotoLink = (editor, a) => {\n        if (a) {\n            const href = getHref(a);\n            if (/^#/.test(href)) {\n                const targetEl = editor.dom.select(`${href},[name=\"${removeLeading(href, '#')}\"]`);\n                if (targetEl.length) {\n                    editor.selection.scrollIntoView(targetEl[0], true);\n                }\n            }\n            else {\n                openLink(a.href);\n            }\n        }\n    };\n    const isSelectionOnImageWithEmbeddedLink = (editor) => {\n        const rng = editor.selection.getRng();\n        const node = rng.startContainer;\n        // Handle a case where an image embedded with a link is selected\n        return isLink(node) && rng.startContainer === rng.endContainer && editor.dom.select('img', node).length === 1;\n    };\n    const getLinkFromElement = (editor, element) => {\n        const links = getLinks$1(editor.dom.getParents(element));\n        return someIf(links.length === 1, links[0]);\n    };\n    const getLinkInSelection = (editor) => {\n        const links = getLinksInSelection(editor.selection.getRng());\n        return someIf(links.length > 0, links[0]).or(getLinkFromElement(editor, editor.selection.getNode()));\n    };\n    const getLinkFromSelection = (editor) => editor.selection.isCollapsed() || isSelectionOnImageWithEmbeddedLink(editor)\n        ? getLinkFromElement(editor, editor.selection.getStart())\n        : getLinkInSelection(editor);\n    const setup$1 = (editor) => {\n        const selectedLink = value();\n        const getSelectedLink = () => selectedLink.get().or(getLinkFromSelection(editor));\n        const gotoSelectedLink = () => getSelectedLink().each((link) => gotoLink(editor, link));\n        editor.on('contextmenu', (e) => {\n            getLinkFromElement(editor, e.target).each(selectedLink.set);\n        });\n        editor.on('SelectionChange', () => {\n            if (!selectedLink.isSet()) {\n                getLinkFromSelection(editor).each(selectedLink.set);\n            }\n        });\n        editor.on('click', (e) => {\n            selectedLink.clear();\n            const links = getLinks$1(editor.dom.getParents(e.target));\n            if (links.length === 1 && global.metaKeyPressed(e)) {\n                e.preventDefault();\n                gotoLink(editor, links[0]);\n            }\n        });\n        editor.on('keydown', (e) => {\n            selectedLink.clear();\n            if (!e.isDefaultPrevented() && e.keyCode === 13 && hasOnlyAltModifier(e)) {\n                getSelectedLink().each((link) => {\n                    e.preventDefault();\n                    gotoLink(editor, link);\n                });\n            }\n        });\n        return {\n            gotoSelectedLink\n        };\n    };\n\n    const openDialog = (editor) => () => {\n        editor.execCommand('mceLink', false, { dialog: true });\n    };\n    const toggleState = (editor, toggler) => {\n        editor.on('NodeChange', toggler);\n        return () => editor.off('NodeChange', toggler);\n    };\n    const toggleLinkState = (editor) => (api) => {\n        const updateState = () => {\n            api.setActive(!editor.mode.isReadOnly() && isInAnchor(editor, editor.selection.getNode()));\n            api.setEnabled(editor.selection.isEditable());\n        };\n        updateState();\n        return toggleState(editor, updateState);\n    };\n    const toggleLinkMenuState = (editor) => (api) => {\n        const updateState = () => {\n            api.setEnabled(editor.selection.isEditable());\n        };\n        updateState();\n        return toggleState(editor, updateState);\n    };\n    const toggleRequiresLinkState = (editor) => (api) => {\n        const hasLinks$1 = (parents) => hasLinks(parents) || hasLinksInSelection(editor.selection.getRng());\n        const parents = editor.dom.getParents(editor.selection.getStart());\n        const updateEnabled = (parents) => {\n            api.setEnabled(hasLinks$1(parents) && editor.selection.isEditable());\n        };\n        updateEnabled(parents);\n        return toggleState(editor, (e) => updateEnabled(e.parents));\n    };\n    const setupButtons = (editor, openLink) => {\n        editor.ui.registry.addToggleButton('link', {\n            icon: 'link',\n            tooltip: 'Insert/edit link',\n            shortcut: 'Meta+K',\n            onAction: openDialog(editor),\n            onSetup: toggleLinkState(editor)\n        });\n        editor.ui.registry.addButton('openlink', {\n            icon: 'new-tab',\n            tooltip: 'Open link',\n            onAction: openLink.gotoSelectedLink,\n            onSetup: toggleRequiresLinkState(editor)\n        });\n        editor.ui.registry.addButton('unlink', {\n            icon: 'unlink',\n            tooltip: 'Remove link',\n            onAction: () => unlink(editor),\n            onSetup: toggleRequiresLinkState(editor)\n        });\n    };\n    const setupMenuItems = (editor, openLink) => {\n        editor.ui.registry.addMenuItem('openlink', {\n            text: 'Open link',\n            icon: 'new-tab',\n            onAction: openLink.gotoSelectedLink,\n            onSetup: toggleRequiresLinkState(editor)\n        });\n        editor.ui.registry.addMenuItem('link', {\n            icon: 'link',\n            text: 'Link...',\n            shortcut: 'Meta+K',\n            onAction: openDialog(editor),\n            onSetup: toggleLinkMenuState(editor)\n        });\n        editor.ui.registry.addMenuItem('unlink', {\n            icon: 'unlink',\n            text: 'Remove link',\n            onAction: () => unlink(editor),\n            onSetup: toggleRequiresLinkState(editor)\n        });\n    };\n    const setupContextMenu = (editor) => {\n        const inLink = 'link unlink openlink';\n        const noLink = 'link';\n        editor.ui.registry.addContextMenu('link', {\n            update: (element) => {\n                const isEditable = editor.dom.isEditable(element);\n                if (!isEditable) {\n                    return '';\n                }\n                return hasLinks(editor.dom.getParents(element, 'a')) ? inLink : noLink;\n            }\n        });\n    };\n    const setupContextToolbars = (editor, openLink) => {\n        const collapseSelectionToEnd = (editor) => {\n            editor.selection.collapse(false);\n        };\n        const onSetupLink = (buttonApi) => {\n            const node = editor.selection.getNode();\n            buttonApi.setEnabled(isInAnchor(editor, node) && editor.selection.isEditable());\n            return noop;\n        };\n        /**\n         * if we're editing a link, don't change the text.\n         * if anything other than text is selected, don't change the text.\n         * TINY-9593: If there is a text selection return `Optional.none`\n         * because `mceInsertLink` command will handle the selection.\n         */\n        const getLinkText = (value) => {\n            const anchor = getAnchorElement(editor);\n            const onlyText = isOnlyTextSelected(editor);\n            if (anchor.isNone() && onlyText) {\n                const text = getAnchorText(editor.selection, anchor);\n                return someIf(text.length === 0, value);\n            }\n            else {\n                return Optional.none();\n            }\n        };\n        editor.ui.registry.addContextForm('quicklink', {\n            launch: {\n                type: 'contextformtogglebutton',\n                icon: 'link',\n                tooltip: 'Link',\n                onSetup: toggleLinkState(editor)\n            },\n            label: 'Link',\n            predicate: (node) => hasContextToolbar(editor) && isInAnchor(editor, node),\n            initValue: () => {\n                const elm = getAnchorElement(editor);\n                return elm.fold(constant(''), getHref);\n            },\n            commands: [\n                {\n                    type: 'contextformtogglebutton',\n                    icon: 'link',\n                    tooltip: 'Link',\n                    primary: true,\n                    onSetup: (buttonApi) => {\n                        const node = editor.selection.getNode();\n                        // TODO: Make a test for this later.\n                        buttonApi.setActive(isInAnchor(editor, node));\n                        return toggleLinkState(editor)(buttonApi);\n                    },\n                    onAction: (formApi) => {\n                        const value = formApi.getValue();\n                        const text = getLinkText(value);\n                        const attachState = { href: value, attach: noop };\n                        link(editor, attachState, {\n                            href: value,\n                            text,\n                            title: Optional.none(),\n                            rel: Optional.none(),\n                            target: Optional.from(getDefaultLinkTarget(editor)),\n                            class: Optional.none()\n                        });\n                        collapseSelectionToEnd(editor);\n                        formApi.hide();\n                    }\n                },\n                {\n                    type: 'contextformbutton',\n                    icon: 'unlink',\n                    tooltip: 'Remove link',\n                    onSetup: onSetupLink,\n                    // TODO: The original inlite action was quite complex. Are we missing something with this?\n                    onAction: (formApi) => {\n                        unlink(editor);\n                        formApi.hide();\n                    }\n                },\n                {\n                    type: 'contextformbutton',\n                    icon: 'new-tab',\n                    tooltip: 'Open link',\n                    onSetup: onSetupLink,\n                    onAction: (formApi) => {\n                        openLink.gotoSelectedLink();\n                        formApi.hide();\n                    }\n                }\n            ]\n        });\n    };\n    const setup = (editor) => {\n        const openLink = setup$1(editor);\n        setupButtons(editor, openLink);\n        setupMenuItems(editor, openLink);\n        setupContextMenu(editor);\n        setupContextToolbars(editor, openLink);\n    };\n\n    var Plugin = () => {\n        global$5.add('link', (editor) => {\n            register$1(editor);\n            register(editor);\n            setup(editor);\n            setup$2(editor);\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n", "// Exports the \"link\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/link')\n//   ES2015:\n//     import 'tinymce/plugins/link'\nrequire('./plugin.js');"],
  "mappings": "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",
  "names": ["value", "rels", "anchorElm", "assumeExternalTargets", "text", "list", "title", "link", "parents", "openLink", "editor"]
}

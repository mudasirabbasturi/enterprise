{
  "version": 3,
  "sources": ["../../tinymce/themes/silver/theme.js", "../../tinymce/themes/silver/index.js"],
  "sourcesContent": ["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const getPrototypeOf$2 = Object.getPrototypeOf;\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType$1 = (type) => (value) => typeOf(value) === type;\n    const isSimpleType = (type) => (value) => typeof value === type;\n    const eq$1 = (t) => (a) => t === a;\n    const is$2 = (value, constructor) => isObject(value) && hasProto(value, constructor, (o, proto) => getPrototypeOf$2(o) === proto);\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isPlainObject = (value) => is$2(value, Object);\n    const isArray = isType$1('array');\n    const isNull = eq$1(null);\n    const isBoolean = isSimpleType('boolean');\n    const isUndefined = eq$1(undefined);\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n    const isArrayOf = (value, pred) => {\n        if (isArray(value)) {\n            for (let i = 0, len = value.length; i < len; ++i) {\n                if (!(pred(value[i]))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n\n    const noop = () => { };\n    const noarg = (f) => () => f();\n    /** Compose a unary function with an n-ary function */\n    const compose = (fa, fb) => {\n        return (...args) => {\n            return fa(fb.apply(null, args));\n        };\n    };\n    /** Compose two unary functions. Similar to compose, but avoids using Function.prototype.apply. */\n    const compose1 = (fbc, fab) => (a) => fbc(fab(a));\n    const constant$1 = (value) => {\n        return () => {\n            return value;\n        };\n    };\n    const identity = (x) => {\n        return x;\n    };\n    const tripleEquals = (a, b) => {\n        return a === b;\n    };\n    // eslint-disable-next-line prefer-arrow/prefer-arrow-functions\n    function curry(fn, ...initialArgs) {\n        return (...restArgs) => {\n            const all = initialArgs.concat(restArgs);\n            return fn.apply(null, all);\n        };\n    }\n    const not = (f) => (t) => !f(t);\n    const die = (msg) => {\n        return () => {\n            throw new Error(msg);\n        };\n    };\n    const apply$1 = (f) => {\n        return f();\n    };\n    const never = constant$1(false);\n    const always = constant$1(true);\n\n    /**\n     * The `Optional` type represents a value (of any type) that potentially does\n     * not exist. Any `Optional<T>` can either be a `Some<T>` (in which case the\n     * value does exist) or a `None` (in which case the value does not exist). This\n     * module defines a whole lot of FP-inspired utility functions for dealing with\n     * `Optional` objects.\n     *\n     * Comparison with null or undefined:\n     * - We don't get fancy null coalescing operators with `Optional`\n     * - We do get fancy helper functions with `Optional`\n     * - `Optional` support nesting, and allow for the type to still be nullable (or\n     * another `Optional`)\n     * - There is no option to turn off strict-optional-checks like there is for\n     * strict-null-checks\n     */\n    class Optional {\n        // The internal representation has a `tag` and a `value`, but both are\n        // private: able to be console.logged, but not able to be accessed by code\n        constructor(tag, value) {\n            this.tag = tag;\n            this.value = value;\n        }\n        // --- Identities ---\n        /**\n         * Creates a new `Optional<T>` that **does** contain a value.\n         */\n        static some(value) {\n            return new Optional(true, value);\n        }\n        /**\n         * Create a new `Optional<T>` that **does not** contain a value. `T` can be\n         * any type because we don't actually have a `T`.\n         */\n        static none() {\n            return Optional.singletonNone;\n        }\n        /**\n         * Perform a transform on an `Optional` type. Regardless of whether this\n         * `Optional` contains a value or not, `fold` will return a value of type `U`.\n         * If this `Optional` does not contain a value, the `U` will be created by\n         * calling `onNone`. If this `Optional` does contain a value, the `U` will be\n         * created by calling `onSome`.\n         *\n         * For the FP enthusiasts in the room, this function:\n         * 1. Could be used to implement all of the functions below\n         * 2. Forms a catamorphism\n         */\n        fold(onNone, onSome) {\n            if (this.tag) {\n                return onSome(this.value);\n            }\n            else {\n                return onNone();\n            }\n        }\n        /**\n         * Determine if this `Optional` object contains a value.\n         */\n        isSome() {\n            return this.tag;\n        }\n        /**\n         * Determine if this `Optional` object **does not** contain a value.\n         */\n        isNone() {\n            return !this.tag;\n        }\n        // --- Functor (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value. If\n         * you provide a function to turn a T into a U, this is the function you use\n         * to turn an `Optional<T>` into an `Optional<U>`. If this **does** contain\n         * a value then the output will also contain a value (that value being the\n         * output of `mapper(this.value)`), and if this **does not** contain a value\n         * then neither will the output.\n         */\n        map(mapper) {\n            if (this.tag) {\n                return Optional.some(mapper(this.value));\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Monad (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value.\n         * Unlike `map`, here the transform itself also returns an `Optional`.\n         */\n        bind(binder) {\n            if (this.tag) {\n                return binder(this.value);\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Traversable (name stolen from Haskell / maths) ---\n        /**\n         * For a given predicate, this function finds out if there **exists** a value\n         * inside this `Optional` object that meets the predicate. In practice, this\n         * means that for `Optional`s that do not contain a value it returns false (as\n         * no predicate-meeting value exists).\n         */\n        exists(predicate) {\n            return this.tag && predicate(this.value);\n        }\n        /**\n         * For a given predicate, this function finds out if **all** the values inside\n         * this `Optional` object meet the predicate. In practice, this means that\n         * for `Optional`s that do not contain a value it returns true (as all 0\n         * objects do meet the predicate).\n         */\n        forall(predicate) {\n            return !this.tag || predicate(this.value);\n        }\n        filter(predicate) {\n            if (!this.tag || predicate(this.value)) {\n                return this;\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Getters ---\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.\n         */\n        getOr(replacement) {\n            return this.tag ? this.value : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.  Unlike `getOr`, in this method the `replacement` object is also\n         * `Optional` - meaning that this method will always return an `Optional`.\n         */\n        or(replacement) {\n            return this.tag ? this : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value. Unlike `getOr`, in this method the `replacement` value is\n         * \"thunked\" - that is to say that you don't pass a value to `getOrThunk`, you\n         * pass a function which (if called) will **return** the `value` you want to\n         * use.\n         */\n        getOrThunk(thunk) {\n            return this.tag ? this.value : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided Optional object does not contain a\n         * value.\n         *\n         * Unlike `or`, in this method the `replacement` value is \"thunked\" - that is\n         * to say that you don't pass a value to `orThunk`, you pass a function which\n         * (if called) will **return** the `value` you want to use.\n         *\n         * Unlike `getOrThunk`, in this method the `replacement` value is also\n         * `Optional`, meaning that this method will always return an `Optional`.\n         */\n        orThunk(thunk) {\n            return this.tag ? this : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, throwing an\n         * exception if the provided `Optional` object does not contain a value.\n         *\n         * WARNING:\n         * You should only be using this function if you know that the `Optional`\n         * object **is not** empty (otherwise you're throwing exceptions in production\n         * code, which is bad).\n         *\n         * In tests this is more acceptable.\n         *\n         * Prefer other methods to this, such as `.each`.\n         */\n        getOrDie(message) {\n            if (!this.tag) {\n                throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n            }\n            else {\n                return this.value;\n            }\n        }\n        // --- Interop with null and undefined ---\n        /**\n         * Creates an `Optional` value from a nullable (or undefined-able) input.\n         * Null, or undefined, is converted to `None`, and anything else is converted\n         * to `Some`.\n         */\n        static from(value) {\n            return isNonNullable(value) ? Optional.some(value) : Optional.none();\n        }\n        /**\n         * Converts an `Optional` to a nullable type, by getting the value if it\n         * exists, or returning `null` if it does not.\n         */\n        getOrNull() {\n            return this.tag ? this.value : null;\n        }\n        /**\n         * Converts an `Optional` to an undefined-able type, by getting the value if\n         * it exists, or returning `undefined` if it does not.\n         */\n        getOrUndefined() {\n            return this.value;\n        }\n        // --- Utilities ---\n        /**\n         * If the `Optional` contains a value, perform an action on that value.\n         * Unlike the rest of the methods on this type, `.each` has side-effects. If\n         * you want to transform an `Optional<T>` **into** something, then this is not\n         * the method for you. If you want to use an `Optional<T>` to **do**\n         * something, then this is the method for you - provided you're okay with not\n         * doing anything in the case where the `Optional` doesn't have a value inside\n         * it. If you're not sure whether your use-case fits into transforming\n         * **into** something or **doing** something, check whether it has a return\n         * value. If it does, you should be performing a transform.\n         */\n        each(worker) {\n            if (this.tag) {\n                worker(this.value);\n            }\n        }\n        /**\n         * Turn the `Optional` object into an array that contains all of the values\n         * stored inside the `Optional`. In practice, this means the output will have\n         * either 0 or 1 elements.\n         */\n        toArray() {\n            return this.tag ? [this.value] : [];\n        }\n        /**\n         * Turn the `Optional` object into a string for debugging or printing. Not\n         * recommended for production code, but good for debugging. Also note that\n         * these days an `Optional` object can be logged to the console directly, and\n         * its inner value (if it exists) will be visible.\n         */\n        toString() {\n            return this.tag ? `some(${this.value})` : 'none()';\n        }\n    }\n    // Sneaky optimisation: every instance of Optional.none is identical, so just\n    // reuse the same object\n    Optional.singletonNone = new Optional(false);\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    /* eslint-enable */\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const indexOf = (xs, x) => {\n        // The rawIndexOf method does not wrap up in an option. This is for performance reasons.\n        const r = rawIndexOf(xs, x);\n        return r === -1 ? Optional.none() : Optional.some(r);\n    };\n    const contains$2 = (xs, x) => rawIndexOf(xs, x) > -1;\n    const exists = (xs, pred) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            if (pred(x, i)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    const range$2 = (num, f) => {\n        const r = [];\n        for (let i = 0; i < num; i++) {\n            r.push(f(i));\n        }\n        return r;\n    };\n    // It's a total micro optimisation, but these do make some difference.\n    // Particularly for browsers other than Chrome.\n    // - length caching\n    // http://jsperf.com/browser-diet-jquery-each-vs-for-loop/69\n    // - not using push\n    // http://jsperf.com/array-direct-assignment-vs-push/2\n    const chunk$1 = (array, size) => {\n        const r = [];\n        for (let i = 0; i < array.length; i += size) {\n            const s = nativeSlice.call(array, i, i + size);\n            r.push(s);\n        }\n        return r;\n    };\n    const map$2 = (xs, f) => {\n        // pre-allocating array size when it's guaranteed to be known\n        // http://jsperf.com/push-allocated-vs-dynamic/22\n        const len = xs.length;\n        const r = new Array(len);\n        for (let i = 0; i < len; i++) {\n            const x = xs[i];\n            r[i] = f(x, i);\n        }\n        return r;\n    };\n    // Unwound implementing other functions in terms of each.\n    // The code size is roughly the same, and it should allow for better optimisation.\n    // const each = function<T, U>(xs: T[], f: (x: T, i?: number, xs?: T[]) => void): void {\n    const each$1 = (xs, f) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            f(x, i);\n        }\n    };\n    const eachr = (xs, f) => {\n        for (let i = xs.length - 1; i >= 0; i--) {\n            const x = xs[i];\n            f(x, i);\n        }\n    };\n    const partition$3 = (xs, pred) => {\n        const pass = [];\n        const fail = [];\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            const arr = pred(x, i) ? pass : fail;\n            arr.push(x);\n        }\n        return { pass, fail };\n    };\n    const filter$2 = (xs, pred) => {\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            if (pred(x, i)) {\n                r.push(x);\n            }\n        }\n        return r;\n    };\n    const foldr = (xs, f, acc) => {\n        eachr(xs, (x, i) => {\n            acc = f(acc, x, i);\n        });\n        return acc;\n    };\n    const foldl = (xs, f, acc) => {\n        each$1(xs, (x, i) => {\n            acc = f(acc, x, i);\n        });\n        return acc;\n    };\n    const findUntil = (xs, pred, until) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            if (pred(x, i)) {\n                return Optional.some(x);\n            }\n            else if (until(x, i)) {\n                break;\n            }\n        }\n        return Optional.none();\n    };\n    const find$5 = (xs, pred) => {\n        return findUntil(xs, pred, never);\n    };\n    const findIndex$1 = (xs, pred) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            if (pred(x, i)) {\n                return Optional.some(i);\n            }\n        }\n        return Optional.none();\n    };\n    const flatten = (xs) => {\n        // Note, this is possible because push supports multiple arguments:\n        // http://jsperf.com/concat-push/6\n        // Note that in the past, concat() would silently work (very slowly) for array-like objects.\n        // With this change it will throw an error.\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; ++i) {\n            // Ensure that each value is an array itself\n            if (!isArray(xs[i])) {\n                throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n            }\n            nativePush.apply(r, xs[i]);\n        }\n        return r;\n    };\n    const bind$3 = (xs, f) => flatten(map$2(xs, f));\n    const forall = (xs, pred) => {\n        for (let i = 0, len = xs.length; i < len; ++i) {\n            const x = xs[i];\n            if (pred(x, i) !== true) {\n                return false;\n            }\n        }\n        return true;\n    };\n    const reverse = (xs) => {\n        const r = nativeSlice.call(xs, 0);\n        r.reverse();\n        return r;\n    };\n    const difference = (a1, a2) => filter$2(a1, (x) => !contains$2(a2, x));\n    const mapToObject = (xs, f) => {\n        const r = {};\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            r[String(x)] = f(x, i);\n        }\n        return r;\n    };\n    const pure$2 = (x) => [x];\n    const sort = (xs, comparator) => {\n        const copy = nativeSlice.call(xs, 0);\n        copy.sort(comparator);\n        return copy;\n    };\n    const get$i = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = (xs) => get$i(xs, 0);\n    const last$1 = (xs) => get$i(xs, xs.length - 1);\n    const from = isFunction(Array.from) ? Array.from : (x) => nativeSlice.call(x);\n    const findMap = (arr, f) => {\n        for (let i = 0; i < arr.length; i++) {\n            const r = f(arr[i], i);\n            if (r.isSome()) {\n                return r;\n            }\n        }\n        return Optional.none();\n    };\n\n    // There are many variations of Object iteration that are faster than the 'for-in' style:\n    // http://jsperf.com/object-keys-iteration/107\n    //\n    // Use the native keys if it is available (IE9+), otherwise fall back to manually filtering\n    const keys = Object.keys;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n        const props = keys(obj);\n        for (let k = 0, len = props.length; k < len; k++) {\n            const i = props[k];\n            const x = obj[i];\n            f(x, i);\n        }\n    };\n    const map$1 = (obj, f) => {\n        return tupleMap(obj, (x, i) => ({\n            k: i,\n            v: f(x, i)\n        }));\n    };\n    const tupleMap = (obj, f) => {\n        const r = {};\n        each(obj, (x, i) => {\n            const tuple = f(x, i);\n            r[tuple.k] = tuple.v;\n        });\n        return r;\n    };\n    const objAcc = (r) => (x, i) => {\n        r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n        each(obj, (x, i) => {\n            (pred(x, i) ? onTrue : onFalse)(x, i);\n        });\n    };\n    const bifilter = (obj, pred) => {\n        const t = {};\n        const f = {};\n        internalFilter(obj, pred, objAcc(t), objAcc(f));\n        return { t, f };\n    };\n    const filter$1 = (obj, pred) => {\n        const t = {};\n        internalFilter(obj, pred, objAcc(t), noop);\n        return t;\n    };\n    const mapToArray = (obj, f) => {\n        const r = [];\n        each(obj, (value, name) => {\n            r.push(f(value, name));\n        });\n        return r;\n    };\n    const find$4 = (obj, pred) => {\n        const props = keys(obj);\n        for (let k = 0, len = props.length; k < len; k++) {\n            const i = props[k];\n            const x = obj[i];\n            if (pred(x, i, obj)) {\n                return Optional.some(x);\n            }\n        }\n        return Optional.none();\n    };\n    const values = (obj) => {\n        return mapToArray(obj, identity);\n    };\n    const get$h = (obj, key) => {\n        return has$2(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has$2 = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has$2(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    /*\n     * Generates a church encoded ADT (https://en.wikipedia.org/wiki/Church_encoding)\n     * For syntax and use, look at the test code.\n     */\n    const generate$7 = (cases) => {\n        // validation\n        if (!isArray(cases)) {\n            throw new Error('cases must be an array');\n        }\n        if (cases.length === 0) {\n            throw new Error('there must be at least one case');\n        }\n        const constructors = [];\n        // adt is mutated to add the individual cases\n        const adt = {};\n        each$1(cases, (acase, count) => {\n            const keys$1 = keys(acase);\n            // validation\n            if (keys$1.length !== 1) {\n                throw new Error('one and only one name per case');\n            }\n            const key = keys$1[0];\n            const value = acase[key];\n            // validation\n            if (adt[key] !== undefined) {\n                throw new Error('duplicate key detected:' + key);\n            }\n            else if (key === 'cata') {\n                throw new Error('cannot have a case named cata (sorry)');\n            }\n            else if (!isArray(value)) {\n                // this implicitly checks if acase is an object\n                throw new Error('case arguments must be an array');\n            }\n            constructors.push(key);\n            //\n            // constructor for key\n            //\n            adt[key] = (...args) => {\n                const argLength = args.length;\n                // validation\n                if (argLength !== value.length) {\n                    throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n                }\n                const match = (branches) => {\n                    const branchKeys = keys(branches);\n                    if (constructors.length !== branchKeys.length) {\n                        throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n                    }\n                    const allReqd = forall(constructors, (reqKey) => {\n                        return contains$2(branchKeys, reqKey);\n                    });\n                    if (!allReqd) {\n                        throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n                    }\n                    return branches[key].apply(null, args);\n                };\n                //\n                // the fold function for key\n                //\n                return {\n                    fold: (...foldArgs) => {\n                        // runtime validation\n                        if (foldArgs.length !== cases.length) {\n                            throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + foldArgs.length);\n                        }\n                        const target = foldArgs[count];\n                        return target.apply(null, args);\n                    },\n                    match,\n                    // NOTE: Only for debugging.\n                    log: (label) => {\n                        // eslint-disable-next-line no-console\n                        console.log(label, {\n                            constructors,\n                            constructor: key,\n                            params: args\n                        });\n                    }\n                };\n            };\n        });\n        return adt;\n    };\n    const Adt = {\n        generate: generate$7\n    };\n\n    const Cell = (initial) => {\n        let value = initial;\n        const get = () => {\n            return value;\n        };\n        const set = (v) => {\n            value = v;\n        };\n        return {\n            get,\n            set\n        };\n    };\n\n    const nu$d = (baseFn) => {\n        let data = Optional.none();\n        let callbacks = [];\n        /** map :: this LazyValue a -> (a -> b) -> LazyValue b */\n        const map = (f) => nu$d((nCallback) => {\n            get((data) => {\n                nCallback(f(data));\n            });\n        });\n        const get = (nCallback) => {\n            if (isReady()) {\n                call(nCallback);\n            }\n            else {\n                callbacks.push(nCallback);\n            }\n        };\n        const set = (x) => {\n            if (!isReady()) {\n                data = Optional.some(x);\n                run(callbacks);\n                callbacks = [];\n            }\n        };\n        const isReady = () => data.isSome();\n        const run = (cbs) => {\n            each$1(cbs, call);\n        };\n        const call = (cb) => {\n            data.each((x) => {\n                setTimeout(() => {\n                    cb(x);\n                }, 0);\n            });\n        };\n        // Lazy values cache the value and kick off immediately\n        baseFn(set);\n        return {\n            get,\n            map,\n            isReady\n        };\n    };\n    const pure$1 = (a) => nu$d((callback) => {\n        callback(a);\n    });\n    const LazyValue = {\n        nu: nu$d,\n        pure: pure$1\n    };\n\n    const errorReporter = (err) => {\n        // we can not throw the error in the reporter as it will just be black-holed\n        // by the Promise so we use a setTimeout to escape the Promise.\n        setTimeout(() => {\n            throw err;\n        }, 0);\n    };\n    const make$8 = (run) => {\n        const get = (callback) => {\n            run().then(callback, errorReporter);\n        };\n        /** map :: this Future a -> (a -> b) -> Future b */\n        const map = (fab) => {\n            return make$8(() => run().then(fab));\n        };\n        /** bind :: this Future a -> (a -> Future b) -> Future b */\n        const bind = (aFutureB) => {\n            return make$8(() => run().then((v) => aFutureB(v).toPromise()));\n        };\n        /** anonBind :: this Future a -> Future b -> Future b\n         *  Returns a future, which evaluates the first future, ignores the result, then evaluates the second.\n         */\n        const anonBind = (futureB) => {\n            return make$8(() => run().then(() => futureB.toPromise()));\n        };\n        const toLazy = () => {\n            return LazyValue.nu(get);\n        };\n        const toCached = () => {\n            let cache = null;\n            return make$8(() => {\n                if (cache === null) {\n                    cache = run();\n                }\n                return cache;\n            });\n        };\n        const toPromise = run;\n        return {\n            map,\n            bind,\n            anonBind,\n            toLazy,\n            toCached,\n            toPromise,\n            get\n        };\n    };\n    const nu$c = (baseFn) => {\n        return make$8(() => new Promise(baseFn));\n    };\n    /** a -> Future a */\n    const pure = (a) => {\n        return make$8(() => Promise.resolve(a));\n    };\n    const Future = {\n        nu: nu$c,\n        pure\n    };\n\n    /**\n     * Creates a new `Result<T, E>` that **does** contain a value.\n     */\n    const value$4 = (value) => {\n        const applyHelper = (fn) => fn(value);\n        const constHelper = constant$1(value);\n        const outputHelper = () => output;\n        const output = {\n            // Debug info\n            tag: true,\n            inner: value,\n            // Actual Result methods\n            fold: (_onError, onValue) => onValue(value),\n            isValue: always,\n            isError: never,\n            map: (mapper) => Result.value(mapper(value)),\n            mapError: outputHelper,\n            bind: applyHelper,\n            exists: applyHelper,\n            forall: applyHelper,\n            getOr: constHelper,\n            or: outputHelper,\n            getOrThunk: constHelper,\n            orThunk: outputHelper,\n            getOrDie: constHelper,\n            each: (fn) => {\n                // Can't write the function inline because we don't want to return something by mistake\n                fn(value);\n            },\n            toOptional: () => Optional.some(value),\n        };\n        return output;\n    };\n    /**\n     * Creates a new `Result<T, E>` that **does not** contain a value, and therefore\n     * contains an error.\n     */\n    const error$1 = (error) => {\n        const outputHelper = () => output;\n        const output = {\n            // Debug info\n            tag: false,\n            inner: error,\n            // Actual Result methods\n            fold: (onError, _onValue) => onError(error),\n            isValue: never,\n            isError: always,\n            map: outputHelper,\n            mapError: (mapper) => Result.error(mapper(error)),\n            bind: outputHelper,\n            exists: never,\n            forall: always,\n            getOr: identity,\n            or: identity,\n            getOrThunk: apply$1,\n            orThunk: apply$1,\n            getOrDie: die(String(error)),\n            each: noop,\n            toOptional: Optional.none,\n        };\n        return output;\n    };\n    /**\n     * Creates a new `Result<T, E>` from an `Optional<T>` and an `E`. If the\n     * `Optional` contains a value, so will the outputted `Result`. If it does not,\n     * the outputted `Result` will contain an error (and that error will be the\n     * error passed in).\n     */\n    const fromOption = (optional, err) => optional.fold(() => error$1(err), value$4);\n    const Result = {\n        value: value$4,\n        error: error$1,\n        fromOption\n    };\n\n    const wrap$2 = (delegate) => {\n        const toCached = () => {\n            return wrap$2(delegate.toCached());\n        };\n        const bindFuture = (f) => {\n            return wrap$2(delegate.bind((resA) => resA.fold((err) => (Future.pure(Result.error(err))), (a) => f(a))));\n        };\n        const bindResult = (f) => {\n            return wrap$2(delegate.map((resA) => resA.bind(f)));\n        };\n        const mapResult = (f) => {\n            return wrap$2(delegate.map((resA) => resA.map(f)));\n        };\n        const mapError = (f) => {\n            return wrap$2(delegate.map((resA) => resA.mapError(f)));\n        };\n        const foldResult = (whenError, whenValue) => {\n            return delegate.map((res) => res.fold(whenError, whenValue));\n        };\n        const withTimeout = (timeout, errorThunk) => {\n            return wrap$2(Future.nu((callback) => {\n                let timedOut = false;\n                const timer = setTimeout(() => {\n                    timedOut = true;\n                    callback(Result.error(errorThunk()));\n                }, timeout);\n                delegate.get((result) => {\n                    if (!timedOut) {\n                        clearTimeout(timer);\n                        callback(result);\n                    }\n                });\n            }));\n        };\n        return {\n            ...delegate,\n            toCached,\n            bindFuture,\n            bindResult,\n            mapResult,\n            mapError,\n            foldResult,\n            withTimeout\n        };\n    };\n    const nu$b = (worker) => {\n        return wrap$2(Future.nu(worker));\n    };\n    const value$3 = (value) => {\n        return wrap$2(Future.pure(Result.value(value)));\n    };\n    const error = (error) => {\n        return wrap$2(Future.pure(Result.error(error)));\n    };\n    const fromResult$1 = (result) => {\n        return wrap$2(Future.pure(result));\n    };\n    const fromFuture = (future) => {\n        return wrap$2(future.map(Result.value));\n    };\n    const fromPromise = (promise) => {\n        return nu$b((completer) => {\n            promise.then((value) => {\n                completer(Result.value(value));\n            }, (error) => {\n                completer(Result.error(error));\n            });\n        });\n    };\n    const FutureResult = {\n        nu: nu$b,\n        wrap: wrap$2,\n        pure: value$3,\n        value: value$3,\n        error,\n        fromResult: fromResult$1,\n        fromFuture,\n        fromPromise\n    };\n\n    // Use window object as the global if it's available since CSP will block script evals\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\n    const Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    /**\n     * Adds two numbers, and wrap to a range.\n     * If the result overflows to the right, snap to the left.\n     * If the result overflows to the left, snap to the right.\n     */\n    const cycleBy = (value, delta, min, max) => {\n        const r = value + delta;\n        if (r > max) {\n            return min;\n        }\n        else if (r < min) {\n            return max;\n        }\n        else {\n            return r;\n        }\n    };\n    // ASSUMPTION: Max will always be larger than min\n    const clamp = (value, min, max) => Math.min(Math.max(value, min), max);\n    // the division is meant to get a number between 0 and 1 for more information check this discussion: https://stackoverflow.com/questions/58285941/how-to-replace-math-random-with-crypto-getrandomvalues-and-keep-same-result\n    const random = () => window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\n\n    /**\n     * Generate a unique identifier.\n     *\n     * The unique portion of the identifier only contains an underscore\n     * and digits, so that it may safely be used within HTML attributes.\n     *\n     * The chance of generating a non-unique identifier has been minimized\n     * by combining the current time, a random number and a one-up counter.\n     *\n     * generate :: String -> String\n     */\n    let unique = 0;\n    const generate$6 = (prefix) => {\n        const date = new Date();\n        const time = date.getTime();\n        const random$1 = Math.floor(random() * 1000000000);\n        unique++;\n        return prefix + '_' + random$1 + unique + String(time);\n    };\n\n    const shallow$1 = (old, nu) => {\n        return nu;\n    };\n    const deep$1 = (old, nu) => {\n        const bothObjects = isPlainObject(old) && isPlainObject(nu);\n        return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    const baseMerge = (merger) => {\n        return (...objects) => {\n            if (objects.length === 0) {\n                throw new Error(`Can't merge zero objects`);\n            }\n            const ret = {};\n            for (let j = 0; j < objects.length; j++) {\n                const curObject = objects[j];\n                for (const key in curObject) {\n                    if (has$2(curObject, key)) {\n                        ret[key] = merger(ret[key], curObject[key]);\n                    }\n                }\n            }\n            return ret;\n        };\n    };\n    const deepMerge = baseMerge(deep$1);\n    const merge$1 = baseMerge(shallow$1);\n\n    /**\n     * **Is** the value stored inside this Optional object equal to `rhs`?\n     */\n    const is$1 = (lhs, rhs, comparator = tripleEquals) => lhs.exists((left) => comparator(left, rhs));\n    /**\n     * Are these two Optional objects equal? Equality here means either they're both\n     * `Some` (and the values are equal under the comparator) or they're both `None`.\n     */\n    const equals = (lhs, rhs, comparator = tripleEquals) => lift2(lhs, rhs, comparator).getOr(lhs.isNone() && rhs.isNone());\n    const cat = (arr) => {\n        const r = [];\n        const push = (x) => {\n            r.push(x);\n        };\n        for (let i = 0; i < arr.length; i++) {\n            arr[i].each(push);\n        }\n        return r;\n    };\n    const sequence = (arr) => {\n        const r = [];\n        for (let i = 0; i < arr.length; i++) {\n            const x = arr[i];\n            if (x.isSome()) {\n                r.push(x.getOrDie());\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        return Optional.some(r);\n    };\n    /*\n    Notes on the lift functions:\n    - We used to have a generic liftN, but we were concerned about its type-safety, and the below variants were faster in microbenchmarks.\n    - The getOrDie calls are partial functions, but are checked beforehand. This is faster and more convenient (but less safe) than folds.\n    - && is used instead of a loop for simplicity and performance.\n    */\n    const lift2 = (oa, ob, f) => oa.isSome() && ob.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie())) : Optional.none();\n    const lift3 = (oa, ob, oc, f) => oa.isSome() && ob.isSome() && oc.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie(), oc.getOrDie())) : Optional.none();\n    const mapFrom = (a, f) => (a !== undefined && a !== null) ? Optional.some(f(a)) : Optional.none();\n    // This can help with type inference, by specifying the type param on the none case, so the caller doesn't have to.\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping\n    const escape = (text) => text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n    /** path :: ([String], JsObj?) -> JsObj */\n    const path$1 = (parts, scope) => {\n        let o = scope !== undefined && scope !== null ? scope : Global;\n        for (let i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n            o = o[parts[i]];\n        }\n        return o;\n    };\n    /** resolve :: (String, JsObj?) -> JsObj */\n    const resolve = (p, scope) => {\n        const parts = p.split('.');\n        return path$1(parts, scope);\n    };\n\n    Adt.generate([\n        { bothErrors: ['error1', 'error2'] },\n        { firstError: ['error1', 'value2'] },\n        { secondError: ['value1', 'error2'] },\n        { bothValues: ['value1', 'value2'] }\n    ]);\n    /** partition :: [Result a] -> { errors: [String], values: [a] } */\n    const partition$2 = (results) => {\n        const errors = [];\n        const values = [];\n        each$1(results, (result) => {\n            result.fold((err) => {\n                errors.push(err);\n            }, (value) => {\n                values.push(value);\n            });\n        });\n        return { errors, values };\n    };\n\n    const singleton$1 = (doRevoke) => {\n        const subject = Cell(Optional.none());\n        const revoke = () => subject.get().each(doRevoke);\n        const clear = () => {\n            revoke();\n            subject.set(Optional.none());\n        };\n        const isSet = () => subject.get().isSome();\n        const get = () => subject.get();\n        const set = (s) => {\n            revoke();\n            subject.set(Optional.some(s));\n        };\n        return {\n            clear,\n            isSet,\n            get,\n            set\n        };\n    };\n    const destroyable = () => singleton$1((s) => s.destroy());\n    const unbindable = () => singleton$1((s) => s.unbind());\n    const value$2 = () => {\n        const subject = singleton$1(noop);\n        const on = (f) => subject.get().each(f);\n        return {\n            ...subject,\n            on\n        };\n    };\n\n    const addToEnd = (str, suffix) => {\n        return str + suffix;\n    };\n    const removeFromStart = (str, numChars) => {\n        return str.substring(numChars);\n    };\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const removeLeading = (str, prefix) => {\n        return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n    };\n    const ensureTrailing = (str, suffix) => {\n        return endsWith(str, suffix) ? str : addToEnd(str, suffix);\n    };\n    const contains$1 = (str, substr, start = 0, end) => {\n        const idx = str.indexOf(substr, start);\n        if (idx !== -1) {\n            return isUndefined(end) ? true : idx + substr.length <= end;\n        }\n        else {\n            return false;\n        }\n    };\n    /** Does 'str' start with 'prefix'?\n     *  Note: all strings start with the empty string.\n     *        More formally, for all strings x, startsWith(x, \"\").\n     *        This is so that for all strings x and y, startsWith(y + x, y)\n     */\n    const startsWith = (str, prefix) => {\n        return checkRange(str, prefix, 0);\n    };\n    /** Does 'str' end with 'suffix'?\n     *  Note: all strings end with the empty string.\n     *        More formally, for all strings x, endsWith(x, \"\").\n     *        This is so that for all strings x and y, endsWith(x + y, y)\n     */\n    const endsWith = (str, suffix) => {\n        return checkRange(str, suffix, str.length - suffix.length);\n    };\n    const blank = (r) => (s) => s.replace(r, '');\n    /** removes all leading and trailing spaces */\n    const trim$1 = blank(/^\\s+|\\s+$/g);\n    const isNotEmpty = (s) => s.length > 0;\n    const isEmpty = (s) => !isNotEmpty(s);\n    const toFloat = (value) => {\n        const num = parseFloat(value);\n        return isNaN(num) ? Optional.none() : Optional.some(num);\n    };\n\n    // Run a function fn after rate ms. If another invocation occurs\n    // during the time it is waiting, update the arguments f will run\n    // with (but keep the current schedule)\n    const adaptable = (fn, rate) => {\n        let timer = null;\n        let args = null;\n        const cancel = () => {\n            if (!isNull(timer)) {\n                clearTimeout(timer);\n                timer = null;\n                args = null;\n            }\n        };\n        const throttle = (...newArgs) => {\n            args = newArgs;\n            if (isNull(timer)) {\n                timer = setTimeout(() => {\n                    const tempArgs = args;\n                    timer = null;\n                    args = null;\n                    fn.apply(null, tempArgs);\n                }, rate);\n            }\n        };\n        return {\n            cancel,\n            throttle\n        };\n    };\n    // Run a function fn after rate ms. If another invocation occurs\n    // during the time it is waiting, ignore it completely.\n    const first$1 = (fn, rate) => {\n        let timer = null;\n        const cancel = () => {\n            if (!isNull(timer)) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n        const throttle = (...args) => {\n            if (isNull(timer)) {\n                timer = setTimeout(() => {\n                    timer = null;\n                    fn.apply(null, args);\n                }, rate);\n            }\n        };\n        return {\n            cancel,\n            throttle\n        };\n    };\n    // Run a function fn after rate ms. If another invocation occurs\n    // during the time it is waiting, reschedule the function again\n    // with the new arguments.\n    const last = (fn, rate) => {\n        let timer = null;\n        const cancel = () => {\n            if (!isNull(timer)) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n        const throttle = (...args) => {\n            cancel();\n            timer = setTimeout(() => {\n                timer = null;\n                fn.apply(null, args);\n            }, rate);\n        };\n        return {\n            cancel,\n            throttle\n        };\n    };\n\n    const cached = (f) => {\n        let called = false;\n        let r;\n        return (...args) => {\n            if (!called) {\n                called = true;\n                r = f.apply(null, args);\n            }\n            return r;\n        };\n    };\n\n    const zeroWidth = '\\uFEFF';\n    const nbsp = '\\u00A0';\n\n    const fromHtml$2 = (html, scope) => {\n        const doc = scope || document;\n        const div = doc.createElement('div');\n        div.innerHTML = html;\n        if (!div.hasChildNodes() || div.childNodes.length > 1) {\n            const message = 'HTML does not have a single root node';\n            // eslint-disable-next-line no-console\n            console.error(message, html);\n            throw new Error(message);\n        }\n        return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n        const doc = scope || document;\n        const node = doc.createElement(tag);\n        return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n        const doc = scope || document;\n        const node = doc.createTextNode(text);\n        return fromDom(node);\n    };\n    const fromDom = (node) => {\n        // TODO: Consider removing this check, but left atm for safety\n        if (node === null || node === undefined) {\n            throw new Error('Node cannot be null or undefined');\n        }\n        return {\n            dom: node\n        };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    // tslint:disable-next-line:variable-name\n    const SugarElement = {\n        fromHtml: fromHtml$2,\n        fromTag,\n        fromText,\n        fromDom,\n        fromPoint\n    };\n\n    // NOTE: Mutates the range.\n    const setStart = (rng, situ) => {\n        situ.fold((e) => {\n            rng.setStartBefore(e.dom);\n        }, (e, o) => {\n            rng.setStart(e.dom, o);\n        }, (e) => {\n            rng.setStartAfter(e.dom);\n        });\n    };\n    const setFinish = (rng, situ) => {\n        situ.fold((e) => {\n            rng.setEndBefore(e.dom);\n        }, (e, o) => {\n            rng.setEnd(e.dom, o);\n        }, (e) => {\n            rng.setEndAfter(e.dom);\n        });\n    };\n    const relativeToNative = (win, startSitu, finishSitu) => {\n        const range = win.document.createRange();\n        setStart(range, startSitu);\n        setFinish(range, finishSitu);\n        return range;\n    };\n    const exactToNative = (win, start, soffset, finish, foffset) => {\n        const rng = win.document.createRange();\n        rng.setStart(start.dom, soffset);\n        rng.setEnd(finish.dom, foffset);\n        return rng;\n    };\n    const toRect = (rect) => ({\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        width: rect.width,\n        height: rect.height\n    });\n    const getFirstRect$1 = (rng) => {\n        const rects = rng.getClientRects();\n        // ASSUMPTION: The first rectangle is the start of the selection\n        const rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n        return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n    const getBounds$3 = (rng) => {\n        const rect = rng.getBoundingClientRect();\n        return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n\n    const adt$a = Adt.generate([\n        { ltr: ['start', 'soffset', 'finish', 'foffset'] },\n        { rtl: ['start', 'soffset', 'finish', 'foffset'] }\n    ]);\n    const fromRange = (win, type, range) => type(SugarElement.fromDom(range.startContainer), range.startOffset, SugarElement.fromDom(range.endContainer), range.endOffset);\n    const getRanges = (win, selection) => selection.match({\n        domRange: (rng) => {\n            return {\n                ltr: constant$1(rng),\n                rtl: Optional.none\n            };\n        },\n        relative: (startSitu, finishSitu) => {\n            return {\n                ltr: cached(() => relativeToNative(win, startSitu, finishSitu)),\n                rtl: cached(() => Optional.some(relativeToNative(win, finishSitu, startSitu)))\n            };\n        },\n        exact: (start, soffset, finish, foffset) => {\n            return {\n                ltr: cached(() => exactToNative(win, start, soffset, finish, foffset)),\n                rtl: cached(() => Optional.some(exactToNative(win, finish, foffset, start, soffset)))\n            };\n        }\n    });\n    const doDiagnose = (win, ranges) => {\n        // If we cannot create a ranged selection from start > finish, it could be RTL\n        const rng = ranges.ltr();\n        if (rng.collapsed) {\n            // Let's check if it's RTL ... if it is, then reversing the direction will not be collapsed\n            const reversed = ranges.rtl().filter((rev) => rev.collapsed === false);\n            return reversed.map((rev) => \n            // We need to use \"reversed\" here, because the original only has one point (collapsed)\n            adt$a.rtl(SugarElement.fromDom(rev.endContainer), rev.endOffset, SugarElement.fromDom(rev.startContainer), rev.startOffset)).getOrThunk(() => fromRange(win, adt$a.ltr, rng));\n        }\n        else {\n            return fromRange(win, adt$a.ltr, rng);\n        }\n    };\n    const diagnose = (win, selection) => {\n        const ranges = getRanges(win, selection);\n        return doDiagnose(win, ranges);\n    };\n    const asLtrRange = (win, selection) => {\n        const diagnosis = diagnose(win, selection);\n        return diagnosis.match({\n            ltr: (start, soffset, finish, foffset) => {\n                const rng = win.document.createRange();\n                rng.setStart(start.dom, soffset);\n                rng.setEnd(finish.dom, foffset);\n                return rng;\n            },\n            rtl: (start, soffset, finish, foffset) => {\n                // NOTE: Reversing start and finish\n                const rng = win.document.createRange();\n                rng.setStart(finish.dom, foffset);\n                rng.setEnd(start.dom, soffset);\n                return rng;\n            }\n        });\n    };\n    adt$a.ltr;\n    adt$a.rtl;\n\n    const DOCUMENT = 9;\n    const DOCUMENT_FRAGMENT = 11;\n    const ELEMENT = 1;\n    const TEXT = 3;\n\n    const is = (element, selector) => {\n        const dom = element.dom;\n        if (dom.nodeType !== ELEMENT) {\n            return false;\n        }\n        else {\n            const elem = dom;\n            if (elem.matches !== undefined) {\n                return elem.matches(selector);\n            }\n            else if (elem.msMatchesSelector !== undefined) {\n                return elem.msMatchesSelector(selector);\n            }\n            else if (elem.webkitMatchesSelector !== undefined) {\n                return elem.webkitMatchesSelector(selector);\n            }\n            else if (elem.mozMatchesSelector !== undefined) {\n                // cast to any as mozMatchesSelector doesn't exist in TS DOM lib\n                return elem.mozMatchesSelector(selector);\n            }\n            else {\n                throw new Error('Browser lacks native selectors');\n            } // unfortunately we can't throw this on startup :(\n        }\n    };\n    const bypassSelector = (dom) => \n    // Only elements, documents and shadow roots support querySelector\n    // shadow root element type is DOCUMENT_FRAGMENT\n    dom.nodeType !== ELEMENT && dom.nodeType !== DOCUMENT && dom.nodeType !== DOCUMENT_FRAGMENT ||\n        // IE fix for complex queries on empty nodes: http://jsfiddle.net/spyder/fv9ptr5L/\n        dom.childElementCount === 0;\n    const all$3 = (selector, scope) => {\n        const base = scope === undefined ? document : scope.dom;\n        return bypassSelector(base) ? [] : map$2(base.querySelectorAll(selector), SugarElement.fromDom);\n    };\n    const one = (selector, scope) => {\n        const base = scope === undefined ? document : scope.dom;\n        return bypassSelector(base) ? Optional.none() : Optional.from(base.querySelector(selector)).map(SugarElement.fromDom);\n    };\n\n    const eq = (e1, e2) => e1.dom === e2.dom;\n    // Returns: true if node e1 contains e2, otherwise false.\n    // (returns false if e1===e2: A node does not contain itself).\n    const contains = (e1, e2) => {\n        const d1 = e1.dom;\n        const d2 = e2.dom;\n        return d1 === d2 ? false : d1.contains(d2);\n    };\n\n    const DeviceType = (os, browser, userAgent, mediaMatch) => {\n        const isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n        const isiPhone = os.isiOS() && !isiPad;\n        const isMobile = os.isiOS() || os.isAndroid();\n        const isTouch = isMobile || mediaMatch('(pointer:coarse)');\n        const isTablet = isiPad || !isiPhone && isMobile && mediaMatch('(min-device-width:768px)');\n        const isPhone = isiPhone || isMobile && !isTablet;\n        const iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n        const isDesktop = !isPhone && !isTablet && !iOSwebview;\n        return {\n            isiPad: constant$1(isiPad),\n            isiPhone: constant$1(isiPhone),\n            isTablet: constant$1(isTablet),\n            isPhone: constant$1(isPhone),\n            isTouch: constant$1(isTouch),\n            isAndroid: os.isAndroid,\n            isiOS: os.isiOS,\n            isWebView: constant$1(iOSwebview),\n            isDesktop: constant$1(isDesktop)\n        };\n    };\n\n    const firstMatch = (regexes, s) => {\n        for (let i = 0; i < regexes.length; i++) {\n            const x = regexes[i];\n            if (x.test(s)) {\n                return x;\n            }\n        }\n        return undefined;\n    };\n    const find$3 = (regexes, agent) => {\n        const r = firstMatch(regexes, agent);\n        if (!r) {\n            return { major: 0, minor: 0 };\n        }\n        const group = (i) => {\n            return Number(agent.replace(r, '$' + i));\n        };\n        return nu$a(group(1), group(2));\n    };\n    const detect$4 = (versionRegexes, agent) => {\n        const cleanedAgent = String(agent).toLowerCase();\n        if (versionRegexes.length === 0) {\n            return unknown$3();\n        }\n        return find$3(versionRegexes, cleanedAgent);\n    };\n    const unknown$3 = () => {\n        return nu$a(0, 0);\n    };\n    const nu$a = (major, minor) => {\n        return { major, minor };\n    };\n    const Version = {\n        nu: nu$a,\n        detect: detect$4,\n        unknown: unknown$3\n    };\n\n    const detectBrowser$1 = (browsers, userAgentData) => {\n        return findMap(userAgentData.brands, (uaBrand) => {\n            const lcBrand = uaBrand.brand.toLowerCase();\n            return find$5(browsers, (browser) => { var _a; return lcBrand === ((_a = browser.brand) === null || _a === void 0 ? void 0 : _a.toLowerCase()); })\n                .map((info) => ({\n                current: info.name,\n                version: Version.nu(parseInt(uaBrand.version, 10), 0)\n            }));\n        });\n    };\n\n    const detect$3 = (candidates, userAgent) => {\n        const agent = String(userAgent).toLowerCase();\n        return find$5(candidates, (candidate) => {\n            return candidate.search(agent);\n        });\n    };\n    // They (browser and os) are the same at the moment, but they might\n    // not stay that way.\n    const detectBrowser = (browsers, userAgent) => {\n        return detect$3(browsers, userAgent).map((browser) => {\n            const version = Version.detect(browser.versionRegexes, userAgent);\n            return {\n                current: browser.name,\n                version\n            };\n        });\n    };\n    const detectOs = (oses, userAgent) => {\n        return detect$3(oses, userAgent).map((os) => {\n            const version = Version.detect(os.versionRegexes, userAgent);\n            return {\n                current: os.name,\n                version\n            };\n        });\n    };\n\n    const normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    const checkContains = (target) => {\n        return (uastring) => {\n            return contains$1(uastring, target);\n        };\n    };\n    const browsers = [\n        // This is legacy Edge\n        {\n            name: 'Edge',\n            versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n            search: (uastring) => {\n                return contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n            }\n        },\n        // This is Google Chrome and Chromium Edge\n        {\n            name: 'Chromium',\n            brand: 'Chromium',\n            versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/, normalVersionRegex],\n            search: (uastring) => {\n                return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n            }\n        },\n        {\n            name: 'IE',\n            versionRegexes: [/.*?msie\\ ?([0-9]+)\\.([0-9]+).*/, /.*?rv:([0-9]+)\\.([0-9]+).*/],\n            search: (uastring) => {\n                return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n            }\n        },\n        // INVESTIGATE: Is this still the Opera user agent?\n        {\n            name: 'Opera',\n            versionRegexes: [normalVersionRegex, /.*?opera\\/([0-9]+)\\.([0-9]+).*/],\n            search: checkContains('opera')\n        },\n        {\n            name: 'Firefox',\n            versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n            search: checkContains('firefox')\n        },\n        {\n            name: 'Safari',\n            versionRegexes: [normalVersionRegex, /.*?cpu os ([0-9]+)_([0-9]+).*/],\n            search: (uastring) => {\n                return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n            }\n        }\n    ];\n    const oses = [\n        {\n            name: 'Windows',\n            search: checkContains('win'),\n            versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n        },\n        {\n            name: 'iOS',\n            search: (uastring) => {\n                return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n            },\n            versionRegexes: [/.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/, /.*cpu os ([0-9]+)_([0-9]+).*/, /.*cpu iphone os ([0-9]+)_([0-9]+).*/]\n        },\n        {\n            name: 'Android',\n            search: checkContains('android'),\n            versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n        },\n        {\n            name: 'macOS',\n            search: checkContains('mac os x'),\n            versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n        },\n        {\n            name: 'Linux',\n            search: checkContains('linux'),\n            versionRegexes: []\n        },\n        { name: 'Solaris',\n            search: checkContains('sunos'),\n            versionRegexes: []\n        },\n        {\n            name: 'FreeBSD',\n            search: checkContains('freebsd'),\n            versionRegexes: []\n        },\n        {\n            name: 'ChromeOS',\n            search: checkContains('cros'),\n            versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n        }\n    ];\n    const PlatformInfo = {\n        browsers: constant$1(browsers),\n        oses: constant$1(oses)\n    };\n\n    const edge = 'Edge';\n    const chromium = 'Chromium';\n    const ie = 'IE';\n    const opera = 'Opera';\n    const firefox = 'Firefox';\n    const safari = 'Safari';\n    const unknown$2 = () => {\n        return nu$9({\n            current: undefined,\n            version: Version.unknown()\n        });\n    };\n    const nu$9 = (info) => {\n        const current = info.current;\n        const version = info.version;\n        const isBrowser = (name) => () => current === name;\n        return {\n            current,\n            version,\n            isEdge: isBrowser(edge),\n            isChromium: isBrowser(chromium),\n            // NOTE: isIe just looks too weird\n            isIE: isBrowser(ie),\n            isOpera: isBrowser(opera),\n            isFirefox: isBrowser(firefox),\n            isSafari: isBrowser(safari)\n        };\n    };\n    const Browser = {\n        unknown: unknown$2,\n        nu: nu$9,\n        edge: constant$1(edge),\n        chromium: constant$1(chromium),\n        ie: constant$1(ie),\n        opera: constant$1(opera),\n        firefox: constant$1(firefox),\n        safari: constant$1(safari)\n    };\n\n    const windows = 'Windows';\n    const ios = 'iOS';\n    const android = 'Android';\n    const linux = 'Linux';\n    const macos = 'macOS';\n    const solaris = 'Solaris';\n    const freebsd = 'FreeBSD';\n    const chromeos = 'ChromeOS';\n    // Though there is a bit of dupe with this and Browser, trying to\n    // reuse code makes it much harder to follow and change.\n    const unknown$1 = () => {\n        return nu$8({\n            current: undefined,\n            version: Version.unknown()\n        });\n    };\n    const nu$8 = (info) => {\n        const current = info.current;\n        const version = info.version;\n        const isOS = (name) => () => current === name;\n        return {\n            current,\n            version,\n            isWindows: isOS(windows),\n            // TODO: Fix capitalisation\n            isiOS: isOS(ios),\n            isAndroid: isOS(android),\n            isMacOS: isOS(macos),\n            isLinux: isOS(linux),\n            isSolaris: isOS(solaris),\n            isFreeBSD: isOS(freebsd),\n            isChromeOS: isOS(chromeos)\n        };\n    };\n    const OperatingSystem = {\n        unknown: unknown$1,\n        nu: nu$8,\n        windows: constant$1(windows),\n        ios: constant$1(ios),\n        android: constant$1(android),\n        linux: constant$1(linux),\n        macos: constant$1(macos),\n        solaris: constant$1(solaris),\n        freebsd: constant$1(freebsd),\n        chromeos: constant$1(chromeos)\n    };\n\n    const detect$2 = (userAgent, userAgentDataOpt, mediaMatch) => {\n        const browsers = PlatformInfo.browsers();\n        const oses = PlatformInfo.oses();\n        const browser = userAgentDataOpt.bind((userAgentData) => detectBrowser$1(browsers, userAgentData))\n            .orThunk(() => detectBrowser(browsers, userAgent))\n            .fold(Browser.unknown, Browser.nu);\n        const os = detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n        const deviceType = DeviceType(os, browser, userAgent, mediaMatch);\n        return {\n            browser,\n            os,\n            deviceType\n        };\n    };\n    const PlatformDetection = {\n        detect: detect$2\n    };\n\n    const mediaMatch = (query) => window.matchMedia(query).matches;\n    // IMPORTANT: Must be in a thunk, otherwise rollup thinks calling this immediately\n    // causes side effects and won't tree shake this away\n    // Note: navigator.userAgentData is not part of the native typescript types yet\n    let platform = cached(() => PlatformDetection.detect(window.navigator.userAgent, Optional.from((window.navigator.userAgentData)), mediaMatch));\n    const detect$1 = () => platform();\n\n    const unsafe = (name, scope) => {\n        return resolve(name, scope);\n    };\n    const getOrDie$1 = (name, scope) => {\n        const actual = unsafe(name, scope);\n        if (actual === undefined || actual === null) {\n            throw new Error(name + ' not available on this browser');\n        }\n        return actual;\n    };\n\n    const getPrototypeOf$1 = Object.getPrototypeOf;\n    /*\n     * IE9 and above\n     *\n     * MDN no use on this one, but here's the link anyway:\n     * https://developer.mozilla.org/en/docs/Web/API/HTMLElement\n     */\n    const sandHTMLElement = (scope) => {\n        return getOrDie$1('HTMLElement', scope);\n    };\n    const isPrototypeOf = (x) => {\n        // use Resolve to get the window object for x and just return undefined if it can't find it.\n        // undefined scope later triggers using the global window.\n        const scope = resolve('ownerDocument.defaultView', x);\n        // TINY-7374: We can't rely on looking at the owner window HTMLElement as the element may have\n        // been constructed in a different window and then appended to the current window document.\n        return isObject(x) && (sandHTMLElement(scope).prototype.isPrototypeOf(x) || /^HTML\\w*Element$/.test(getPrototypeOf$1(x).constructor.name));\n    };\n\n    const name$3 = (element) => {\n        const r = element.dom.nodeName;\n        return r.toLowerCase();\n    };\n    const type$1 = (element) => element.dom.nodeType;\n    const isType = (t) => (element) => type$1(element) === t;\n    const isHTMLElement = (element) => isElement$1(element) && isPrototypeOf(element.dom);\n    const isElement$1 = isType(ELEMENT);\n    const isText = isType(TEXT);\n    const isDocument = isType(DOCUMENT);\n    const isDocumentFragment = isType(DOCUMENT_FRAGMENT);\n    const isTag = (tag) => (e) => isElement$1(e) && name$3(e) === tag;\n\n    /**\n     * The document associated with the current element\n     * NOTE: this will throw if the owner is null.\n     */\n    const owner$4 = (element) => SugarElement.fromDom(element.dom.ownerDocument);\n    /**\n     * If the element is a document, return it. Otherwise, return its ownerDocument.\n     * @param dos\n     */\n    const documentOrOwner = (dos) => isDocument(dos) ? dos : owner$4(dos);\n    const documentElement = (element) => SugarElement.fromDom(documentOrOwner(element).dom.documentElement);\n    /**\n     * The window element associated with the element\n     * NOTE: this will throw if the defaultView is null.\n     */\n    const defaultView = (element) => SugarElement.fromDom(documentOrOwner(element).dom.defaultView);\n    const parent = (element) => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    // Cast down to just be SugarElement<Node>\n    const parentNode = (element) => parent(element);\n    const parentElement = (element) => Optional.from(element.dom.parentElement).map(SugarElement.fromDom);\n    const parents = (element, isRoot) => {\n        const stop = isFunction(isRoot) ? isRoot : never;\n        // This is used a *lot* so it needs to be performant, not recursive\n        let dom = element.dom;\n        const ret = [];\n        while (dom.parentNode !== null && dom.parentNode !== undefined) {\n            const rawParent = dom.parentNode;\n            const p = SugarElement.fromDom(rawParent);\n            ret.push(p);\n            if (stop(p) === true) {\n                break;\n            }\n            else {\n                dom = rawParent;\n            }\n        }\n        return ret;\n    };\n    const offsetParent = (element) => Optional.from(element.dom.offsetParent).map(SugarElement.fromDom);\n    const nextSibling = (element) => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children = (element) => map$2(element.dom.childNodes, SugarElement.fromDom);\n    const child$2 = (element, index) => {\n        const cs = element.dom.childNodes;\n        return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    const firstChild = (element) => child$2(element, 0);\n    const spot = (element, offset) => ({\n        element,\n        offset\n    });\n    const leaf = (element, offset) => {\n        const cs = children(element);\n        return cs.length > 0 && offset < cs.length ? spot(cs[offset], 0) : spot(element, offset);\n    };\n\n    const makeRange = (start, soffset, finish, foffset) => {\n        const doc = owner$4(start);\n        // TODO: We need to think about a better place to put native range creation code. Does it even belong in sugar?\n        // Could the `Compare` checks (node.compareDocumentPosition) handle these situations better?\n        const rng = doc.dom.createRange();\n        rng.setStart(start.dom, soffset);\n        rng.setEnd(finish.dom, foffset);\n        return rng;\n    };\n    const after$2 = (start, soffset, finish, foffset) => {\n        const r = makeRange(start, soffset, finish, foffset);\n        const same = eq(start, finish) && soffset === foffset;\n        return r.collapsed && !same;\n    };\n\n    /**\n     * Is the element a ShadowRoot?\n     *\n     * Note: this is insufficient to test if any element is a shadow root, but it is sufficient to differentiate between\n     * a Document and a ShadowRoot.\n     */\n    const isShadowRoot = (dos) => isDocumentFragment(dos) && isNonNullable(dos.dom.host);\n    const getRootNode = (e) => SugarElement.fromDom(e.dom.getRootNode());\n    /** Where content needs to go. ShadowRoot or document body */\n    const getContentContainer = (dos) => \n    // Can't use SugarBody.body without causing a circular module reference (since SugarBody.inBody uses SugarShadowDom)\n    isShadowRoot(dos) ? dos : SugarElement.fromDom(documentOrOwner(dos).dom.body);\n    /** Is this element either a ShadowRoot or a descendent of a ShadowRoot. */\n    const isInShadowRoot = (e) => getShadowRoot(e).isSome();\n    /** If this element is in a ShadowRoot, return it. */\n    const getShadowRoot = (e) => {\n        const r = getRootNode(e);\n        return isShadowRoot(r) ? Optional.some(r) : Optional.none();\n    };\n    /** Return the host of a ShadowRoot.\n     *\n     * This function will throw if Shadow DOM is unsupported in the browser, or if the host is null.\n     * If you actually have a ShadowRoot, this shouldn't happen.\n     */\n    const getShadowHost = (e) => SugarElement.fromDom(e.dom.host);\n    /**\n     * When Events bubble up through a ShadowRoot, the browser changes the target to be the shadow host.\n     * This function gets the \"original\" event target if possible.\n     * This only works if the shadow tree is open - if the shadow tree is closed, event.target is returned.\n     * See: https://developers.google.com/web/fundamentals/web-components/shadowdom#events\n     */\n    const getOriginalEventTarget = (event) => {\n        if (isNonNullable(event.target)) {\n            const el = SugarElement.fromDom(event.target);\n            if (isElement$1(el) && isOpenShadowHost(el)) {\n                // When target element is inside Shadow DOM we need to take first element from composedPath\n                // otherwise we'll get Shadow Root parent, not actual target element.\n                if (event.composed && event.composedPath) {\n                    const composedPath = event.composedPath();\n                    if (composedPath) {\n                        return head(composedPath);\n                    }\n                }\n            }\n        }\n        return Optional.from(event.target);\n    };\n    /** Return true if the element is a host of an open shadow root.\n     *  Return false if the element is a host of a closed shadow root, or if the element is not a host.\n     */\n    const isOpenShadowHost = (element) => isNonNullable(element.dom.shadowRoot);\n\n    const mkEvent = (target, x, y, stop, prevent, kill, raw) => ({\n        target,\n        x,\n        y,\n        stop,\n        prevent,\n        kill,\n        raw\n    });\n    /** Wraps an Event in an EventArgs structure.\n     * The returned EventArgs structure has its target set to the \"original\" target if possible.\n     * See SugarShadowDom.getOriginalEventTarget\n     */\n    const fromRawEvent$1 = (rawEvent) => {\n        const target = SugarElement.fromDom(getOriginalEventTarget(rawEvent).getOr(rawEvent.target));\n        const stop = () => rawEvent.stopPropagation();\n        const prevent = () => rawEvent.preventDefault();\n        const kill = compose(prevent, stop); // more of a sequence than a compose, but same effect\n        // FIX: Don't just expose the raw event. Need to identify what needs standardisation.\n        return mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n    };\n    const handle = (filter, handler) => (rawEvent) => {\n        if (filter(rawEvent)) {\n            handler(fromRawEvent$1(rawEvent));\n        }\n    };\n    const binder = (element, event, filter, handler, useCapture) => {\n        const wrapped = handle(filter, handler);\n        // IE9 minimum\n        element.dom.addEventListener(event, wrapped, useCapture);\n        return {\n            unbind: curry(unbind, element, event, wrapped, useCapture)\n        };\n    };\n    const bind$2 = (element, event, filter, handler) => binder(element, event, filter, handler, false);\n    const capture$1 = (element, event, filter, handler) => binder(element, event, filter, handler, true);\n    const unbind = (element, event, handler, useCapture) => {\n        // IE9 minimum\n        element.dom.removeEventListener(event, handler, useCapture);\n    };\n\n    const filter = always; // no filter on plain DomEvents\n    const bind$1 = (element, event, handler) => bind$2(element, event, filter, handler);\n    const capture = (element, event, handler) => capture$1(element, event, filter, handler);\n    const fromRawEvent = fromRawEvent$1;\n\n    const getDocument = () => SugarElement.fromDom(document);\n\n    const focus$4 = (element, preventScroll = false) => element.dom.focus({ preventScroll });\n    const blur$1 = (element) => element.dom.blur();\n    const hasFocus = (element) => {\n        const root = getRootNode(element).dom;\n        return element.dom === root.activeElement;\n    };\n    // Note: assuming that activeElement will always be a HTMLElement (maybe we should add a runtime check?)\n    const active$1 = (root = getDocument()) => Optional.from(root.dom.activeElement).map(SugarElement.fromDom);\n    /**\n     * Return the descendant element that has focus.\n     * Use instead of SelectorFind.descendant(container, ':focus')\n     *  because the :focus selector relies on keyboard focus.\n     */\n    const search = (element) => active$1(getRootNode(element))\n        .filter((e) => element.dom.contains(e.dom));\n\n    const before$1 = (marker, element) => {\n        const parent$1 = parent(marker);\n        parent$1.each((v) => {\n            v.dom.insertBefore(element.dom, marker.dom);\n        });\n    };\n    const after$1 = (marker, element) => {\n        const sibling = nextSibling(marker);\n        sibling.fold(() => {\n            const parent$1 = parent(marker);\n            parent$1.each((v) => {\n                append$2(v, element);\n            });\n        }, (v) => {\n            before$1(v, element);\n        });\n    };\n    const prepend$1 = (parent, element) => {\n        const firstChild$1 = firstChild(parent);\n        firstChild$1.fold(() => {\n            append$2(parent, element);\n        }, (v) => {\n            parent.dom.insertBefore(element.dom, v.dom);\n        });\n    };\n    const append$2 = (parent, element) => {\n        parent.dom.appendChild(element.dom);\n    };\n    const appendAt = (parent, element, index) => {\n        child$2(parent, index).fold(() => {\n            append$2(parent, element);\n        }, (v) => {\n            before$1(v, element);\n        });\n    };\n\n    const append$1 = (parent, elements) => {\n        each$1(elements, (x) => {\n            append$2(parent, x);\n        });\n    };\n\n    const rawSet = (dom, key, value) => {\n        /*\n         * JQuery coerced everything to a string, and silently did nothing on text node/null/undefined.\n         *\n         * We fail on those invalid cases, only allowing numbers and booleans.\n         */\n        if (isString(value) || isBoolean(value) || isNumber(value)) {\n            dom.setAttribute(key, value + '');\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n            throw new Error('Attribute value was not simple');\n        }\n    };\n    const set$9 = (element, key, value) => {\n        rawSet(element.dom, key, value);\n    };\n    const setAll$1 = (element, attrs) => {\n        const dom = element.dom;\n        each(attrs, (v, k) => {\n            rawSet(dom, k, v);\n        });\n    };\n    const get$g = (element, key) => {\n        const v = element.dom.getAttribute(key);\n        // undefined is the more appropriate value for JS, and this matches JQuery\n        return v === null ? undefined : v;\n    };\n    const getOpt = (element, key) => Optional.from(get$g(element, key));\n    const has$1 = (element, key) => {\n        const dom = element.dom;\n        // return false for non-element nodes, no point in throwing an error\n        return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n    const remove$8 = (element, key) => {\n        element.dom.removeAttribute(key);\n    };\n    const clone$2 = (element) => foldl(element.dom.attributes, (acc, attr) => {\n        acc[attr.name] = attr.value;\n        return acc;\n    }, {});\n\n    const empty = (element) => {\n        // shortcut \"empty node\" trick. Requires IE 9.\n        element.dom.textContent = '';\n        // If the contents was a single empty text node, the above doesn't remove it. But, it's still faster in general\n        // than removing every child node manually.\n        // The following is (probably) safe for performance as 99.9% of the time the trick works and\n        // Traverse.children will return an empty array.\n        each$1(children(element), (rogue) => {\n            remove$7(rogue);\n        });\n    };\n    const remove$7 = (element) => {\n        const dom = element.dom;\n        if (dom.parentNode !== null) {\n            dom.parentNode.removeChild(dom);\n        }\n    };\n\n    const clone$1 = (original, isDeep) => SugarElement.fromDom(original.dom.cloneNode(isDeep));\n    /** Shallow clone - just the tag, no children */\n    const shallow = (original) => clone$1(original, false);\n    /** Deep clone - everything copied including children */\n    const deep = (original) => clone$1(original, true);\n\n    const fromHtml$1 = (html, scope) => {\n        const doc = scope || document;\n        const div = doc.createElement('div');\n        div.innerHTML = html;\n        return children(SugarElement.fromDom(div));\n    };\n\n    const get$f = (element) => element.dom.innerHTML;\n    const set$8 = (element, content) => {\n        const owner = owner$4(element);\n        const docDom = owner.dom;\n        // FireFox has *terrible* performance when using innerHTML = x\n        const fragment = SugarElement.fromDom(docDom.createDocumentFragment());\n        const contentElements = fromHtml$1(content, docDom);\n        append$1(fragment, contentElements);\n        empty(element);\n        append$2(element, fragment);\n    };\n    const getOuter$2 = (element) => {\n        const container = SugarElement.fromTag('div');\n        const clone = SugarElement.fromDom(element.dom.cloneNode(true));\n        append$2(container, clone);\n        return get$f(container);\n    };\n\n    const getHtml = (element) => {\n        if (isShadowRoot(element)) {\n            return '#shadow-root';\n        }\n        else {\n            const clone = shallow(element);\n            return getOuter$2(clone);\n        }\n    };\n\n    const image = (image) => new Promise((resolve, reject) => {\n        const loaded = () => {\n            destroy();\n            resolve(image);\n        };\n        const listeners = [\n            bind$1(image, 'load', loaded),\n            bind$1(image, 'error', () => {\n                destroy();\n                reject('Unable to load data from image: ' + image.dom.src);\n            }),\n        ];\n        const destroy = () => each$1(listeners, (l) => l.unbind());\n        if (image.dom.complete) {\n            loaded();\n        }\n    });\n\n    // some elements, such as mathml, don't have style attributes\n    // others, such as angular elements, have style attributes that aren't a CSSStyleDeclaration\n    const isSupported = (dom) => \n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    // Node.contains() is very, very, very good performance\n    // http://jsperf.com/closest-vs-contains/5\n    const inBody = (element) => {\n        // Technically this is only required on IE, where contains() returns false for text nodes.\n        // But it's cheap enough to run everywhere and Sugar doesn't have platform detection (yet).\n        const dom = isText(element) ? element.dom.parentNode : element.dom;\n        // use ownerDocument.body to ensure this works inside iframes.\n        // Normally contains is bad because an element \"contains\" itself, but here we want that.\n        if (dom === undefined || dom === null || dom.ownerDocument === null) {\n            return false;\n        }\n        const doc = dom.ownerDocument;\n        return getShadowRoot(SugarElement.fromDom(dom)).fold(() => doc.body.contains(dom), compose1(inBody, getShadowHost));\n    };\n    const body = () => getBody(SugarElement.fromDom(document));\n    const getBody = (doc) => {\n        const b = doc.dom.body;\n        if (b === null || b === undefined) {\n            throw new Error('Body is not available yet');\n        }\n        return SugarElement.fromDom(b);\n    };\n\n    const internalSet = (dom, property, value) => {\n        // This is going to hurt. Apologies.\n        // JQuery coerces numbers to pixels for certain property names, and other times lets numbers through.\n        // we're going to be explicit; strings only.\n        if (!isString(value)) {\n            // eslint-disable-next-line no-console\n            console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n            throw new Error('CSS value must be a string: ' + value);\n        }\n        // removed: support for dom().style[property] where prop is camel case instead of normal property name\n        if (isSupported(dom)) {\n            dom.style.setProperty(property, value);\n        }\n    };\n    const internalRemove = (dom, property) => {\n        /*\n         * IE9 and above - MDN doesn't have details, but here's a couple of random internet claims\n         *\n         * http://help.dottoro.com/ljopsjck.php\n         * http://stackoverflow.com/a/7901886/7546\n         */\n        if (isSupported(dom)) {\n            dom.style.removeProperty(property);\n        }\n    };\n    const set$7 = (element, property, value) => {\n        const dom = element.dom;\n        internalSet(dom, property, value);\n    };\n    const setAll = (element, css) => {\n        const dom = element.dom;\n        each(css, (v, k) => {\n            internalSet(dom, k, v);\n        });\n    };\n    const setOptions = (element, css) => {\n        const dom = element.dom;\n        each(css, (v, k) => {\n            v.fold(() => {\n                internalRemove(dom, k);\n            }, (value) => {\n                internalSet(dom, k, value);\n            });\n        });\n    };\n    /*\n     * NOTE: For certain properties, this returns the \"used value\" which is subtly different to the \"computed value\" (despite calling getComputedStyle).\n     * Blame CSS 2.0.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n     */\n    const get$e = (element, property) => {\n        const dom = element.dom;\n        /*\n         * IE9 and above per\n         * https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle\n         *\n         * Not in numerosity, because it doesn't memoize and looking this up dynamically in performance critical code would be horrendous.\n         *\n         * JQuery has some magic here for IE popups, but we don't really need that.\n         * It also uses element.ownerDocument.defaultView to handle iframes but that hasn't been required since FF 3.6.\n         */\n        const styles = window.getComputedStyle(dom);\n        const r = styles.getPropertyValue(property);\n        // jquery-ism: If r is an empty string, check that the element is not in a document. If it isn't, return the raw value.\n        // Turns out we do this a lot.\n        return (r === '' && !inBody(element)) ? getUnsafeProperty(dom, property) : r;\n    };\n    // removed: support for dom().style[property] where prop is camel case instead of normal property name\n    // empty string is what the browsers (IE11 and Chrome) return when the propertyValue doesn't exists.\n    const getUnsafeProperty = (dom, property) => isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    /*\n     * Gets the raw value from the style attribute. Useful for retrieving \"used values\" from the DOM:\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n     *\n     * Returns NONE if the property isn't set, or the value is an empty string.\n     */\n    const getRaw = (element, property) => {\n        const dom = element.dom;\n        const raw = getUnsafeProperty(dom, property);\n        return Optional.from(raw).filter((r) => r.length > 0);\n    };\n    const getAllRaw = (element) => {\n        const css = {};\n        const dom = element.dom;\n        if (isSupported(dom)) {\n            for (let i = 0; i < dom.style.length; i++) {\n                const ruleName = dom.style.item(i);\n                css[ruleName] = dom.style[ruleName];\n            }\n        }\n        return css;\n    };\n    const isValidValue$1 = (tag, property, value) => {\n        const element = SugarElement.fromTag(tag);\n        set$7(element, property, value);\n        const style = getRaw(element, property);\n        return style.isSome();\n    };\n    const remove$6 = (element, property) => {\n        const dom = element.dom;\n        internalRemove(dom, property);\n        if (is$1(getOpt(element, 'style').map(trim$1), '')) {\n            // No more styles left, remove the style attribute as well\n            remove$8(element, 'style');\n        }\n    };\n    /* NOTE: This function is here for the side effect it triggers.\n    The value itself is not used.\n    Be sure to not use the return value, and that it is not removed by a minifier.\n     */\n    const reflow = (e) => e.dom.offsetWidth;\n\n    const Dimension = (name, getOffset) => {\n        const set = (element, h) => {\n            if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n                throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n            }\n            const dom = element.dom;\n            if (isSupported(dom)) {\n                dom.style[name] = h + 'px';\n            }\n        };\n        /*\n         * jQuery supports querying width and height on the document and window objects.\n         *\n         * TBIO doesn't do this, so the code is removed to save space, but left here just in case.\n         */\n        /*\n        var getDocumentWidth = (element) => {\n          var dom = element.dom;\n          if (Node.isDocument(element)) {\n            var body = dom.body;\n            var doc = dom.documentElement;\n            return Math.max(\n              body.scrollHeight,\n              doc.scrollHeight,\n              body.offsetHeight,\n              doc.offsetHeight,\n              doc.clientHeight\n            );\n          }\n        };\n      \n        var getWindowWidth = (element) => {\n          var dom = element.dom;\n          if (dom.window === dom) {\n            // There is no offsetHeight on a window, so use the clientHeight of the document\n            return dom.document.documentElement.clientHeight;\n          }\n        };\n      */\n        const get = (element) => {\n            const r = getOffset(element);\n            // zero or null means non-standard or disconnected, fall back to CSS\n            if (r <= 0 || r === null) {\n                const css = get$e(element, name);\n                // ugh this feels dirty, but it saves cycles\n                return parseFloat(css) || 0;\n            }\n            return r;\n        };\n        // in jQuery, getOuter replicates (or uses) box-sizing: border-box calculations\n        // although these calculations only seem relevant for quirks mode, and edge cases TBIO doesn't rely on\n        const getOuter = get;\n        const aggregate = (element, properties) => foldl(properties, (acc, property) => {\n            const val = get$e(element, property);\n            const value = val === undefined ? 0 : parseInt(val, 10);\n            return isNaN(value) ? acc : acc + value;\n        }, 0);\n        const max = (element, value, properties) => {\n            const cumulativeInclusions = aggregate(element, properties);\n            // if max-height is 100px and your cumulativeInclusions is 150px, there is no way max-height can be 100px, so we return 0.\n            const absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n            return absoluteMax;\n        };\n        return {\n            set,\n            get,\n            getOuter,\n            aggregate,\n            max\n        };\n    };\n\n    const api$2 = Dimension('height', (element) => {\n        // getBoundingClientRect gives better results than offsetHeight for tables with captions on Firefox\n        const dom = element.dom;\n        return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    const get$d = (element) => api$2.get(element);\n    const getOuter$1 = (element) => api$2.getOuter(element);\n    const setMax$1 = (element, value) => {\n        // These properties affect the absolute max-height, they are not counted natively, we want to include these properties.\n        const inclusions = ['margin-top', 'border-top-width', 'padding-top', 'padding-bottom', 'border-bottom-width', 'margin-bottom'];\n        const absMax = api$2.max(element, value, inclusions);\n        set$7(element, 'max-height', absMax + 'px');\n    };\n\n    const isHidden$1 = (dom) => dom.offsetWidth <= 0 && dom.offsetHeight <= 0;\n    const isVisible = (element) => !isHidden$1(element.dom);\n\n    const api$1 = Dimension('width', (element) => \n    // IMO passing this function is better than using dom['offset' + 'width']\n    element.dom.offsetWidth);\n    const apiExact = Dimension('width', (element) => {\n        const dom = element.dom;\n        return inBody(element) ? dom.getBoundingClientRect().width : dom.offsetWidth;\n    });\n    const set$6 = (element, h) => api$1.set(element, h);\n    const get$c = (element) => api$1.get(element);\n    const getOuter = (element) => api$1.getOuter(element);\n    const getOuterExact = (element) => apiExact.getOuter(element);\n    const setMax = (element, value) => {\n        // These properties affect the absolute max-height, they are not counted natively, we want to include these properties.\n        const inclusions = ['margin-left', 'border-left-width', 'padding-left', 'padding-right', 'border-right-width', 'margin-right'];\n        const absMax = api$1.max(element, value, inclusions);\n        set$7(element, 'max-width', absMax + 'px');\n    };\n\n    const r$1 = (left, top) => {\n        const translate = (x, y) => r$1(left + x, top + y);\n        return {\n            left,\n            top,\n            translate\n        };\n    };\n    // tslint:disable-next-line:variable-name\n    const SugarPosition = r$1;\n\n    const boxPosition = (dom) => {\n        const box = dom.getBoundingClientRect();\n        return SugarPosition(box.left, box.top);\n    };\n    // Avoids falsy false fallthrough\n    const firstDefinedOrZero = (a, b) => {\n        if (a !== undefined) {\n            return a;\n        }\n        else {\n            return b !== undefined ? b : 0;\n        }\n    };\n    const absolute$3 = (element) => {\n        const doc = element.dom.ownerDocument;\n        const body = doc.body;\n        const win = doc.defaultView;\n        const html = doc.documentElement;\n        if (body === element.dom) {\n            return SugarPosition(body.offsetLeft, body.offsetTop);\n        }\n        const scrollTop = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageYOffset, html.scrollTop);\n        const scrollLeft = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageXOffset, html.scrollLeft);\n        const clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n        const clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n        return viewport$1(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    const viewport$1 = (element) => {\n        const dom = element.dom;\n        const doc = dom.ownerDocument;\n        const body = doc.body;\n        if (body === dom) {\n            return SugarPosition(body.offsetLeft, body.offsetTop);\n        }\n        if (!inBody(element)) {\n            return SugarPosition(0, 0);\n        }\n        return boxPosition(dom);\n    };\n\n    // get scroll position (x,y) relative to document _doc (or global if not supplied)\n    const get$b = (_DOC) => {\n        const doc = _DOC !== undefined ? _DOC.dom : document;\n        // ASSUMPTION: This is for cross-browser support, body works for Safari & EDGE, and when we have an iframe body scroller\n        const x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n        const y = doc.body.scrollTop || doc.documentElement.scrollTop;\n        return SugarPosition(x, y);\n    };\n    // Scroll content to (x,y) relative to document _doc (or global if not supplied)\n    const to = (x, y, _DOC) => {\n        const doc = _DOC !== undefined ? _DOC.dom : document;\n        const win = doc.defaultView;\n        if (win) {\n            win.scrollTo(x, y);\n        }\n    };\n\n    const NodeValue = (is, name) => {\n        const get = (element) => {\n            if (!is(element)) {\n                throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n            }\n            return getOption(element).getOr('');\n        };\n        const getOption = (element) => is(element) ? Optional.from(element.dom.nodeValue) : Optional.none();\n        const set = (element, value) => {\n            if (!is(element)) {\n                throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n            }\n            element.dom.nodeValue = value;\n        };\n        return {\n            get,\n            getOption,\n            set\n        };\n    };\n\n    const api = NodeValue(isText, 'text');\n    const get$a = (element) => api.get(element);\n\n    const onDirection = (isLtr, isRtl) => (element) => getDirection(element) === 'rtl' ? isRtl : isLtr;\n    const getDirection = (element) => get$e(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n\n    // Methods for handling attributes that contain a list of values <div foo=\"alpha beta theta\">\n    const read$2 = (element, attr) => {\n        const value = get$g(element, attr);\n        return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    const add$4 = (element, attr, id) => {\n        const old = read$2(element, attr);\n        const nu = old.concat([id]);\n        set$9(element, attr, nu.join(' '));\n        return true;\n    };\n    const remove$5 = (element, attr, id) => {\n        const nu = filter$2(read$2(element, attr), (v) => v !== id);\n        if (nu.length > 0) {\n            set$9(element, attr, nu.join(' '));\n        }\n        else {\n            remove$8(element, attr);\n        }\n        return false;\n    };\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n        if (is(scope, a)) {\n            return Optional.some(scope);\n        }\n        else if (isFunction(isRoot) && isRoot(scope)) {\n            return Optional.none();\n        }\n        else {\n            return ancestor(scope, a, isRoot);\n        }\n    };\n\n    const ancestor$2 = (scope, predicate, isRoot) => {\n        let element = scope.dom;\n        const stop = isFunction(isRoot) ? isRoot : never;\n        while (element.parentNode) {\n            element = element.parentNode;\n            const el = SugarElement.fromDom(element);\n            if (predicate(el)) {\n                return Optional.some(el);\n            }\n            else if (stop(el)) {\n                break;\n            }\n        }\n        return Optional.none();\n    };\n    const closest$4 = (scope, predicate, isRoot) => {\n        // This is required to avoid ClosestOrAncestor passing the predicate to itself\n        const is = (s, test) => test(s);\n        return ClosestOrAncestor(is, ancestor$2, scope, predicate, isRoot);\n    };\n    const sibling$1 = (scope, predicate) => {\n        const element = scope.dom;\n        if (!element.parentNode) {\n            return Optional.none();\n        }\n        return child$1(SugarElement.fromDom(element.parentNode), (x) => !eq(scope, x) && predicate(x));\n    };\n    const child$1 = (scope, predicate) => {\n        const pred = (node) => predicate(SugarElement.fromDom(node));\n        const result = find$5(scope.dom.childNodes, pred);\n        return result.map(SugarElement.fromDom);\n    };\n    const descendant$1 = (scope, predicate) => {\n        const descend = (node) => {\n            // tslint:disable-next-line:prefer-for-of\n            for (let i = 0; i < node.childNodes.length; i++) {\n                const child = SugarElement.fromDom(node.childNodes[i]);\n                if (predicate(child)) {\n                    return Optional.some(child);\n                }\n                const res = descend(node.childNodes[i]);\n                if (res.isSome()) {\n                    return res;\n                }\n            }\n            return Optional.none();\n        };\n        return descend(scope.dom);\n    };\n\n    // TODO: An internal SelectorFilter module that doesn't SugarElement.fromDom() everything\n    const first = (selector) => one(selector);\n    const ancestor$1 = (scope, selector, isRoot) => ancestor$2(scope, (e) => is(e, selector), isRoot);\n    const sibling = (scope, selector) => sibling$1(scope, (e) => is(e, selector));\n    const child = (scope, selector) => child$1(scope, (e) => is(e, selector));\n    const descendant = (scope, selector) => one(selector, scope);\n    // Returns Some(closest ancestor element (sugared)) matching 'selector' up to isRoot, or None() otherwise\n    const closest$3 = (scope, selector, isRoot) => {\n        const is$1 = (element, selector) => is(element, selector);\n        return ClosestOrAncestor(is$1, ancestor$1, scope, selector, isRoot);\n    };\n\n    const set$5 = (element, status) => {\n        element.dom.checked = status;\n    };\n    const get$9 = (element) => element.dom.checked;\n\n    // IE11 Can return undefined for a classList on elements such as math, so we make sure it's not undefined before attempting to use it.\n    const supports = (element) => element.dom.classList !== undefined;\n    const get$8 = (element) => read$2(element, 'class');\n    const add$3 = (element, clazz) => add$4(element, 'class', clazz);\n    const remove$4 = (element, clazz) => remove$5(element, 'class', clazz);\n    const toggle$5 = (element, clazz) => {\n        if (contains$2(get$8(element), clazz)) {\n            return remove$4(element, clazz);\n        }\n        else {\n            return add$3(element, clazz);\n        }\n    };\n\n    /*\n     * ClassList is IE10 minimum:\n     * https://developer.mozilla.org/en-US/docs/Web/API/Element.classList\n     *\n     * Note that IE doesn't support the second argument to toggle (at all).\n     * If it did, the toggler could be better.\n     */\n    const add$2 = (element, clazz) => {\n        if (supports(element)) {\n            element.dom.classList.add(clazz);\n        }\n        else {\n            add$3(element, clazz);\n        }\n    };\n    const cleanClass = (element) => {\n        const classList = supports(element) ? element.dom.classList : get$8(element);\n        // classList is a \"live list\", so this is up to date already\n        if (classList.length === 0) {\n            // No more classes left, remove the class attribute as well\n            remove$8(element, 'class');\n        }\n    };\n    const remove$3 = (element, clazz) => {\n        if (supports(element)) {\n            const classList = element.dom.classList;\n            classList.remove(clazz);\n        }\n        else {\n            remove$4(element, clazz);\n        }\n        cleanClass(element);\n    };\n    const toggle$4 = (element, clazz) => {\n        const result = supports(element) ? element.dom.classList.toggle(clazz) : toggle$5(element, clazz);\n        cleanClass(element);\n        return result;\n    };\n    const has = (element, clazz) => supports(element) && element.dom.classList.contains(clazz);\n\n    /*\n     * ClassList is IE10 minimum:\n     * https://developer.mozilla.org/en-US/docs/Web/API/Element.classList\n     */\n    const add$1 = (element, classes) => {\n        each$1(classes, (x) => {\n            add$2(element, x);\n        });\n    };\n    const remove$2 = (element, classes) => {\n        each$1(classes, (x) => {\n            remove$3(element, x);\n        });\n    };\n    const toggle$3 = (element, classes) => {\n        each$1(classes, (x) => {\n            toggle$4(element, x);\n        });\n    };\n    const hasAll = (element, classes) => forall(classes, (clazz) => has(element, clazz));\n    const getNative = (element) => {\n        const classList = element.dom.classList;\n        const r = new Array(classList.length);\n        for (let i = 0; i < classList.length; i++) {\n            const item = classList.item(i);\n            if (item !== null) {\n                r[i] = item;\n            }\n        }\n        return r;\n    };\n    const get$7 = (element) => supports(element) ? getNative(element) : get$8(element);\n\n    const get$6 = (element) => element.dom.textContent;\n\n    const get$5 = (element) => element.dom.value;\n    const set$4 = (element, value) => {\n        if (value === undefined) {\n            throw new Error('Value.set was undefined');\n        }\n        element.dom.value = value;\n    };\n\n    const ancestors = (scope, predicate, isRoot) => filter$2(parents(scope, isRoot), predicate);\n\n    const descendants = (scope, selector) => all$3(selector, scope);\n\n    const closest$2 = (scope, predicate, isRoot) => closest$4(scope, predicate, isRoot).isSome();\n\n    const closest$1 = (scope, selector, isRoot) => closest$3(scope, selector, isRoot).isSome();\n\n    const ensureIsRoot = (isRoot) => isFunction(isRoot) ? isRoot : never;\n    const ancestor = (scope, transform, isRoot) => {\n        let element = scope.dom;\n        const stop = ensureIsRoot(isRoot);\n        while (element.parentNode) {\n            element = element.parentNode;\n            const el = SugarElement.fromDom(element);\n            const transformed = transform(el);\n            if (transformed.isSome()) {\n                return transformed;\n            }\n            else if (stop(el)) {\n                break;\n            }\n        }\n        return Optional.none();\n    };\n    const closest = (scope, transform, isRoot) => {\n        const current = transform(scope);\n        const stop = ensureIsRoot(isRoot);\n        return current.orThunk(() => stop(scope) ? Optional.none() : ancestor(scope, transform, stop));\n    };\n\n    const create$5 = (start, soffset, finish, foffset) => ({\n        start,\n        soffset,\n        finish,\n        foffset\n    });\n    // tslint:disable-next-line:variable-name\n    const SimRange = {\n        create: create$5\n    };\n\n    const adt$9 = Adt.generate([\n        { before: ['element'] },\n        { on: ['element', 'offset'] },\n        { after: ['element'] }\n    ]);\n    // Probably don't need this given that we now have \"match\"\n    const cata$2 = (subject, onBefore, onOn, onAfter) => subject.fold(onBefore, onOn, onAfter);\n    const getStart$1 = (situ) => situ.fold(identity, identity, identity);\n    const before = adt$9.before;\n    const on$1 = adt$9.on;\n    const after = adt$9.after;\n    // tslint:disable-next-line:variable-name\n    const Situ = {\n        before,\n        on: on$1,\n        after,\n        cata: cata$2,\n        getStart: getStart$1\n    };\n\n    // Consider adding a type for \"element\"\n    const adt$8 = Adt.generate([\n        { domRange: ['rng'] },\n        { relative: ['startSitu', 'finishSitu'] },\n        { exact: ['start', 'soffset', 'finish', 'foffset'] }\n    ]);\n    const exactFromRange = (simRange) => adt$8.exact(simRange.start, simRange.soffset, simRange.finish, simRange.foffset);\n    const getStart = (selection) => selection.match({\n        domRange: (rng) => SugarElement.fromDom(rng.startContainer),\n        relative: (startSitu, _finishSitu) => Situ.getStart(startSitu),\n        exact: (start, _soffset, _finish, _foffset) => start\n    });\n    const domRange = adt$8.domRange;\n    const relative$1 = adt$8.relative;\n    const exact = adt$8.exact;\n    const getWin = (selection) => {\n        const start = getStart(selection);\n        return defaultView(start);\n    };\n    // This is out of place but it's API so I can't remove it\n    const range$1 = SimRange.create;\n    // tslint:disable-next-line:variable-name\n    const SimSelection = {\n        domRange,\n        relative: relative$1,\n        exact,\n        exactFromRange,\n        getWin,\n        range: range$1\n    };\n\n    const getNativeSelection = (win) => Optional.from(win.getSelection());\n    // NOTE: We are still reading the range because it gives subtly different behaviour\n    // than using the anchorNode and focusNode. I'm not sure if this behaviour is any\n    // better or worse; it's just different.\n    const readRange = (selection) => {\n        if (selection.rangeCount > 0) {\n            const firstRng = selection.getRangeAt(0);\n            const lastRng = selection.getRangeAt(selection.rangeCount - 1);\n            return Optional.some(SimRange.create(SugarElement.fromDom(firstRng.startContainer), firstRng.startOffset, SugarElement.fromDom(lastRng.endContainer), lastRng.endOffset));\n        }\n        else {\n            return Optional.none();\n        }\n    };\n    const doGetExact = (selection) => {\n        if (selection.anchorNode === null || selection.focusNode === null) {\n            return readRange(selection);\n        }\n        else {\n            const anchor = SugarElement.fromDom(selection.anchorNode);\n            const focus = SugarElement.fromDom(selection.focusNode);\n            // if this returns true anchor is _after_ focus, so we need a custom selection object to maintain the RTL selection\n            return after$2(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Optional.some(SimRange.create(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n        }\n    };\n    const getExact = (win) => \n    // We want to retrieve the selection as it is.\n    getNativeSelection(win)\n        .filter((sel) => sel.rangeCount > 0)\n        .bind(doGetExact);\n    const getFirstRect = (win, selection) => {\n        const rng = asLtrRange(win, selection);\n        return getFirstRect$1(rng);\n    };\n    const getBounds$2 = (win, selection) => {\n        const rng = asLtrRange(win, selection);\n        return getBounds$3(rng);\n    };\n\n    const units = {\n        // we don't really support all of these different ways to express a length\n        unsupportedLength: [\n            'em',\n            'ex',\n            'cap',\n            'ch',\n            'ic',\n            'rem',\n            'lh',\n            'rlh',\n            'vw',\n            'vh',\n            'vi',\n            'vb',\n            'vmin',\n            'vmax',\n            'cm',\n            'mm',\n            'Q',\n            'in',\n            'pc',\n            'pt',\n            'px'\n        ],\n        // these are the length values we do support\n        fixed: ['px', 'pt'],\n        relative: ['%'],\n        empty: ['']\n    };\n    // Built from https://tc39.es/ecma262/#prod-StrDecimalLiteral\n    // Matches a float followed by a trailing set of characters\n    const pattern = (() => {\n        const decimalDigits = '[0-9]+';\n        const signedInteger = '[+-]?' + decimalDigits;\n        const exponentPart = '[eE]' + signedInteger;\n        const dot = '\\\\.';\n        const opt = (input) => `(?:${input})?`;\n        const unsignedDecimalLiteral = [\n            'Infinity',\n            decimalDigits + dot + opt(decimalDigits) + opt(exponentPart),\n            dot + decimalDigits + opt(exponentPart),\n            decimalDigits + opt(exponentPart)\n        ].join('|');\n        const float = `[+-]?(?:${unsignedDecimalLiteral})`;\n        return new RegExp(`^(${float})(.*)$`);\n    })();\n    const isUnit = (unit, accepted) => exists(accepted, (acc) => exists(units[acc], (check) => unit === check));\n    const parse = (input, accepted) => {\n        const match = Optional.from(pattern.exec(input));\n        return match.bind((array) => {\n            const value = Number(array[1]);\n            const unitRaw = array[2];\n            if (isUnit(unitRaw, accepted)) {\n                return Optional.some({\n                    value,\n                    unit: unitRaw\n                });\n            }\n            else {\n                return Optional.none();\n            }\n        });\n    };\n    const normalise = (input, accepted) => parse(input, accepted).map(({ value, unit }) => value + unit);\n\n    const get$4 = (_win) => {\n        const win = _win === undefined ? window : _win;\n        if (detect$1().browser.isFirefox()) {\n            // TINY-7984: Firefox 91 is returning incorrect values for visualViewport.pageTop, so disable it for now\n            return Optional.none();\n        }\n        else {\n            return Optional.from(win.visualViewport);\n        }\n    };\n    const bounds$1 = (x, y, width, height) => ({\n        x,\n        y,\n        width,\n        height,\n        right: x + width,\n        bottom: y + height\n    });\n    const getBounds$1 = (_win) => {\n        const win = _win === undefined ? window : _win;\n        const doc = win.document;\n        const scroll = get$b(SugarElement.fromDom(doc));\n        return get$4(win).fold(() => {\n            const html = win.document.documentElement;\n            // Don't use window.innerWidth/innerHeight here, as we don't want to include scrollbars\n            // since the right/bottom position is based on the edge of the scrollbar not the window\n            const width = html.clientWidth;\n            const height = html.clientHeight;\n            return bounds$1(scroll.left, scroll.top, width, height);\n        }, (visualViewport) => \n        // iOS doesn't update the pageTop/pageLeft when element.scrollIntoView() is called, so we need to fallback to the\n        // scroll position which will always be less than the page top/left values when page top/left are accurate/correct.\n        bounds$1(Math.max(visualViewport.pageLeft, scroll.left), Math.max(visualViewport.pageTop, scroll.top), visualViewport.width, visualViewport.height));\n    };\n\n    const walkUp = (navigation, doc) => {\n        const frame = navigation.view(doc);\n        return frame.fold(constant$1([]), (f) => {\n            const parent = navigation.owner(f);\n            const rest = walkUp(navigation, parent);\n            return [f].concat(rest);\n        });\n    };\n    // TODO: Why is this an option if it is always some?\n    const pathTo = (element, navigation) => {\n        const d = navigation.owner(element);\n        const paths = walkUp(navigation, d);\n        return Optional.some(paths);\n    };\n\n    const view = (doc) => {\n        var _a;\n        // Only walk up to the document this script is defined in.\n        // This prevents walking up to the parent window when the editor is in an iframe.\n        const element = doc.dom === document ? Optional.none() : Optional.from((_a = doc.dom.defaultView) === null || _a === void 0 ? void 0 : _a.frameElement);\n        return element.map(SugarElement.fromDom);\n    };\n    const owner$3 = (element) => owner$4(element);\n\n    var Navigation = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        view: view,\n        owner: owner$3\n    });\n\n    const find$2 = (element) => {\n        const doc = getDocument();\n        const scroll = get$b(doc);\n        // Get the path of iframe elements to this element.\n        const path = pathTo(element, Navigation);\n        return path.fold(curry(absolute$3, element), (frames) => {\n            const offset = viewport$1(element);\n            const r = foldr(frames, (b, a) => {\n                const loc = viewport$1(a);\n                return {\n                    left: b.left + loc.left,\n                    top: b.top + loc.top\n                };\n            }, { left: 0, top: 0 });\n            return SugarPosition(r.left + offset.left + scroll.left, r.top + offset.top + scroll.top);\n        });\n    };\n\n    const pointed = (point, width, height) => ({\n        point,\n        width,\n        height\n    });\n    const rect = (x, y, width, height) => ({\n        x,\n        y,\n        width,\n        height\n    });\n    const bounds = (x, y, width, height) => ({\n        x,\n        y,\n        width,\n        height,\n        right: x + width,\n        bottom: y + height\n    });\n    const box$1 = (element) => {\n        const xy = absolute$3(element);\n        const w = getOuter(element);\n        const h = getOuter$1(element);\n        return bounds(xy.left, xy.top, w, h);\n    };\n    // NOTE: We used to use AriaFocus.preserve here, but there is no reason to do that now that\n    // we are not changing the visibility of the element. Hopefully (2015-09-29).\n    const absolute$2 = (element) => {\n        const position = find$2(element);\n        const width = getOuter(element);\n        const height = getOuter$1(element);\n        return bounds(position.left, position.top, width, height);\n    };\n    const constrain = (original, constraint) => {\n        const left = Math.max(original.x, constraint.x);\n        const top = Math.max(original.y, constraint.y);\n        const right = Math.min(original.right, constraint.right);\n        const bottom = Math.min(original.bottom, constraint.bottom);\n        const width = right - left;\n        const height = bottom - top;\n        return bounds(left, top, width, height);\n    };\n    const constrainByMany = (original, constraints) => {\n        return foldl(constraints, (acc, c) => constrain(acc, c), original);\n    };\n    const win = () => getBounds$1(window);\n\n    const isSource = (component, simulatedEvent) => eq(component.element, simulatedEvent.event.target);\n\n    const getOffsetParent = (element) => {\n        // Firefox sets the offsetParent to the body when fixed instead of null like\n        // all other browsers. So we need to check if the element is fixed and if so then\n        // disregard the elements offsetParent.\n        const isFixed = is$1(getRaw(element, 'position'), 'fixed');\n        const offsetParent$1 = isFixed ? Optional.none() : offsetParent(element);\n        return offsetParent$1.orThunk(() => {\n            const marker = SugarElement.fromTag('span');\n            // PERFORMANCE: Append the marker to the parent element, as adding it before the current element will\n            // trigger the styles to be recalculated which is a little costly (particularly in scroll/resize events)\n            return parent(element).bind((parent) => {\n                append$2(parent, marker);\n                const offsetParent$1 = offsetParent(marker);\n                remove$7(marker);\n                return offsetParent$1;\n            });\n        });\n    };\n    /*\n     * This allows the absolute coordinates to be obtained by adding the\n     * origin to the offset coordinates and not needing to know scroll.\n     */\n    const getOrigin = (element) => getOffsetParent(element).map(absolute$3).getOrThunk(() => SugarPosition(0, 0));\n\n    const describedBy = (describedElement, describeElement) => {\n        const describeId = Optional.from(get$g(describedElement, 'id'))\n            .getOrThunk(() => {\n            const id = generate$6('aria');\n            set$9(describeElement, 'id', id);\n            return id;\n        });\n        set$9(describedElement, 'aria-describedby', describeId);\n    };\n    const remove$1 = (describedElement) => {\n        remove$8(describedElement, 'aria-describedby');\n    };\n\n    var SimpleResultType;\n    (function (SimpleResultType) {\n        SimpleResultType[SimpleResultType[\"Error\"] = 0] = \"Error\";\n        SimpleResultType[SimpleResultType[\"Value\"] = 1] = \"Value\";\n    })(SimpleResultType || (SimpleResultType = {}));\n    const fold$1 = (res, onError, onValue) => res.stype === SimpleResultType.Error ? onError(res.serror) : onValue(res.svalue);\n    const partition$1 = (results) => {\n        const values = [];\n        const errors = [];\n        each$1(results, (obj) => {\n            fold$1(obj, (err) => errors.push(err), (val) => values.push(val));\n        });\n        return { values, errors };\n    };\n    const mapError = (res, f) => {\n        if (res.stype === SimpleResultType.Error) {\n            return { stype: SimpleResultType.Error, serror: f(res.serror) };\n        }\n        else {\n            return res;\n        }\n    };\n    const map = (res, f) => {\n        if (res.stype === SimpleResultType.Value) {\n            return { stype: SimpleResultType.Value, svalue: f(res.svalue) };\n        }\n        else {\n            return res;\n        }\n    };\n    const bind = (res, f) => {\n        if (res.stype === SimpleResultType.Value) {\n            return f(res.svalue);\n        }\n        else {\n            return res;\n        }\n    };\n    const bindError = (res, f) => {\n        if (res.stype === SimpleResultType.Error) {\n            return f(res.serror);\n        }\n        else {\n            return res;\n        }\n    };\n    const svalue = (v) => ({ stype: SimpleResultType.Value, svalue: v });\n    const serror = (e) => ({ stype: SimpleResultType.Error, serror: e });\n    const toResult$1 = (res) => fold$1(res, Result.error, Result.value);\n    const fromResult = (res) => res.fold(serror, svalue);\n    const SimpleResult = {\n        fromResult,\n        toResult: toResult$1,\n        svalue,\n        partition: partition$1,\n        serror,\n        bind,\n        bindError,\n        map,\n        mapError,\n        fold: fold$1\n    };\n\n    const formatObj = (input) => {\n        return isObject(input) && keys(input).length > 100 ? ' removed due to size' : JSON.stringify(input, null, 2);\n    };\n    const formatErrors = (errors) => {\n        const es = errors.length > 10 ? errors.slice(0, 10).concat([\n            {\n                path: [],\n                getErrorInfo: constant$1('... (only showing first ten failures)')\n            }\n        ]) : errors;\n        // TODO: Work out a better split between PrettyPrinter and SchemaError\n        return map$2(es, (e) => {\n            return 'Failed path: (' + e.path.join(' > ') + ')\\n' + e.getErrorInfo();\n        });\n    };\n\n    const nu$7 = (path, getErrorInfo) => {\n        return SimpleResult.serror([{\n                path,\n                // This is lazy so that it isn't calculated unnecessarily\n                getErrorInfo\n            }]);\n    };\n    const missingRequired = (path, key, obj) => nu$7(path, () => 'Could not find valid *required* value for \"' + key + '\" in ' + formatObj(obj));\n    const missingKey = (path, key) => nu$7(path, () => 'Choice schema did not contain choice key: \"' + key + '\"');\n    const missingBranch = (path, branches, branch) => nu$7(path, () => 'The chosen schema: \"' + branch + '\" did not exist in branches: ' + formatObj(branches));\n    const unsupportedFields = (path, unsupported) => nu$7(path, () => 'There are unsupported fields: [' + unsupported.join(', ') + '] specified');\n    const custom = (path, err) => nu$7(path, constant$1(err));\n\n    const value$1 = (validator) => {\n        const extract = (path, val) => {\n            return SimpleResult.bindError(validator(val), (err) => custom(path, err));\n        };\n        const toString = constant$1('val');\n        return {\n            extract,\n            toString\n        };\n    };\n    const anyValue$1 = value$1(SimpleResult.svalue);\n\n    const anyValue = constant$1(anyValue$1);\n    const typedValue = (validator, expectedType) => value$1((a) => {\n        const actualType = typeof a;\n        return validator(a) ? SimpleResult.svalue(a) : SimpleResult.serror(`Expected type: ${expectedType} but got: ${actualType}`);\n    });\n    const number = typedValue(isNumber, 'number');\n    const string = typedValue(isString, 'string');\n    const boolean = typedValue(isBoolean, 'boolean');\n    const functionProcessor = typedValue(isFunction, 'function');\n    // Test if a value can be copied by the structured clone algorithm and hence sendable via postMessage\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // from https://stackoverflow.com/a/32673910/7377237 with adjustments for typescript\n    const isPostMessageable = (val) => {\n        if (Object(val) !== val) { // Primitive value\n            return true;\n        }\n        switch ({}.toString.call(val).slice(8, -1)) { // Class\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n            case 'Date':\n            case 'RegExp':\n            case 'Blob':\n            case 'FileList':\n            case 'ImageData':\n            case 'ImageBitmap':\n            case 'ArrayBuffer':\n                return true;\n            case 'Array':\n            case 'Object':\n                return Object.keys(val).every((prop) => isPostMessageable(val[prop]));\n            default:\n                return false;\n        }\n    };\n    const postMessageable = value$1((a) => {\n        if (isPostMessageable(a)) {\n            return SimpleResult.svalue(a);\n        }\n        else {\n            return SimpleResult.serror('Expected value to be acceptable for sending via postMessage');\n        }\n    });\n\n    const required$2 = () => ({ tag: \"required\" /* FieldPresenceTag.Required */, process: {} });\n    const defaultedThunk = (fallbackThunk) => ({ tag: \"defaultedThunk\" /* FieldPresenceTag.DefaultedThunk */, process: fallbackThunk });\n    const defaulted$1 = (fallback) => defaultedThunk(constant$1(fallback));\n    const asOption = () => ({ tag: \"option\" /* FieldPresenceTag.Option */, process: {} });\n    const mergeWithThunk = (baseThunk) => ({ tag: \"mergeWithThunk\" /* FieldPresenceTag.MergeWithThunk */, process: baseThunk });\n    const mergeWith = (base) => mergeWithThunk(constant$1(base));\n\n    const field$2 = (key, newKey, presence, prop) => ({ tag: \"field\" /* FieldTag.Field */, key, newKey, presence, prop });\n    const customField$1 = (newKey, instantiator) => ({ tag: \"custom\" /* FieldTag.CustomField */, newKey, instantiator });\n    const fold = (value, ifField, ifCustom) => {\n        switch (value.tag) {\n            case \"field\" /* FieldTag.Field */:\n                return ifField(value.key, value.newKey, value.presence, value.prop);\n            case \"custom\" /* FieldTag.CustomField */:\n                return ifCustom(value.newKey, value.instantiator);\n        }\n    };\n\n    const mergeValues$1 = (values, base) => values.length > 0 ? SimpleResult.svalue(deepMerge(base, merge$1.apply(undefined, values))) : SimpleResult.svalue(base);\n    const mergeErrors$1 = (errors) => compose(SimpleResult.serror, flatten)(errors);\n    const consolidateObj = (objects, base) => {\n        const partition = SimpleResult.partition(objects);\n        return partition.errors.length > 0 ? mergeErrors$1(partition.errors) : mergeValues$1(partition.values, base);\n    };\n    const consolidateArr = (objects) => {\n        const partitions = SimpleResult.partition(objects);\n        return partitions.errors.length > 0 ? mergeErrors$1(partitions.errors) : SimpleResult.svalue(partitions.values);\n    };\n    const ResultCombine = {\n        consolidateObj,\n        consolidateArr\n    };\n\n    const requiredAccess = (path, obj, key, bundle) => \n    // In required mode, if it is undefined, it is an error.\n    get$h(obj, key).fold(() => missingRequired(path, key, obj), bundle);\n    const fallbackAccess = (obj, key, fallback, bundle) => {\n        const v = get$h(obj, key).getOrThunk(() => fallback(obj));\n        return bundle(v);\n    };\n    const optionAccess = (obj, key, bundle) => bundle(get$h(obj, key));\n    const optionDefaultedAccess = (obj, key, fallback, bundle) => {\n        const opt = get$h(obj, key).map((val) => val === true ? fallback(obj) : val);\n        return bundle(opt);\n    };\n    const extractField = (field, path, obj, key, prop) => {\n        const bundle = (av) => prop.extract(path.concat([key]), av);\n        const bundleAsOption = (optValue) => optValue.fold(() => SimpleResult.svalue(Optional.none()), (ov) => {\n            const result = prop.extract(path.concat([key]), ov);\n            return SimpleResult.map(result, Optional.some);\n        });\n        switch (field.tag) {\n            case \"required\" /* FieldPresenceTag.Required */:\n                return requiredAccess(path, obj, key, bundle);\n            case \"defaultedThunk\" /* FieldPresenceTag.DefaultedThunk */:\n                return fallbackAccess(obj, key, field.process, bundle);\n            case \"option\" /* FieldPresenceTag.Option */:\n                return optionAccess(obj, key, bundleAsOption);\n            case \"defaultedOptionThunk\" /* FieldPresenceTag.DefaultedOptionThunk */:\n                return optionDefaultedAccess(obj, key, field.process, bundleAsOption);\n            case \"mergeWithThunk\" /* FieldPresenceTag.MergeWithThunk */: {\n                return fallbackAccess(obj, key, constant$1({}), (v) => {\n                    const result = deepMerge(field.process(obj), v);\n                    return bundle(result);\n                });\n            }\n        }\n    };\n    const extractFields = (path, obj, fields) => {\n        const success = {};\n        const errors = [];\n        // PERFORMANCE: We use a for loop here instead of Arr.each as this is a hot code path\n        for (const field of fields) {\n            fold(field, (key, newKey, presence, prop) => {\n                const result = extractField(presence, path, obj, key, prop);\n                SimpleResult.fold(result, (err) => {\n                    errors.push(...err);\n                }, (res) => {\n                    success[newKey] = res;\n                });\n            }, (newKey, instantiator) => {\n                success[newKey] = instantiator(obj);\n            });\n        }\n        return errors.length > 0 ? SimpleResult.serror(errors) : SimpleResult.svalue(success);\n    };\n    const valueThunk = (getDelegate) => {\n        const extract = (path, val) => getDelegate().extract(path, val);\n        const toString = () => getDelegate().toString();\n        return {\n            extract,\n            toString\n        };\n    };\n    // This is because Obj.keys can return things where the key is set to undefined.\n    const getSetKeys = (obj) => keys(filter$1(obj, isNonNullable));\n    const objOfOnly = (fields) => {\n        const delegate = objOf(fields);\n        const fieldNames = foldr(fields, (acc, value) => {\n            return fold(value, (key) => deepMerge(acc, { [key]: true }), constant$1(acc));\n        }, {});\n        const extract = (path, o) => {\n            const keys = isBoolean(o) ? [] : getSetKeys(o);\n            const extra = filter$2(keys, (k) => !hasNonNullableKey(fieldNames, k));\n            return extra.length === 0 ? delegate.extract(path, o) : unsupportedFields(path, extra);\n        };\n        return {\n            extract,\n            toString: delegate.toString\n        };\n    };\n    const objOf = (values) => {\n        const extract = (path, o) => extractFields(path, o, values);\n        const toString = () => {\n            const fieldStrings = map$2(values, (value) => fold(value, (key, _okey, _presence, prop) => key + ' -> ' + prop.toString(), (newKey, _instantiator) => 'state(' + newKey + ')'));\n            return 'obj{\\n' + fieldStrings.join('\\n') + '}';\n        };\n        return {\n            extract,\n            toString\n        };\n    };\n    const arrOf = (prop) => {\n        const extract = (path, array) => {\n            const results = map$2(array, (a, i) => prop.extract(path.concat(['[' + i + ']']), a));\n            return ResultCombine.consolidateArr(results);\n        };\n        const toString = () => 'array(' + prop.toString() + ')';\n        return {\n            extract,\n            toString\n        };\n    };\n    const oneOf = (props, rawF) => {\n        // If f is not supplied, then use identity.\n        const f = rawF !== undefined ? rawF : identity;\n        const extract = (path, val) => {\n            const errors = [];\n            // Return on first match\n            for (const prop of props) {\n                const res = prop.extract(path, val);\n                if (res.stype === SimpleResultType.Value) {\n                    return {\n                        stype: SimpleResultType.Value,\n                        svalue: f(res.svalue)\n                    };\n                }\n                errors.push(res);\n            }\n            // All failed, return errors\n            return ResultCombine.consolidateArr(errors);\n        };\n        const toString = () => 'oneOf(' + map$2(props, (prop) => prop.toString()).join(', ') + ')';\n        return {\n            extract,\n            toString\n        };\n    };\n    const setOf$1 = (validator, prop) => {\n        const validateKeys = (path, keys) => arrOf(value$1(validator)).extract(path, keys);\n        const extract = (path, o) => {\n            //\n            const keys$1 = keys(o);\n            const validatedKeys = validateKeys(path, keys$1);\n            return SimpleResult.bind(validatedKeys, (validKeys) => {\n                const schema = map$2(validKeys, (vk) => {\n                    return field$2(vk, vk, required$2(), prop);\n                });\n                return objOf(schema).extract(path, o);\n            });\n        };\n        const toString = () => 'setOf(' + prop.toString() + ')';\n        return {\n            extract,\n            toString\n        };\n    };\n    const thunk = (_desc, processor) => {\n        const getP = cached(processor);\n        const extract = (path, val) => getP().extract(path, val);\n        const toString = () => getP().toString();\n        return {\n            extract,\n            toString\n        };\n    };\n    const arrOfObj = compose(arrOf, objOf);\n\n    const chooseFrom = (path, input, branches, ch) => {\n        const fields = get$h(branches, ch);\n        return fields.fold(() => missingBranch(path, branches, ch), (vp) => vp.extract(path.concat(['branch: ' + ch]), input));\n    };\n    // The purpose of choose is to have a key which picks which of the schemas to follow.\n    // The key will index into the object of schemas: branches\n    const choose$2 = (key, branches) => {\n        const extract = (path, input) => {\n            const choice = get$h(input, key);\n            return choice.fold(() => missingKey(path, key), (chosen) => chooseFrom(path, input, branches, chosen));\n        };\n        const toString = () => 'chooseOn(' + key + '). Possible values: ' + keys(branches);\n        return {\n            extract,\n            toString\n        };\n    };\n\n    const arrOfVal = () => arrOf(anyValue$1);\n    const valueOf = (validator) => value$1((v) => validator(v).fold(SimpleResult.serror, SimpleResult.svalue));\n    const setOf = (validator, prop) => setOf$1((v) => SimpleResult.fromResult(validator(v)), prop);\n    const extractValue = (label, prop, obj) => {\n        const res = prop.extract([label], obj);\n        return SimpleResult.mapError(res, (errs) => ({ input: obj, errors: errs }));\n    };\n    const asRaw = (label, prop, obj) => SimpleResult.toResult(extractValue(label, prop, obj));\n    const getOrDie = (extraction) => {\n        return extraction.fold((errInfo) => {\n            // A readable version of the error.\n            throw new Error(formatError(errInfo));\n        }, identity);\n    };\n    const asRawOrDie$1 = (label, prop, obj) => getOrDie(asRaw(label, prop, obj));\n    const formatError = (errInfo) => {\n        return 'Errors: \\n' + formatErrors(errInfo.errors).join('\\n') +\n            '\\n\\nInput object: ' + formatObj(errInfo.input);\n    };\n    const choose$1 = (key, branches) => choose$2(key, map$1(branches, objOf));\n    const thunkOf = (desc, schema) => thunk(desc, schema);\n\n    const field$1 = field$2;\n    const customField = customField$1;\n    const validateEnum = (values) => valueOf((value) => contains$2(values, value) ?\n        Result.value(value) :\n        Result.error(`Unsupported value: \"${value}\", choose one of \"${values.join(', ')}\".`));\n    const required$1 = (key) => field$1(key, key, required$2(), anyValue());\n    const requiredOf = (key, schema) => field$1(key, key, required$2(), schema);\n    const requiredNumber = (key) => requiredOf(key, number);\n    const requiredString = (key) => requiredOf(key, string);\n    const requiredStringEnum = (key, values) => field$1(key, key, required$2(), validateEnum(values));\n    const requiredFunction = (key) => requiredOf(key, functionProcessor);\n    const forbid = (key, message) => field$1(key, key, asOption(), value$1((_v) => SimpleResult.serror('The field: ' + key + ' is forbidden. ' + message)));\n    const requiredObjOf = (key, objSchema) => field$1(key, key, required$2(), objOf(objSchema));\n    const requiredArrayOfObj = (key, objFields) => field$1(key, key, required$2(), arrOfObj(objFields));\n    const requiredArrayOf = (key, schema) => field$1(key, key, required$2(), arrOf(schema));\n    const option$3 = (key) => field$1(key, key, asOption(), anyValue());\n    const optionOf = (key, schema) => field$1(key, key, asOption(), schema);\n    const optionNumber = (key) => optionOf(key, number);\n    const optionString = (key) => optionOf(key, string);\n    const optionStringEnum = (key, values) => optionOf(key, validateEnum(values));\n    const optionFunction = (key) => optionOf(key, functionProcessor);\n    const optionArrayOf = (key, schema) => optionOf(key, arrOf(schema));\n    const optionObjOf = (key, objSchema) => optionOf(key, objOf(objSchema));\n    const optionObjOfOnly = (key, objSchema) => optionOf(key, objOfOnly(objSchema));\n    const defaulted = (key, fallback) => field$1(key, key, defaulted$1(fallback), anyValue());\n    const defaultedOf = (key, fallback, schema) => field$1(key, key, defaulted$1(fallback), schema);\n    const defaultedNumber = (key, fallback) => defaultedOf(key, fallback, number);\n    const defaultedString = (key, fallback) => defaultedOf(key, fallback, string);\n    const defaultedStringEnum = (key, fallback, values) => defaultedOf(key, fallback, validateEnum(values));\n    const defaultedBoolean = (key, fallback) => defaultedOf(key, fallback, boolean);\n    const defaultedFunction = (key, fallback) => defaultedOf(key, fallback, functionProcessor);\n    const defaultedPostMsg = (key, fallback) => defaultedOf(key, fallback, postMessageable);\n    const defaultedArrayOf = (key, fallback, schema) => defaultedOf(key, fallback, arrOf(schema));\n    const defaultedObjOf = (key, fallback, objSchema) => defaultedOf(key, fallback, objOf(objSchema));\n\n    const exclude$1 = (obj, fields) => {\n        const r = {};\n        each(obj, (v, k) => {\n            if (!contains$2(fields, k)) {\n                r[k] = v;\n            }\n        });\n        return r;\n    };\n\n    const wrap$1 = (key, value) => ({ [key]: value });\n    const wrapAll$1 = (keyvalues) => {\n        const r = {};\n        each$1(keyvalues, (kv) => {\n            r[kv.key] = kv.value;\n        });\n        return r;\n    };\n\n    const exclude = (obj, fields) => exclude$1(obj, fields);\n    const wrap = (key, value) => wrap$1(key, value);\n    const wrapAll = (keyvalues) => wrapAll$1(keyvalues);\n    const mergeValues = (values, base) => {\n        return values.length === 0 ? Result.value(base) : Result.value(deepMerge(base, merge$1.apply(undefined, values))\n        // Merger.deepMerge.apply(undefined, [ base ].concat(values))\n        );\n    };\n    const mergeErrors = (errors) => Result.error(flatten(errors));\n    const consolidate = (objs, base) => {\n        const partitions = partition$2(objs);\n        return partitions.errors.length > 0 ? mergeErrors(partitions.errors) : mergeValues(partitions.values, base);\n    };\n\n    const constant = constant$1;\n    const touchstart = constant('touchstart');\n    const touchmove = constant('touchmove');\n    const touchend = constant('touchend');\n    const touchcancel = constant('touchcancel');\n    const mousedown = constant('mousedown');\n    const mousemove = constant('mousemove');\n    const mouseout = constant('mouseout');\n    const mouseup = constant('mouseup');\n    const mouseover = constant('mouseover');\n    // Not really a native event as it has to be simulated\n    const focusin = constant('focusin');\n    const focusout = constant('focusout');\n    const keydown = constant('keydown');\n    const keyup = constant('keyup');\n    const input = constant('input');\n    const change = constant('change');\n    const click = constant('click');\n    const transitioncancel = constant('transitioncancel');\n    const transitionend = constant('transitionend');\n    const transitionstart = constant('transitionstart');\n    const selectstart = constant('selectstart');\n\n    const prefixName = (name) => constant$1('alloy.' + name);\n    const alloy = { tap: prefixName('tap') };\n    // This is used to pass focus to a component. A component might interpret\n    // this event and pass the DOM focus to one of its children, depending on its\n    // focus model.\n    const focus$3 = prefixName('focus');\n    // This event is fired a small amount of time after the blur has fired. This\n    // allows the handler to know what was the focused element, and what is now.\n    const postBlur = prefixName('blur.post');\n    // This event is fired a small amount of time after the paste event has fired.\n    const postPaste = prefixName('paste.post');\n    // This event is fired by gui.broadcast*. It is defined by 'receivers'\n    const receive = prefixName('receive');\n    // This event is for executing buttons and things that have (mostly) enter actions\n    const execute$5 = prefixName('execute');\n    // This event is used by a menu to tell an item to focus itself because it has been\n    // selected. This might automatically focus inside the item, it might focus the outer\n    // part of the widget etc.\n    const focusItem = prefixName('focus.item');\n    // This event represents a touchstart and touchend on the same location, and fires on\n    // the touchend\n    const tap = alloy.tap;\n    // This event represents a longpress on the same location\n    const longpress = prefixName('longpress');\n    // Fire by a child element to tell the outer element to close\n    const sandboxClose = prefixName('sandbox.close');\n    // Tell the typeahead to cancel any pending fetches (that haven't already executed)\n    const typeaheadCancel = prefixName('typeahead.cancel');\n    // Fired when adding to a world\n    const systemInit = prefixName('system.init');\n    // Fired when a touchmove on the document happens\n    const documentTouchmove = prefixName('system.touchmove');\n    // Fired when a touchend on the document happens\n    const documentTouchend = prefixName('system.touchend');\n    // Fired when the window scrolls\n    const windowScroll = prefixName('system.scroll');\n    // Fired when the window resizes\n    const windowResize = prefixName('system.resize');\n    const attachedToDom = prefixName('system.attached');\n    const detachedFromDom = prefixName('system.detached');\n    const dismissRequested = prefixName('system.dismissRequested');\n    const repositionRequested = prefixName('system.repositionRequested');\n    const focusShifted = prefixName('focusmanager.shifted');\n    // Fired when slots are made hidden/shown\n    const slotVisibility = prefixName('slotcontainer.visibility');\n    // Used for containers outside the mothership that scroll. Used by docking.\n    const externalElementScroll = prefixName('system.external.element.scroll');\n    const changeTab = prefixName('change.tab');\n    const dismissTab = prefixName('dismiss.tab');\n    const highlight$1 = prefixName('highlight');\n    const dehighlight$1 = prefixName('dehighlight');\n\n    const element = (elem) => getHtml(elem);\n\n    const unknown = 'unknown';\n    /*\n      typescipt qwerk:\n      const debugging: boolean = true;\n      if (boolean === false) {  -> this throws a type error! // TS2365:Operator '===' cannot be applied to types 'false' and 'true'\n        https://www.typescriptlang.org/play/#src=const%20foo%3A%20boolean%20%3D%20true%3B%0D%0A%0D%0Aif%20(foo%20%3D%3D%3D%20false)%20%7B%0D%0A%20%20%20%20%0D%0A%7D\n      }\n    */\n    const debugging = true;\n    var EventConfiguration;\n    (function (EventConfiguration) {\n        EventConfiguration[EventConfiguration[\"STOP\"] = 0] = \"STOP\";\n        EventConfiguration[EventConfiguration[\"NORMAL\"] = 1] = \"NORMAL\";\n        EventConfiguration[EventConfiguration[\"LOGGING\"] = 2] = \"LOGGING\";\n    })(EventConfiguration || (EventConfiguration = {}));\n    const eventConfig = Cell({});\n    const makeEventLogger = (eventName, initialTarget) => {\n        const sequence = [];\n        const startTime = new Date().getTime();\n        return {\n            logEventCut: (_name, target, purpose) => {\n                sequence.push({ outcome: 'cut', target, purpose });\n            },\n            logEventStopped: (_name, target, purpose) => {\n                sequence.push({ outcome: 'stopped', target, purpose });\n            },\n            logNoParent: (_name, target, purpose) => {\n                sequence.push({ outcome: 'no-parent', target, purpose });\n            },\n            logEventNoHandlers: (_name, target) => {\n                sequence.push({ outcome: 'no-handlers-left', target });\n            },\n            logEventResponse: (_name, target, purpose) => {\n                sequence.push({ outcome: 'response', purpose, target });\n            },\n            write: () => {\n                const finishTime = new Date().getTime();\n                if (contains$2(['mousemove', 'mouseover', 'mouseout', systemInit()], eventName)) {\n                    return;\n                }\n                // eslint-disable-next-line no-console\n                console.log(eventName, {\n                    event: eventName,\n                    time: finishTime - startTime,\n                    target: initialTarget.dom,\n                    sequence: map$2(sequence, (s) => {\n                        if (!contains$2(['cut', 'stopped', 'response'], s.outcome)) {\n                            return s.outcome;\n                        }\n                        else {\n                            return '{' + s.purpose + '} ' + s.outcome + ' at (' + element(s.target) + ')';\n                        }\n                    })\n                });\n            }\n        };\n    };\n    const processEvent = (eventName, initialTarget, f) => {\n        const status = get$h(eventConfig.get(), eventName).orThunk(() => {\n            const patterns = keys(eventConfig.get());\n            return findMap(patterns, (p) => eventName.indexOf(p) > -1 ? Optional.some(eventConfig.get()[p]) : Optional.none());\n        }).getOr(EventConfiguration.NORMAL);\n        switch (status) {\n            case EventConfiguration.NORMAL:\n                return f(noLogger());\n            case EventConfiguration.LOGGING: {\n                const logger = makeEventLogger(eventName, initialTarget);\n                const output = f(logger);\n                logger.write();\n                return output;\n            }\n            case EventConfiguration.STOP:\n                // Does not even run the function to trigger event and listen to handlers\n                return true;\n        }\n    };\n    // Ignore these files in the error stack\n    const path = [\n        'alloy/data/Fields',\n        'alloy/debugging/Debugging'\n    ];\n    const getTrace = () => {\n        if (debugging === false) {\n            return unknown;\n        }\n        const err = new Error();\n        if (err.stack !== undefined) {\n            const lines = err.stack.split('\\n');\n            return find$5(lines, (line) => line.indexOf('alloy') > 0 && !exists(path, (p) => line.indexOf(p) > -1)).getOr(unknown);\n        }\n        else {\n            return unknown;\n        }\n    };\n    const ignoreEvent = {\n        logEventCut: noop,\n        logEventStopped: noop,\n        logNoParent: noop,\n        logEventNoHandlers: noop,\n        logEventResponse: noop,\n        write: noop\n    };\n    const monitorEvent = (eventName, initialTarget, f) => processEvent(eventName, initialTarget, f);\n    const noLogger = constant$1(ignoreEvent);\n\n    const menuFields = constant$1([\n        required$1('menu'),\n        required$1('selectedMenu')\n    ]);\n    const itemFields = constant$1([\n        required$1('item'),\n        required$1('selectedItem')\n    ]);\n    constant$1(objOf(itemFields().concat(menuFields())));\n    const itemSchema$3 = constant$1(objOf(itemFields()));\n\n    const _initSize = requiredObjOf('initSize', [\n        required$1('numColumns'),\n        required$1('numRows')\n    ]);\n    const itemMarkers = () => requiredOf('markers', itemSchema$3());\n    const tieredMenuMarkers = () => requiredObjOf('markers', [\n        required$1('backgroundMenu')\n    ].concat(menuFields()).concat(itemFields()));\n    const markers$1 = (required) => requiredObjOf('markers', map$2(required, required$1));\n    const onPresenceHandler = (label, fieldName, presence) => {\n        // We care about where the handler was declared (in terms of which schema)\n        getTrace();\n        return field$1(fieldName, fieldName, presence, \n        // Apply some wrapping to their supplied function\n        valueOf((f) => Result.value((...args) => {\n            return f.apply(undefined, args);\n        })));\n    };\n    const onHandler = (fieldName) => onPresenceHandler('onHandler', fieldName, defaulted$1(noop));\n    const onKeyboardHandler = (fieldName) => onPresenceHandler('onKeyboardHandler', fieldName, defaulted$1(Optional.none));\n    const onStrictHandler = (fieldName) => onPresenceHandler('onHandler', fieldName, required$2());\n    const onStrictKeyboardHandler = (fieldName) => onPresenceHandler('onKeyboardHandler', fieldName, required$2());\n    const output$1 = (name, value) => customField(name, constant$1(value));\n    const snapshot = (name) => customField(name, identity);\n    const initSize = constant$1(_initSize);\n\n    const markAsBehaviourApi = (f, apiName, apiFunction) => {\n        const delegate = apiFunction.toString();\n        const endIndex = delegate.indexOf(')') + 1;\n        const openBracketIndex = delegate.indexOf('(');\n        const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n        f.toFunctionAnnotation = () => ({\n            name: apiName,\n            parameters: cleanParameters(parameters.slice(0, 1).concat(parameters.slice(3)))\n        });\n        return f;\n    };\n    // Remove any comment (/*) at end of parameter names\n    const cleanParameters = (parameters) => map$2(parameters, (p) => endsWith(p, '/*') ? p.substring(0, p.length - '/*'.length) : p);\n    const markAsExtraApi = (f, extraName) => {\n        const delegate = f.toString();\n        const endIndex = delegate.indexOf(')') + 1;\n        const openBracketIndex = delegate.indexOf('(');\n        const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n        f.toFunctionAnnotation = () => ({\n            name: extraName,\n            parameters: cleanParameters(parameters)\n        });\n        return f;\n    };\n    const markAsSketchApi = (f, apiFunction) => {\n        const delegate = apiFunction.toString();\n        const endIndex = delegate.indexOf(')') + 1;\n        const openBracketIndex = delegate.indexOf('(');\n        const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n        f.toFunctionAnnotation = () => ({\n            name: 'OVERRIDE',\n            parameters: cleanParameters(parameters.slice(1))\n        });\n        return f;\n    };\n\n    const DelayedFunction = (fun, delay) => {\n        let ref = null;\n        const schedule = (...args) => {\n            ref = setTimeout(() => {\n                fun.apply(null, args);\n                ref = null;\n            }, delay);\n        };\n        const cancel = () => {\n            if (ref !== null) {\n                clearTimeout(ref);\n                ref = null;\n            }\n        };\n        return {\n            cancel,\n            schedule\n        };\n    };\n\n    const SIGNIFICANT_MOVE = 5;\n    const LONGPRESS_DELAY = 400;\n    const getTouch = (event) => {\n        const raw = event.raw;\n        if (raw.touches === undefined || raw.touches.length !== 1) {\n            return Optional.none();\n        }\n        return Optional.some(raw.touches[0]);\n    };\n    // Check to see if the touch has changed a *significant* amount\n    const isFarEnough = (touch, data) => {\n        const distX = Math.abs(touch.clientX - data.x);\n        const distY = Math.abs(touch.clientY - data.y);\n        return distX > SIGNIFICANT_MOVE || distY > SIGNIFICANT_MOVE;\n    };\n    const monitor = (settings) => {\n        /* A tap event is a combination of touchstart and touchend on the same element\n         * without a *significant* touchmove in between.\n         */\n        const startData = value$2();\n        const longpressFired = Cell(false);\n        const longpress$1 = DelayedFunction((event) => {\n            settings.triggerEvent(longpress(), event);\n            longpressFired.set(true);\n        }, LONGPRESS_DELAY);\n        const handleTouchstart = (event) => {\n            getTouch(event).each((touch) => {\n                longpress$1.cancel();\n                const data = {\n                    x: touch.clientX,\n                    y: touch.clientY,\n                    target: event.target\n                };\n                longpress$1.schedule(event);\n                longpressFired.set(false);\n                startData.set(data);\n            });\n            return Optional.none();\n        };\n        const handleTouchmove = (event) => {\n            longpress$1.cancel();\n            getTouch(event).each((touch) => {\n                startData.on((data) => {\n                    if (isFarEnough(touch, data)) {\n                        startData.clear();\n                    }\n                });\n            });\n            return Optional.none();\n        };\n        const handleTouchend = (event) => {\n            longpress$1.cancel();\n            const isSame = (data) => eq(data.target, event.target);\n            return startData.get().filter(isSame).map((_data) => {\n                if (longpressFired.get()) {\n                    event.prevent();\n                    return false;\n                }\n                else {\n                    return settings.triggerEvent(tap(), event);\n                }\n            });\n        };\n        const handlers = wrapAll([\n            { key: touchstart(), value: handleTouchstart },\n            { key: touchmove(), value: handleTouchmove },\n            { key: touchend(), value: handleTouchend }\n        ]);\n        const fireIfReady = (event, type) => get$h(handlers, type).bind((handler) => handler(event));\n        return {\n            fireIfReady\n        };\n    };\n\n    var FocusInsideModes;\n    (function (FocusInsideModes) {\n        FocusInsideModes[\"OnFocusMode\"] = \"onFocus\";\n        FocusInsideModes[\"OnEnterOrSpaceMode\"] = \"onEnterOrSpace\";\n        FocusInsideModes[\"OnApiMode\"] = \"onApi\";\n    })(FocusInsideModes || (FocusInsideModes = {}));\n\n    const _placeholder = 'placeholder';\n    const adt$7 = Adt.generate([\n        { single: ['required', 'valueThunk'] },\n        { multiple: ['required', 'valueThunks'] }\n    ]);\n    const isSubstituted = (spec) => has$2(spec, 'uiType');\n    const subPlaceholder = (owner, detail, compSpec, placeholders) => {\n        if (owner.exists((o) => o !== compSpec.owner)) {\n            return adt$7.single(true, constant$1(compSpec));\n        }\n        // Ignore having to find something for the time being.\n        return get$h(placeholders, compSpec.name).fold(() => {\n            throw new Error('Unknown placeholder component: ' + compSpec.name + '\\nKnown: [' +\n                keys(placeholders) + ']\\nNamespace: ' + owner.getOr('none') + '\\nSpec: ' + JSON.stringify(compSpec, null, 2));\n        }, (newSpec) => \n        // Must return a single/multiple type\n        newSpec.replace());\n    };\n    const scan = (owner, detail, compSpec, placeholders) => {\n        if (isSubstituted(compSpec) && compSpec.uiType === _placeholder) {\n            return subPlaceholder(owner, detail, compSpec, placeholders);\n        }\n        else {\n            return adt$7.single(false, constant$1(compSpec));\n        }\n    };\n    const substitute = (owner, detail, compSpec, placeholders) => {\n        const base = scan(owner, detail, compSpec, placeholders);\n        return base.fold((req, valueThunk) => {\n            const value = isSubstituted(compSpec) ? valueThunk(detail, compSpec.config, compSpec.validated) : valueThunk(detail);\n            const childSpecs = get$h(value, 'components').getOr([]);\n            const substituted = bind$3(childSpecs, (c) => substitute(owner, detail, c, placeholders));\n            return [\n                {\n                    ...value,\n                    components: substituted\n                }\n            ];\n        }, (req, valuesThunk) => {\n            if (isSubstituted(compSpec)) {\n                const values = valuesThunk(detail, compSpec.config, compSpec.validated);\n                // Allow a preprocessing step for groups before returning the components\n                const preprocessor = compSpec.validated.preprocess.getOr(identity);\n                return preprocessor(values);\n            }\n            else {\n                return valuesThunk(detail);\n            }\n        });\n    };\n    const substituteAll = (owner, detail, components, placeholders) => bind$3(components, (c) => substitute(owner, detail, c, placeholders));\n    const oneReplace = (label, replacements) => {\n        let called = false;\n        const used = () => called;\n        const replace = () => {\n            if (called) {\n                throw new Error('Trying to use the same placeholder more than once: ' + label);\n            }\n            called = true;\n            return replacements;\n        };\n        const required = () => replacements.fold((req, _) => req, (req, _) => req);\n        return {\n            name: constant$1(label),\n            required,\n            used,\n            replace\n        };\n    };\n    const substitutePlaces = (owner, detail, components, placeholders) => {\n        const ps = map$1(placeholders, (ph, name) => oneReplace(name, ph));\n        const outcome = substituteAll(owner, detail, components, ps);\n        each(ps, (p) => {\n            if (p.used() === false && p.required()) {\n                throw new Error('Placeholder: ' + p.name() + ' was not found in components list\\nNamespace: ' + owner.getOr('none') + '\\nComponents: ' +\n                    JSON.stringify(detail.components, null, 2));\n            }\n        });\n        return outcome;\n    };\n    const single$2 = adt$7.single;\n    const multiple = adt$7.multiple;\n    const placeholder = constant$1(_placeholder);\n\n    const adt$6 = Adt.generate([\n        { required: ['data'] },\n        { external: ['data'] },\n        { optional: ['data'] },\n        { group: ['data'] }\n    ]);\n    const fFactory = defaulted('factory', { sketch: identity });\n    const fSchema = defaulted('schema', []);\n    const fName = required$1('name');\n    const fPname = field$1('pname', 'pname', defaultedThunk((typeSpec) => '<alloy.' + generate$6(typeSpec.name) + '>'), anyValue());\n    // Groups cannot choose their schema.\n    const fGroupSchema = customField('schema', () => [\n        option$3('preprocess')\n    ]);\n    const fDefaults = defaulted('defaults', constant$1({}));\n    const fOverrides = defaulted('overrides', constant$1({}));\n    const requiredSpec = objOf([\n        fFactory, fSchema, fName, fPname, fDefaults, fOverrides\n    ]);\n    const externalSpec = objOf([\n        fFactory, fSchema, fName, fDefaults, fOverrides\n    ]);\n    const optionalSpec = objOf([\n        fFactory, fSchema, fName, fPname, fDefaults, fOverrides\n    ]);\n    const groupSpec = objOf([\n        fFactory, fGroupSchema, fName,\n        required$1('unit'),\n        fPname, fDefaults, fOverrides\n    ]);\n    const asNamedPart = (part) => {\n        return part.fold(Optional.some, Optional.none, Optional.some, Optional.some);\n    };\n    const name$2 = (part) => {\n        const get = (data) => data.name;\n        return part.fold(get, get, get, get);\n    };\n    const asCommon = (part) => {\n        return part.fold(identity, identity, identity, identity);\n    };\n    const convert = (adtConstructor, partSchema) => (spec) => {\n        const data = asRawOrDie$1('Converting part type', partSchema, spec);\n        return adtConstructor(data);\n    };\n    const required = convert(adt$6.required, requiredSpec);\n    const external$1 = convert(adt$6.external, externalSpec);\n    const optional = convert(adt$6.optional, optionalSpec);\n    const group = convert(adt$6.group, groupSpec);\n    const original = constant$1('entirety');\n\n    var PartType = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        required: required,\n        external: external$1,\n        optional: optional,\n        group: group,\n        asNamedPart: asNamedPart,\n        name: name$2,\n        asCommon: asCommon,\n        original: original\n    });\n\n    const combine$2 = (detail, data, partSpec, partValidated) => \n    // Extremely confusing names and types :(\n    deepMerge(data.defaults(detail, partSpec, partValidated), partSpec, { uid: detail.partUids[data.name] }, data.overrides(detail, partSpec, partValidated));\n    const subs = (owner, detail, parts) => {\n        const internals = {};\n        const externals = {};\n        each$1(parts, (part) => {\n            part.fold(\n            // Internal\n            (data) => {\n                internals[data.pname] = single$2(true, (detail, partSpec, partValidated) => data.factory.sketch(combine$2(detail, data, partSpec, partValidated)));\n            }, \n            // External\n            (data) => {\n                const partSpec = detail.parts[data.name];\n                externals[data.name] = constant$1(data.factory.sketch(combine$2(detail, data, partSpec[original()]), partSpec) // This is missing partValidated\n                );\n                // no placeholders\n            }, \n            // Optional\n            (data) => {\n                internals[data.pname] = single$2(false, (detail, partSpec, partValidated) => data.factory.sketch(combine$2(detail, data, partSpec, partValidated)));\n            }, \n            // Group\n            (data) => {\n                internals[data.pname] = multiple(true, (detail, _partSpec, _partValidated) => {\n                    const units = detail[data.name];\n                    return map$2(units, (u) => \n                    // Group multiples do not take the uid because there is more than one.\n                    data.factory.sketch(deepMerge(data.defaults(detail, u, _partValidated), u, data.overrides(detail, u))));\n                });\n            });\n        });\n        return {\n            internals: constant$1(internals),\n            externals: constant$1(externals)\n        };\n    };\n\n    // TODO: Make more functional if performance isn't an issue.\n    const generate$5 = (owner, parts) => {\n        const r = {};\n        each$1(parts, (part) => {\n            asNamedPart(part).each((np) => {\n                const g = doGenerateOne(owner, np.pname);\n                r[np.name] = (config) => {\n                    const validated = asRawOrDie$1('Part: ' + np.name + ' in ' + owner, objOf(np.schema), config);\n                    return {\n                        ...g,\n                        config,\n                        validated\n                    };\n                };\n            });\n        });\n        return r;\n    };\n    // Does not have the config.\n    const doGenerateOne = (owner, pname) => ({\n        uiType: placeholder(),\n        owner,\n        name: pname\n    });\n    const generateOne$1 = (owner, pname, config) => ({\n        uiType: placeholder(),\n        owner,\n        name: pname,\n        config,\n        validated: {}\n    });\n    const schemas = (parts) => \n    // This actually has to change. It needs to return the schemas for things that will\n    // not appear in the components list, which is only externals\n    bind$3(parts, (part) => part.fold(Optional.none, Optional.some, Optional.none, Optional.none).map((data) => requiredObjOf(data.name, data.schema.concat([\n        snapshot(original())\n    ]))).toArray());\n    const names = (parts) => map$2(parts, name$2);\n    const substitutes = (owner, detail, parts) => subs(owner, detail, parts);\n    const components$1 = (owner, detail, internals) => substitutePlaces(Optional.some(owner), detail, detail.components, internals);\n    const getPart = (component, detail, partKey) => {\n        const uid = detail.partUids[partKey];\n        return component.getSystem().getByUid(uid).toOptional();\n    };\n    const getPartOrDie = (component, detail, partKey) => getPart(component, detail, partKey).getOrDie('Could not find part: ' + partKey);\n    const getParts = (component, detail, partKeys) => {\n        const r = {};\n        const uids = detail.partUids;\n        const system = component.getSystem();\n        each$1(partKeys, (pk) => {\n            r[pk] = constant$1(system.getByUid(uids[pk]));\n        });\n        return r;\n    };\n    const getAllParts = (component, detail) => {\n        const system = component.getSystem();\n        return map$1(detail.partUids, (pUid, _k) => constant$1(system.getByUid(pUid)));\n    };\n    const getAllPartNames = (detail) => keys(detail.partUids);\n    const getPartsOrDie = (component, detail, partKeys) => {\n        const r = {};\n        const uids = detail.partUids;\n        const system = component.getSystem();\n        each$1(partKeys, (pk) => {\n            r[pk] = constant$1(system.getByUid(uids[pk]).getOrDie());\n        });\n        return r;\n    };\n    const defaultUids = (baseUid, partTypes) => {\n        const partNames = names(partTypes);\n        return wrapAll(map$2(partNames, (pn) => ({ key: pn, value: baseUid + '-' + pn })));\n    };\n    const defaultUidsSchema = (partTypes) => field$1('partUids', 'partUids', mergeWithThunk((spec) => defaultUids(spec.uid, partTypes)), anyValue());\n\n    var AlloyParts = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        generate: generate$5,\n        generateOne: generateOne$1,\n        schemas: schemas,\n        names: names,\n        substitutes: substitutes,\n        components: components$1,\n        defaultUids: defaultUids,\n        defaultUidsSchema: defaultUidsSchema,\n        getAllParts: getAllParts,\n        getAllPartNames: getAllPartNames,\n        getPart: getPart,\n        getPartOrDie: getPartOrDie,\n        getParts: getParts,\n        getPartsOrDie: getPartsOrDie\n    });\n\n    const allAlignments = [\n        'valignCentre',\n        'alignLeft',\n        'alignRight',\n        'alignCentre',\n        'top',\n        'bottom',\n        'left',\n        'right',\n        'inset'\n    ];\n    const nu$6 = (xOffset, yOffset, classes, insetModifier = 1) => {\n        const insetXOffset = xOffset * insetModifier;\n        const insetYOffset = yOffset * insetModifier;\n        const getClasses = (prop) => get$h(classes, prop).getOr([]);\n        const make = (xDelta, yDelta, alignmentsOn) => {\n            const alignmentsOff = difference(allAlignments, alignmentsOn);\n            return {\n                offset: SugarPosition(xDelta, yDelta),\n                classesOn: bind$3(alignmentsOn, getClasses),\n                classesOff: bind$3(alignmentsOff, getClasses)\n            };\n        };\n        return {\n            southeast: () => make(-xOffset, yOffset, ['top', 'alignLeft']),\n            southwest: () => make(xOffset, yOffset, ['top', 'alignRight']),\n            south: () => make(-xOffset / 2, yOffset, ['top', 'alignCentre']),\n            northeast: () => make(-xOffset, -yOffset, ['bottom', 'alignLeft']),\n            northwest: () => make(xOffset, -yOffset, ['bottom', 'alignRight']),\n            north: () => make(-xOffset / 2, -yOffset, ['bottom', 'alignCentre']),\n            east: () => make(xOffset, -yOffset / 2, ['valignCentre', 'left']),\n            west: () => make(-xOffset, -yOffset / 2, ['valignCentre', 'right']),\n            insetNortheast: () => make(insetXOffset, insetYOffset, ['top', 'alignLeft', 'inset']),\n            insetNorthwest: () => make(-insetXOffset, insetYOffset, ['top', 'alignRight', 'inset']),\n            insetNorth: () => make(-insetXOffset / 2, insetYOffset, ['top', 'alignCentre', 'inset']),\n            insetSoutheast: () => make(insetXOffset, -insetYOffset, ['bottom', 'alignLeft', 'inset']),\n            insetSouthwest: () => make(-insetXOffset, -insetYOffset, ['bottom', 'alignRight', 'inset']),\n            insetSouth: () => make(-insetXOffset / 2, -insetYOffset, ['bottom', 'alignCentre', 'inset']),\n            insetEast: () => make(-insetXOffset, -insetYOffset / 2, ['valignCentre', 'right', 'inset']),\n            insetWest: () => make(insetXOffset, -insetYOffset / 2, ['valignCentre', 'left', 'inset'])\n        };\n    };\n    const fallback = () => nu$6(0, 0, {});\n\n    const nu$5 = (x, y, bubble, direction, placement, boundsRestriction, labelPrefix, alwaysFit = false) => ({\n        x,\n        y,\n        bubble,\n        direction,\n        placement,\n        restriction: boundsRestriction,\n        label: `${labelPrefix}-${placement}`,\n        alwaysFit\n    });\n\n    const adt$5 = Adt.generate([\n        { southeast: [] },\n        { southwest: [] },\n        { northeast: [] },\n        { northwest: [] },\n        { south: [] },\n        { north: [] },\n        { east: [] },\n        { west: [] }\n    ]);\n    const cata$1 = (subject, southeast, southwest, northeast, northwest, south, north, east, west) => subject.fold(southeast, southwest, northeast, northwest, south, north, east, west);\n    const cataVertical = (subject, south, middle, north) => subject.fold(south, south, north, north, south, north, middle, middle);\n    const cataHorizontal = (subject, east, middle, west) => subject.fold(east, west, east, west, middle, middle, east, west);\n    // TODO: Simplify with the typescript approach.\n    const southeast$3 = adt$5.southeast;\n    const southwest$3 = adt$5.southwest;\n    const northeast$3 = adt$5.northeast;\n    const northwest$3 = adt$5.northwest;\n    const south$3 = adt$5.south;\n    const north$3 = adt$5.north;\n    const east$3 = adt$5.east;\n    const west$3 = adt$5.west;\n\n    const getRestriction = (anchor, restriction) => {\n        switch (restriction) {\n            case 1 /* AnchorBoxBounds.LeftEdge */:\n                return anchor.x;\n            case 0 /* AnchorBoxBounds.RightEdge */:\n                return anchor.x + anchor.width;\n            case 2 /* AnchorBoxBounds.TopEdge */:\n                return anchor.y;\n            case 3 /* AnchorBoxBounds.BottomEdge */:\n                return anchor.y + anchor.height;\n        }\n    };\n    const boundsRestriction = (anchor, restrictions) => mapToObject(['left', 'right', 'top', 'bottom'], (dir) => get$h(restrictions, dir).map((restriction) => getRestriction(anchor, restriction)));\n    const adjustBounds = (bounds$1, restriction, bubbleOffset) => {\n        const applyRestriction = (dir, current) => restriction[dir].map((pos) => {\n            const isVerticalAxis = dir === 'top' || dir === 'bottom';\n            const offset = isVerticalAxis ? bubbleOffset.top : bubbleOffset.left;\n            const comparator = dir === 'left' || dir === 'top' ? Math.max : Math.min;\n            const newPos = comparator(pos, current) + offset;\n            // Ensure the new restricted position is within the current bounds\n            return isVerticalAxis ? clamp(newPos, bounds$1.y, bounds$1.bottom) : clamp(newPos, bounds$1.x, bounds$1.right);\n        }).getOr(current);\n        const adjustedLeft = applyRestriction('left', bounds$1.x);\n        const adjustedTop = applyRestriction('top', bounds$1.y);\n        const adjustedRight = applyRestriction('right', bounds$1.right);\n        const adjustedBottom = applyRestriction('bottom', bounds$1.bottom);\n        return bounds(adjustedLeft, adjustedTop, adjustedRight - adjustedLeft, adjustedBottom - adjustedTop);\n    };\n\n    /*\n      Layout for menus and inline context dialogs;\n      Either above or below. Never left or right.\n      Aligned to the left or right of the anchor as appropriate.\n     */\n    const labelPrefix$2 = 'layout';\n    // display element to the right, left edge against the anchor\n    const eastX$1 = (anchor) => anchor.x;\n    // element centre aligned horizontally with the anchor\n    const middleX$1 = (anchor, element) => anchor.x + (anchor.width / 2) - (element.width / 2);\n    // display element to the left, right edge against the right of the anchor\n    const westX$1 = (anchor, element) => anchor.x + anchor.width - element.width;\n    // display element above, bottom edge against the top of the anchor\n    const northY$2 = (anchor, element) => anchor.y - element.height;\n    // display element below, top edge against the bottom of the anchor\n    const southY$2 = (anchor) => anchor.y + anchor.height;\n    // display element below, top edge against the bottom of the anchor\n    const centreY$1 = (anchor, element) => anchor.y + (anchor.height / 2) - (element.height / 2);\n    const eastEdgeX$1 = (anchor) => anchor.x + anchor.width;\n    const westEdgeX$1 = (anchor, element) => anchor.x - element.width;\n    const southeast$2 = (anchor, element, bubbles) => nu$5(eastX$1(anchor), southY$2(anchor), bubbles.southeast(), southeast$3(), \"southeast\" /* Placement.Southeast */, boundsRestriction(anchor, { left: 1 /* AnchorBoxBounds.LeftEdge */, top: 3 /* AnchorBoxBounds.BottomEdge */ }), labelPrefix$2);\n    const southwest$2 = (anchor, element, bubbles) => nu$5(westX$1(anchor, element), southY$2(anchor), bubbles.southwest(), southwest$3(), \"southwest\" /* Placement.Southwest */, boundsRestriction(anchor, { right: 0 /* AnchorBoxBounds.RightEdge */, top: 3 /* AnchorBoxBounds.BottomEdge */ }), labelPrefix$2);\n    const northeast$2 = (anchor, element, bubbles) => nu$5(eastX$1(anchor), northY$2(anchor, element), bubbles.northeast(), northeast$3(), \"northeast\" /* Placement.Northeast */, boundsRestriction(anchor, { left: 1 /* AnchorBoxBounds.LeftEdge */, bottom: 2 /* AnchorBoxBounds.TopEdge */ }), labelPrefix$2);\n    const northwest$2 = (anchor, element, bubbles) => nu$5(westX$1(anchor, element), northY$2(anchor, element), bubbles.northwest(), northwest$3(), \"northwest\" /* Placement.Northwest */, boundsRestriction(anchor, { right: 0 /* AnchorBoxBounds.RightEdge */, bottom: 2 /* AnchorBoxBounds.TopEdge */ }), labelPrefix$2);\n    const north$2 = (anchor, element, bubbles) => nu$5(middleX$1(anchor, element), northY$2(anchor, element), bubbles.north(), north$3(), \"north\" /* Placement.North */, boundsRestriction(anchor, { bottom: 2 /* AnchorBoxBounds.TopEdge */ }), labelPrefix$2);\n    const south$2 = (anchor, element, bubbles) => nu$5(middleX$1(anchor, element), southY$2(anchor), bubbles.south(), south$3(), \"south\" /* Placement.South */, boundsRestriction(anchor, { top: 3 /* AnchorBoxBounds.BottomEdge */ }), labelPrefix$2);\n    const east$2 = (anchor, element, bubbles) => nu$5(eastEdgeX$1(anchor), centreY$1(anchor, element), bubbles.east(), east$3(), \"east\" /* Placement.East */, boundsRestriction(anchor, { left: 0 /* AnchorBoxBounds.RightEdge */ }), labelPrefix$2);\n    const west$2 = (anchor, element, bubbles) => nu$5(westEdgeX$1(anchor, element), centreY$1(anchor, element), bubbles.west(), west$3(), \"west\" /* Placement.West */, boundsRestriction(anchor, { right: 1 /* AnchorBoxBounds.LeftEdge */ }), labelPrefix$2);\n    const all$2 = () => [southeast$2, southwest$2, northeast$2, northwest$2, south$2, north$2, east$2, west$2];\n    const allRtl$1 = () => [southwest$2, southeast$2, northwest$2, northeast$2, south$2, north$2, east$2, west$2];\n    const aboveOrBelow = () => [northeast$2, northwest$2, southeast$2, southwest$2, north$2, south$2];\n    const aboveOrBelowRtl = () => [northwest$2, northeast$2, southwest$2, southeast$2, north$2, south$2];\n    const belowOrAbove = () => [southeast$2, southwest$2, northeast$2, northwest$2, south$2, north$2];\n    const belowOrAboveRtl = () => [southwest$2, southeast$2, northwest$2, northeast$2, south$2, north$2];\n\n    const placementAttribute = 'data-alloy-placement';\n    const setPlacement$1 = (element, placement) => {\n        set$9(element, placementAttribute, placement);\n    };\n    const getPlacement = (element) => getOpt(element, placementAttribute);\n    const reset$2 = (element) => remove$8(element, placementAttribute);\n\n    /*\n      Layouts for things that overlay over the anchor element/box. These are designed to mirror\n      the `Layout` logic.\n\n      As an example `Layout.north` will appear horizontally centered above the anchor, whereas\n      `LayoutInset.north` will appear horizontally centered overlapping the top of the anchor.\n     */\n    const labelPrefix$1 = 'layout-inset';\n    // returns left edge of anchor - used to display element to the left, left edge against the anchor\n    const westEdgeX = (anchor) => anchor.x;\n    // returns middle of anchor minus half the element width - used to horizontally centre element to the anchor\n    const middleX = (anchor, element) => anchor.x + (anchor.width / 2) - (element.width / 2);\n    // returns right edge of anchor minus element width - used to display element to the right, right edge against the anchor\n    const eastEdgeX = (anchor, element) => anchor.x + anchor.width - element.width;\n    // returns top edge - used to display element to the top, top edge against the anchor\n    const northY$1 = (anchor) => anchor.y;\n    // returns bottom edge minus element height - used to display element at the bottom, bottom edge against the anchor\n    const southY$1 = (anchor, element) => anchor.y + anchor.height - element.height;\n    // returns centre of anchor minus half the element height - used to vertically centre element to the anchor\n    const centreY = (anchor, element) => anchor.y + (anchor.height / 2) - (element.height / 2);\n    // positions element relative to the bottom right of the anchor\n    const southwest$1 = (anchor, element, bubbles) => nu$5(eastEdgeX(anchor, element), southY$1(anchor, element), bubbles.insetSouthwest(), northwest$3(), \"southwest\" /* Placement.Southwest */, boundsRestriction(anchor, { right: 0 /* AnchorBoxBounds.RightEdge */, bottom: 3 /* AnchorBoxBounds.BottomEdge */ }), labelPrefix$1);\n    // positions element relative to the bottom left of the anchor\n    const southeast$1 = (anchor, element, bubbles) => nu$5(westEdgeX(anchor), southY$1(anchor, element), bubbles.insetSoutheast(), northeast$3(), \"southeast\" /* Placement.Southeast */, boundsRestriction(anchor, { left: 1 /* AnchorBoxBounds.LeftEdge */, bottom: 3 /* AnchorBoxBounds.BottomEdge */ }), labelPrefix$1);\n    // positions element relative to the top right of the anchor\n    const northwest$1 = (anchor, element, bubbles) => nu$5(eastEdgeX(anchor, element), northY$1(anchor), bubbles.insetNorthwest(), southwest$3(), \"northwest\" /* Placement.Northwest */, boundsRestriction(anchor, { right: 0 /* AnchorBoxBounds.RightEdge */, top: 2 /* AnchorBoxBounds.TopEdge */ }), labelPrefix$1);\n    // positions element relative to the top left of the anchor\n    const northeast$1 = (anchor, element, bubbles) => nu$5(westEdgeX(anchor), northY$1(anchor), bubbles.insetNortheast(), southeast$3(), \"northeast\" /* Placement.Northeast */, boundsRestriction(anchor, { left: 1 /* AnchorBoxBounds.LeftEdge */, top: 2 /* AnchorBoxBounds.TopEdge */ }), labelPrefix$1);\n    // positions element relative to the top of the anchor, horizontally centered\n    const north$1 = (anchor, element, bubbles) => nu$5(middleX(anchor, element), northY$1(anchor), bubbles.insetNorth(), south$3(), \"north\" /* Placement.North */, boundsRestriction(anchor, { top: 2 /* AnchorBoxBounds.TopEdge */ }), labelPrefix$1);\n    // positions element relative to the bottom of the anchor, horizontally centered\n    const south$1 = (anchor, element, bubbles) => nu$5(middleX(anchor, element), southY$1(anchor, element), bubbles.insetSouth(), north$3(), \"south\" /* Placement.South */, boundsRestriction(anchor, { bottom: 3 /* AnchorBoxBounds.BottomEdge */ }), labelPrefix$1);\n    // positions element with the right edge against the anchor, vertically centered\n    const east$1 = (anchor, element, bubbles) => nu$5(eastEdgeX(anchor, element), centreY(anchor, element), bubbles.insetEast(), west$3(), \"east\" /* Placement.East */, boundsRestriction(anchor, { right: 0 /* AnchorBoxBounds.RightEdge */ }), labelPrefix$1);\n    // positions element with the left each against the anchor, vertically centered\n    const west$1 = (anchor, element, bubbles) => nu$5(westEdgeX(anchor), centreY(anchor, element), bubbles.insetWest(), east$3(), \"west\" /* Placement.West */, boundsRestriction(anchor, { left: 1 /* AnchorBoxBounds.LeftEdge */ }), labelPrefix$1);\n    const lookupPreserveLayout = (lastPlacement) => {\n        switch (lastPlacement) {\n            case \"north\" /* Placement.North */:\n                return north$1;\n            case \"northeast\" /* Placement.Northeast */:\n                return northeast$1;\n            case \"northwest\" /* Placement.Northwest */:\n                return northwest$1;\n            case \"south\" /* Placement.South */:\n                return south$1;\n            case \"southeast\" /* Placement.Southeast */:\n                return southeast$1;\n            case \"southwest\" /* Placement.Southwest */:\n                return southwest$1;\n            case \"east\" /* Placement.East */:\n                return east$1;\n            case \"west\" /* Placement.West */:\n                return west$1;\n        }\n    };\n    const preserve$1 = (anchor, element, bubbles, placee, bounds) => {\n        const layout = getPlacement(placee).map(lookupPreserveLayout).getOr(north$1);\n        return layout(anchor, element, bubbles, placee, bounds);\n    };\n    const lookupFlippedLayout = (lastPlacement) => {\n        switch (lastPlacement) {\n            case \"north\" /* Placement.North */:\n                return south$1;\n            case \"northeast\" /* Placement.Northeast */:\n                return southeast$1;\n            case \"northwest\" /* Placement.Northwest */:\n                return southwest$1;\n            case \"south\" /* Placement.South */:\n                return north$1;\n            case \"southeast\" /* Placement.Southeast */:\n                return northeast$1;\n            case \"southwest\" /* Placement.Southwest */:\n                return northwest$1;\n            case \"east\" /* Placement.East */:\n                return west$1;\n            case \"west\" /* Placement.West */:\n                return east$1;\n        }\n    };\n    const flip = (anchor, element, bubbles, placee, bounds) => {\n        const layout = getPlacement(placee).map(lookupFlippedLayout).getOr(north$1);\n        return layout(anchor, element, bubbles, placee, bounds);\n    };\n\n    // applies the max-height as determined by Bounder\n    const setMaxHeight = (element, maxHeight) => {\n        setMax$1(element, Math.floor(maxHeight));\n    };\n    // adds both max-height and overflow to constrain it\n    const anchored = constant$1((element, available) => {\n        setMaxHeight(element, available);\n        setAll(element, {\n            'overflow-x': 'hidden',\n            'overflow-y': 'auto'\n        });\n    });\n    /*\n     * This adds max height, but not overflow - the effect of this is that elements can grow beyond the max height,\n     * but if they run off the top they're pushed down.\n     *\n     * If the element expands below the screen height it will be cut off, but we were already doing that.\n     */\n    const expandable$1 = constant$1((element, available) => {\n        setMaxHeight(element, available);\n    });\n\n    // applies the max-width as determined by Bounder\n    const expandable = constant$1((element, available) => {\n        setMax(element, Math.floor(available));\n    });\n\n    var AttributeValue;\n    (function (AttributeValue) {\n        AttributeValue[\"TopToBottom\"] = \"toptobottom\";\n        AttributeValue[\"BottomToTop\"] = \"bottomtotop\";\n    })(AttributeValue || (AttributeValue = {}));\n    const Attribute = 'data-alloy-vertical-dir';\n    const isBottomToTopDir = (el) => closest$2(el, (current) => isElement$1(current) && get$g(current, 'data-alloy-vertical-dir') === AttributeValue.BottomToTop);\n\n    var HighlightOnOpen;\n    (function (HighlightOnOpen) {\n        HighlightOnOpen[HighlightOnOpen[\"HighlightMenuAndItem\"] = 0] = \"HighlightMenuAndItem\";\n        HighlightOnOpen[HighlightOnOpen[\"HighlightJustMenu\"] = 1] = \"HighlightJustMenu\";\n        HighlightOnOpen[HighlightOnOpen[\"HighlightNone\"] = 2] = \"HighlightNone\";\n    })(HighlightOnOpen || (HighlightOnOpen = {}));\n\n    const NoState = {\n        init: () => nu$4({\n            readState: constant$1('No State required')\n        })\n    };\n    const nu$4 = (spec) => spec;\n\n    const defaultEventHandler = {\n        can: always,\n        abort: never,\n        run: noop\n    };\n    const nu$3 = (parts) => {\n        if (!hasNonNullableKey(parts, 'can') && !hasNonNullableKey(parts, 'abort') && !hasNonNullableKey(parts, 'run')) {\n            throw new Error('EventHandler defined by: ' + JSON.stringify(parts, null, 2) + ' does not have can, abort, or run!');\n        }\n        return {\n            ...defaultEventHandler,\n            ...parts\n        };\n    };\n    const all$1 = (handlers, f) => (...args) => foldl(handlers, (acc, handler) => acc && f(handler).apply(undefined, args), true);\n    const any = (handlers, f) => (...args) => foldl(handlers, (acc, handler) => acc || f(handler).apply(undefined, args), false);\n    const read$1 = (handler) => isFunction(handler) ? {\n        can: always,\n        abort: never,\n        run: handler\n    } : handler;\n    const fuse$1 = (handlers) => {\n        const can = all$1(handlers, (handler) => handler.can);\n        const abort = any(handlers, (handler) => handler.abort);\n        const run = (...args) => {\n            each$1(handlers, (handler) => {\n                // ASSUMPTION: Return value is unimportant.\n                handler.run.apply(undefined, args);\n            });\n        };\n        return {\n            can,\n            abort,\n            run\n        };\n    };\n\n    const emit = (component, event) => {\n        dispatchWith(component, component.element, event, {});\n    };\n    const emitWith = (component, event, properties) => {\n        dispatchWith(component, component.element, event, properties);\n    };\n    const emitExecute = (component) => {\n        emit(component, execute$5());\n    };\n    const dispatch = (component, target, event) => {\n        dispatchWith(component, target, event, {});\n    };\n    const dispatchWith = (component, target, event, properties) => {\n        // NOTE: The order of spreading here means that it will maintain any target that\n        // exists in the current properties. Because this function has been used for situations where\n        // properties is either an emulated SugarEvent with no target (see TouchEvent) or\n        // for emitting custom events that have no target, this likely hasn't been a problem.\n        // But until we verify that nothing is relying on this ordering, there is an alternate\n        // function below called retargetAndDispatchWith, which spreads in the other direction.\n        const data = {\n            target,\n            ...properties\n        };\n        component.getSystem().triggerEvent(event, target, data);\n    };\n    const retargetAndDispatchWith = (component, target, eventName, properties) => {\n        // This is essentially the same as dispatchWith, except the spreading order\n        // means that it clobbers anything in the nativeEvent with \"target\". It also\n        // expects what is being passed in to be a real sugar event, not just a data\n        // blob\n        const data = {\n            ...properties,\n            target\n        };\n        component.getSystem().triggerEvent(eventName, target, data);\n    };\n    const dispatchEvent = (component, target, event, simulatedEvent) => {\n        component.getSystem().triggerEvent(event, target, simulatedEvent.event);\n    };\n\n    const derive$2 = (configs) => wrapAll(configs);\n    // const combine = (configs...);\n    const abort = (name, predicate) => {\n        return {\n            key: name,\n            value: nu$3({\n                abort: predicate\n            })\n        };\n    };\n    const can = (name, predicate) => {\n        return {\n            key: name,\n            value: nu$3({\n                can: predicate\n            })\n        };\n    };\n    const preventDefault = (name) => {\n        return {\n            key: name,\n            value: nu$3({\n                run: (component, simulatedEvent) => {\n                    simulatedEvent.event.prevent();\n                }\n            })\n        };\n    };\n    const run$1 = (name, handler) => {\n        return {\n            key: name,\n            value: nu$3({\n                run: handler\n            })\n        };\n    };\n    // Extra can be used when your handler needs more context, and is declared in one spot\n    // It's really just convenient partial application.\n    const runActionExtra = (name, action, extra) => {\n        return {\n            key: name,\n            value: nu$3({\n                run: (component, simulatedEvent) => {\n                    action.apply(undefined, [component, simulatedEvent].concat(extra));\n                }\n            })\n        };\n    };\n    const runOnName = (name) => {\n        return (handler) => run$1(name, handler);\n    };\n    const runOnSourceName = (name) => {\n        return (handler) => ({\n            key: name,\n            value: nu$3({\n                run: (component, simulatedEvent) => {\n                    if (isSource(component, simulatedEvent)) {\n                        handler(component, simulatedEvent);\n                    }\n                }\n            })\n        });\n    };\n    const redirectToUid = (name, uid) => {\n        return run$1(name, (component, simulatedEvent) => {\n            component.getSystem().getByUid(uid).each((redirectee) => {\n                dispatchEvent(redirectee, redirectee.element, name, simulatedEvent);\n            });\n        });\n    };\n    const redirectToPart = (name, detail, partName) => {\n        const uid = detail.partUids[partName];\n        return redirectToUid(name, uid);\n    };\n    const runWithTarget = (name, f) => {\n        return run$1(name, (component, simulatedEvent) => {\n            const ev = simulatedEvent.event;\n            const target = component.getSystem().getByDom(ev.target).getOrThunk(\n            // If we don't find an alloy component for the target, I guess we go up the tree\n            // until we find an alloy component? Performance concern?\n            // TODO: Write tests for this.\n            () => {\n                const closest$1 = closest(ev.target, (el) => component.getSystem().getByDom(el).toOptional(), never);\n                // If we still found nothing ... fire on component itself;\n                return closest$1.getOr(component);\n            });\n            f(component, target, simulatedEvent);\n        });\n    };\n    const cutter = (name) => {\n        return run$1(name, (component, simulatedEvent) => {\n            simulatedEvent.cut();\n        });\n    };\n    const stopper = (name) => {\n        return run$1(name, (component, simulatedEvent) => {\n            simulatedEvent.stop();\n        });\n    };\n    const runOnSource = (name, f) => {\n        return runOnSourceName(name)(f);\n    };\n    const runOnAttached = runOnSourceName(attachedToDom());\n    const runOnDetached = runOnSourceName(detachedFromDom());\n    const runOnInit = runOnSourceName(systemInit());\n    const runOnExecute$1 = runOnName(execute$5());\n\n    // Maybe we'll need to allow add/remove\n    const nu$2 = (s) => ({\n        classes: isUndefined(s.classes) ? [] : s.classes,\n        attributes: isUndefined(s.attributes) ? {} : s.attributes,\n        styles: isUndefined(s.styles) ? {} : s.styles\n    });\n    const merge = (defnA, mod) => ({\n        ...defnA,\n        attributes: { ...defnA.attributes, ...mod.attributes },\n        styles: { ...defnA.styles, ...mod.styles },\n        classes: defnA.classes.concat(mod.classes)\n    });\n\n    const executeEvent = (bConfig, bState, executor) => runOnExecute$1((component) => {\n        executor(component, bConfig, bState);\n    });\n    const loadEvent = (bConfig, bState, f) => runOnInit((component, _simulatedEvent) => {\n        f(component, bConfig, bState);\n    });\n    const create$4 = (schema, name, active, apis, extra, state) => {\n        const configSchema = objOfOnly(schema);\n        const schemaSchema = optionObjOf(name, [\n            optionObjOfOnly('config', schema)\n        ]);\n        return doCreate(configSchema, schemaSchema, name, active, apis, extra, state);\n    };\n    const createModes$1 = (modes, name, active, apis, extra, state) => {\n        const configSchema = modes;\n        const schemaSchema = optionObjOf(name, [\n            optionOf('config', modes)\n        ]);\n        return doCreate(configSchema, schemaSchema, name, active, apis, extra, state);\n    };\n    const wrapApi = (bName, apiFunction, apiName) => {\n        const f = (component, ...rest) => {\n            const args = [component].concat(rest);\n            return component.config({\n                name: constant$1(bName)\n            }).fold(() => {\n                throw new Error('We could not find any behaviour configuration for: ' + bName + '. Using API: ' + apiName);\n            }, (info) => {\n                const rest = Array.prototype.slice.call(args, 1);\n                return apiFunction.apply(undefined, [component, info.config, info.state].concat(rest));\n            });\n        };\n        return markAsBehaviourApi(f, apiName, apiFunction);\n    };\n    // I think the \"revoke\" idea is fragile at best.\n    const revokeBehaviour = (name) => ({\n        key: name,\n        value: undefined\n    });\n    const doCreate = (configSchema, schemaSchema, name, active, apis, extra, state) => {\n        const getConfig = (info) => hasNonNullableKey(info, name) ? info[name]() : Optional.none();\n        const wrappedApis = map$1(apis, (apiF, apiName) => wrapApi(name, apiF, apiName));\n        const wrappedExtra = map$1(extra, (extraF, extraName) => markAsExtraApi(extraF, extraName));\n        const me = {\n            ...wrappedExtra,\n            ...wrappedApis,\n            revoke: curry(revokeBehaviour, name),\n            config: (spec) => {\n                const prepared = asRawOrDie$1(name + '-config', configSchema, spec);\n                return {\n                    key: name,\n                    value: {\n                        config: prepared,\n                        me,\n                        configAsRaw: cached(() => asRawOrDie$1(name + '-config', configSchema, spec)),\n                        initialConfig: spec,\n                        state\n                    }\n                };\n            },\n            schema: constant$1(schemaSchema),\n            exhibit: (info, base) => {\n                return lift2(getConfig(info), get$h(active, 'exhibit'), (behaviourInfo, exhibitor) => {\n                    return exhibitor(base, behaviourInfo.config, behaviourInfo.state);\n                }).getOrThunk(() => nu$2({}));\n            },\n            name: constant$1(name),\n            handlers: (info) => {\n                return getConfig(info).map((behaviourInfo) => {\n                    const getEvents = get$h(active, 'events').getOr(() => ({}));\n                    return getEvents(behaviourInfo.config, behaviourInfo.state);\n                }).getOr({});\n            }\n        };\n        return me;\n    };\n\n    const derive$1 = (capabilities) => wrapAll(capabilities);\n    const simpleSchema = objOfOnly([\n        required$1('fields'),\n        required$1('name'),\n        defaulted('active', {}),\n        defaulted('apis', {}),\n        defaulted('state', NoState),\n        defaulted('extra', {})\n    ]);\n    const create$3 = (data) => {\n        const value = asRawOrDie$1('Creating behaviour: ' + data.name, simpleSchema, data);\n        return create$4(value.fields, value.name, value.active, value.apis, value.extra, value.state);\n    };\n    const modeSchema = objOfOnly([\n        required$1('branchKey'),\n        required$1('branches'),\n        required$1('name'),\n        defaulted('active', {}),\n        defaulted('apis', {}),\n        defaulted('state', NoState),\n        defaulted('extra', {})\n    ]);\n    const createModes = (data) => {\n        const value = asRawOrDie$1('Creating behaviour: ' + data.name, modeSchema, data);\n        return createModes$1(choose$1(value.branchKey, value.branches), value.name, value.active, value.apis, value.extra, value.state);\n    };\n    const revoke = constant$1(undefined);\n\n    // AlloyEventKeyAndHandler type argument needs to be any here to satisfy an array of handlers\n    // where each item can be any subtype of EventFormat we can't use <T extends EventFormat> since\n    // then each item would have to be the same type\n    const events$i = (name, eventHandlers) => {\n        const events = derive$2(eventHandlers);\n        return create$3({\n            fields: [\n                required$1('enabled')\n            ],\n            name,\n            active: {\n                events: constant$1(events)\n            }\n        });\n    };\n    const config = (name, eventHandlers) => {\n        const me = events$i(name, eventHandlers);\n        return {\n            key: name,\n            value: {\n                config: {},\n                me,\n                configAsRaw: constant$1({}),\n                initialConfig: {},\n                state: NoState\n            }\n        };\n    };\n\n    const SetupBehaviourCellState = (initialState) => {\n        const init = () => {\n            const cell = Cell(initialState);\n            const get = () => cell.get();\n            const set = (newState) => cell.set(newState);\n            const clear = () => cell.set(initialState);\n            const readState = () => cell.get();\n            return {\n                get,\n                set,\n                clear,\n                readState\n            };\n        };\n        return {\n            init\n        };\n    };\n\n    const focus$2 = (component, focusConfig) => {\n        if (!focusConfig.ignore) {\n            focus$4(component.element);\n            focusConfig.onFocus(component);\n        }\n    };\n    const blur = (component, focusConfig) => {\n        if (!focusConfig.ignore) {\n            blur$1(component.element);\n        }\n    };\n    const isFocused = (component) => hasFocus(component.element);\n\n    var FocusApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        focus: focus$2,\n        blur: blur,\n        isFocused: isFocused\n    });\n\n    // TODO: DomModification types\n    const exhibit$6 = (base, focusConfig) => {\n        const mod = focusConfig.ignore ? {} : {\n            attributes: {\n                tabindex: '-1'\n            }\n        };\n        return nu$2(mod);\n    };\n    const events$h = (focusConfig) => derive$2([\n        run$1(focus$3(), (component, simulatedEvent) => {\n            focus$2(component, focusConfig);\n            simulatedEvent.stop();\n        })\n    ].concat(focusConfig.stopMousedown ? [\n        run$1(mousedown(), (_, simulatedEvent) => {\n            // This setting is often used in tandem with ignoreFocus. Basically, if you\n            // don't prevent default on a menu that has fake focus, then it can transfer\n            // focus to the outer body when they click on it, which can break things\n            // which dismiss on blur (e.g. typeahead)\n            simulatedEvent.event.prevent();\n        })\n    ] : []));\n\n    var ActiveFocus = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$6,\n        events: events$h\n    });\n\n    var FocusSchema = [\n        // TODO: Work out when we want to  call this. Only when it is has changed?\n        onHandler('onFocus'),\n        defaulted('stopMousedown', false),\n        defaulted('ignore', false)\n    ];\n\n    const Focusing = create$3({\n        fields: FocusSchema,\n        name: 'focusing',\n        active: ActiveFocus,\n        apis: FocusApis\n        // Consider adding isFocused an an extra\n    });\n\n    const BACKSPACE = [8];\n    const TAB = [9];\n    const ENTER = [13];\n    const ESCAPE = [27];\n    const SPACE = [32];\n    const LEFT = [37];\n    const UP = [38];\n    const RIGHT = [39];\n    const DOWN = [40];\n\n    const cyclePrev = (values, index, predicate) => {\n        const before = reverse(values.slice(0, index));\n        const after = reverse(values.slice(index + 1));\n        return find$5(before.concat(after), predicate);\n    };\n    const tryPrev = (values, index, predicate) => {\n        const before = reverse(values.slice(0, index));\n        return find$5(before, predicate);\n    };\n    const cycleNext = (values, index, predicate) => {\n        const before = values.slice(0, index);\n        const after = values.slice(index + 1);\n        return find$5(after.concat(before), predicate);\n    };\n    const tryNext = (values, index, predicate) => {\n        const after = values.slice(index + 1);\n        return find$5(after, predicate);\n    };\n\n    const inSet = (keys) => (event) => {\n        const raw = event.raw;\n        return contains$2(keys, raw.which);\n    };\n    const and = (preds) => (event) => forall(preds, (pred) => pred(event));\n    const isShift$1 = (event) => {\n        const raw = event.raw;\n        return raw.shiftKey === true;\n    };\n    const isControl = (event) => {\n        const raw = event.raw;\n        return raw.ctrlKey === true;\n    };\n    const isNotShift = not(isShift$1);\n\n    const rule = (matches, action) => ({\n        matches,\n        classification: action\n    });\n    const choose = (transitions, event) => {\n        const transition = find$5(transitions, (t) => t.matches(event));\n        return transition.map((t) => t.classification);\n    };\n\n    // THIS IS NOT API YET\n    const dehighlightAllExcept = (component, hConfig, hState, skip) => {\n        const highlighted = descendants(component.element, '.' + hConfig.highlightClass);\n        each$1(highlighted, (h) => {\n            // We don't want to dehighlight anything that should be skipped.\n            // Generally, this is because we are about to highlight that thing.\n            const shouldSkip = exists(skip, (skipComp) => eq(skipComp.element, h));\n            if (!shouldSkip) {\n                remove$3(h, hConfig.highlightClass);\n                component.getSystem().getByDom(h).each((target) => {\n                    hConfig.onDehighlight(component, target);\n                    emit(target, dehighlight$1());\n                });\n            }\n        });\n    };\n    const dehighlightAll = (component, hConfig, hState) => dehighlightAllExcept(component, hConfig, hState, []);\n    const dehighlight = (component, hConfig, hState, target) => {\n        // Only act if it was highlighted.\n        if (isHighlighted(component, hConfig, hState, target)) {\n            remove$3(target.element, hConfig.highlightClass);\n            hConfig.onDehighlight(component, target);\n            emit(target, dehighlight$1());\n        }\n    };\n    const highlight = (component, hConfig, hState, target) => {\n        // If asked to highlight something, dehighlight everything else first except\n        // for the new thing we are going to highlight. It's a rare case, but we don't\n        // want to get an onDehighlight, onHighlight for the same item on a highlight call.\n        // We also don't want to call onHighlight if it was already highlighted.\n        //\n        // Note, that there is an important distinction here: highlight is NOT a no-op\n        // if target is already highlighted, because it will still dehighlight everything else.\n        // However, it won't fire any onHighlight or onDehighlight handlers for the already\n        // highlighted item. I'm not sure if this is behaviour we need to maintain, but it is now\n        // tested. A simpler approach might just be to not do anything if it's already highlighted,\n        // but that could leave us in an inconsistent state, where multiple items have highlights\n        // even after a highlight call. This way, highlight validates the highlights in the\n        // component, and ensures there is only one thing highlighted.\n        dehighlightAllExcept(component, hConfig, hState, [target]);\n        if (!isHighlighted(component, hConfig, hState, target)) {\n            add$2(target.element, hConfig.highlightClass);\n            hConfig.onHighlight(component, target);\n            emit(target, highlight$1());\n        }\n    };\n    const highlightFirst = (component, hConfig, hState) => {\n        getFirst(component, hConfig).each((firstComp) => {\n            highlight(component, hConfig, hState, firstComp);\n        });\n    };\n    const highlightLast = (component, hConfig, hState) => {\n        getLast(component, hConfig).each((lastComp) => {\n            highlight(component, hConfig, hState, lastComp);\n        });\n    };\n    const highlightAt = (component, hConfig, hState, index) => {\n        getByIndex(component, hConfig, hState, index).fold((err) => {\n            throw err;\n        }, (firstComp) => {\n            highlight(component, hConfig, hState, firstComp);\n        });\n    };\n    const highlightBy = (component, hConfig, hState, predicate) => {\n        const candidates = getCandidates(component, hConfig);\n        const targetComp = find$5(candidates, predicate);\n        targetComp.each((c) => {\n            highlight(component, hConfig, hState, c);\n        });\n    };\n    const isHighlighted = (component, hConfig, hState, queryTarget) => has(queryTarget.element, hConfig.highlightClass);\n    const getHighlighted = (component, hConfig, _hState) => descendant(component.element, '.' + hConfig.highlightClass).bind((e) => component.getSystem().getByDom(e).toOptional());\n    const getByIndex = (component, hConfig, hState, index) => {\n        const items = descendants(component.element, '.' + hConfig.itemClass);\n        return Optional.from(items[index]).fold(() => Result.error(new Error('No element found with index ' + index)), component.getSystem().getByDom);\n    };\n    const getFirst = (component, hConfig, _hState) => descendant(component.element, '.' + hConfig.itemClass).bind((e) => component.getSystem().getByDom(e).toOptional());\n    const getLast = (component, hConfig, _hState) => {\n        const items = descendants(component.element, '.' + hConfig.itemClass);\n        const last = items.length > 0 ? Optional.some(items[items.length - 1]) : Optional.none();\n        return last.bind((c) => component.getSystem().getByDom(c).toOptional());\n    };\n    const getDelta$2 = (component, hConfig, hState, delta) => {\n        const items = descendants(component.element, '.' + hConfig.itemClass);\n        const current = findIndex$1(items, (item) => has(item, hConfig.highlightClass));\n        return current.bind((selected) => {\n            const dest = cycleBy(selected, delta, 0, items.length - 1);\n            return component.getSystem().getByDom(items[dest]).toOptional();\n        });\n    };\n    const getPrevious = (component, hConfig, hState) => getDelta$2(component, hConfig, hState, -1);\n    const getNext = (component, hConfig, hState) => getDelta$2(component, hConfig, hState, +1);\n    const getCandidates = (component, hConfig, _hState) => {\n        const items = descendants(component.element, '.' + hConfig.itemClass);\n        return cat(map$2(items, (i) => component.getSystem().getByDom(i).toOptional()));\n    };\n\n    var HighlightApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        dehighlightAll: dehighlightAll,\n        dehighlight: dehighlight,\n        highlight: highlight,\n        highlightFirst: highlightFirst,\n        highlightLast: highlightLast,\n        highlightAt: highlightAt,\n        highlightBy: highlightBy,\n        isHighlighted: isHighlighted,\n        getHighlighted: getHighlighted,\n        getFirst: getFirst,\n        getLast: getLast,\n        getPrevious: getPrevious,\n        getNext: getNext,\n        getCandidates: getCandidates\n    });\n\n    var HighlightSchema = [\n        required$1('highlightClass'),\n        required$1('itemClass'),\n        onHandler('onHighlight'),\n        onHandler('onDehighlight')\n    ];\n\n    const Highlighting = create$3({\n        fields: HighlightSchema,\n        name: 'highlighting',\n        apis: HighlightApis\n    });\n\n    const reportFocusShifting = (component, prevFocus, newFocus) => {\n        const noChange = prevFocus.exists((p) => newFocus.exists((n) => eq(n, p)));\n        if (!noChange) {\n            emitWith(component, focusShifted(), {\n                prevFocus,\n                newFocus\n            });\n        }\n    };\n    const dom$2 = () => {\n        const get = (component) => search(component.element);\n        const set = (component, focusee) => {\n            const prevFocus = get(component);\n            component.getSystem().triggerFocus(focusee, component.element);\n            const newFocus = get(component);\n            reportFocusShifting(component, prevFocus, newFocus);\n        };\n        return {\n            get,\n            set\n        };\n    };\n    const highlights = () => {\n        const get = (component) => Highlighting.getHighlighted(component).map((item) => item.element);\n        const set = (component, element) => {\n            const prevFocus = get(component);\n            component.getSystem().getByDom(element).fold(noop, (item) => {\n                Highlighting.highlight(component, item);\n            });\n            const newFocus = get(component);\n            reportFocusShifting(component, prevFocus, newFocus);\n        };\n        return {\n            get,\n            set\n        };\n    };\n\n    const typical = (infoSchema, stateInit, getKeydownRules, getKeyupRules, optFocusIn) => {\n        const schema = () => infoSchema.concat([\n            defaulted('focusManager', dom$2()),\n            defaultedOf('focusInside', 'onFocus', valueOf((val) => contains$2(['onFocus', 'onEnterOrSpace', 'onApi'], val) ? Result.value(val) : Result.error('Invalid value for focusInside'))),\n            output$1('handler', me),\n            output$1('state', stateInit),\n            output$1('sendFocusIn', optFocusIn)\n        ]);\n        const processKey = (component, simulatedEvent, getRules, keyingConfig, keyingState) => {\n            const rules = getRules(component, simulatedEvent, keyingConfig, keyingState);\n            return choose(rules, simulatedEvent.event).bind((rule) => rule(component, simulatedEvent, keyingConfig, keyingState));\n        };\n        const toEvents = (keyingConfig, keyingState) => {\n            const onFocusHandler = keyingConfig.focusInside !== FocusInsideModes.OnFocusMode\n                ? Optional.none()\n                : optFocusIn(keyingConfig).map((focusIn) => run$1(focus$3(), (component, simulatedEvent) => {\n                    focusIn(component, keyingConfig, keyingState);\n                    simulatedEvent.stop();\n                }));\n            // On enter or space on root element, if using EnterOrSpace focus mode, fire a focusIn on the component\n            const tryGoInsideComponent = (component, simulatedEvent) => {\n                const isEnterOrSpace = inSet(SPACE.concat(ENTER))(simulatedEvent.event);\n                if (keyingConfig.focusInside === FocusInsideModes.OnEnterOrSpaceMode && isEnterOrSpace && isSource(component, simulatedEvent)) {\n                    optFocusIn(keyingConfig).each((focusIn) => {\n                        focusIn(component, keyingConfig, keyingState);\n                        simulatedEvent.stop();\n                    });\n                }\n            };\n            const keyboardEvents = [\n                run$1(keydown(), (component, simulatedEvent) => {\n                    processKey(component, simulatedEvent, getKeydownRules, keyingConfig, keyingState).fold(() => {\n                        // Key wasn't handled ... so see if we should enter into the component (focusIn)\n                        tryGoInsideComponent(component, simulatedEvent);\n                    }, (_) => {\n                        simulatedEvent.stop();\n                    });\n                }),\n                run$1(keyup(), (component, simulatedEvent) => {\n                    processKey(component, simulatedEvent, getKeyupRules, keyingConfig, keyingState).each((_) => {\n                        simulatedEvent.stop();\n                    });\n                })\n            ];\n            return derive$2(onFocusHandler.toArray().concat(keyboardEvents));\n        };\n        const me = {\n            schema,\n            processKey,\n            toEvents\n        };\n        return me;\n    };\n\n    const create$2 = (cyclicField) => {\n        const schema = [\n            option$3('onEscape'),\n            option$3('onEnter'),\n            defaulted('selector', '[data-alloy-tabstop=\"true\"]:not(:disabled)'),\n            defaulted('firstTabstop', 0),\n            defaulted('useTabstopAt', always),\n            // Maybe later we should just expose isVisible\n            option$3('visibilitySelector')\n        ].concat([\n            cyclicField\n        ]);\n        // TODO: Test this\n        const isVisible = (tabbingConfig, element) => {\n            const target = tabbingConfig.visibilitySelector\n                .bind((sel) => closest$3(element, sel))\n                .getOr(element);\n            // NOTE: We can't use Visibility.isVisible, because the toolbar has width when it has closed, just not height.\n            return get$d(target) > 0;\n        };\n        const findInitial = (component, tabbingConfig) => {\n            const tabstops = descendants(component.element, tabbingConfig.selector);\n            const visibles = filter$2(tabstops, (elem) => isVisible(tabbingConfig, elem));\n            return Optional.from(visibles[tabbingConfig.firstTabstop]);\n        };\n        const findCurrent = (component, tabbingConfig) => tabbingConfig.focusManager.get(component)\n            .bind((elem) => closest$3(elem, tabbingConfig.selector));\n        const isTabstop = (tabbingConfig, element) => isVisible(tabbingConfig, element) && tabbingConfig.useTabstopAt(element);\n        // Fire an alloy focus on the first visible element that matches the selector\n        const focusIn = (component, tabbingConfig, _tabbingState) => {\n            findInitial(component, tabbingConfig).each((target) => {\n                tabbingConfig.focusManager.set(component, target);\n            });\n        };\n        const goFromTabstop = (component, tabstops, stopIndex, tabbingConfig, cycle) => cycle(tabstops, stopIndex, (elem) => isTabstop(tabbingConfig, elem))\n            .fold(\n        // Even if there is only one, still capture the event if cycling\n        () => tabbingConfig.cyclic ? Optional.some(true) : Optional.none(), (target) => {\n            tabbingConfig.focusManager.set(component, target);\n            // Kill the event\n            return Optional.some(true);\n        });\n        const go = (component, _simulatedEvent, tabbingConfig, cycle) => {\n            // 1. Find our current tabstop\n            // 2. Find the index of that tabstop\n            // 3. Cycle the tabstop\n            // 4. Fire alloy focus on the resultant tabstop\n            const tabstops = filter$2(descendants(component.element, tabbingConfig.selector), (element) => isVisible(tabbingConfig, element));\n            return findCurrent(component, tabbingConfig).bind((tabstop) => {\n                // focused component\n                const optStopIndex = findIndex$1(tabstops, curry(eq, tabstop));\n                return optStopIndex.bind((stopIndex) => goFromTabstop(component, tabstops, stopIndex, tabbingConfig, cycle));\n            });\n        };\n        const goBackwards = (component, simulatedEvent, tabbingConfig) => {\n            const navigate = tabbingConfig.cyclic ? cyclePrev : tryPrev;\n            return go(component, simulatedEvent, tabbingConfig, navigate);\n        };\n        const goForwards = (component, simulatedEvent, tabbingConfig) => {\n            const navigate = tabbingConfig.cyclic ? cycleNext : tryNext;\n            return go(component, simulatedEvent, tabbingConfig, navigate);\n        };\n        const isFirstChild = (elem) => parentNode(elem).bind(firstChild).exists((child) => eq(child, elem));\n        const goFromPseudoTabstop = (component, simulatedEvent, tabbingConfig) => findCurrent(component, tabbingConfig).filter((elem) => !tabbingConfig.useTabstopAt(elem))\n            .bind((elem) => (isFirstChild(elem) ? goBackwards : goForwards)(component, simulatedEvent, tabbingConfig));\n        const execute = (component, simulatedEvent, tabbingConfig) => tabbingConfig.onEnter.bind((f) => f(component, simulatedEvent));\n        const exit = (component, simulatedEvent, tabbingConfig) => tabbingConfig.onEscape.bind((f) => f(component, simulatedEvent));\n        const getKeydownRules = constant$1([\n            rule(and([isShift$1, inSet(TAB)]), goBackwards),\n            rule(inSet(TAB), goForwards),\n            rule(and([isNotShift, inSet(ENTER)]), execute)\n        ]);\n        const getKeyupRules = constant$1([\n            rule(inSet(ESCAPE), exit),\n            rule(inSet(TAB), goFromPseudoTabstop),\n        ]);\n        return typical(schema, NoState.init, getKeydownRules, getKeyupRules, () => Optional.some(focusIn));\n    };\n\n    var AcyclicType = create$2(customField('cyclic', never));\n\n    var CyclicType = create$2(customField('cyclic', always));\n\n    const inside = (target) => ((isTag('input')(target) && get$g(target, 'type') !== 'radio') ||\n        isTag('textarea')(target));\n\n    const doDefaultExecute = (component, _simulatedEvent, focused) => {\n        // Note, we use to pass through simulatedEvent here and make target: component. This simplification\n        // may be a problem\n        dispatch(component, focused, execute$5());\n        return Optional.some(true);\n    };\n    const defaultExecute = (component, simulatedEvent, focused) => {\n        const isComplex = inside(focused) && inSet(SPACE)(simulatedEvent.event);\n        return isComplex ? Optional.none() : doDefaultExecute(component, simulatedEvent, focused);\n    };\n    // On Firefox, pressing space fires a click event if the element maintains focus and fires a keyup. This\n    // stops the keyup, which should stop the click. We might want to make this only work for buttons and Firefox etc,\n    // but at this stage it's cleaner to just always do it. It makes sense that Keying that handles space should handle\n    // keyup also. This does make the name confusing, though.\n    const stopEventForFirefox = (_component, _simulatedEvent) => Optional.some(true);\n\n    const schema$z = [\n        defaulted('execute', defaultExecute),\n        defaulted('useSpace', false),\n        defaulted('useEnter', true),\n        defaulted('useControlEnter', false),\n        defaulted('useDown', false)\n    ];\n    const execute$4 = (component, simulatedEvent, executeConfig) => executeConfig.execute(component, simulatedEvent, component.element);\n    const getKeydownRules$5 = (component, _simulatedEvent, executeConfig, _executeState) => {\n        const spaceExec = executeConfig.useSpace && !inside(component.element) ? SPACE : [];\n        const enterExec = executeConfig.useEnter ? ENTER : [];\n        const downExec = executeConfig.useDown ? DOWN : [];\n        const execKeys = spaceExec.concat(enterExec).concat(downExec);\n        return [\n            rule(inSet(execKeys), execute$4)\n        ].concat(executeConfig.useControlEnter ? [\n            rule(and([isControl, inSet(ENTER)]), execute$4)\n        ] : []);\n    };\n    const getKeyupRules$5 = (component, _simulatedEvent, executeConfig, _executeState) => executeConfig.useSpace && !inside(component.element) ?\n        [rule(inSet(SPACE), stopEventForFirefox)] :\n        [];\n    var ExecutionType = typical(schema$z, NoState.init, getKeydownRules$5, getKeyupRules$5, () => Optional.none());\n\n    const flatgrid$1 = () => {\n        const dimensions = value$2();\n        const setGridSize = (numRows, numColumns) => {\n            dimensions.set({ numRows, numColumns });\n        };\n        const getNumRows = () => dimensions.get().map((d) => d.numRows);\n        const getNumColumns = () => dimensions.get().map((d) => d.numColumns);\n        return nu$4({\n            readState: () => dimensions.get().map((d) => ({\n                numRows: String(d.numRows),\n                numColumns: String(d.numColumns)\n            })).getOr({\n                numRows: '?',\n                numColumns: '?'\n            }),\n            setGridSize,\n            getNumRows,\n            getNumColumns\n        });\n    };\n    const init$g = (spec) => spec.state(spec);\n\n    var KeyingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        flatgrid: flatgrid$1,\n        init: init$g\n    });\n\n    // Looks up direction (considering LTR and RTL), finds the focused element,\n    // and tries to move. If it succeeds, triggers focus and kills the event.\n    const useH = (movement) => (component, simulatedEvent, config, state) => {\n        const move = movement(component.element);\n        return use(move, component, simulatedEvent, config, state);\n    };\n    const west = (moveLeft, moveRight) => {\n        const movement = onDirection(moveLeft, moveRight);\n        return useH(movement);\n    };\n    const east = (moveLeft, moveRight) => {\n        const movement = onDirection(moveRight, moveLeft);\n        return useH(movement);\n    };\n    const useV = (move) => (component, simulatedEvent, config, state) => use(move, component, simulatedEvent, config, state);\n    const use = (move, component, simulatedEvent, config, state) => {\n        const outcome = config.focusManager.get(component).bind((focused) => move(component.element, focused, config, state));\n        return outcome.map((newFocus) => {\n            config.focusManager.set(component, newFocus);\n            return true;\n        });\n    };\n    const north = useV;\n    const south = useV;\n    const move$1 = useV;\n\n    const locate = (candidates, predicate) => findIndex$1(candidates, predicate).map((index) => ({\n        index,\n        candidates\n    }));\n\n    const locateVisible = (container, current, selector) => {\n        const predicate = (x) => eq(x, current);\n        const candidates = descendants(container, selector);\n        const visible = filter$2(candidates, isVisible);\n        return locate(visible, predicate);\n    };\n    const findIndex = (elements, target) => findIndex$1(elements, (elem) => eq(target, elem));\n\n    const withGrid = (values, index, numCols, f) => {\n        const oldRow = Math.floor(index / numCols);\n        const oldColumn = index % numCols;\n        return f(oldRow, oldColumn).bind((address) => {\n            const newIndex = address.row * numCols + address.column;\n            return newIndex >= 0 && newIndex < values.length ? Optional.some(values[newIndex]) : Optional.none();\n        });\n    };\n    const cycleHorizontal$1 = (values, index, numRows, numCols, delta) => withGrid(values, index, numCols, (oldRow, oldColumn) => {\n        const onLastRow = oldRow === numRows - 1;\n        const colsInRow = onLastRow ? values.length - (oldRow * numCols) : numCols;\n        const newColumn = cycleBy(oldColumn, delta, 0, colsInRow - 1);\n        return Optional.some({\n            row: oldRow,\n            column: newColumn\n        });\n    });\n    const cycleVertical$1 = (values, index, numRows, numCols, delta) => withGrid(values, index, numCols, (oldRow, oldColumn) => {\n        const newRow = cycleBy(oldRow, delta, 0, numRows - 1);\n        const onLastRow = newRow === numRows - 1;\n        const colsInRow = onLastRow ? values.length - (newRow * numCols) : numCols;\n        const newCol = clamp(oldColumn, 0, colsInRow - 1);\n        return Optional.some({\n            row: newRow,\n            column: newCol\n        });\n    });\n    const cycleRight$1 = (values, index, numRows, numCols) => cycleHorizontal$1(values, index, numRows, numCols, +1);\n    const cycleLeft$1 = (values, index, numRows, numCols) => cycleHorizontal$1(values, index, numRows, numCols, -1);\n    const cycleUp$1 = (values, index, numRows, numCols) => cycleVertical$1(values, index, numRows, numCols, -1);\n    const cycleDown$1 = (values, index, numRows, numCols) => cycleVertical$1(values, index, numRows, numCols, +1);\n\n    const schema$y = [\n        required$1('selector'),\n        defaulted('execute', defaultExecute),\n        onKeyboardHandler('onEscape'),\n        defaulted('captureTab', false),\n        initSize()\n    ];\n    const focusIn$4 = (component, gridConfig, _gridState) => {\n        descendant(component.element, gridConfig.selector).each((first) => {\n            gridConfig.focusManager.set(component, first);\n        });\n    };\n    const findCurrent$1 = (component, gridConfig) => gridConfig.focusManager.get(component).bind((elem) => closest$3(elem, gridConfig.selector));\n    const execute$3 = (component, simulatedEvent, gridConfig, _gridState) => findCurrent$1(component, gridConfig)\n        .bind((focused) => gridConfig.execute(component, simulatedEvent, focused));\n    const doMove$2 = (cycle) => (element, focused, gridConfig, gridState) => locateVisible(element, focused, gridConfig.selector)\n        .bind((identified) => cycle(identified.candidates, identified.index, gridState.getNumRows().getOr(gridConfig.initSize.numRows), gridState.getNumColumns().getOr(gridConfig.initSize.numColumns)));\n    const handleTab = (_component, _simulatedEvent, gridConfig) => gridConfig.captureTab ? Optional.some(true) : Optional.none();\n    const doEscape$1 = (component, simulatedEvent, gridConfig) => gridConfig.onEscape(component, simulatedEvent);\n    const moveLeft$3 = doMove$2(cycleLeft$1);\n    const moveRight$3 = doMove$2(cycleRight$1);\n    const moveNorth$1 = doMove$2(cycleUp$1);\n    const moveSouth$1 = doMove$2(cycleDown$1);\n    const getKeydownRules$4 = constant$1([\n        rule(inSet(LEFT), west(moveLeft$3, moveRight$3)),\n        rule(inSet(RIGHT), east(moveLeft$3, moveRight$3)),\n        rule(inSet(UP), north(moveNorth$1)),\n        rule(inSet(DOWN), south(moveSouth$1)),\n        rule(and([isShift$1, inSet(TAB)]), handleTab),\n        rule(and([isNotShift, inSet(TAB)]), handleTab),\n        // Probably should make whether space is used configurable\n        rule(inSet(SPACE.concat(ENTER)), execute$3)\n    ]);\n    const getKeyupRules$4 = constant$1([\n        rule(inSet(ESCAPE), doEscape$1),\n        rule(inSet(SPACE), stopEventForFirefox)\n    ]);\n    var FlatgridType = typical(schema$y, flatgrid$1, getKeydownRules$4, getKeyupRules$4, () => Optional.some(focusIn$4));\n\n    const f = (container, selector, current, delta, getNewIndex) => {\n        const isDisabledButton = (candidate) => name$3(candidate) === 'button' && get$g(candidate, 'disabled') === 'disabled';\n        const tryNewIndex = (initial, index, candidates) => getNewIndex(initial, index, delta, 0, candidates.length - 1, candidates[index], (newIndex) => isDisabledButton(candidates[newIndex]) ?\n            tryNewIndex(initial, newIndex, candidates) :\n            Optional.from(candidates[newIndex]));\n        // I wonder if this will be a problem when the focused element is invisible (shouldn't happen)\n        return locateVisible(container, current, selector).bind((identified) => {\n            const index = identified.index;\n            const candidates = identified.candidates;\n            return tryNewIndex(index, index, candidates);\n        });\n    };\n    const horizontalWithoutCycles = (container, selector, current, delta) => f(container, selector, current, delta, (prevIndex, v, d, min, max, oldCandidate, onNewIndex) => {\n        const newIndex = clamp(v + d, min, max);\n        return newIndex === prevIndex ? Optional.from(oldCandidate) : onNewIndex(newIndex);\n    });\n    const horizontal = (container, selector, current, delta) => f(container, selector, current, delta, (prevIndex, v, d, min, max, _oldCandidate, onNewIndex) => {\n        const newIndex = cycleBy(v, d, min, max);\n        // If we've cycled back to the original index, we've failed to find a new valid candidate\n        return newIndex === prevIndex ? Optional.none() : onNewIndex(newIndex);\n    });\n\n    const schema$x = [\n        required$1('selector'),\n        defaulted('getInitial', Optional.none),\n        defaulted('execute', defaultExecute),\n        onKeyboardHandler('onEscape'),\n        defaulted('executeOnMove', false),\n        defaulted('allowVertical', true),\n        defaulted('allowHorizontal', true),\n        defaulted('cycles', true)\n    ];\n    // TODO: Remove dupe.\n    // TODO: Probably use this for not just execution.\n    const findCurrent = (component, flowConfig) => flowConfig.focusManager.get(component).bind((elem) => closest$3(elem, flowConfig.selector));\n    const execute$2 = (component, simulatedEvent, flowConfig) => findCurrent(component, flowConfig).bind((focused) => flowConfig.execute(component, simulatedEvent, focused));\n    const focusIn$3 = (component, flowConfig, _state) => {\n        flowConfig.getInitial(component).orThunk(() => descendant(component.element, flowConfig.selector)).each((first) => {\n            flowConfig.focusManager.set(component, first);\n        });\n    };\n    const moveLeft$2 = (element, focused, info) => (info.cycles ? horizontal : horizontalWithoutCycles)(element, info.selector, focused, -1);\n    const moveRight$2 = (element, focused, info) => (info.cycles ? horizontal : horizontalWithoutCycles)(element, info.selector, focused, +1);\n    const doMove$1 = (movement) => (component, simulatedEvent, flowConfig, flowState) => movement(component, simulatedEvent, flowConfig, flowState).bind(() => flowConfig.executeOnMove ?\n        execute$2(component, simulatedEvent, flowConfig) :\n        Optional.some(true));\n    const doEscape = (component, simulatedEvent, flowConfig) => flowConfig.onEscape(component, simulatedEvent);\n    const getKeydownRules$3 = (_component, _se, flowConfig, _flowState) => {\n        const westMovers = [...flowConfig.allowHorizontal ? LEFT : []].concat(flowConfig.allowVertical ? UP : []);\n        const eastMovers = [...flowConfig.allowHorizontal ? RIGHT : []].concat(flowConfig.allowVertical ? DOWN : []);\n        return [\n            rule(inSet(westMovers), doMove$1(west(moveLeft$2, moveRight$2))),\n            rule(inSet(eastMovers), doMove$1(east(moveLeft$2, moveRight$2))),\n            rule(inSet(ENTER), execute$2),\n            rule(inSet(SPACE), execute$2)\n        ];\n    };\n    const getKeyupRules$3 = constant$1([\n        rule(inSet(SPACE), stopEventForFirefox),\n        rule(inSet(ESCAPE), doEscape)\n    ]);\n    var FlowType = typical(schema$x, NoState.init, getKeydownRules$3, getKeyupRules$3, () => Optional.some(focusIn$3));\n\n    const toCell = (matrix, rowIndex, columnIndex) => Optional.from(matrix[rowIndex]).bind((row) => Optional.from(row[columnIndex]).map((cell) => ({\n        rowIndex,\n        columnIndex,\n        cell\n    })));\n    const cycleHorizontal = (matrix, rowIndex, startCol, deltaCol) => {\n        const row = matrix[rowIndex];\n        const colsInRow = row.length;\n        const newColIndex = cycleBy(startCol, deltaCol, 0, colsInRow - 1);\n        return toCell(matrix, rowIndex, newColIndex);\n    };\n    const cycleVertical = (matrix, colIndex, startRow, deltaRow) => {\n        const nextRowIndex = cycleBy(startRow, deltaRow, 0, matrix.length - 1);\n        const colsInNextRow = matrix[nextRowIndex].length;\n        const nextColIndex = clamp(colIndex, 0, colsInNextRow - 1);\n        return toCell(matrix, nextRowIndex, nextColIndex);\n    };\n    const moveHorizontal = (matrix, rowIndex, startCol, deltaCol) => {\n        const row = matrix[rowIndex];\n        const colsInRow = row.length;\n        const newColIndex = clamp(startCol + deltaCol, 0, colsInRow - 1);\n        return toCell(matrix, rowIndex, newColIndex);\n    };\n    const moveVertical = (matrix, colIndex, startRow, deltaRow) => {\n        const nextRowIndex = clamp(startRow + deltaRow, 0, matrix.length - 1);\n        const colsInNextRow = matrix[nextRowIndex].length;\n        const nextColIndex = clamp(colIndex, 0, colsInNextRow - 1);\n        return toCell(matrix, nextRowIndex, nextColIndex);\n    };\n    // return address(Math.floor(index / columns), index % columns);\n    const cycleRight = (matrix, startRow, startCol) => cycleHorizontal(matrix, startRow, startCol, +1);\n    const cycleLeft = (matrix, startRow, startCol) => cycleHorizontal(matrix, startRow, startCol, -1);\n    const cycleUp = (matrix, startRow, startCol) => cycleVertical(matrix, startCol, startRow, -1);\n    const cycleDown = (matrix, startRow, startCol) => cycleVertical(matrix, startCol, startRow, +1);\n    const moveLeft$1 = (matrix, startRow, startCol) => moveHorizontal(matrix, startRow, startCol, -1);\n    const moveRight$1 = (matrix, startRow, startCol) => moveHorizontal(matrix, startRow, startCol, +1);\n    const moveUp$1 = (matrix, startRow, startCol) => moveVertical(matrix, startCol, startRow, -1);\n    const moveDown$1 = (matrix, startRow, startCol) => moveVertical(matrix, startCol, startRow, +1);\n\n    const schema$w = [\n        requiredObjOf('selectors', [\n            required$1('row'),\n            required$1('cell')\n        ]),\n        // Used to determine whether pressing right/down at the end cycles back to the start/top\n        defaulted('cycles', true),\n        defaulted('previousSelector', Optional.none),\n        defaulted('execute', defaultExecute)\n    ];\n    const focusIn$2 = (component, matrixConfig, _state) => {\n        const focused = matrixConfig.previousSelector(component).orThunk(() => {\n            const selectors = matrixConfig.selectors;\n            return descendant(component.element, selectors.cell);\n        });\n        focused.each((cell) => {\n            matrixConfig.focusManager.set(component, cell);\n        });\n    };\n    const execute$1 = (component, simulatedEvent, matrixConfig) => search(component.element).bind((focused) => matrixConfig.execute(component, simulatedEvent, focused));\n    const toMatrix = (rows, matrixConfig) => map$2(rows, (row) => descendants(row, matrixConfig.selectors.cell));\n    const doMove = (ifCycle, ifMove) => (element, focused, matrixConfig) => {\n        const move = matrixConfig.cycles ? ifCycle : ifMove;\n        return closest$3(focused, matrixConfig.selectors.row).bind((inRow) => {\n            const cellsInRow = descendants(inRow, matrixConfig.selectors.cell);\n            return findIndex(cellsInRow, focused).bind((colIndex) => {\n                const allRows = descendants(element, matrixConfig.selectors.row);\n                return findIndex(allRows, inRow).bind((rowIndex) => {\n                    // Now, make the matrix.\n                    const matrix = toMatrix(allRows, matrixConfig);\n                    return move(matrix, rowIndex, colIndex).map((next) => next.cell);\n                });\n            });\n        });\n    };\n    const moveLeft = doMove(cycleLeft, moveLeft$1);\n    const moveRight = doMove(cycleRight, moveRight$1);\n    const moveNorth = doMove(cycleUp, moveUp$1);\n    const moveSouth = doMove(cycleDown, moveDown$1);\n    const getKeydownRules$2 = constant$1([\n        rule(inSet(LEFT), west(moveLeft, moveRight)),\n        rule(inSet(RIGHT), east(moveLeft, moveRight)),\n        rule(inSet(UP), north(moveNorth)),\n        rule(inSet(DOWN), south(moveSouth)),\n        rule(inSet(SPACE.concat(ENTER)), execute$1)\n    ]);\n    const getKeyupRules$2 = constant$1([\n        rule(inSet(SPACE), stopEventForFirefox)\n    ]);\n    var MatrixType = typical(schema$w, NoState.init, getKeydownRules$2, getKeyupRules$2, () => Optional.some(focusIn$2));\n\n    const schema$v = [\n        required$1('selector'),\n        defaulted('execute', defaultExecute),\n        defaulted('moveOnTab', false)\n    ];\n    const execute = (component, simulatedEvent, menuConfig) => menuConfig.focusManager.get(component).bind((focused) => menuConfig.execute(component, simulatedEvent, focused));\n    const focusIn$1 = (component, menuConfig, _state) => {\n        // Maybe keep selection if it was there before\n        descendant(component.element, menuConfig.selector).each((first) => {\n            menuConfig.focusManager.set(component, first);\n        });\n    };\n    const moveUp = (element, focused, info) => horizontal(element, info.selector, focused, -1);\n    const moveDown = (element, focused, info) => horizontal(element, info.selector, focused, +1);\n    const fireShiftTab = (component, simulatedEvent, menuConfig, menuState) => menuConfig.moveOnTab ? move$1(moveUp)(component, simulatedEvent, menuConfig, menuState) : Optional.none();\n    const fireTab = (component, simulatedEvent, menuConfig, menuState) => menuConfig.moveOnTab ? move$1(moveDown)(component, simulatedEvent, menuConfig, menuState) : Optional.none();\n    const getKeydownRules$1 = constant$1([\n        rule(inSet(UP), move$1(moveUp)),\n        rule(inSet(DOWN), move$1(moveDown)),\n        rule(and([isShift$1, inSet(TAB)]), fireShiftTab),\n        rule(and([isNotShift, inSet(TAB)]), fireTab),\n        rule(inSet(ENTER), execute),\n        rule(inSet(SPACE), execute)\n    ]);\n    const getKeyupRules$1 = constant$1([\n        rule(inSet(SPACE), stopEventForFirefox)\n    ]);\n    var MenuType = typical(schema$v, NoState.init, getKeydownRules$1, getKeyupRules$1, () => Optional.some(focusIn$1));\n\n    const schema$u = [\n        onKeyboardHandler('onSpace'),\n        onKeyboardHandler('onEnter'),\n        onKeyboardHandler('onShiftEnter'),\n        onKeyboardHandler('onLeft'),\n        onKeyboardHandler('onRight'),\n        onKeyboardHandler('onTab'),\n        onKeyboardHandler('onShiftTab'),\n        onKeyboardHandler('onUp'),\n        onKeyboardHandler('onDown'),\n        onKeyboardHandler('onEscape'),\n        defaulted('stopSpaceKeyup', false),\n        option$3('focusIn')\n    ];\n    const getKeydownRules = (component, simulatedEvent, specialInfo) => [\n        rule(inSet(SPACE), specialInfo.onSpace),\n        rule(and([isNotShift, inSet(ENTER)]), specialInfo.onEnter),\n        rule(and([isShift$1, inSet(ENTER)]), specialInfo.onShiftEnter),\n        rule(and([isShift$1, inSet(TAB)]), specialInfo.onShiftTab),\n        rule(and([isNotShift, inSet(TAB)]), specialInfo.onTab),\n        rule(inSet(UP), specialInfo.onUp),\n        rule(inSet(DOWN), specialInfo.onDown),\n        rule(inSet(LEFT), specialInfo.onLeft),\n        rule(inSet(RIGHT), specialInfo.onRight),\n        rule(inSet(SPACE), specialInfo.onSpace)\n    ];\n    const getKeyupRules = (component, simulatedEvent, specialInfo) => [\n        ...(specialInfo.stopSpaceKeyup ? [rule(inSet(SPACE), stopEventForFirefox)] : []),\n        rule(inSet(ESCAPE), specialInfo.onEscape)\n    ];\n    var SpecialType = typical(schema$u, NoState.init, getKeydownRules, getKeyupRules, (specialInfo) => specialInfo.focusIn);\n\n    const acyclic = AcyclicType.schema();\n    const cyclic = CyclicType.schema();\n    const flow = FlowType.schema();\n    const flatgrid = FlatgridType.schema();\n    const matrix = MatrixType.schema();\n    const execution = ExecutionType.schema();\n    const menu = MenuType.schema();\n    const special = SpecialType.schema();\n\n    var KeyboardBranches = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        acyclic: acyclic,\n        cyclic: cyclic,\n        flow: flow,\n        flatgrid: flatgrid,\n        matrix: matrix,\n        execution: execution,\n        menu: menu,\n        special: special\n    });\n\n    const isFlatgridState = (keyState) => hasNonNullableKey(keyState, 'setGridSize');\n    const Keying = createModes({\n        branchKey: 'mode',\n        branches: KeyboardBranches,\n        name: 'keying',\n        active: {\n            events: (keyingConfig, keyingState) => {\n                const handler = keyingConfig.handler;\n                return handler.toEvents(keyingConfig, keyingState);\n            }\n        },\n        apis: {\n            focusIn: (component, keyConfig, keyState) => {\n                // If we have a custom sendFocusIn function, use that.\n                // Otherwise, we just trigger focus on the outer element.\n                keyConfig.sendFocusIn(keyConfig).fold(() => {\n                    component.getSystem().triggerFocus(component.element, component.element);\n                }, (sendFocusIn) => {\n                    sendFocusIn(component, keyConfig, keyState);\n                });\n            },\n            // These APIs are going to be interesting because they are not\n            // available for all keying modes\n            setGridSize: (component, keyConfig, keyState, numRows, numColumns) => {\n                if (!isFlatgridState(keyState)) {\n                    // eslint-disable-next-line no-console\n                    console.error('Layout does not support setGridSize');\n                }\n                else {\n                    keyState.setGridSize(numRows, numColumns);\n                }\n            }\n        },\n        state: KeyingState\n    });\n\n    const premadeTag = generate$6('alloy-premade');\n    const premade$1 = (comp) => {\n        Object.defineProperty(comp.element.dom, premadeTag, {\n            value: comp.uid,\n            writable: true\n        });\n        return wrap(premadeTag, comp);\n    };\n    const isPremade = (element) => has$2(element.dom, premadeTag);\n    const getPremade = (spec) => get$h(spec, premadeTag);\n    const makeApi = (f) => markAsSketchApi((component, ...rest) => f(component.getApis(), component, ...rest), f);\n\n    const isConnected = (comp) => comp.getSystem().isConnected();\n    const fireDetaching = (component) => {\n        emit(component, detachedFromDom());\n        const children = component.components();\n        each$1(children, fireDetaching);\n    };\n    const fireAttaching = (component) => {\n        const children = component.components();\n        each$1(children, fireAttaching);\n        emit(component, attachedToDom());\n    };\n    // Unlike attach, a virtualAttach makes no actual DOM changes.\n    // This is because it should only be used in a situation\n    // where we are patching an existing element.\n    const virtualAttach = (parent, child) => {\n        // So we still add it to the world\n        parent.getSystem().addToWorld(child);\n        // And we fire attaching ONLY if it's already in the DOM\n        if (inBody(parent.element)) {\n            fireAttaching(child);\n        }\n    };\n    // Unlike detach, a virtualDetach makes no actual DOM changes.\n    // This is because it's used in patching circumstances.\n    const virtualDetach = (comp) => {\n        fireDetaching(comp);\n        comp.getSystem().removeFromWorld(comp);\n    };\n    const attach$1 = (parent, child) => {\n        append$2(parent.element, child.element);\n    };\n    const detachChildren$1 = (component) => {\n        // This will not detach the component, but will detach its children and sync at the end.\n        each$1(component.components(), (childComp) => remove$7(childComp.element));\n        // Clear the component also.\n        empty(component.element);\n        component.syncComponents();\n    };\n    const replaceChildren = (component, newSpecs, buildNewChildren) => {\n        // Detach all existing children\n        const subs = component.components();\n        detachChildren$1(component);\n        const newChildren = buildNewChildren(newSpecs);\n        // Determine which components have been deleted and remove them from the world\n        const deleted = difference(subs, newChildren);\n        each$1(deleted, (comp) => {\n            fireDetaching(comp);\n            component.getSystem().removeFromWorld(comp);\n        });\n        // Add all new components\n        each$1(newChildren, (childComp) => {\n            // If the component isn't connected, ie is new, then we also need to add it to the world\n            if (!isConnected(childComp)) {\n                component.getSystem().addToWorld(childComp);\n                attach$1(component, childComp);\n                if (inBody(component.element)) {\n                    fireAttaching(childComp);\n                }\n            }\n            else {\n                attach$1(component, childComp);\n            }\n        });\n        component.syncComponents();\n    };\n    const virtualReplaceChildren = (component, newSpecs, buildNewChildren) => {\n        // When replacing we don't want to fire detachedFromDom and attachedToDom again for a premade that has just had its position in the children moved around,\n        // so we only detach initially if we aren't a premade. Premades will be detached later, but only if they are no longer in the child list.\n        const subs = component.components();\n        const existingComps = bind$3(newSpecs, (spec) => getPremade(spec).toArray());\n        each$1(subs, (childComp) => {\n            if (!contains$2(existingComps, childComp)) {\n                virtualDetach(childComp);\n            }\n        });\n        const newChildren = buildNewChildren(newSpecs);\n        // Determine which components have been deleted and remove them from the world\n        // It's probable the component has already been detached beforehand so only\n        // detach what's still attached to the world (i.e removed premades)\n        const deleted = difference(subs, newChildren);\n        each$1(deleted, (deletedComp) => {\n            if (isConnected(deletedComp)) {\n                virtualDetach(deletedComp);\n            }\n        });\n        // Add all new components\n        each$1(newChildren, (childComp) => {\n            // If the component isn't connected, ie is new, then we also need to add it to the world\n            if (!isConnected(childComp)) {\n                virtualAttach(component, childComp);\n            }\n        });\n        component.syncComponents();\n    };\n\n    const attach = (parent, child) => {\n        attachWith(parent, child, append$2);\n    };\n    const attachWith = (parent, child, insertion) => {\n        parent.getSystem().addToWorld(child);\n        insertion(parent.element, child.element);\n        if (inBody(parent.element)) {\n            fireAttaching(child);\n        }\n        parent.syncComponents();\n    };\n    const doDetach = (component) => {\n        fireDetaching(component);\n        remove$7(component.element);\n        component.getSystem().removeFromWorld(component);\n    };\n    const detach = (component) => {\n        const parent$1 = parent(component.element).bind((p) => component.getSystem().getByDom(p).toOptional());\n        doDetach(component);\n        parent$1.each((p) => {\n            p.syncComponents();\n        });\n    };\n    const detachChildren = (component) => {\n        // This will not detach the component, but will detach its children and sync at the end.\n        const subs = component.components();\n        each$1(subs, doDetach);\n        // Clear the component also.\n        empty(component.element);\n        component.syncComponents();\n    };\n    const attachSystem = (element, guiSystem) => {\n        attachSystemWith(element, guiSystem, append$2);\n    };\n    const attachSystemAfter = (element, guiSystem) => {\n        attachSystemWith(element, guiSystem, after$1);\n    };\n    const attachSystemWith = (element, guiSystem, inserter) => {\n        inserter(element, guiSystem.element);\n        const children$1 = children(guiSystem.element);\n        each$1(children$1, (child) => {\n            guiSystem.getByDom(child).each(fireAttaching);\n        });\n    };\n    const detachSystem = (guiSystem) => {\n        const children$1 = children(guiSystem.element);\n        each$1(children$1, (child) => {\n            guiSystem.getByDom(child).each(fireDetaching);\n        });\n        remove$7(guiSystem.element);\n    };\n\n    const determineObsoleted = (parent, index, oldObsoleted) => {\n        // When dealing with premades, the process of building something may have moved existing nodes around, so we see\n        // if the child at the index position is still the same. If it isn't, we need to introduce some complex behaviour\n        //\n        // Example:\n        // ```<div><premade></premade><span></span></div>```\n        // and then moving the premade inside a blockquote\n        // ```<div><blockquote><premade></premade></blockquote><span></span></div>```\n        //\n        // so when you go to replace the first thing it would think there is only 1 child which would be the span, so in\n        // this case we insert a marker to keep the span in the same spot.\n        const newObsoleted = child$2(parent, index);\n        return newObsoleted.map((newObs) => {\n            const elemChanged = oldObsoleted.exists((o) => !eq(o, newObs));\n            // Adding a marker prevents the case where a premade is added to something shifting it from where\n            // it was. That in turn un-synced all trailing children and made it so they couldn't be patched.\n            if (elemChanged) {\n                const oldTag = oldObsoleted.map(name$3).getOr('span');\n                const marker = SugarElement.fromTag(oldTag);\n                before$1(newObs, marker);\n                return marker;\n            }\n            else {\n                return newObs;\n            }\n        });\n    };\n    const ensureInDom = (parent, child, obsoleted) => {\n        obsoleted.fold(\n        // There is nothing here, so just append to the parent\n        () => append$2(parent, child), (obs) => {\n            if (!eq(obs, child)) {\n                // This situation occurs when the DOM element that has been patched when building it is no\n                // longer the one that we need to replace. This is probably caused by premades.\n                before$1(obs, child);\n                remove$7(obs);\n            }\n        });\n    };\n    const patchChildrenWith = (parent, nu, f) => {\n        const builtChildren = map$2(nu, f);\n        // Need to regather the children in case some of the previous children have moved\n        // to an earlier index. So this just prunes any leftover children in the dom.\n        const currentChildren = children(parent);\n        each$1(currentChildren.slice(builtChildren.length), remove$7);\n        return builtChildren;\n    };\n    const patchSpecChild = (parent, index, spec, build) => {\n        // Before building anything, this is the DOM element we are going to try to use.\n        const oldObsoleted = child$2(parent, index);\n        const childComp = build(spec, oldObsoleted);\n        const obsoleted = determineObsoleted(parent, index, oldObsoleted);\n        ensureInDom(parent, childComp.element, obsoleted);\n        return childComp;\n    };\n    const patchSpecChildren = (parent, specs, build) => patchChildrenWith(parent, specs, (spec, index) => patchSpecChild(parent, index, spec, build));\n    const patchDomChildren = (parent, nodes) => patchChildrenWith(parent, nodes, (node, index) => {\n        const optObsoleted = child$2(parent, index);\n        ensureInDom(parent, node, optObsoleted);\n        return node;\n    });\n\n    const preserve = (f, container) => {\n        const dos = getRootNode(container);\n        const refocus = active$1(dos).bind((focused) => {\n            const hasFocus = (elem) => eq(focused, elem);\n            return hasFocus(container) ? Optional.some(container) : descendant$1(container, hasFocus);\n        });\n        const result = f(container);\n        // If there is a focussed element, the F function may cause focus to be lost (such as by hiding elements). Restore it afterwards.\n        refocus.each((oldFocus) => {\n            active$1(dos).filter((newFocus) => eq(newFocus, oldFocus)).fold(() => {\n                // Only refocus if the focus has changed, otherwise we break IE\n                focus$4(oldFocus);\n            }, noop);\n        });\n        return result;\n    };\n\n    const withoutReuse = (parent, data) => {\n        preserve(() => {\n            replaceChildren(parent, data, () => map$2(data, parent.getSystem().build));\n        }, parent.element);\n    };\n    const withReuse = (parent, data) => {\n        // Note: We shouldn't need AriaPreserve since we're trying to keep the existing elements,\n        // but let's just do it for now just to be safe.\n        preserve(() => {\n            virtualReplaceChildren(parent, data, () => {\n                // Build the new children\n                return patchSpecChildren(parent.element, data, parent.getSystem().buildOrPatch);\n            });\n        }, parent.element);\n    };\n\n    const virtualReplace = (component, replacee, replaceeIndex, childSpec) => {\n        virtualDetach(replacee);\n        const child = patchSpecChild(component.element, replaceeIndex, childSpec, component.getSystem().buildOrPatch);\n        virtualAttach(component, child);\n        component.syncComponents();\n    };\n    const insert = (component, insertion, childSpec) => {\n        const child = component.getSystem().build(childSpec);\n        attachWith(component, child, insertion);\n    };\n    const replace = (component, replacee, replaceeIndex, childSpec) => {\n        detach(replacee);\n        insert(component, (p, c) => appendAt(p, c, replaceeIndex), childSpec);\n    };\n    const set$3 = (component, replaceConfig, replaceState, data) => {\n        const replacer = replaceConfig.reuseDom ? withReuse : withoutReuse;\n        return replacer(component, data);\n    };\n    const append = (component, replaceConfig, replaceState, appendee) => {\n        insert(component, append$2, appendee);\n    };\n    const prepend = (component, replaceConfig, replaceState, prependee) => {\n        insert(component, prepend$1, prependee);\n    };\n    // NOTE: Removee is going to be a component, not a spec.\n    const remove = (component, replaceConfig, replaceState, removee) => {\n        const children = contents(component);\n        const foundChild = find$5(children, (child) => eq(removee.element, child.element));\n        foundChild.each(detach);\n    };\n    // TODO: Rename\n    const contents = (component, _replaceConfig) => component.components();\n    const replaceAt = (component, replaceConfig, replaceState, replaceeIndex, replacer) => {\n        const children = contents(component);\n        return Optional.from(children[replaceeIndex]).map((replacee) => {\n            replacer.fold(() => detach(replacee), (r) => {\n                const replacer = replaceConfig.reuseDom ? virtualReplace : replace;\n                replacer(component, replacee, replaceeIndex, r);\n            });\n            return replacee;\n        });\n    };\n    const replaceBy = (component, replaceConfig, replaceState, replaceePred, replacer) => {\n        const children = contents(component);\n        return findIndex$1(children, replaceePred).bind((replaceeIndex) => replaceAt(component, replaceConfig, replaceState, replaceeIndex, replacer));\n    };\n\n    var ReplaceApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        append: append,\n        prepend: prepend,\n        remove: remove,\n        replaceAt: replaceAt,\n        replaceBy: replaceBy,\n        set: set$3,\n        contents: contents\n    });\n\n    const Replacing = create$3({\n        fields: [\n            defaultedBoolean('reuseDom', true)\n        ],\n        name: 'replacing',\n        apis: ReplaceApis\n    });\n\n    // The purpose of this check is to ensure that a simulated focus call is not going\n    // to recurse infinitely. Essentially, if the originator of the focus call is the same\n    // as the element receiving it, and it wasn't its own target, then stop the focus call\n    // and log a warning.\n    const isRecursive = (component, originator, target) => eq(originator, component.element) && !eq(originator, target);\n    const events$g = derive$2([\n        can(focus$3(), (component, simulatedEvent) => {\n            // originator may not always be there. Will need to check this.\n            const event = simulatedEvent.event;\n            const originator = event.originator;\n            const target = event.target;\n            if (isRecursive(component, originator, target)) {\n                // eslint-disable-next-line no-console\n                console.warn(focus$3() + ' did not get interpreted by the desired target. ' +\n                    '\\nOriginator: ' + element(originator) +\n                    '\\nTarget: ' + element(target) +\n                    '\\nCheck the ' + focus$3() + ' event handlers');\n                return false;\n            }\n            else {\n                return true;\n            }\n        })\n    ]);\n\n    var DefaultEvents = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$g\n    });\n\n    const prefix$1 = constant$1('alloy-id-');\n    const idAttr$1 = constant$1('data-alloy-id');\n\n    const prefix = prefix$1();\n    const idAttr = idAttr$1();\n    const write = (label, elem) => {\n        const id = generate$6(prefix + label);\n        writeOnly(elem, id);\n        return id;\n    };\n    const writeOnly = (elem, uid) => {\n        Object.defineProperty(elem.dom, idAttr, {\n            value: uid,\n            writable: true\n        });\n    };\n    const read = (elem) => {\n        const id = isElement$1(elem) ? elem.dom[idAttr] : null;\n        return Optional.from(id);\n    };\n    const generate$4 = (prefix) => generate$6(prefix);\n\n    const make$7 = identity;\n\n    const NoContextApi = (getComp) => {\n        const getMessage = (event) => `The component must be in a context to execute: ${event}` +\n            (getComp ? '\\n' + element(getComp().element) + ' is not in context.' : '');\n        const fail = (event) => () => {\n            throw new Error(getMessage(event));\n        };\n        const warn = (event) => () => {\n            // eslint-disable-next-line no-console\n            console.warn(getMessage(event));\n        };\n        return {\n            debugInfo: constant$1('fake'),\n            triggerEvent: warn('triggerEvent'),\n            triggerFocus: warn('triggerFocus'),\n            triggerEscape: warn('triggerEscape'),\n            broadcast: warn('broadcast'),\n            broadcastOn: warn('broadcastOn'),\n            broadcastEvent: warn('broadcastEvent'),\n            build: fail('build'),\n            buildOrPatch: fail('buildOrPatch'),\n            addToWorld: fail('addToWorld'),\n            removeFromWorld: fail('removeFromWorld'),\n            addToGui: fail('addToGui'),\n            removeFromGui: fail('removeFromGui'),\n            getByUid: fail('getByUid'),\n            getByDom: fail('getByDom'),\n            isConnected: never\n        };\n    };\n    const singleton = NoContextApi();\n\n    const generateFrom$1 = (spec, all) => {\n        /*\n         * This takes a basic record of configured behaviours, defaults their state\n         * and ensures that all the behaviours were valid. Will need to document\n         * this entire process. Let's see where this is used.\n         */\n        const schema = map$2(all, (a) => \n        // Optional here probably just due to ForeignGui listing everything it supports. Can most likely\n        // change it to strict once I fix the other errors.\n        optionObjOf(a.name(), [\n            required$1('config'),\n            defaulted('state', NoState)\n        ]));\n        const validated = asRaw('component.behaviours', objOf(schema), spec.behaviours).fold((errInfo) => {\n            throw new Error(formatError(errInfo) + '\\nComplete spec:\\n' +\n                JSON.stringify(spec, null, 2));\n        }, identity);\n        return {\n            list: all,\n            data: map$1(validated, (optBlobThunk) => {\n                const output = optBlobThunk.map((blob) => ({\n                    config: blob.config,\n                    state: blob.state.init(blob.config)\n                }));\n                return constant$1(output);\n            })\n        };\n    };\n    const getBehaviours$3 = (bData) => bData.list;\n    const getData$2 = (bData) => bData.data;\n\n    const byInnerKey = (data, tuple) => {\n        const r = {};\n        each(data, (detail, key) => {\n            each(detail, (value, indexKey) => {\n                const chain = get$h(r, indexKey).getOr([]);\n                r[indexKey] = chain.concat([\n                    tuple(key, value)\n                ]);\n            });\n        });\n        return r;\n    };\n\n    // Based on all the behaviour exhibits, and the original dom modification, identify\n    // the overall combined dom modification that needs to occur\n    const combine$1 = (info, baseMod, behaviours, base) => {\n        // Clone the object so we can change it.\n        const modsByBehaviour = { ...baseMod };\n        each$1(behaviours, (behaviour) => {\n            modsByBehaviour[behaviour.name()] = behaviour.exhibit(info, base);\n        });\n        // byAspect format: { classes: [ { name: Toggling, modification: [ 'selected' ] } ] }\n        const byAspect = byInnerKey(modsByBehaviour, (name, modification) => ({ name, modification }));\n        const combineObjects = (objects) => foldr(objects, (b, a) => ({ ...a.modification, ...b }), {});\n        const combinedClasses = foldr(byAspect.classes, (b, a) => a.modification.concat(b), []);\n        const combinedAttributes = combineObjects(byAspect.attributes);\n        const combinedStyles = combineObjects(byAspect.styles);\n        return nu$2({\n            classes: combinedClasses,\n            attributes: combinedAttributes,\n            styles: combinedStyles\n        });\n    };\n\n    const sortKeys = (label, keyName, array, order) => {\n        try {\n            const sorted = sort(array, (a, b) => {\n                const aKey = a[keyName];\n                const bKey = b[keyName];\n                const aIndex = order.indexOf(aKey);\n                const bIndex = order.indexOf(bKey);\n                if (aIndex === -1) {\n                    throw new Error('The ordering for ' + label + ' does not have an entry for ' + aKey +\n                        '.\\nOrder specified: ' + JSON.stringify(order, null, 2));\n                }\n                if (bIndex === -1) {\n                    throw new Error('The ordering for ' + label + ' does not have an entry for ' + bKey +\n                        '.\\nOrder specified: ' + JSON.stringify(order, null, 2));\n                }\n                if (aIndex < bIndex) {\n                    return -1;\n                }\n                else if (bIndex < aIndex) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n            return Result.value(sorted);\n        }\n        catch (err) {\n            return Result.error([err]);\n        }\n    };\n\n    const uncurried = (handler, purpose) => ({\n        handler,\n        purpose\n    });\n    const curried = (handler, purpose) => ({\n        cHandler: handler,\n        purpose\n    });\n    const curryArgs = (descHandler, extraArgs) => curried(curry.apply(undefined, [descHandler.handler].concat(extraArgs)), descHandler.purpose);\n    const getCurried = (descHandler) => descHandler.cHandler;\n\n    const behaviourTuple = (name, handler) => ({\n        name,\n        handler\n    });\n    const nameToHandlers = (behaviours, info) => {\n        const r = {};\n        each$1(behaviours, (behaviour) => {\n            r[behaviour.name()] = behaviour.handlers(info);\n        });\n        return r;\n    };\n    const groupByEvents = (info, behaviours, base) => {\n        const behaviourEvents = {\n            ...base,\n            ...nameToHandlers(behaviours, info)\n        };\n        // Now, with all of these events, we need to index by event name\n        return byInnerKey(behaviourEvents, behaviourTuple);\n    };\n    const combine = (info, eventOrder, behaviours, base) => {\n        const byEventName = groupByEvents(info, behaviours, base);\n        return combineGroups(byEventName, eventOrder);\n    };\n    const assemble = (rawHandler) => {\n        const handler = read$1(rawHandler);\n        return (component, simulatedEvent, ...rest) => {\n            const args = [component, simulatedEvent].concat(rest);\n            if (handler.abort.apply(undefined, args)) {\n                simulatedEvent.stop();\n            }\n            else if (handler.can.apply(undefined, args)) {\n                handler.run.apply(undefined, args);\n            }\n        };\n    };\n    const missingOrderError = (eventName, tuples) => Result.error([\n        'The event (' + eventName + ') has more than one behaviour that listens to it.\\nWhen this occurs, you must ' +\n            'specify an event ordering for the behaviours in your spec (e.g. [ \"listing\", \"toggling\" ]).\\nThe behaviours that ' +\n            'can trigger it are: ' + JSON.stringify(map$2(tuples, (c) => c.name), null, 2)\n    ]);\n    const fuse = (tuples, eventOrder, eventName) => {\n        // ASSUMPTION: tuples.length will never be 0, because it wouldn't have an entry if it was 0\n        const order = eventOrder[eventName];\n        if (!order) {\n            return missingOrderError(eventName, tuples);\n        }\n        else {\n            return sortKeys('Event: ' + eventName, 'name', tuples, order).map((sortedTuples) => {\n                const handlers = map$2(sortedTuples, (tuple) => tuple.handler);\n                return fuse$1(handlers);\n            });\n        }\n    };\n    const combineGroups = (byEventName, eventOrder) => {\n        const r = mapToArray(byEventName, (tuples, eventName) => {\n            const combined = tuples.length === 1 ? Result.value(tuples[0].handler) : fuse(tuples, eventOrder, eventName);\n            return combined.map((handler) => {\n                const assembled = assemble(handler);\n                const purpose = tuples.length > 1 ? filter$2(eventOrder[eventName], (o) => exists(tuples, (t) => t.name === o)).join(' > ') : tuples[0].name;\n                return wrap(eventName, uncurried(assembled, purpose));\n            });\n        });\n        return consolidate(r, {});\n    };\n\n    const baseBehaviour = 'alloy.base.behaviour';\n    const schema$t = objOf([\n        field$1('dom', 'dom', required$2(), objOf([\n            // Note, no children.\n            required$1('tag'),\n            defaulted('styles', {}),\n            defaulted('classes', []),\n            defaulted('attributes', {}),\n            option$3('value'),\n            option$3('innerHtml')\n        ])),\n        required$1('components'),\n        required$1('uid'),\n        defaulted('events', {}),\n        defaulted('apis', {}),\n        // Use mergeWith in the future when pre-built behaviours conflict\n        field$1('eventOrder', 'eventOrder', mergeWith({\n            // Note, not using constant behaviour names to avoid code size of unused behaviours\n            [execute$5()]: ['disabling', baseBehaviour, 'toggling', 'typeaheadevents'],\n            [focus$3()]: [baseBehaviour, 'focusing', 'keying'],\n            [systemInit()]: [baseBehaviour, 'disabling', 'toggling', 'representing', 'tooltipping'],\n            [input()]: [baseBehaviour, 'representing', 'streaming', 'invalidating'],\n            [detachedFromDom()]: [baseBehaviour, 'representing', 'item-events', 'toolbar-button-events', 'tooltipping'],\n            [mousedown()]: ['focusing', baseBehaviour, 'item-type-events'],\n            [touchstart()]: ['focusing', baseBehaviour, 'item-type-events'],\n            [mouseover()]: ['item-type-events', 'tooltipping'],\n            [receive()]: ['receiving', 'reflecting', 'tooltipping']\n        }), anyValue()),\n        option$3('domModification')\n    ]);\n    const toInfo = (spec) => asRaw('custom.definition', schema$t, spec);\n    const toDefinition = (detail) => \n    // EFFICIENCY: Consider not merging here.\n    ({\n        ...detail.dom,\n        uid: detail.uid,\n        domChildren: map$2(detail.components, (comp) => comp.element)\n    });\n    const toModification = (detail) => detail.domModification.fold(() => nu$2({}), nu$2);\n    const toEvents = (info) => info.events;\n\n    const diffKeyValueSet = (newObj, oldObj) => {\n        const newKeys = keys(newObj);\n        const oldKeys = keys(oldObj);\n        const toRemove = difference(oldKeys, newKeys);\n        const toSet = bifilter(newObj, (v, k) => {\n            return !has$2(oldObj, k) || v !== oldObj[k];\n        }).t;\n        return { toRemove, toSet };\n    };\n    const reconcileToDom = (definition, obsoleted) => {\n        const { class: clazz, style, ...existingAttributes } = clone$2(obsoleted);\n        const { toSet: attrsToSet, toRemove: attrsToRemove } = diffKeyValueSet(definition.attributes, existingAttributes);\n        const updateAttrs = () => {\n            each$1(attrsToRemove, (a) => remove$8(obsoleted, a));\n            setAll$1(obsoleted, attrsToSet);\n        };\n        const existingStyles = getAllRaw(obsoleted);\n        const { toSet: stylesToSet, toRemove: stylesToRemove } = diffKeyValueSet(definition.styles, existingStyles);\n        const updateStyles = () => {\n            each$1(stylesToRemove, (s) => remove$6(obsoleted, s));\n            setAll(obsoleted, stylesToSet);\n        };\n        const existingClasses = get$7(obsoleted);\n        const classesToRemove = difference(existingClasses, definition.classes);\n        const classesToAdd = difference(definition.classes, existingClasses);\n        const updateClasses = () => {\n            add$1(obsoleted, classesToAdd);\n            remove$2(obsoleted, classesToRemove);\n        };\n        const updateHtml = (html) => {\n            set$8(obsoleted, html);\n        };\n        const updateChildren = () => {\n            const children = definition.domChildren;\n            patchDomChildren(obsoleted, children);\n        };\n        const updateValue = () => {\n            const valueElement = obsoleted;\n            const value = definition.value.getOrUndefined();\n            if (value !== get$5(valueElement)) {\n                // TINY-8736: Value.set throws an error in case the value is undefined\n                set$4(valueElement, value !== null && value !== void 0 ? value : '');\n            }\n        };\n        updateAttrs();\n        updateClasses();\n        updateStyles();\n        // Patching can only support one form of children, so we only update the html or the children, but never both\n        definition.innerHtml.fold(updateChildren, updateHtml);\n        updateValue();\n        return obsoleted;\n    };\n\n    const introduceToDom = (definition) => {\n        const subject = SugarElement.fromTag(definition.tag);\n        setAll$1(subject, definition.attributes);\n        add$1(subject, definition.classes);\n        setAll(subject, definition.styles);\n        // Remember: Order of innerHtml vs children is important.\n        definition.innerHtml.each((html) => set$8(subject, html));\n        // Children are already elements.\n        const children = definition.domChildren;\n        append$1(subject, children);\n        definition.value.each((value) => {\n            set$4(subject, value);\n        });\n        return subject;\n    };\n    const attemptPatch = (definition, obsoleted) => {\n        try {\n            const e = reconcileToDom(definition, obsoleted);\n            return Optional.some(e);\n        }\n        catch (_a) {\n            return Optional.none();\n        }\n    };\n    // If a component has both innerHtml and children then we can't patch it\n    const hasMixedChildren = (definition) => definition.innerHtml.isSome() && definition.domChildren.length > 0;\n    const renderToDom = (definition, optObsoleted) => {\n        // If the current tag doesn't match, let's not try to add anything further down the tree.\n        // If it does match though and we don't have mixed children then attempt to patch attributes etc...\n        const canBePatched = (candidate) => name$3(candidate) === definition.tag && !hasMixedChildren(definition) && !isPremade(candidate);\n        const elem = optObsoleted\n            .filter(canBePatched)\n            .bind((obsoleted) => attemptPatch(definition, obsoleted))\n            .getOrThunk(() => introduceToDom(definition));\n        writeOnly(elem, definition.uid);\n        return elem;\n    };\n\n    // This goes through the list of behaviours defined for a particular spec (removing anything\n    // that has been revoked), and returns the BehaviourType (e.g. Sliding)\n    const getBehaviours$2 = (spec) => {\n        const behaviours = get$h(spec, 'behaviours').getOr({});\n        return bind$3(keys(behaviours), (name) => {\n            const behaviour = behaviours[name];\n            return isNonNullable(behaviour) ? [behaviour.me] : [];\n        });\n    };\n    const generateFrom = (spec, all) => generateFrom$1(spec, all);\n    const generate$3 = (spec) => {\n        const all = getBehaviours$2(spec);\n        return generateFrom(spec, all);\n    };\n\n    // This is probably far too complicated. I think DomModification is probably\n    // questionable as a concept. Maybe it should be deprecated.\n    const getDomDefinition = (info, bList, bData) => {\n        // Get the current DOM definition from the spec\n        const definition = toDefinition(info);\n        // Get the current DOM modification definition from the spec\n        const infoModification = toModification(info);\n        // Treat the DOM modification like it came from a behaviour\n        const baseModification = {\n            'alloy.base.modification': infoModification\n        };\n        // Combine the modifications from any defined behaviours\n        const modification = bList.length > 0 ? combine$1(bData, baseModification, bList, definition) : infoModification;\n        // Transform the DOM definition with the combined dom modifications to make a new DOM definition\n        return merge(definition, modification);\n    };\n    const getEvents = (info, bList, bData) => {\n        const baseEvents = {\n            'alloy.base.behaviour': toEvents(info)\n        };\n        return combine(bData, info.eventOrder, bList, baseEvents).getOrDie();\n    };\n    const build$2 = (spec, obsoleted) => {\n        const getMe = () => me;\n        const systemApi = Cell(singleton);\n        const info = getOrDie(toInfo(spec));\n        const bBlob = generate$3(spec);\n        const bList = getBehaviours$3(bBlob);\n        const bData = getData$2(bBlob);\n        const modDefinition = getDomDefinition(info, bList, bData);\n        const item = renderToDom(modDefinition, obsoleted);\n        const events = getEvents(info, bList, bData);\n        const subcomponents = Cell(info.components);\n        const connect = (newApi) => {\n            systemApi.set(newApi);\n        };\n        const disconnect = () => {\n            systemApi.set(NoContextApi(getMe));\n        };\n        const syncComponents = () => {\n            // Update the component list with the current children\n            const children$1 = children(item);\n            // INVESTIGATE: Not sure about how to handle text nodes here.\n            const subs = bind$3(children$1, (child) => systemApi.get().getByDom(child).fold(() => [], pure$2));\n            subcomponents.set(subs);\n        };\n        // TYPIFY (any here is for the info.apis() pathway)\n        const config = (behaviour) => {\n            const b = bData;\n            const f = isFunction(b[behaviour.name()]) ? b[behaviour.name()] : () => {\n                throw new Error('Could not find ' + behaviour.name() + ' in ' + JSON.stringify(spec, null, 2));\n            };\n            return f();\n        };\n        const hasConfigured = (behaviour) => isFunction(bData[behaviour.name()]);\n        const getApis = () => info.apis;\n        const readState = (behaviourName) => bData[behaviourName]().map((b) => b.state.readState()).getOr('not enabled');\n        const me = {\n            uid: spec.uid,\n            getSystem: systemApi.get,\n            config,\n            hasConfigured,\n            spec,\n            readState,\n            getApis,\n            connect,\n            disconnect,\n            element: item,\n            syncComponents,\n            components: subcomponents.get,\n            events\n        };\n        return me;\n    };\n\n    const buildSubcomponents = (spec, obsoleted) => {\n        const components = get$h(spec, 'components').getOr([]);\n        return obsoleted.fold(() => map$2(components, build$1), (obs) => map$2(components, (c, i) => {\n            return buildOrPatch(c, child$2(obs, i));\n        }));\n    };\n    const buildFromSpec = (userSpec, obsoleted) => {\n        const { events: specEvents, ...spec } = make$7(userSpec);\n        // Build the subcomponents. A spec hierarchy is built from the bottom up.\n        // obsoleted is used to define which element we are attempting to replace\n        // so that it might be used to patch the DOM instead of recreate it.\n        const components = buildSubcomponents(spec, obsoleted);\n        const completeSpec = {\n            ...spec,\n            events: { ...DefaultEvents, ...specEvents },\n            components\n        };\n        return Result.value(\n        // Note, this isn't a spec any more, because it has built children\n        build$2(completeSpec, obsoleted));\n    };\n    const text$2 = (textContent) => {\n        const element = SugarElement.fromText(textContent);\n        return external({\n            element\n        });\n    };\n    const external = (spec) => {\n        const extSpec = asRawOrDie$1('external.component', objOfOnly([\n            required$1('element'),\n            option$3('uid')\n        ]), spec);\n        const systemApi = Cell(NoContextApi());\n        const connect = (newApi) => {\n            systemApi.set(newApi);\n        };\n        const disconnect = () => {\n            systemApi.set(NoContextApi(() => me));\n        };\n        const uid = extSpec.uid.getOrThunk(() => generate$4('external'));\n        writeOnly(extSpec.element, uid);\n        const me = {\n            uid,\n            getSystem: systemApi.get,\n            config: Optional.none,\n            hasConfigured: never,\n            connect,\n            disconnect,\n            getApis: () => ({}),\n            element: extSpec.element,\n            spec,\n            readState: constant$1('No state'),\n            syncComponents: noop,\n            components: constant$1([]),\n            events: {}\n        };\n        return premade$1(me);\n    };\n    // We experimented with just having a counter for efficiency, but that fails for situations\n    // where an external JS file is using alloy, and is contained within another\n    // alloy root container. The ids can conflict, because the counters do not\n    // know about each other (being parts of separate scripts).\n    //\n    // There are other solutions than this ... not sure if they are going to have better performance, though\n    const uids = generate$4;\n    const isSketchSpec$1 = (spec) => has$2(spec, 'uid');\n    // INVESTIGATE: A better way to provide 'meta-specs'\n    const buildOrPatch = (spec, obsoleted) => getPremade(spec).getOrThunk(() => {\n        // EFFICIENCY: Consider not merging here, and passing uid through separately\n        const userSpecWithUid = isSketchSpec$1(spec) ? spec : {\n            uid: uids(''),\n            ...spec\n        };\n        return buildFromSpec(userSpecWithUid, obsoleted).getOrDie();\n    });\n    const build$1 = (spec) => buildOrPatch(spec, Optional.none());\n    const premade = premade$1;\n\n    // Mark this component as busy, or blocked.\n    const block = (component, config, state, \n    // This works in conjunction with the 'getRoot' function in the config. To\n    // attach a blocker component to the dom, ensure that 'getRoot' returns a\n    // component, and this function returns the specification of the component to\n    // attach.\n    getBusySpec) => {\n        set$9(component.element, 'aria-busy', true);\n        const root = config.getRoot(component).getOr(component);\n        const blockerBehaviours = derive$1([\n            // Trap the \"Tab\" key and don't let it escape.\n            Keying.config({\n                mode: 'special',\n                onTab: () => Optional.some(true),\n                onShiftTab: () => Optional.some(true)\n            }),\n            Focusing.config({})\n        ]);\n        const blockSpec = getBusySpec(root, blockerBehaviours);\n        const blocker = root.getSystem().build(blockSpec);\n        Replacing.append(root, premade(blocker));\n        if (blocker.hasConfigured(Keying) && config.focus) {\n            Keying.focusIn(blocker);\n        }\n        if (!state.isBlocked()) {\n            config.onBlock(component);\n        }\n        state.blockWith(() => Replacing.remove(root, blocker));\n    };\n    // Mark this component as unblocked, or not busy. This is a noop on a component\n    // that isn't blocked.\n    const unblock = (component, config, state) => {\n        remove$8(component.element, 'aria-busy');\n        if (state.isBlocked()) {\n            config.onUnblock(component);\n        }\n        state.clear();\n    };\n    const isBlocked = (component, blockingConfig, blockingState) => blockingState.isBlocked();\n\n    var BlockingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        block: block,\n        unblock: unblock,\n        isBlocked: isBlocked\n    });\n\n    var BlockingSchema = [\n        // The blocking behaviour places a blocking element over the DOM while the\n        // component is in the blocked state. If a function is provided here that\n        // returns Some, then the blocking element will be added as a child of the\n        // element returned. Otherwise, it will be added as a child of the main\n        // component.\n        defaultedFunction('getRoot', Optional.none),\n        // This boolean, if provided, will specify whether the blocking element is\n        // focused when the component is first blocked\n        defaultedBoolean('focus', true),\n        // This function, if provided, will be called any time the component is\n        // blocked (unless it was already blocked).\n        onHandler('onBlock'),\n        // This function, if provided, will be called any time the component is\n        // unblocked (unless it was already unblocked).\n        onHandler('onUnblock')\n    ];\n\n    const init$f = () => {\n        const blocker = destroyable();\n        const blockWith = (destroy) => {\n            blocker.set({ destroy });\n        };\n        return nu$4({\n            readState: blocker.isSet,\n            blockWith,\n            clear: blocker.clear,\n            isBlocked: blocker.isSet\n        });\n    };\n\n    var BlockingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$f\n    });\n\n    // Mark a component as able to be \"Blocked\" or able to enter a busy state. See\n    // BlockingSchema and BlockingApis for more details on how to configure this.\n    const Blocking = create$3({\n        fields: BlockingSchema,\n        name: 'blocking',\n        apis: BlockingApis,\n        state: BlockingState\n    });\n\n    const getCurrent = (component, composeConfig, _composeState) => composeConfig.find(component);\n\n    var ComposeApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getCurrent: getCurrent\n    });\n\n    const ComposeSchema = [\n        required$1('find')\n    ];\n\n    const Composing = create$3({\n        fields: ComposeSchema,\n        name: 'composing',\n        apis: ComposeApis\n    });\n\n    const getCoupled = (component, coupleConfig, coupleState, name) => coupleState.getOrCreate(component, coupleConfig, name);\n    const getExistingCoupled = (component, coupleConfig, coupleState, name) => coupleState.getExisting(component, coupleConfig, name);\n\n    var CouplingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getCoupled: getCoupled,\n        getExistingCoupled: getExistingCoupled\n    });\n\n    var CouplingSchema = [\n        requiredOf('others', setOf(Result.value, anyValue()))\n    ];\n\n    // Unfortunately, the Coupling APIs currently throw errors when the coupled name\n    // is not recognised. This is because if the wrong name is used, it is a\n    // non-recoverable error, and the developer should be notified. However, there are\n    // better ways to do this: (removing this API and only returning Optionals/Results)\n    const init$e = () => {\n        const coupled = {};\n        const lookupCoupled = (coupleConfig, coupledName) => {\n            const available = keys(coupleConfig.others);\n            if (available.length === 0) {\n                throw new Error('Cannot find any known coupled components');\n            }\n            else {\n                return get$h(coupled, coupledName);\n            }\n        };\n        const getOrCreate = (component, coupleConfig, name) => {\n            return lookupCoupled(coupleConfig, name).getOrThunk(() => {\n                // TODO: TINY-9014 Likely type error. coupleConfig.others[key] is\n                // `() => ((comp: AlloyComponent) => AlloySpec)`,\n                // but builder is being treated as a `(comp: AlloyComponent) => AlloySpec`\n                const builder = get$h(coupleConfig.others, name).getOrDie('No information found for coupled component: ' + name);\n                const spec = builder(component);\n                const built = component.getSystem().build(spec);\n                coupled[name] = built;\n                return built;\n            });\n        };\n        const getExisting = (component, coupleConfig, name) => {\n            return lookupCoupled(coupleConfig, name).orThunk(() => {\n                // Validate we recognise this coupled component's name.\n                get$h(coupleConfig.others, name).getOrDie('No information found for coupled component: ' + name);\n                // It's a valid name, so return None, because it hasn't been built yet.\n                return Optional.none();\n            });\n        };\n        const readState = constant$1({});\n        return nu$4({\n            readState,\n            getExisting,\n            getOrCreate\n        });\n    };\n\n    var CouplingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$e\n    });\n\n    const Coupling = create$3({\n        fields: CouplingSchema,\n        name: 'coupling',\n        apis: CouplingApis,\n        state: CouplingState\n    });\n\n    // Just use \"disabled\" attribute for these, not \"aria-disabled\"\n    const nativeDisabled = [\n        'input',\n        'button',\n        'textarea',\n        'select'\n    ];\n    const onLoad$5 = (component, disableConfig, disableState) => {\n        const f = disableConfig.disabled() ? disable : enable;\n        f(component, disableConfig);\n    };\n    const hasNative = (component, config) => config.useNative === true && contains$2(nativeDisabled, name$3(component.element));\n    const nativeIsDisabled = (component) => has$1(component.element, 'disabled');\n    const nativeDisable = (component) => {\n        set$9(component.element, 'disabled', 'disabled');\n    };\n    const nativeEnable = (component) => {\n        remove$8(component.element, 'disabled');\n    };\n    const ariaIsDisabled = (component) => get$g(component.element, 'aria-disabled') === 'true';\n    const ariaDisable = (component) => {\n        set$9(component.element, 'aria-disabled', 'true');\n    };\n    const ariaEnable = (component) => {\n        set$9(component.element, 'aria-disabled', 'false');\n    };\n    const disable = (component, disableConfig, _disableState) => {\n        disableConfig.disableClass.each((disableClass) => {\n            add$2(component.element, disableClass);\n        });\n        const f = hasNative(component, disableConfig) ? nativeDisable : ariaDisable;\n        f(component);\n        disableConfig.onDisabled(component);\n    };\n    const enable = (component, disableConfig, _disableState) => {\n        disableConfig.disableClass.each((disableClass) => {\n            remove$3(component.element, disableClass);\n        });\n        const f = hasNative(component, disableConfig) ? nativeEnable : ariaEnable;\n        f(component);\n        disableConfig.onEnabled(component);\n    };\n    const isDisabled$1 = (component, disableConfig) => hasNative(component, disableConfig) ? nativeIsDisabled(component) : ariaIsDisabled(component);\n    const set$2 = (component, disableConfig, disableState, disabled) => {\n        const f = disabled ? disable : enable;\n        f(component, disableConfig);\n    };\n\n    var DisableApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        enable: enable,\n        disable: disable,\n        isDisabled: isDisabled$1,\n        onLoad: onLoad$5,\n        set: set$2\n    });\n\n    const exhibit$5 = (base, disableConfig) => nu$2({\n        // Do not add the attribute yet, because it will depend on the node name\n        // if we use \"aria-disabled\" or just \"disabled\"\n        classes: disableConfig.disabled() ? disableConfig.disableClass.toArray() : []\n    });\n    const events$f = (disableConfig, disableState) => derive$2([\n        abort(execute$5(), (component, _simulatedEvent) => isDisabled$1(component, disableConfig)),\n        loadEvent(disableConfig, disableState, onLoad$5)\n    ]);\n\n    var ActiveDisable = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$5,\n        events: events$f\n    });\n\n    var DisableSchema = [\n        defaultedFunction('disabled', never),\n        defaulted('useNative', true),\n        option$3('disableClass'),\n        onHandler('onDisabled'),\n        onHandler('onEnabled')\n    ];\n\n    const Disabling = create$3({\n        fields: DisableSchema,\n        name: 'disabling',\n        active: ActiveDisable,\n        apis: DisableApis\n    });\n\n    const NuPositionCss = (position, left, top, right, bottom) => {\n        const toPx = (num) => num + 'px';\n        return {\n            position,\n            left: left.map(toPx),\n            top: top.map(toPx),\n            right: right.map(toPx),\n            bottom: bottom.map(toPx)\n        };\n    };\n    const toOptions = (position) => ({\n        ...position,\n        position: Optional.some(position.position)\n    });\n    const applyPositionCss = (element, position) => {\n        setOptions(element, toOptions(position));\n    };\n\n    const appear = (component, contextualInfo) => {\n        const elem = component.element;\n        add$2(elem, contextualInfo.transitionClass);\n        remove$3(elem, contextualInfo.fadeOutClass);\n        add$2(elem, contextualInfo.fadeInClass);\n        contextualInfo.onShow(component);\n    };\n    const disappear = (component, contextualInfo) => {\n        const elem = component.element;\n        add$2(elem, contextualInfo.transitionClass);\n        remove$3(elem, contextualInfo.fadeInClass);\n        add$2(elem, contextualInfo.fadeOutClass);\n        contextualInfo.onHide(component);\n    };\n    const isPartiallyVisible = (box, bounds) => box.y < bounds.bottom && box.bottom > bounds.y;\n    const isTopCompletelyVisible = (box, bounds) => box.y >= bounds.y;\n    const isBottomCompletelyVisible = (box, bounds) => box.bottom <= bounds.bottom;\n    const forceTopPosition = (winBox, leftX, viewport) => ({\n        location: 'top',\n        leftX,\n        topY: viewport.bounds.y - winBox.y\n    });\n    const forceBottomPosition = (winBox, leftX, viewport) => ({\n        location: 'bottom',\n        leftX,\n        bottomY: winBox.bottom - viewport.bounds.bottom\n    });\n    const getDockedLeftPosition = (bounds) => {\n        // Essentially, we are just getting the bounding client rect left here,\n        // because winBox.x will be the scroll value.\n        return bounds.box.x - bounds.win.x;\n    };\n    const tryDockingPosition = (modes, bounds, viewport) => {\n        const winBox = bounds.win;\n        const box = bounds.box;\n        const leftX = getDockedLeftPosition(bounds);\n        return findMap(modes, (mode) => {\n            switch (mode) {\n                case 'bottom':\n                    return !isBottomCompletelyVisible(box, viewport.bounds) ? Optional.some(forceBottomPosition(winBox, leftX, viewport)) : Optional.none();\n                case 'top':\n                    return !isTopCompletelyVisible(box, viewport.bounds) ? Optional.some(forceTopPosition(winBox, leftX, viewport)) : Optional.none();\n                default:\n                    return Optional.none();\n            }\n        }).getOr({\n            location: 'no-dock'\n        });\n    };\n    const isVisibleForModes = (modes, box, viewport) => forall(modes, (mode) => {\n        switch (mode) {\n            case 'bottom':\n                return isBottomCompletelyVisible(box, viewport.bounds);\n            case 'top':\n                return isTopCompletelyVisible(box, viewport.bounds);\n        }\n    });\n    const getXYForRestoring = (pos, viewport) => {\n        const priorY = viewport.optScrollEnv.fold(constant$1(pos.bounds.y), (scrollEnv) => scrollEnv.scrollElmTop + (pos.bounds.y - scrollEnv.currentScrollTop));\n        return SugarPosition(pos.bounds.x, priorY);\n    };\n    const getXYForSaving = (box, viewport) => {\n        const priorY = viewport.optScrollEnv.fold(constant$1(box.y), (scrollEnv) => box.y + scrollEnv.currentScrollTop - scrollEnv.scrollElmTop);\n        return SugarPosition(box.x, priorY);\n    };\n    const getPrior = (elem, viewport, state) => state.getInitialPos().map((pos) => {\n        const xy = getXYForRestoring(pos, viewport);\n        return {\n            box: bounds(xy.left, xy.top, get$c(elem), get$d(elem)),\n            location: pos.location\n        };\n    });\n    const storePrior = (elem, box, viewport, state, decision) => {\n        const xy = getXYForSaving(box, viewport);\n        const bounds$1 = bounds(xy.left, xy.top, box.width, box.height);\n        state.setInitialPos({\n            style: getAllRaw(elem),\n            position: get$e(elem, 'position') || 'static',\n            bounds: bounds$1,\n            location: decision.location\n        });\n    };\n    // When we are using APIs like forceDockToTop, then we only want to store the previous position\n    // if we weren't already docked. Otherwise, we still want to move the component, but keep its old\n    // restore values\n    const storePriorIfNone = (elem, box, viewport, state, decision) => {\n        state.getInitialPos().fold(() => storePrior(elem, box, viewport, state, decision), () => noop);\n    };\n    const revertToOriginal = (elem, box, state) => state.getInitialPos().bind((position) => {\n        var _a;\n        state.clearInitialPos();\n        switch (position.position) {\n            case 'static':\n                return Optional.some({\n                    morph: 'static'\n                });\n            case 'absolute':\n                const offsetParent = getOffsetParent(elem).getOr(body());\n                const offsetBox = box$1(offsetParent);\n                // Adding the scrollDelta here may not be the right solution. The basic problem is that the\n                // rest of the code isn't considering whether its absolute or not, and where the offset parent\n                // is. In the situation where the offset parent is *inside* the scrolling environment, then\n                // we don't need to consider the scroll, and that's what getXYForRestoring does ... it removes\n                // the scroll. We don't need to consider the scroll because the sink is already affected by the\n                // scroll. However, when the sink IS the scroller, its position is not moved by scrolling. But the\n                // positions of everything inside it needs to consider the scroll. So we add the scroll value.\n                //\n                // This might also be a bit naive. It's possible that we need to check that the offsetParent\n                // is THE scroller, not just that it has a scroll value. For example, if the offset parent\n                // was the body, and the body had a scroll, this might give unexpected results. That's somewhat\n                // countered by the fact that if the offset parent is outside the scroller, then you don't really\n                // have a scrolling environment any more, because the offset parent isn't going to be impacted\n                // at all by the scroller\n                const scrollDelta = (_a = offsetParent.dom.scrollTop) !== null && _a !== void 0 ? _a : 0;\n                return Optional.some({\n                    morph: 'absolute',\n                    positionCss: NuPositionCss('absolute', get$h(position.style, 'left').map((_left) => box.x - offsetBox.x), get$h(position.style, 'top').map((_top) => box.y - offsetBox.y + scrollDelta), get$h(position.style, 'right').map((_right) => offsetBox.right - box.right), get$h(position.style, 'bottom').map((_bottom) => offsetBox.bottom - box.bottom))\n                });\n            default:\n                return Optional.none();\n        }\n    });\n    const tryMorphToOriginal = (elem, viewport, state) => getPrior(elem, viewport, state)\n        .filter(({ box }) => isVisibleForModes(state.getModes(), box, viewport))\n        .bind(({ box }) => revertToOriginal(elem, box, state));\n    const tryDecisionToFixedMorph = (decision) => {\n        switch (decision.location) {\n            case 'top': {\n                // We store our current position so we can revert to it once it's\n                // visible again.\n                return Optional.some({\n                    morph: 'fixed',\n                    positionCss: NuPositionCss('fixed', Optional.some(decision.leftX), Optional.some(decision.topY), Optional.none(), Optional.none())\n                });\n            }\n            case 'bottom': {\n                // We store our current position so we can revert to it once it's\n                // visible again.\n                return Optional.some({\n                    morph: 'fixed',\n                    positionCss: NuPositionCss('fixed', Optional.some(decision.leftX), Optional.none(), Optional.none(), Optional.some(decision.bottomY))\n                });\n            }\n            default:\n                return Optional.none();\n        }\n    };\n    const tryMorphToFixed = (elem, viewport, state) => {\n        const box = box$1(elem);\n        const winBox = win();\n        const decision = tryDockingPosition(state.getModes(), {\n            win: winBox,\n            box\n        }, viewport);\n        if (decision.location === 'top' || decision.location === 'bottom') {\n            // We are moving from undocked to docked, so store the previous location\n            // so that we can restore it when we switch out of docking (back to undocked)\n            storePrior(elem, box, viewport, state, decision);\n            return tryDecisionToFixedMorph(decision);\n        }\n        else {\n            return Optional.none();\n        }\n    };\n    const tryMorphToOriginalOrUpdateFixed = (elem, viewport, state) => {\n        // When a \"docked\" element is docked to the top of a scroll container (due to optScrollEnv in\n        // viewport), we need to reposition its fixed if the scroll container has itself moved its top position.\n        // This isn't required when the docking is to the top of the window, because the entire window cannot\n        // be scrolled up and down the page - it is the page.\n        //\n        // Imagine a situation where the toolbar has docked to the top of the scroll container, which is at\n        // y = 200. Now, when the user scrolls the page another 50px down the page, the top of the scroll\n        // container will now be 150px, but the \"fixed\" toolbar will still be at \"200px\". So this is a morph\n        // from \"fixed\" to \"fixed\", but with new coordinates. So if we can't morph to original from \"fixed\",\n        // we try to update our \"fixed\" position (if we have a scrolling environment in the viewport)\n        return tryMorphToOriginal(elem, viewport, state)\n            .orThunk(() => {\n            // Importantly, we don't update our stored position for the element before \"docking\", because\n            // this is a transition between \"docked\" and \"docked\", not \"undocked\" and \"docked\". We want to\n            // keep our undocked position in our store, not a docked position.\n            // So we don't change our stored position. We just improve our fixed.\n            return viewport.optScrollEnv\n                .bind((_) => getPrior(elem, viewport, state))\n                .bind(({ box, location }) => {\n                const winBox = win();\n                const leftX = getDockedLeftPosition({ win: winBox, box });\n                // Keep the same docking location\n                const decision = location === 'top'\n                    ? forceTopPosition(winBox, leftX, viewport)\n                    : forceBottomPosition(winBox, leftX, viewport);\n                return tryDecisionToFixedMorph(decision);\n            });\n        });\n    };\n    const tryMorph = (component, viewport, state) => {\n        const elem = component.element;\n        const isDocked = is$1(getRaw(elem, 'position'), 'fixed');\n        return isDocked\n            ? tryMorphToOriginalOrUpdateFixed(elem, viewport, state)\n            : tryMorphToFixed(elem, viewport, state);\n    };\n    // The difference between the \"calculate\" functions and the \"try\" functions is that the \"try\" functions\n    // will first consider whether there is a need to morph, whereas the \"calculate\" functions will just\n    // give you the morph details, bypassing the check to see if it's needed\n    const calculateMorphToOriginal = (component, viewport, state) => {\n        const elem = component.element;\n        return getPrior(elem, viewport, state)\n            .bind(({ box }) => revertToOriginal(elem, box, state));\n    };\n    const forceDockWith = (elem, viewport, state, getDecision) => {\n        const box = box$1(elem);\n        const winBox = win();\n        const leftX = getDockedLeftPosition({ win: winBox, box });\n        const decision = getDecision(winBox, leftX, viewport);\n        if (decision.location === 'bottom' || decision.location === 'top') {\n            // We only want to store the values if we aren't already docking. If we are already docking, then\n            // we just want to move the element, without updating where it started originally\n            storePriorIfNone(elem, box, viewport, state, decision);\n            return tryDecisionToFixedMorph(decision);\n        }\n        else {\n            return Optional.none();\n        }\n    };\n\n    const morphToStatic = (component, config, state) => {\n        state.setDocked(false);\n        each$1(['left', 'right', 'top', 'bottom', 'position'], (prop) => remove$6(component.element, prop));\n        config.onUndocked(component);\n    };\n    const morphToCoord = (component, config, state, position) => {\n        const isDocked = position.position === 'fixed';\n        state.setDocked(isDocked);\n        applyPositionCss(component.element, position);\n        const method = isDocked ? config.onDocked : config.onUndocked;\n        method(component);\n    };\n    const updateVisibility = (component, config, state, viewport, morphToDocked = false) => {\n        config.contextual.each((contextInfo) => {\n            // Make the dockable component disappear if the context is outside the viewport\n            contextInfo.lazyContext(component).each((box) => {\n                const isVisible = isPartiallyVisible(box, viewport.bounds);\n                if (isVisible !== state.isVisible()) {\n                    state.setVisible(isVisible);\n                    // If morphing to docked and the context isn't visible then immediately set\n                    // the fadeout class and don't worry about transitioning, as the context\n                    // would never have been in view while docked\n                    if (morphToDocked && !isVisible) {\n                        add$1(component.element, [contextInfo.fadeOutClass]);\n                        contextInfo.onHide(component);\n                    }\n                    else {\n                        const method = isVisible ? appear : disappear;\n                        method(component, contextInfo);\n                    }\n                }\n            });\n        });\n    };\n    const applyFixedMorph = (component, config, state, viewport, morph) => {\n        // This \"updateVisibility\" call is potentially duplicated with the\n        // call in refreshInternal for isDocked. We might want to consolidate them.\n        // The difference between them is the \"morphToDocked\" flag.\n        updateVisibility(component, config, state, viewport, true);\n        morphToCoord(component, config, state, morph.positionCss);\n    };\n    const applyMorph = (component, config, state, viewport, morph) => {\n        // Apply the morph result depending on its type\n        switch (morph.morph) {\n            case 'static': {\n                return morphToStatic(component, config, state);\n            }\n            case 'absolute': {\n                return morphToCoord(component, config, state, morph.positionCss);\n            }\n            case 'fixed': {\n                return applyFixedMorph(component, config, state, viewport, morph);\n            }\n        }\n    };\n    const refreshInternal = (component, config, state) => {\n        // Absolute coordinates (considers scroll)\n        const viewport = config.lazyViewport(component);\n        updateVisibility(component, config, state, viewport);\n        tryMorph(component, viewport, state).each((morph) => {\n            applyMorph(component, config, state, viewport, morph);\n        });\n    };\n    const resetInternal = (component, config, state) => {\n        // Morph back to the original position\n        const elem = component.element;\n        state.setDocked(false);\n        const viewport = config.lazyViewport(component);\n        calculateMorphToOriginal(component, viewport, state).each((staticOrAbsoluteMorph) => {\n            // This code is very similar to the \"applyMorph\" function above. The main difference\n            // is that it doesn't consider fixed position, because something that is docking\n            // can't currently start with fixed position\n            switch (staticOrAbsoluteMorph.morph) {\n                case 'static': {\n                    morphToStatic(component, config, state);\n                    break;\n                }\n                case 'absolute': {\n                    morphToCoord(component, config, state, staticOrAbsoluteMorph.positionCss);\n                    break;\n                }\n            }\n        });\n        // Remove contextual visibility classes\n        state.setVisible(true);\n        config.contextual.each((contextInfo) => {\n            remove$2(elem, [contextInfo.fadeInClass, contextInfo.fadeOutClass, contextInfo.transitionClass]);\n            contextInfo.onShow(component);\n        });\n        // Apply docking again to reset the position\n        refresh$4(component, config, state);\n    };\n    const refresh$4 = (component, config, state) => {\n        // Ensure the component is attached to the document/world, if not then do nothing as we can't\n        // check if the component should be docked or not when in a detached state\n        if (component.getSystem().isConnected()) {\n            refreshInternal(component, config, state);\n        }\n    };\n    const reset$1 = (component, config, state) => {\n        // If the component is not docked then there's no need to reset the state,\n        // so only reset when docked\n        if (state.isDocked()) {\n            resetInternal(component, config, state);\n        }\n    };\n    const forceDockWithDecision = (getDecision) => (component, config, state) => {\n        const viewport = config.lazyViewport(component);\n        const optMorph = forceDockWith(component.element, viewport, state, getDecision);\n        optMorph.each((morph) => {\n            // ASSUMPTION: This \"applyFixedMorph\" sets state.setDocked to true.\n            applyFixedMorph(component, config, state, viewport, morph);\n        });\n    };\n    const forceDockToTop = forceDockWithDecision(forceTopPosition);\n    const forceDockToBottom = forceDockWithDecision(forceBottomPosition);\n    const isDocked$2 = (component, config, state) => state.isDocked();\n    const setModes = (component, config, state, modes) => state.setModes(modes);\n    const getModes = (component, config, state) => state.getModes();\n\n    var DockingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        refresh: refresh$4,\n        reset: reset$1,\n        isDocked: isDocked$2,\n        getModes: getModes,\n        setModes: setModes,\n        forceDockToTop: forceDockToTop,\n        forceDockToBottom: forceDockToBottom\n    });\n\n    const events$e = (dockInfo, dockState) => derive$2([\n        runOnSource(transitionend(), (component, simulatedEvent) => {\n            dockInfo.contextual.each((contextInfo) => {\n                if (has(component.element, contextInfo.transitionClass)) {\n                    remove$2(component.element, [contextInfo.transitionClass, contextInfo.fadeInClass]);\n                    const notify = dockState.isVisible() ? contextInfo.onShown : contextInfo.onHidden;\n                    notify(component);\n                }\n                simulatedEvent.stop();\n            });\n        }),\n        run$1(windowScroll(), (component, _) => {\n            refresh$4(component, dockInfo, dockState);\n        }),\n        run$1(externalElementScroll(), (component, _) => {\n            refresh$4(component, dockInfo, dockState);\n        }),\n        run$1(windowResize(), (component, _) => {\n            reset$1(component, dockInfo, dockState);\n        })\n    ]);\n\n    var ActiveDocking = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$e\n    });\n\n    var DockingSchema = [\n        optionObjOf('contextual', [\n            requiredString('fadeInClass'),\n            requiredString('fadeOutClass'),\n            requiredString('transitionClass'),\n            requiredFunction('lazyContext'),\n            onHandler('onShow'),\n            onHandler('onShown'),\n            onHandler('onHide'),\n            onHandler('onHidden')\n        ]),\n        defaultedFunction('lazyViewport', () => ({\n            bounds: win(),\n            optScrollEnv: Optional.none()\n        })),\n        defaultedArrayOf('modes', ['top', 'bottom'], string),\n        onHandler('onDocked'),\n        onHandler('onUndocked')\n    ];\n\n    const init$d = (spec) => {\n        const docked = Cell(false);\n        const visible = Cell(true);\n        const initialBounds = value$2();\n        const modes = Cell(spec.modes);\n        const readState = () => `docked:  ${docked.get()}, visible: ${visible.get()}, modes: ${modes.get().join(',')}`;\n        return nu$4({\n            isDocked: docked.get,\n            setDocked: docked.set,\n            getInitialPos: initialBounds.get,\n            setInitialPos: initialBounds.set,\n            clearInitialPos: initialBounds.clear,\n            isVisible: visible.get,\n            setVisible: visible.set,\n            getModes: modes.get,\n            setModes: modes.set,\n            readState\n        });\n    };\n\n    var DockingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$d\n    });\n\n    const Docking = create$3({\n        fields: DockingSchema,\n        name: 'docking',\n        active: ActiveDocking,\n        apis: DockingApis,\n        state: DockingState\n    });\n\n    /*\n     * origin: the position (without scroll) of the offset parent\n     * scroll: the scrolling position of the window\n     *\n     * fixed: the fixed coordinates to show for css\n     * offset: the absolute coordinates to show for css when inside an offset parent\n     * absolute: the absolute coordinates to show before considering the offset parent\n     */\n    const adt$4 = Adt.generate([\n        { offset: ['x', 'y'] },\n        { absolute: ['x', 'y'] },\n        { fixed: ['x', 'y'] }\n    ]);\n    const subtract = (change) => (point) => point.translate(-change.left, -change.top);\n    const add = (change) => (point) => point.translate(change.left, change.top);\n    const transform = (changes) => (x, y) => foldl(changes, (rest, f) => f(rest), SugarPosition(x, y));\n    const asFixed = (coord, scroll, origin) => coord.fold(\n    // offset to fixed\n    transform([add(origin), subtract(scroll)]), \n    // absolute to fixed\n    transform([subtract(scroll)]), \n    // fixed to fixed\n    transform([]));\n    const asAbsolute = (coord, scroll, origin) => coord.fold(\n    // offset to absolute\n    transform([add(origin)]), \n    // absolute to absolute\n    transform([]), \n    // fixed to absolute\n    transform([add(scroll)]));\n    const asOffset = (coord, scroll, origin) => coord.fold(\n    // offset to offset\n    transform([]), \n    // absolute to offset\n    transform([subtract(origin)]), \n    // fixed to offset\n    transform([add(scroll), subtract(origin)]));\n    const withinRange = (coord1, coord2, xRange, yRange, scroll, origin) => {\n        const a1 = asAbsolute(coord1, scroll, origin);\n        const a2 = asAbsolute(coord2, scroll, origin);\n        // eslint-disable-next-line no-console\n        // console.log(`a1.left: ${a1.left}, a2.left: ${a2.left}, leftDelta: ${a1.left - a2.left}, xRange: ${xRange}, lD <= xRange: ${Math.abs(a1.left - a2.left) <= xRange}`);\n        // console.log(`a1.top: ${a1.top}, a2.top: ${a2.top}, topDelta: ${a1.top - a2.top}, yRange: ${yRange}, lD <= xRange: ${Math.abs(a1.top - a2.top) <= yRange}`);\n        return Math.abs(a1.left - a2.left) <= xRange &&\n            Math.abs(a1.top - a2.top) <= yRange;\n    };\n    const getDeltas = (coord1, coord2, xRange, yRange, scroll, origin) => {\n        const a1 = asAbsolute(coord1, scroll, origin);\n        const a2 = asAbsolute(coord2, scroll, origin);\n        const left = Math.abs(a1.left - a2.left);\n        const top = Math.abs(a1.top - a2.top);\n        return SugarPosition(left, top);\n    };\n    const toStyles = (coord, scroll, origin) => {\n        const stylesOpt = coord.fold((x, y) => ({ position: Optional.some('absolute'), left: Optional.some(x + 'px'), top: Optional.some(y + 'px') }), // offset\n        (x, y) => ({ position: Optional.some('absolute'), left: Optional.some((x - origin.left) + 'px'), top: Optional.some((y - origin.top) + 'px') }), // absolute\n        (x, y) => ({ position: Optional.some('fixed'), left: Optional.some(x + 'px'), top: Optional.some(y + 'px') }) // fixed\n        );\n        return { right: Optional.none(), bottom: Optional.none(), ...stylesOpt };\n    };\n    const translate$2 = (coord, deltaX, deltaY) => coord.fold((x, y) => offset(x + deltaX, y + deltaY), (x, y) => absolute$1(x + deltaX, y + deltaY), (x, y) => fixed$1(x + deltaX, y + deltaY));\n    const absorb = (partialCoord, originalCoord, scroll, origin) => {\n        const absorbOne = (stencil, nu) => (optX, optY) => {\n            const original = stencil(originalCoord, scroll, origin);\n            return nu(optX.getOr(original.left), optY.getOr(original.top));\n        };\n        return partialCoord.fold(absorbOne(asOffset, offset), absorbOne(asAbsolute, absolute$1), absorbOne(asFixed, fixed$1));\n    };\n    const offset = adt$4.offset;\n    const absolute$1 = adt$4.absolute;\n    const fixed$1 = adt$4.fixed;\n\n    const parseAttrToInt = (element, name) => {\n        const value = get$g(element, name);\n        return isUndefined(value) ? NaN : parseInt(value, 10);\n    };\n    // NOTE: Moved from ego with some parameterisation\n    const get$3 = (component, snapsInfo) => {\n        const element = component.element;\n        const x = parseAttrToInt(element, snapsInfo.leftAttr);\n        const y = parseAttrToInt(element, snapsInfo.topAttr);\n        return isNaN(x) || isNaN(y) ? Optional.none() : Optional.some(SugarPosition(x, y));\n    };\n    const set$1 = (component, snapsInfo, pt) => {\n        const element = component.element;\n        set$9(element, snapsInfo.leftAttr, pt.left + 'px');\n        set$9(element, snapsInfo.topAttr, pt.top + 'px');\n    };\n    const clear = (component, snapsInfo) => {\n        const element = component.element;\n        remove$8(element, snapsInfo.leftAttr);\n        remove$8(element, snapsInfo.topAttr);\n    };\n\n    // Types of coordinates\n    // SugarLocation: This is the position on the screen including scroll.\n    // Absolute: This is the css setting that would be applied. Therefore, it subtracts\n    // the origin of the relative offsetParent.\n    // Fixed: This is the fixed position.\n    /*\n     So in attempt to make this more understandable, let's use offset, absolute, and fixed.\n     and try and model individual combinators\n    */\n    /*\n\n     Relationships:\n       - location -> absolute: should just need to subtract the position of the offset parent (origin)\n       - location -> fixed: subtract the scrolling\n       - absolute -> fixed: add the origin, and subtract the scrolling\n       - absolute -> location: add the origin\n       - fixed -> absolute: add the scrolling, remove the origin\n       - fixed -> location: add the scrolling\n\n    /*\n     * When the user is dragging around the element, and it snaps into place, it is important\n     * for the next movement to be from its pre-snapped location, rather than the snapped location.\n     * This is because if it is from the snapped location the next delta movement may not actually\n     * be high enough to get it out of the snap area, and hence, it will just snap again (and again).\n     */\n    // This identifies the position of the draggable element as either its current position, or the position\n    // that we put on it before we snapped it into place (before dropping). Once it's dropped, the presnap\n    // position will go away. It is used to avoid the situation where you can't escape the snap unless you\n    // move the mouse really quickly :)\n    const getCoords = (component, snapInfo, coord, delta) => get$3(component, snapInfo).fold(() => coord, (fixed) => \n    // We have a pre-snap position, so we have to apply the delta ourselves\n    fixed$1(fixed.left + delta.left, fixed.top + delta.top));\n    const moveOrSnap = (component, snapInfo, coord, delta, scroll, origin) => {\n        const newCoord = getCoords(component, snapInfo, coord, delta);\n        const snap = snapInfo.mustSnap ? findClosestSnap(component, snapInfo, newCoord, scroll, origin) :\n            findSnap(component, snapInfo, newCoord, scroll, origin);\n        const fixedCoord = asFixed(newCoord, scroll, origin);\n        set$1(component, snapInfo, fixedCoord);\n        return snap.fold(() => ({\n            coord: fixed$1(fixedCoord.left, fixedCoord.top),\n            extra: Optional.none()\n        })\n        // No snap.\n        // var newfixed = graph.boundToFixed(theatre, element, loc.left, loc.top, fixed.left, fixed.top, height);\n        // presnaps.set(element, 'fixed', newfixed.left, newfixed.top);\n        // return { position: 'fixed', left: newfixed.left + 'px', top: newfixed.top + 'px' };\n        , (spanned) => ({\n            coord: spanned.output,\n            extra: spanned.extra\n        }));\n    };\n    const stopDrag = (component, snapInfo) => {\n        clear(component, snapInfo);\n    };\n    const findMatchingSnap = (snaps, newCoord, scroll, origin) => findMap(snaps, (snap) => {\n        const sensor = snap.sensor;\n        const inRange = withinRange(newCoord, sensor, snap.range.left, snap.range.top, scroll, origin);\n        return inRange ? Optional.some({\n            output: absorb(snap.output, newCoord, scroll, origin),\n            extra: snap.extra\n        }) : Optional.none();\n    });\n    const findClosestSnap = (component, snapInfo, newCoord, scroll, origin) => {\n        // You need to pass in the absX and absY so that they can be used for things which only care about snapping one axis and keeping the other one.\n        const snaps = snapInfo.getSnapPoints(component);\n        const matchSnap = findMatchingSnap(snaps, newCoord, scroll, origin);\n        return matchSnap.orThunk(() => {\n            const bestSnap = foldl(snaps, (acc, snap) => {\n                const sensor = snap.sensor;\n                const deltas = getDeltas(newCoord, sensor, snap.range.left, snap.range.top, scroll, origin);\n                return acc.deltas.fold(() => ({\n                    deltas: Optional.some(deltas),\n                    snap: Optional.some(snap)\n                }), (bestDeltas) => {\n                    const currAvg = (deltas.left + deltas.top) / 2;\n                    const bestAvg = (bestDeltas.left + bestDeltas.top) / 2;\n                    if (currAvg <= bestAvg) {\n                        return {\n                            deltas: Optional.some(deltas),\n                            snap: Optional.some(snap)\n                        };\n                    }\n                    else {\n                        return acc;\n                    }\n                });\n            }, {\n                deltas: Optional.none(),\n                snap: Optional.none()\n            });\n            return bestSnap.snap.map((snap) => ({\n                output: absorb(snap.output, newCoord, scroll, origin),\n                extra: snap.extra\n            }));\n        });\n    };\n    // x: the absolute position.left of the draggable element\n    // y: the absolute position.top of the draggable element\n    // deltaX: the amount the mouse has moved horizontally\n    // deltaY: the amount the mouse has moved vertically\n    const findSnap = (component, snapInfo, newCoord, scroll, origin) => {\n        // You need to pass in the absX and absY so that they can be used for things which only care about snapping one axis and keeping the other one.\n        const snaps = snapInfo.getSnapPoints(component);\n        // HERE\n        return findMatchingSnap(snaps, newCoord, scroll, origin);\n    };\n    const snapTo$1 = (snap, scroll, origin) => ({\n        // TODO: This looks to be incorrect and needs fixing as DragCoord definitely needs a number\n        // based drag coord for the second argument here, so this is probably a bug.\n        coord: absorb(snap.output, snap.output, scroll, origin),\n        extra: snap.extra\n    });\n\n    const snapTo = (component, dragConfig, _state, snap) => {\n        const target = dragConfig.getTarget(component.element);\n        if (dragConfig.repositionTarget) {\n            const doc = owner$4(component.element);\n            const scroll = get$b(doc);\n            const origin = getOrigin(target);\n            const snapPin = snapTo$1(snap, scroll, origin);\n            const styles = toStyles(snapPin.coord, scroll, origin);\n            setOptions(target, styles);\n        }\n    };\n\n    var DraggingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        snapTo: snapTo\n    });\n\n    const field = (name, forbidden) => defaultedObjOf(name, {}, map$2(forbidden, (f) => forbid(f.name(), 'Cannot configure ' + f.name() + ' for ' + name)).concat([\n        customField('dump', identity)\n    ]));\n    const get$2 = (data) => data.dump;\n    const augment = (data, original) => ({\n        ...derive$1(original),\n        ...data.dump\n    });\n    // Is this used?\n    const SketchBehaviours = {\n        field,\n        augment,\n        get: get$2\n    };\n\n    const base = (partSchemas, partUidsSchemas) => {\n        const ps = partSchemas.length > 0 ? [\n            requiredObjOf('parts', partSchemas)\n        ] : [];\n        return ps.concat([\n            required$1('uid'),\n            defaulted('dom', {}), // Maybe get rid of.\n            defaulted('components', []),\n            snapshot('originalSpec'),\n            defaulted('debug.sketcher', {})\n        ]).concat(partUidsSchemas);\n    };\n    const asRawOrDie = (label, schema, spec, partSchemas, partUidsSchemas) => {\n        const baseS = base(partSchemas, partUidsSchemas);\n        return asRawOrDie$1(label + ' [SpecSchema]', objOfOnly(baseS.concat(schema)), spec);\n    };\n\n    const single$1 = (owner, schema, factory, spec) => {\n        const specWithUid = supplyUid(spec);\n        const detail = asRawOrDie(owner, schema, specWithUid, [], []);\n        return factory(detail, specWithUid);\n    };\n    const composite$1 = (owner, schema, partTypes, factory, spec) => {\n        const specWithUid = supplyUid(spec);\n        // Identify any information required for external parts\n        const partSchemas = schemas(partTypes);\n        // Generate partUids for all parts (external and otherwise)\n        const partUidsSchema = defaultUidsSchema(partTypes);\n        const detail = asRawOrDie(owner, schema, specWithUid, partSchemas, [partUidsSchema]);\n        // Create (internals, externals) substitutions\n        const subs = substitutes(owner, detail, partTypes);\n        // Work out the components by substituting internals\n        const components = components$1(owner, detail, subs.internals());\n        return factory(detail, components, specWithUid, subs.externals());\n    };\n    const hasUid = (spec) => has$2(spec, 'uid');\n    const supplyUid = (spec) => {\n        return hasUid(spec) ? spec : {\n            ...spec,\n            uid: generate$4('uid')\n        };\n    };\n\n    const isSketchSpec = (spec) => {\n        return spec.uid !== undefined;\n    };\n    const singleSchema = objOfOnly([\n        required$1('name'),\n        required$1('factory'),\n        required$1('configFields'),\n        defaulted('apis', {}),\n        defaulted('extraApis', {})\n    ]);\n    const compositeSchema = objOfOnly([\n        required$1('name'),\n        required$1('factory'),\n        required$1('configFields'),\n        required$1('partFields'),\n        defaulted('apis', {}),\n        defaulted('extraApis', {})\n    ]);\n    const single = (rawConfig) => {\n        const config = asRawOrDie$1('Sketcher for ' + rawConfig.name, singleSchema, rawConfig);\n        const sketch = (spec) => single$1(config.name, config.configFields, config.factory, spec);\n        const apis = map$1(config.apis, makeApi);\n        const extraApis = map$1(config.extraApis, (f, k) => markAsExtraApi(f, k));\n        return {\n            name: config.name,\n            configFields: config.configFields,\n            sketch,\n            ...apis,\n            ...extraApis\n        };\n    };\n    const composite = (rawConfig) => {\n        const config = asRawOrDie$1('Sketcher for ' + rawConfig.name, compositeSchema, rawConfig);\n        const sketch = (spec) => composite$1(config.name, config.configFields, config.partFields, config.factory, spec);\n        // These are constructors that will store their configuration.\n        const parts = generate$5(config.name, config.partFields);\n        const apis = map$1(config.apis, makeApi);\n        const extraApis = map$1(config.extraApis, (f, k) => markAsExtraApi(f, k));\n        return {\n            name: config.name,\n            partFields: config.partFields,\n            configFields: config.configFields,\n            sketch,\n            parts,\n            ...apis,\n            ...extraApis\n        };\n    };\n\n    const factory$o = (detail) => {\n        const { attributes, ...domWithoutAttributes } = detail.dom;\n        return {\n            uid: detail.uid,\n            dom: {\n                tag: 'div',\n                attributes: {\n                    role: 'presentation',\n                    ...attributes\n                },\n                ...domWithoutAttributes\n            },\n            components: detail.components,\n            behaviours: get$2(detail.containerBehaviours),\n            events: detail.events,\n            domModification: detail.domModification,\n            eventOrder: detail.eventOrder\n        };\n    };\n    const Container = single({\n        name: 'Container',\n        factory: factory$o,\n        configFields: [\n            defaulted('components', []),\n            field('containerBehaviours', []),\n            // TODO: Deprecate\n            defaulted('events', {}),\n            defaulted('domModification', {}),\n            defaulted('eventOrder', {})\n        ]\n    });\n\n    const initialAttribute = 'data-initial-z-index';\n    // We have to alter the z index of the alloy root of the blocker so that\n    // it can have a z-index high enough to act as the \"blocker\". Just before\n    // discarding it, we need to reset those z-indices back to what they\n    // were. ASSUMPTION: the blocker has been added as a direct child of the root\n    const resetZIndex = (blocker) => {\n        parent(blocker.element).filter(isElement$1).each((root) => {\n            getOpt(root, initialAttribute).fold(() => remove$6(root, 'z-index'), (zIndex) => set$7(root, 'z-index', zIndex));\n            remove$8(root, initialAttribute);\n        });\n    };\n    const changeZIndex = (blocker) => {\n        parent(blocker.element).filter(isElement$1).each((root) => {\n            getRaw(root, 'z-index').each((zindex) => {\n                set$9(root, initialAttribute, zindex);\n            });\n            // Used to be a really high number, but it probably just has\n            // to match the blocker\n            set$7(root, 'z-index', get$e(blocker.element, 'z-index'));\n        });\n    };\n    const instigate = (anyComponent, blocker) => {\n        anyComponent.getSystem().addToGui(blocker);\n        changeZIndex(blocker);\n    };\n    const discard = (blocker) => {\n        resetZIndex(blocker);\n        blocker.getSystem().removeFromGui(blocker);\n    };\n    const createComponent = (component, blockerClass, blockerEvents) => component.getSystem().build(Container.sketch({\n        dom: {\n            // Probably consider doing with classes?\n            styles: {\n                'left': '0px',\n                'top': '0px',\n                'width': '100%',\n                'height': '100%',\n                'position': 'fixed',\n                'z-index': '1000000000000000'\n            },\n            classes: [blockerClass]\n        },\n        events: blockerEvents\n    }));\n\n    var SnapSchema = optionObjOf('snaps', [\n        required$1('getSnapPoints'),\n        onHandler('onSensor'),\n        required$1('leftAttr'),\n        required$1('topAttr'),\n        defaulted('lazyViewport', win),\n        defaulted('mustSnap', false)\n    ]);\n\n    const schema$s = [\n        // Is this used?\n        defaulted('useFixed', never),\n        required$1('blockerClass'),\n        defaulted('getTarget', identity),\n        defaulted('onDrag', noop),\n        defaulted('repositionTarget', true),\n        defaulted('onDrop', noop),\n        defaultedFunction('getBounds', win),\n        SnapSchema\n    ];\n\n    const getCurrentCoord = (target) => lift3(getRaw(target, 'left'), getRaw(target, 'top'), getRaw(target, 'position'), (left, top, position) => {\n        const nu = position === 'fixed' ? fixed$1 : offset;\n        return nu(parseInt(left, 10), parseInt(top, 10));\n    }).getOrThunk(() => {\n        const location = absolute$3(target);\n        return absolute$1(location.left, location.top);\n    });\n    const clampCoords = (component, coords, scroll, origin, startData) => {\n        const bounds = startData.bounds;\n        const absoluteCoord = asAbsolute(coords, scroll, origin);\n        const newX = clamp(absoluteCoord.left, bounds.x, bounds.x + bounds.width - startData.width);\n        const newY = clamp(absoluteCoord.top, bounds.y, bounds.y + bounds.height - startData.height);\n        const newCoords = absolute$1(newX, newY);\n        // Translate the absolute coord back into the previous type\n        return coords.fold(\n        // offset\n        () => {\n            const offset$1 = asOffset(newCoords, scroll, origin);\n            return offset(offset$1.left, offset$1.top);\n        }, \n        // absolute\n        constant$1(newCoords), \n        // fixed\n        () => {\n            const fixed = asFixed(newCoords, scroll, origin);\n            return fixed$1(fixed.left, fixed.top);\n        });\n    };\n    const calcNewCoord = (component, optSnaps, currentCoord, scroll, origin, delta, startData) => {\n        const newCoord = optSnaps.fold(() => {\n            // When not docking, use fixed coordinates.\n            const translated = translate$2(currentCoord, delta.left, delta.top);\n            const fixedCoord = asFixed(translated, scroll, origin);\n            return fixed$1(fixedCoord.left, fixedCoord.top);\n        }, (snapInfo) => {\n            const snapping = moveOrSnap(component, snapInfo, currentCoord, delta, scroll, origin);\n            snapping.extra.each((extra) => {\n                snapInfo.onSensor(component, extra);\n            });\n            return snapping.coord;\n        });\n        // Clamp the coords so that they are within the bounds\n        return clampCoords(component, newCoord, scroll, origin, startData);\n    };\n    const dragBy = (component, dragConfig, startData, delta) => {\n        const target = dragConfig.getTarget(component.element);\n        if (dragConfig.repositionTarget) {\n            const doc = owner$4(component.element);\n            const scroll = get$b(doc);\n            const origin = getOrigin(target);\n            const currentCoord = getCurrentCoord(target);\n            const newCoord = calcNewCoord(component, dragConfig.snaps, currentCoord, scroll, origin, delta, startData);\n            const styles = toStyles(newCoord, scroll, origin);\n            setOptions(target, styles);\n        }\n        // NOTE: On drag just goes with the original delta. It does not know about snapping.\n        dragConfig.onDrag(component, target, delta);\n    };\n\n    const calcStartData = (dragConfig, comp) => ({\n        bounds: dragConfig.getBounds(),\n        height: getOuter$1(comp.element),\n        width: getOuter(comp.element)\n    });\n    const move = (component, dragConfig, dragState, dragMode, event) => {\n        const delta = dragState.update(dragMode, event);\n        const dragStartData = dragState.getStartData().getOrThunk(() => calcStartData(dragConfig, component));\n        delta.each((dlt) => {\n            dragBy(component, dragConfig, dragStartData, dlt);\n        });\n    };\n    const stop = (component, blocker, dragConfig, dragState) => {\n        blocker.each(discard);\n        dragConfig.snaps.each((snapInfo) => {\n            stopDrag(component, snapInfo);\n        });\n        const target = dragConfig.getTarget(component.element);\n        dragState.reset();\n        dragConfig.onDrop(component, target);\n    };\n    const handlers = (events) => (dragConfig, dragState) => {\n        const updateStartState = (comp) => {\n            dragState.setStartData(calcStartData(dragConfig, comp));\n        };\n        return derive$2([\n            run$1(windowScroll(), (comp) => {\n                // Only update if we have some start data\n                dragState.getStartData().each(() => updateStartState(comp));\n            }),\n            ...events(dragConfig, dragState, updateStartState)\n        ]);\n    };\n\n    const init$c = (dragApi) => derive$2([\n        // When the user clicks on the blocker, something has probably gone slightly\n        // wrong, so we'll just drop for safety. The blocker should really only\n        // be there when the mouse is already down and not released, so a 'click'\n        run$1(mousedown(), dragApi.forceDrop),\n        // When the user releases the mouse on the blocker, that is a drop\n        run$1(mouseup(), dragApi.drop),\n        // As the user moves the mouse around (while pressed down), we move the\n        // component around\n        run$1(mousemove(), (comp, simulatedEvent) => {\n            dragApi.move(simulatedEvent.event);\n        }),\n        // When the use moves outside the range, schedule a block to occur but\n        // give it a chance to be cancelled.\n        run$1(mouseout(), dragApi.delayDrop)\n    ]);\n\n    const getData$1 = (event) => Optional.from(SugarPosition(event.x, event.y));\n    // When dragging with the mouse, the delta is simply the difference\n    // between the two position (previous/old and next/nu)\n    const getDelta$1 = (old, nu) => SugarPosition(nu.left - old.left, nu.top - old.top);\n\n    var MouseData = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getData: getData$1,\n        getDelta: getDelta$1\n    });\n\n    const events$d = (dragConfig, dragState, updateStartState) => [\n        run$1(mousedown(), (component, simulatedEvent) => {\n            const raw = simulatedEvent.event.raw;\n            if (raw.button !== 0) {\n                return;\n            }\n            simulatedEvent.stop();\n            const stop$1 = () => stop(component, Optional.some(blocker), dragConfig, dragState);\n            // If the user has moved something outside the area, and has not come back within\n            // 200 ms, then drop\n            const delayDrop = DelayedFunction(stop$1, 200);\n            const dragApi = {\n                drop: stop$1,\n                delayDrop: delayDrop.schedule,\n                forceDrop: stop$1,\n                move: (event) => {\n                    // Stop any pending drops caused by mouseout\n                    delayDrop.cancel();\n                    move(component, dragConfig, dragState, MouseData, event);\n                }\n            };\n            const blocker = createComponent(component, dragConfig.blockerClass, init$c(dragApi));\n            const start = () => {\n                updateStartState(component);\n                instigate(component, blocker);\n            };\n            start();\n        })\n    ];\n    const schema$r = [\n        ...schema$s,\n        output$1('dragger', {\n            handlers: handlers(events$d)\n        })\n    ];\n\n    const init$b = (dragApi) => derive$2([\n        // When the user taps on the blocker, something has probably gone slightly\n        // wrong, so we'll just drop for safety. The blocker should really only\n        // be there when their finger is already down and not released, so a 'tap'\n        run$1(touchstart(), dragApi.forceDrop),\n        // When the user releases their finger on the blocker, that is a drop\n        run$1(touchend(), dragApi.drop),\n        run$1(touchcancel(), dragApi.drop),\n        // As the user moves their finger around (while pressed down), we move the\n        // component around\n        run$1(touchmove(), (comp, simulatedEvent) => {\n            dragApi.move(simulatedEvent.event);\n        })\n    ]);\n\n    const getDataFrom = (touches) => {\n        const touch = touches[0];\n        return Optional.some(SugarPosition(touch.clientX, touch.clientY));\n    };\n    const getData = (event) => {\n        const raw = event.raw;\n        const touches = raw.touches;\n        return touches.length === 1 ? getDataFrom(touches) : Optional.none();\n    };\n    // When dragging the touch, the delta is simply the difference\n    // between the two touch positions (previous/old and next/nu)\n    const getDelta = (old, nu) => SugarPosition(nu.left - old.left, nu.top - old.top);\n\n    var TouchData = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getData: getData,\n        getDelta: getDelta\n    });\n\n    const events$c = (dragConfig, dragState, updateStartState) => {\n        const blockerSingleton = value$2();\n        const stopBlocking = (component) => {\n            stop(component, blockerSingleton.get(), dragConfig, dragState);\n            blockerSingleton.clear();\n        };\n        // Android fires events on the component at all times, while iOS initially fires on the component\n        // but once moved off the component then fires on the element behind. As such we need to use\n        // a blocker and then listen to both touchmove/touchend on both the component and blocker.\n        return [\n            run$1(touchstart(), (component, simulatedEvent) => {\n                simulatedEvent.stop();\n                const stop = () => stopBlocking(component);\n                const dragApi = {\n                    drop: stop,\n                    // delayDrop is not used by touch\n                    delayDrop: noop,\n                    forceDrop: stop,\n                    move: (event) => {\n                        move(component, dragConfig, dragState, TouchData, event);\n                    }\n                };\n                const blocker = createComponent(component, dragConfig.blockerClass, init$b(dragApi));\n                blockerSingleton.set(blocker);\n                const start = () => {\n                    updateStartState(component);\n                    instigate(component, blocker);\n                };\n                start();\n            }),\n            run$1(touchmove(), (component, simulatedEvent) => {\n                simulatedEvent.stop();\n                move(component, dragConfig, dragState, TouchData, simulatedEvent.event);\n            }),\n            run$1(touchend(), (component, simulatedEvent) => {\n                simulatedEvent.stop();\n                stopBlocking(component);\n            }),\n            run$1(touchcancel(), stopBlocking)\n        ];\n    };\n    const schema$q = [\n        ...schema$s,\n        output$1('dragger', {\n            handlers: handlers(events$c)\n        })\n    ];\n\n    const events$b = (dragConfig, dragState, updateStartState) => [\n        ...events$d(dragConfig, dragState, updateStartState),\n        ...events$c(dragConfig, dragState, updateStartState)\n    ];\n    const schema$p = [\n        ...schema$s,\n        output$1('dragger', {\n            handlers: handlers(events$b)\n        })\n    ];\n\n    const mouse = schema$r;\n    const touch = schema$q;\n    const mouseOrTouch = schema$p;\n\n    var DraggingBranches = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        mouse: mouse,\n        touch: touch,\n        mouseOrTouch: mouseOrTouch\n    });\n\n    // NOTE: mode refers to the way that information is retrieved from\n    // the user interaction. It can be things like MouseData, TouchData etc.\n    const init$a = () => {\n        // Dragging operates on the difference between the previous user\n        // interaction and the next user interaction. Therefore, we store\n        // the previous interaction so that we can compare it.\n        let previous = Optional.none();\n        // Dragging requires calculating the bounds, so we store that data initially\n        // to reduce the amount of computation each mouse movement\n        let startData = Optional.none();\n        const reset = () => {\n            previous = Optional.none();\n            startData = Optional.none();\n        };\n        // Return position delta between previous position and nu position,\n        // or None if this is the first. Set the previous position to nu.\n        const calculateDelta = (mode, nu) => {\n            const result = previous.map((old) => mode.getDelta(old, nu));\n            previous = Optional.some(nu);\n            return result;\n        };\n        // NOTE: This dragEvent is the DOM touch event or mouse event\n        const update = (mode, dragEvent) => mode.getData(dragEvent).bind((nuData) => calculateDelta(mode, nuData));\n        const setStartData = (data) => {\n            startData = Optional.some(data);\n        };\n        const getStartData = () => startData;\n        const readState = constant$1({});\n        return nu$4({\n            readState,\n            reset,\n            update,\n            getStartData,\n            setStartData\n        });\n    };\n\n    var DragState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$a\n    });\n\n    const Dragging = createModes({\n        branchKey: 'mode',\n        branches: DraggingBranches,\n        name: 'dragging',\n        active: {\n            events: (dragConfig, dragState) => {\n                const dragger = dragConfig.dragger;\n                return dragger.handlers(dragConfig, dragState);\n            }\n        },\n        extra: {\n            // Extra. Does not need component as input.\n            snap: (sConfig) => ({\n                sensor: sConfig.sensor,\n                range: sConfig.range,\n                output: sConfig.output,\n                extra: Optional.from(sConfig.extra)\n            })\n        },\n        state: DragState,\n        apis: DraggingApis\n    });\n\n    const ariaElements = [\n        'input',\n        'textarea'\n    ];\n    const isAriaElement = (elem) => {\n        const name = name$3(elem);\n        return contains$2(ariaElements, name);\n    };\n    const markValid = (component, invalidConfig) => {\n        const elem = invalidConfig.getRoot(component).getOr(component.element);\n        remove$3(elem, invalidConfig.invalidClass);\n        invalidConfig.notify.each((notifyInfo) => {\n            if (isAriaElement(component.element)) {\n                set$9(component.element, 'aria-invalid', false);\n            }\n            notifyInfo.getContainer(component).each((container) => {\n                set$8(container, notifyInfo.validHtml);\n            });\n            notifyInfo.onValid(component);\n        });\n    };\n    const markInvalid = (component, invalidConfig, invalidState, text) => {\n        const elem = invalidConfig.getRoot(component).getOr(component.element);\n        add$2(elem, invalidConfig.invalidClass);\n        invalidConfig.notify.each((notifyInfo) => {\n            if (isAriaElement(component.element)) {\n                set$9(component.element, 'aria-invalid', true);\n            }\n            notifyInfo.getContainer(component).each((container) => {\n                // TODO: Should we just use Text here, not HTML?\n                set$8(container, text);\n            });\n            notifyInfo.onInvalid(component, text);\n        });\n    };\n    const query = (component, invalidConfig, _invalidState) => invalidConfig.validator.fold(() => Future.pure(Result.value(true)), (validatorInfo) => validatorInfo.validate(component));\n    const run = (component, invalidConfig, invalidState) => {\n        invalidConfig.notify.each((notifyInfo) => {\n            notifyInfo.onValidate(component);\n        });\n        return query(component, invalidConfig).map((valid) => {\n            if (component.getSystem().isConnected()) {\n                return valid.fold((err) => {\n                    markInvalid(component, invalidConfig, invalidState, err);\n                    return Result.error(err);\n                }, (v) => {\n                    markValid(component, invalidConfig);\n                    return Result.value(v);\n                });\n            }\n            else {\n                return Result.error('No longer in system');\n            }\n        });\n    };\n    const isInvalid = (component, invalidConfig) => {\n        const elem = invalidConfig.getRoot(component).getOr(component.element);\n        return has(elem, invalidConfig.invalidClass);\n    };\n\n    var InvalidateApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        markValid: markValid,\n        markInvalid: markInvalid,\n        query: query,\n        run: run,\n        isInvalid: isInvalid\n    });\n\n    const events$a = (invalidConfig, invalidState) => invalidConfig.validator.map((validatorInfo) => derive$2([\n        run$1(validatorInfo.onEvent, (component) => {\n            run(component, invalidConfig, invalidState).get(identity);\n        })\n    ].concat(validatorInfo.validateOnLoad ? [\n        runOnAttached((component) => {\n            run(component, invalidConfig, invalidState).get(noop);\n        })\n    ] : []))).getOr({});\n\n    var ActiveInvalidate = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$a\n    });\n\n    var InvalidateSchema = [\n        required$1('invalidClass'),\n        defaulted('getRoot', Optional.none),\n        // TODO: Completely rework the notify API\n        optionObjOf('notify', [\n            defaulted('aria', 'alert'),\n            // Maybe we should use something else.\n            defaulted('getContainer', Optional.none),\n            defaulted('validHtml', ''),\n            onHandler('onValid'),\n            onHandler('onInvalid'),\n            onHandler('onValidate')\n        ]),\n        optionObjOf('validator', [\n            required$1('validate'),\n            defaulted('onEvent', 'input'),\n            defaulted('validateOnLoad', true)\n        ])\n    ];\n\n    const onLoad$4 = (component, repConfig, repState) => {\n        repConfig.store.manager.onLoad(component, repConfig, repState);\n    };\n    const onUnload$2 = (component, repConfig, repState) => {\n        repConfig.store.manager.onUnload(component, repConfig, repState);\n    };\n    const setValue$3 = (component, repConfig, repState, data) => {\n        repConfig.store.manager.setValue(component, repConfig, repState, data);\n    };\n    const getValue$3 = (component, repConfig, repState) => repConfig.store.manager.getValue(component, repConfig, repState);\n    const getState$2 = (component, repConfig, repState) => repState;\n\n    var RepresentApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        onLoad: onLoad$4,\n        onUnload: onUnload$2,\n        setValue: setValue$3,\n        getValue: getValue$3,\n        getState: getState$2\n    });\n\n    const events$9 = (repConfig, repState) => {\n        const es = repConfig.resetOnDom ? [\n            runOnAttached((comp, _se) => {\n                onLoad$4(comp, repConfig, repState);\n            }),\n            runOnDetached((comp, _se) => {\n                onUnload$2(comp, repConfig, repState);\n            })\n        ] : [\n            loadEvent(repConfig, repState, onLoad$4)\n        ];\n        return derive$2(es);\n    };\n\n    var ActiveRepresenting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$9\n    });\n\n    const memory$1 = () => {\n        const data = Cell(null);\n        const readState = () => ({\n            mode: 'memory',\n            value: data.get()\n        });\n        const isNotSet = () => data.get() === null;\n        const clear = () => {\n            data.set(null);\n        };\n        return nu$4({\n            set: data.set,\n            get: data.get,\n            isNotSet,\n            clear,\n            readState\n        });\n    };\n    const manual = () => {\n        const readState = noop;\n        return nu$4({\n            readState\n        });\n    };\n    const dataset = () => {\n        const dataByValue = Cell({});\n        const dataByText = Cell({});\n        const readState = () => ({\n            mode: 'dataset',\n            dataByValue: dataByValue.get(),\n            dataByText: dataByText.get()\n        });\n        const clear = () => {\n            dataByValue.set({});\n            dataByText.set({});\n        };\n        // itemString can be matching value or text.\n        // TODO: type problem - impossible to correctly return value when type parameter only exists in return type\n        const lookup = (itemString) => get$h(dataByValue.get(), itemString).orThunk(() => get$h(dataByText.get(), itemString));\n        const update = (items) => {\n            const currentDataByValue = dataByValue.get();\n            const currentDataByText = dataByText.get();\n            const newDataByValue = {};\n            const newDataByText = {};\n            each$1(items, (item) => {\n                newDataByValue[item.value] = item;\n                get$h(item, 'meta').each((meta) => {\n                    get$h(meta, 'text').each((text) => {\n                        newDataByText[text] = item;\n                    });\n                });\n            });\n            dataByValue.set({\n                ...currentDataByValue,\n                ...newDataByValue\n            });\n            dataByText.set({\n                ...currentDataByText,\n                ...newDataByText\n            });\n        };\n        return nu$4({\n            readState,\n            lookup,\n            update,\n            clear\n        });\n    };\n    const init$9 = (spec) => spec.store.manager.state(spec);\n\n    var RepresentState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        memory: memory$1,\n        dataset: dataset,\n        manual: manual,\n        init: init$9\n    });\n\n    const setValue$2 = (component, repConfig, repState, data) => {\n        const store = repConfig.store;\n        repState.update([data]);\n        store.setValue(component, data);\n        repConfig.onSetValue(component, data);\n    };\n    const getValue$2 = (component, repConfig, repState) => {\n        const store = repConfig.store;\n        const key = store.getDataKey(component);\n        return repState.lookup(key).getOrThunk(() => store.getFallbackEntry(key));\n    };\n    const onLoad$3 = (component, repConfig, repState) => {\n        const store = repConfig.store;\n        store.initialValue.each((data) => {\n            setValue$2(component, repConfig, repState, data);\n        });\n    };\n    const onUnload$1 = (component, repConfig, repState) => {\n        repState.clear();\n    };\n    var DatasetStore = [\n        option$3('initialValue'),\n        required$1('getFallbackEntry'),\n        required$1('getDataKey'),\n        required$1('setValue'),\n        output$1('manager', {\n            setValue: setValue$2,\n            getValue: getValue$2,\n            onLoad: onLoad$3,\n            onUnload: onUnload$1,\n            state: dataset\n        })\n    ];\n\n    const getValue$1 = (component, repConfig, _repState) => repConfig.store.getValue(component);\n    const setValue$1 = (component, repConfig, _repState, data) => {\n        repConfig.store.setValue(component, data);\n        repConfig.onSetValue(component, data);\n    };\n    const onLoad$2 = (component, repConfig, _repState) => {\n        repConfig.store.initialValue.each((data) => {\n            repConfig.store.setValue(component, data);\n        });\n    };\n    var ManualStore = [\n        required$1('getValue'),\n        defaulted('setValue', noop),\n        option$3('initialValue'),\n        output$1('manager', {\n            setValue: setValue$1,\n            getValue: getValue$1,\n            onLoad: onLoad$2,\n            onUnload: noop,\n            state: NoState.init\n        })\n    ];\n\n    const setValue = (component, repConfig, repState, data) => {\n        repState.set(data);\n        repConfig.onSetValue(component, data);\n    };\n    const getValue = (component, repConfig, repState) => repState.get();\n    const onLoad$1 = (component, repConfig, repState) => {\n        repConfig.store.initialValue.each((initVal) => {\n            if (repState.isNotSet()) {\n                repState.set(initVal);\n            }\n        });\n    };\n    const onUnload = (component, repConfig, repState) => {\n        repState.clear();\n    };\n    var MemoryStore = [\n        option$3('initialValue'),\n        output$1('manager', {\n            setValue,\n            getValue,\n            onLoad: onLoad$1,\n            onUnload,\n            state: memory$1\n        })\n    ];\n\n    var RepresentSchema = [\n        defaultedOf('store', { mode: 'memory' }, choose$1('mode', {\n            memory: MemoryStore,\n            manual: ManualStore,\n            dataset: DatasetStore\n        })),\n        onHandler('onSetValue'),\n        defaulted('resetOnDom', false)\n    ];\n\n    // The self-reference is clumsy.\n    const Representing = create$3({\n        fields: RepresentSchema,\n        name: 'representing',\n        active: ActiveRepresenting,\n        apis: RepresentApis,\n        extra: {\n            setValueFrom: (component, source) => {\n                const value = Representing.getValue(source);\n                Representing.setValue(component, value);\n            }\n        },\n        state: RepresentState\n    });\n\n    const Invalidating = create$3({\n        fields: InvalidateSchema,\n        name: 'invalidating',\n        active: ActiveInvalidate,\n        apis: InvalidateApis,\n        extra: {\n            // Note, this requires representing to be on the validatee\n            validation: (validator) => {\n                return (component) => {\n                    const v = Representing.getValue(component);\n                    return Future.pure(validator(v));\n                };\n            }\n        }\n    });\n\n    const exhibit$4 = (base, posConfig) => nu$2({\n        classes: [],\n        styles: posConfig.useFixed() ? {} : { position: 'relative' }\n    });\n\n    var ActivePosition = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$4\n    });\n\n    const adt$3 = Adt.generate([\n        { none: [] },\n        { relative: ['x', 'y', 'width', 'height'] },\n        { fixed: ['x', 'y', 'width', 'height'] }\n    ]);\n    const positionWithDirection = (posName, decision, x, y, width, height) => {\n        const decisionRect = decision.rect;\n        const decisionX = decisionRect.x - x;\n        const decisionY = decisionRect.y - y;\n        const decisionWidth = decisionRect.width;\n        const decisionHeight = decisionRect.height;\n        const decisionRight = width - (decisionX + decisionWidth);\n        const decisionBottom = height - (decisionY + decisionHeight);\n        const left = Optional.some(decisionX);\n        const top = Optional.some(decisionY);\n        const right = Optional.some(decisionRight);\n        const bottom = Optional.some(decisionBottom);\n        const none = Optional.none();\n        return cata$1(decision.direction, () => NuPositionCss(posName, left, top, none, none), // southeast\n        () => NuPositionCss(posName, none, top, right, none), // southwest\n        () => NuPositionCss(posName, left, none, none, bottom), // northeast\n        () => NuPositionCss(posName, none, none, right, bottom), // northwest\n        () => NuPositionCss(posName, left, top, none, none), // south\n        () => NuPositionCss(posName, left, none, none, bottom), // north\n        () => NuPositionCss(posName, left, top, none, none), // east\n        () => NuPositionCss(posName, none, top, right, none) // west\n        );\n    };\n    const reposition = (origin, decision) => origin.fold(() => {\n        const decisionRect = decision.rect;\n        return NuPositionCss('absolute', Optional.some(decisionRect.x), Optional.some(decisionRect.y), Optional.none(), Optional.none());\n    }, (x, y, width, height) => {\n        return positionWithDirection('absolute', decision, x, y, width, height);\n    }, (x, y, width, height) => {\n        return positionWithDirection('fixed', decision, x, y, width, height);\n    });\n    const toBox = (origin, element) => {\n        const rel = curry(find$2, element);\n        const position = origin.fold(rel, rel, () => {\n            const scroll = get$b();\n            // TODO: Make adding the scroll in OuterPosition.find optional.\n            return find$2(element).translate(-scroll.left, -scroll.top);\n        });\n        const width = getOuter(element);\n        const height = getOuter$1(element);\n        return bounds(position.left, position.top, width, height);\n    };\n    const viewport = (origin, optBounds) => optBounds.fold(\n    /* There are no bounds supplied */\n    () => origin.fold(win, win, bounds), (bounds$1) => \n    /* Use any bounds supplied or remove the scroll position of the bounds for fixed. */\n    origin.fold(constant$1(bounds$1), constant$1(bounds$1), () => {\n        const pos = translate$1(origin, bounds$1.x, bounds$1.y);\n        return bounds(pos.left, pos.top, bounds$1.width, bounds$1.height);\n    }));\n    const translate$1 = (origin, x, y) => {\n        const pos = SugarPosition(x, y);\n        const removeScroll = () => {\n            const outerScroll = get$b();\n            return pos.translate(-outerScroll.left, -outerScroll.top);\n        };\n        // This could use cata if it wasn't a circular reference\n        return origin.fold(constant$1(pos), constant$1(pos), removeScroll);\n    };\n    const cata = (subject, onNone, onRelative, onFixed) => subject.fold(onNone, onRelative, onFixed);\n    adt$3.none;\n    const relative = adt$3.relative;\n    const fixed = adt$3.fixed;\n\n    const anchor = (anchorBox, origin) => ({\n        anchorBox,\n        origin\n    });\n    const box = (anchorBox, origin) => anchor(anchorBox, origin);\n\n    const adt$2 = Adt.generate([\n        { fit: ['reposition'] },\n        { nofit: ['reposition', 'visibleW', 'visibleH', 'isVisible'] }\n    ]);\n    /**\n     * This will attempt to determine if the box will fit within the specified bounds or if it needs to be repositioned.\n     * It will return the following details:\n     *  - if the original rect was in bounds (originInBounds & sizeInBounds). This is used to determine if we fitted\n     *    without having to make adjustments.\n     *  - the height and width that would be visible in the original location. (ie the overlap between the rect and\n     *    the bounds or the distance between the boxes if there is no overlap)\n     */\n    const determinePosition = (box, bounds) => {\n        const { x: boundsX, y: boundsY, right: boundsRight, bottom: boundsBottom } = bounds;\n        const { x, y, right, bottom, width, height } = box;\n        // simple checks for \"is the top left inside the view\"\n        const xInBounds = x >= boundsX && x <= boundsRight;\n        const yInBounds = y >= boundsY && y <= boundsBottom;\n        const originInBounds = xInBounds && yInBounds;\n        // simple checks for \"is the bottom right inside the view\"\n        const rightInBounds = right <= boundsRight && right >= boundsX;\n        const bottomInBounds = bottom <= boundsBottom && bottom >= boundsY;\n        const sizeInBounds = rightInBounds && bottomInBounds;\n        // measure how much of the width and height are visible. This should never be larger than the actual width or height\n        // however it can be a negative value when offscreen. These values are generally are only needed for the \"nofit\" case\n        const visibleW = Math.min(width, x >= boundsX ? boundsRight - x : right - boundsX);\n        const visibleH = Math.min(height, y >= boundsY ? boundsBottom - y : bottom - boundsY);\n        return {\n            originInBounds,\n            sizeInBounds,\n            visibleW,\n            visibleH\n        };\n    };\n    /**\n     * This will attempt to calculate and adjust the position of the box so that is stays within the specified bounds.\n     * The end result will be a new restricted box of where it can safely be placed within the bounds.\n     */\n    const calcReposition = (box, bounds$1) => {\n        const { x: boundsX, y: boundsY, right: boundsRight, bottom: boundsBottom } = bounds$1;\n        const { x, y, width, height } = box;\n        // measure the maximum x and y taking into account the height and width of the box\n        const maxX = Math.max(boundsX, boundsRight - width);\n        const maxY = Math.max(boundsY, boundsBottom - height);\n        // Futz with the X value to ensure that we're not off the left or right of the screen\n        const restrictedX = clamp(x, boundsX, maxX);\n        // Futz with the Y value to ensure that we're not off the top or bottom of the screen\n        const restrictedY = clamp(y, boundsY, maxY);\n        // Determine the new height and width based on the restricted X/Y to keep the element in bounds\n        const restrictedWidth = Math.min(restrictedX + width, boundsRight) - restrictedX;\n        const restrictedHeight = Math.min(restrictedY + height, boundsBottom) - restrictedY;\n        return bounds(restrictedX, restrictedY, restrictedWidth, restrictedHeight);\n    };\n    /**\n     * Determine the maximum height and width available for where the box is positioned in the bounds, making sure\n     * to account for which direction it's rendering in.\n     */\n    const calcMaxSizes = (direction, box, bounds) => {\n        // Futz with the \"height\" of the popup to ensure if it doesn't fit it's capped at the available height.\n        const upAvailable = constant$1(box.bottom - bounds.y);\n        const downAvailable = constant$1(bounds.bottom - box.y);\n        const maxHeight = cataVertical(direction, downAvailable, /* middle */ downAvailable, upAvailable);\n        // Futz with the \"width\" of the popup to ensure if it doesn't fit it's capped at the available width.\n        const westAvailable = constant$1(box.right - bounds.x);\n        const eastAvailable = constant$1(bounds.right - box.x);\n        const maxWidth = cataHorizontal(direction, eastAvailable, /* middle */ eastAvailable, westAvailable);\n        return {\n            maxWidth,\n            maxHeight\n        };\n    };\n    const attempt = (candidate, width, height, bounds$1) => {\n        const bubble = candidate.bubble;\n        const bubbleOffset = bubble.offset;\n        // adjust the bounds to account for the layout and bubble restrictions\n        const adjustedBounds = adjustBounds(bounds$1, candidate.restriction, bubbleOffset);\n        // candidate position is excluding the bubble, so add those values as well\n        const newX = candidate.x + bubbleOffset.left;\n        const newY = candidate.y + bubbleOffset.top;\n        const box = bounds(newX, newY, width, height);\n        // determine the position of the box in relation to the bounds\n        const { originInBounds, sizeInBounds, visibleW, visibleH } = determinePosition(box, adjustedBounds);\n        // restrict the box if it won't fit in the bounds\n        const fits = originInBounds && sizeInBounds;\n        const fittedBox = fits ? box : calcReposition(box, adjustedBounds);\n        // Determine if the box is at least partly visible in the bounds after applying the restrictions\n        const isPartlyVisible = fittedBox.width > 0 && fittedBox.height > 0;\n        // Determine the maximum height and width available in the bounds\n        const { maxWidth, maxHeight } = calcMaxSizes(candidate.direction, fittedBox, bounds$1);\n        const reposition = {\n            rect: fittedBox,\n            maxHeight,\n            maxWidth,\n            direction: candidate.direction,\n            placement: candidate.placement,\n            classes: {\n                on: bubble.classesOn,\n                off: bubble.classesOff\n            },\n            layout: candidate.label,\n            testY: newY\n        };\n        // useful debugging that I don't want to lose\n        // console.log(candidate.label);\n        // console.table([{\n        //   newY,\n        //   limitY: fittedBox.y,\n        //   boundsY: bounds.y,\n        //   boundsBottom: bounds.bottom,\n        //   newX,\n        //   limitX: fittedBox.x,\n        //   boundsX: bounds.x,\n        //   boundsRight: bounds.right,\n        //   candidateX: candidate.x,\n        //   candidateY: candidate.y,\n        //   width,\n        //   height,\n        //   isPartlyVisible\n        // }]);\n        // console.log(`maxWidth: ${maxWidth}, visibleW: ${visibleW}`);\n        // console.log(`maxHeight: ${maxHeight}, visibleH: ${visibleH}`);\n        // console.log('originInBounds:', originInBounds);\n        // console.log('sizeInBounds:', sizeInBounds);\n        // console.log(originInBounds && sizeInBounds ? 'fit' : 'nofit');\n        // Take special note that we don't use the futz values in the nofit case; whether this position is a good fit is separate\n        // to ensuring that if we choose it the popup is actually on screen properly.\n        return fits || candidate.alwaysFit ? adt$2.fit(reposition) : adt$2.nofit(reposition, visibleW, visibleH, isPartlyVisible);\n    };\n    /**\n     * Attempts to fit a box (generally a menu).\n     *\n     * candidates: an array of layout generators, generally obtained via api.Layout or api.LinkedLayout\n     * anchorBox: the box on screen that triggered the menu, we must touch one of the edges as defined by the candidate layouts\n     * elementBox: the popup (only width and height matter)\n     * bubbles: the bubbles for the popup (see api.Bubble)\n     * bounds: the screen\n     */\n    const attempts = (element, candidates, anchorBox, elementBox, bubbles, bounds) => {\n        const panelWidth = elementBox.width;\n        const panelHeight = elementBox.height;\n        const attemptBestFit = (layout, reposition, visibleW, visibleH, isVisible) => {\n            const next = layout(anchorBox, elementBox, bubbles, element, bounds);\n            const attemptLayout = attempt(next, panelWidth, panelHeight, bounds);\n            return attemptLayout.fold(constant$1(attemptLayout), (newReposition, newVisibleW, newVisibleH, newIsVisible) => {\n                // console.log(`label: ${next.label}, newVisibleW: ${newVisibleW}, visibleW: ${visibleW}, newVisibleH: ${newVisibleH}, visibleH: ${visibleH}, newIsVisible: ${newIsVisible}, isVisible: ${isVisible}`);\n                const improved = isVisible === newIsVisible ? (newVisibleH > visibleH || newVisibleW > visibleW) : (!isVisible && newIsVisible);\n                // console.log('improved? ', improved);\n                return improved ? attemptLayout : adt$2.nofit(reposition, visibleW, visibleH, isVisible);\n            });\n        };\n        const abc = foldl(candidates, (b, a) => {\n            const bestNext = curry(attemptBestFit, a);\n            return b.fold(constant$1(b), bestNext);\n        }, \n        // fold base case: No candidates, it's never going to be correct, so do whatever\n        adt$2.nofit({\n            rect: anchorBox,\n            maxHeight: elementBox.height,\n            maxWidth: elementBox.width,\n            direction: southeast$3(),\n            placement: \"southeast\" /* Placement.Southeast */,\n            classes: {\n                on: [],\n                off: []\n            },\n            layout: 'none',\n            testY: anchorBox.y\n        }, -1, -1, false));\n        // unwrapping 'reposition' from the adt, for both fit & nofit the first arg is the one we need,\n        // so we can cheat and use Fun.identity\n        return abc.fold(identity, identity);\n    };\n\n    const properties = ['top', 'bottom', 'right', 'left'];\n    const timerAttr = 'data-alloy-transition-timer';\n    const isTransitioning$1 = (element, transition) => hasAll(element, transition.classes);\n    const shouldApplyTransitionCss = (transition, decision, lastPlacement) => {\n        // Don't apply transitions if there was no previous placement as it's transitioning from offscreen\n        return lastPlacement.exists((placer) => {\n            const mode = transition.mode;\n            return mode === 'all' ? true : placer[mode] !== decision[mode];\n        });\n    };\n    const hasChanges = (position, intermediate) => {\n        // Round to 3 decimal points\n        const round = (value) => parseFloat(value).toFixed(3);\n        return find$4(intermediate, (value, key) => {\n            const newValue = position[key].map(round);\n            const val = value.map(round);\n            return !equals(newValue, val);\n        }).isSome();\n    };\n    const getTransitionDuration = (element) => {\n        const get = (name) => {\n            const style = get$e(element, name);\n            const times = style.split(/\\s*,\\s*/);\n            return filter$2(times, isNotEmpty);\n        };\n        const parse = (value) => {\n            if (isString(value) && /^[\\d.]+/.test(value)) {\n                const num = parseFloat(value);\n                return endsWith(value, 'ms') ? num : num * 1000;\n            }\n            else {\n                return 0;\n            }\n        };\n        const delay = get('transition-delay');\n        const duration = get('transition-duration');\n        return foldl(duration, (acc, dur, i) => {\n            const time = parse(delay[i]) + parse(dur);\n            return Math.max(acc, time);\n        }, 0);\n    };\n    const setupTransitionListeners = (element, transition) => {\n        const transitionEnd = unbindable();\n        const transitionCancel = unbindable();\n        let timer;\n        const isSourceTransition = (e) => {\n            var _a;\n            // Ensure the transition event isn't from a pseudo element\n            const pseudoElement = (_a = e.raw.pseudoElement) !== null && _a !== void 0 ? _a : '';\n            return eq(e.target, element) && isEmpty(pseudoElement) && contains$2(properties, e.raw.propertyName);\n        };\n        const transitionDone = (e) => {\n            if (isNullable(e) || isSourceTransition(e)) {\n                transitionEnd.clear();\n                transitionCancel.clear();\n                // Only cleanup the class/timer on transitionend not on a cancel. This is done as cancel\n                // means the element has been repositioned and would need to keep transitioning\n                const type = e === null || e === void 0 ? void 0 : e.raw.type;\n                if (isNullable(type) || type === transitionend()) {\n                    clearTimeout(timer);\n                    remove$8(element, timerAttr);\n                    remove$2(element, transition.classes);\n                }\n            }\n        };\n        const transitionStart = bind$1(element, transitionstart(), (e) => {\n            if (isSourceTransition(e)) {\n                transitionStart.unbind();\n                transitionEnd.set(bind$1(element, transitionend(), transitionDone));\n                transitionCancel.set(bind$1(element, transitioncancel(), transitionDone));\n            }\n        });\n        // Request the next animation frame so we can roughly determine when the transition starts and then ensure\n        // the transition is cleaned up. In addition add ~17ms to the delay as that's about about 1 frame at 60fps\n        const duration = getTransitionDuration(element);\n        requestAnimationFrame(() => {\n            timer = setTimeout(transitionDone, duration + 17);\n            set$9(element, timerAttr, timer);\n        });\n    };\n    const startTransitioning = (element, transition) => {\n        add$1(element, transition.classes);\n        // Clear any existing cleanup timers\n        getOpt(element, timerAttr).each((timerId) => {\n            clearTimeout(parseInt(timerId, 10));\n            remove$8(element, timerAttr);\n        });\n        setupTransitionListeners(element, transition);\n    };\n    const applyTransitionCss = (element, origin, position, transition, decision, lastPlacement) => {\n        const shouldTransition = shouldApplyTransitionCss(transition, decision, lastPlacement);\n        if (shouldTransition || isTransitioning$1(element, transition)) {\n            // Set the new position first so we can calculate the computed position\n            set$7(element, 'position', position.position);\n            // Get the computed positions for the current element based on the new position CSS being applied\n            const rect = toBox(origin, element);\n            const intermediatePosition = reposition(origin, { ...decision, rect });\n            const intermediateCssOptions = mapToObject(properties, (prop) => intermediatePosition[prop]);\n            // Apply the intermediate styles and transition classes if something has changed\n            if (hasChanges(position, intermediateCssOptions)) {\n                setOptions(element, intermediateCssOptions);\n                if (shouldTransition) {\n                    startTransitioning(element, transition);\n                }\n                reflow(element);\n            }\n        }\n        else {\n            remove$2(element, transition.classes);\n        }\n    };\n\n    /*\n     * This is the old repartee API. It is retained in a similar structure to the original form,\n     * in case we decide to bring back the flexibility of working with non-standard positioning.\n     */\n    const elementSize = (p) => ({\n        width: Math.ceil(getOuterExact(p)),\n        height: getOuter$1(p)\n    });\n    const layout = (anchorBox, element, bubbles, options) => {\n        // clear the potentially limiting factors before measuring\n        remove$6(element, 'max-height');\n        remove$6(element, 'max-width');\n        const elementBox = elementSize(element);\n        return attempts(element, options.preference, anchorBox, elementBox, bubbles, options.bounds);\n    };\n    const setClasses = (element, decision) => {\n        const classInfo = decision.classes;\n        remove$2(element, classInfo.off);\n        add$1(element, classInfo.on);\n    };\n    /*\n     * maxHeightFunction is a MaxHeight instance.\n     * max-height is usually the distance between the edge of the popup and the screen; top of popup to bottom of screen for south, bottom of popup to top of screen for north.\n     *\n     * There are a few cases where we specifically don't want a max-height, which is why it's optional.\n     */\n    const setHeight = (element, decision, options) => {\n        // The old API enforced MaxHeight.anchored() for fixed position. That no longer seems necessary.\n        const maxHeightFunction = options.maxHeightFunction;\n        maxHeightFunction(element, decision.maxHeight);\n    };\n    const setWidth = (element, decision, options) => {\n        const maxWidthFunction = options.maxWidthFunction;\n        maxWidthFunction(element, decision.maxWidth);\n    };\n    const position$2 = (element, decision, options) => {\n        // This is a point of difference between Alloy and Repartee. Repartee appears to use Measure to calculate the available space for fixed origin\n        // That is not ported yet.\n        const positionCss = reposition(options.origin, decision);\n        options.transition.each((transition) => {\n            applyTransitionCss(element, options.origin, positionCss, transition, decision, options.lastPlacement);\n        });\n        applyPositionCss(element, positionCss);\n    };\n    const setPlacement = (element, decision) => {\n        setPlacement$1(element, decision.placement);\n    };\n\n    const defaultOr = (options, key, dephault) => options[key] === undefined ? dephault : options[key];\n    // This takes care of everything when you are positioning UI that can go anywhere on the screen\n    const simple = (anchor, element, bubble, layouts, lastPlacement, optBounds, overrideOptions, transition) => {\n        // the only supported override at the moment. Once relative has been deleted, maybe this can be optional in the bag\n        const maxHeightFunction = defaultOr(overrideOptions, 'maxHeightFunction', anchored());\n        const maxWidthFunction = defaultOr(overrideOptions, 'maxWidthFunction', noop);\n        const anchorBox = anchor.anchorBox;\n        const origin = anchor.origin;\n        const options = {\n            bounds: viewport(origin, optBounds),\n            origin,\n            preference: layouts,\n            maxHeightFunction,\n            maxWidthFunction,\n            lastPlacement,\n            transition\n        };\n        return go(anchorBox, element, bubble, options);\n    };\n    // This is the old public API. If we ever need full customisability again, this is how to expose it\n    const go = (anchorBox, element, bubble, options) => {\n        const decision = layout(anchorBox, element, bubble, options);\n        position$2(element, decision, options);\n        setPlacement(element, decision);\n        setClasses(element, decision);\n        setHeight(element, decision, options);\n        setWidth(element, decision, options);\n        return {\n            layout: decision.layout,\n            placement: decision.placement\n        };\n    };\n\n    const nu$1 = identity;\n\n    const schema$o = () => optionObjOf('layouts', [\n        required$1('onLtr'),\n        required$1('onRtl'),\n        option$3('onBottomLtr'),\n        option$3('onBottomRtl')\n    ]);\n    const get$1 = (elem, info, defaultLtr, defaultRtl, defaultBottomLtr, defaultBottomRtl, dirElement) => {\n        const isBottomToTop = dirElement.map(isBottomToTopDir).getOr(false);\n        const customLtr = info.layouts.map((ls) => ls.onLtr(elem));\n        const customRtl = info.layouts.map((ls) => ls.onRtl(elem));\n        const ltr = isBottomToTop ?\n            info.layouts.bind((ls) => ls.onBottomLtr.map((f) => f(elem)))\n                .or(customLtr)\n                .getOr(defaultBottomLtr) :\n            customLtr.getOr(defaultLtr);\n        const rtl = isBottomToTop ?\n            info.layouts.bind((ls) => ls.onBottomRtl.map((f) => f(elem)))\n                .or(customRtl)\n                .getOr(defaultBottomRtl) :\n            customRtl.getOr(defaultRtl);\n        const f = onDirection(ltr, rtl);\n        return f(elem);\n    };\n\n    const placement$4 = (component, anchorInfo, origin) => {\n        const hotspot = anchorInfo.hotspot;\n        const anchorBox = toBox(origin, hotspot.element);\n        const layouts = get$1(component.element, anchorInfo, belowOrAbove(), belowOrAboveRtl(), aboveOrBelow(), aboveOrBelowRtl(), Optional.some(anchorInfo.hotspot.element));\n        return Optional.some(nu$1({\n            anchorBox,\n            bubble: anchorInfo.bubble.getOr(fallback()),\n            overrides: anchorInfo.overrides,\n            layouts\n        }));\n    };\n    var HotspotAnchor = [\n        required$1('hotspot'),\n        option$3('bubble'),\n        defaulted('overrides', {}),\n        schema$o(),\n        output$1('placement', placement$4)\n    ];\n\n    const placement$3 = (component, anchorInfo, origin) => {\n        const pos = translate$1(origin, anchorInfo.x, anchorInfo.y);\n        const anchorBox = bounds(pos.left, pos.top, anchorInfo.width, anchorInfo.height);\n        const layouts = get$1(component.element, anchorInfo, all$2(), allRtl$1(), \n        // No default bottomToTop layouts currently needed\n        all$2(), allRtl$1(), Optional.none());\n        return Optional.some(nu$1({\n            anchorBox,\n            bubble: anchorInfo.bubble,\n            overrides: anchorInfo.overrides,\n            layouts\n        }));\n    };\n    var MakeshiftAnchor = [\n        required$1('x'),\n        required$1('y'),\n        defaulted('height', 0),\n        defaulted('width', 0),\n        defaulted('bubble', fallback()),\n        defaulted('overrides', {}),\n        schema$o(),\n        output$1('placement', placement$3)\n    ];\n\n    const adt$1 = Adt.generate([\n        { screen: ['point'] },\n        { absolute: ['point', 'scrollLeft', 'scrollTop'] }\n    ]);\n    const toFixed = (pos) => \n    // TODO: Use new ADT methods\n    pos.fold(identity, (point, scrollLeft, scrollTop) => point.translate(-scrollLeft, -scrollTop));\n    const toAbsolute = (pos) => pos.fold(identity, identity);\n    const sum = (points) => foldl(points, (b, a) => b.translate(a.left, a.top), SugarPosition(0, 0));\n    const sumAsFixed = (positions) => {\n        const points = map$2(positions, toFixed);\n        return sum(points);\n    };\n    const sumAsAbsolute = (positions) => {\n        const points = map$2(positions, toAbsolute);\n        return sum(points);\n    };\n    const screen = adt$1.screen;\n    const absolute = adt$1.absolute;\n\n    // In one mode, the window is inside an iframe. If that iframe is in the\n    // same document as the positioning element (component), then identify the offset\n    // difference between the iframe and the component.\n    const getOffset = (component, origin, anchorInfo) => {\n        const win = defaultView(anchorInfo.root).dom;\n        const hasSameOwner = (frame) => {\n            const frameOwner = owner$4(frame);\n            const compOwner = owner$4(component.element);\n            return eq(frameOwner, compOwner);\n        };\n        return Optional.from(win.frameElement).map(SugarElement.fromDom)\n            .filter(hasSameOwner).map(absolute$3);\n    };\n    const getRootPoint = (component, origin, anchorInfo) => {\n        const doc = owner$4(component.element);\n        const outerScroll = get$b(doc);\n        const offset = getOffset(component, origin, anchorInfo).getOr(outerScroll);\n        return absolute(offset, outerScroll.left, outerScroll.top);\n    };\n\n    const getBox = (left, top, width, height) => {\n        const point = screen(SugarPosition(left, top));\n        return Optional.some(pointed(point, width, height));\n    };\n    const calcNewAnchor = (optBox, rootPoint, anchorInfo, origin, elem) => optBox.map((box) => {\n        const points = [rootPoint, box.point];\n        const topLeft = cata(origin, () => sumAsAbsolute(points), () => sumAsAbsolute(points), () => sumAsFixed(points));\n        const anchorBox = rect(topLeft.left, topLeft.top, box.width, box.height);\n        const layoutsLtr = anchorInfo.showAbove ?\n            aboveOrBelow() :\n            belowOrAbove();\n        const layoutsRtl = anchorInfo.showAbove ?\n            aboveOrBelowRtl() :\n            belowOrAboveRtl();\n        const layouts = get$1(elem, anchorInfo, layoutsLtr, layoutsRtl, layoutsLtr, layoutsRtl, Optional.none());\n        return nu$1({\n            anchorBox,\n            bubble: anchorInfo.bubble.getOr(fallback()),\n            overrides: anchorInfo.overrides,\n            layouts\n        });\n    });\n\n    const placement$2 = (component, anchorInfo, origin) => {\n        const rootPoint = getRootPoint(component, origin, anchorInfo);\n        return anchorInfo.node\n            // Ensure the node is still attached, otherwise we can't get a valid client rect for a detached node\n            .filter(inBody)\n            .bind((target) => {\n            const rect = target.dom.getBoundingClientRect();\n            const nodeBox = getBox(rect.left, rect.top, rect.width, rect.height);\n            const elem = anchorInfo.node.getOr(component.element);\n            return calcNewAnchor(nodeBox, rootPoint, anchorInfo, origin, elem);\n        });\n    };\n    var NodeAnchor = [\n        required$1('node'),\n        required$1('root'),\n        option$3('bubble'),\n        schema$o(),\n        // chiefly MaxHeight.expandable()\n        defaulted('overrides', {}),\n        defaulted('showAbove', false),\n        output$1('placement', placement$2)\n    ];\n\n    const point = (element, offset) => ({\n        element,\n        offset\n    });\n    // NOTE: This only descends once.\n    const descendOnce$1 = (element, offset) => {\n        const children$1 = children(element);\n        if (children$1.length === 0) {\n            return point(element, offset);\n        }\n        else if (offset < children$1.length) {\n            return point(children$1[offset], 0);\n        }\n        else {\n            const last = children$1[children$1.length - 1];\n            const len = isText(last) ? get$a(last).length : children(last).length;\n            return point(last, len);\n        }\n    };\n\n    // A range from (a, 1) to (body, end) was giving the wrong bounds.\n    const descendOnce = (element, offset) => isText(element) ? point(element, offset) : descendOnce$1(element, offset);\n    const isSimRange = (detail) => detail.foffset !== undefined;\n    const getAnchorSelection = (win, anchorInfo) => {\n        // FIX TEST Test both providing a getSelection and not providing a getSelection\n        const getSelection = anchorInfo.getSelection.getOrThunk(() => () => getExact(win));\n        return getSelection().map((sel) => {\n            if (isSimRange(sel)) {\n                const modStart = descendOnce(sel.start, sel.soffset);\n                const modFinish = descendOnce(sel.finish, sel.foffset);\n                return SimSelection.range(modStart.element, modStart.offset, modFinish.element, modFinish.offset);\n            }\n            else {\n                return sel;\n            }\n        });\n    };\n    const placement$1 = (component, anchorInfo, origin) => {\n        const win = defaultView(anchorInfo.root).dom;\n        const rootPoint = getRootPoint(component, origin, anchorInfo);\n        const selectionBox = getAnchorSelection(win, anchorInfo).bind((sel) => {\n            // This represents the *visual* rectangle of the selection.\n            if (isSimRange(sel)) {\n                const optRect = getBounds$2(win, SimSelection.exactFromRange(sel)).orThunk(() => {\n                    const zeroWidth$1 = SugarElement.fromText(zeroWidth);\n                    before$1(sel.start, zeroWidth$1);\n                    // Certain things like <p><br/></p> with (p, 0) or <br>) as collapsed selection do not return a client rectangle\n                    const rect = getFirstRect(win, SimSelection.exact(zeroWidth$1, 0, zeroWidth$1, 1));\n                    remove$7(zeroWidth$1);\n                    return rect;\n                });\n                return optRect.bind((rawRect) => {\n                    return getBox(rawRect.left, rawRect.top, rawRect.width, rawRect.height);\n                });\n            }\n            else {\n                const selectionRect = map$1(sel, (cell) => cell.dom.getBoundingClientRect());\n                const bounds = {\n                    left: Math.min(selectionRect.firstCell.left, selectionRect.lastCell.left),\n                    right: Math.max(selectionRect.firstCell.right, selectionRect.lastCell.right),\n                    top: Math.min(selectionRect.firstCell.top, selectionRect.lastCell.top),\n                    bottom: Math.max(selectionRect.firstCell.bottom, selectionRect.lastCell.bottom)\n                };\n                return getBox(bounds.left, bounds.top, bounds.right - bounds.left, bounds.bottom - bounds.top);\n            }\n        });\n        const targetElement = getAnchorSelection(win, anchorInfo)\n            .bind((sel) => {\n            if (isSimRange(sel)) {\n                return isElement$1(sel.start) ? Optional.some(sel.start) : parentElement(sel.start);\n            }\n            else {\n                return Optional.some(sel.firstCell);\n            }\n        });\n        const elem = targetElement.getOr(component.element);\n        return calcNewAnchor(selectionBox, rootPoint, anchorInfo, origin, elem);\n    };\n    var SelectionAnchor = [\n        option$3('getSelection'),\n        required$1('root'),\n        option$3('bubble'),\n        schema$o(),\n        defaulted('overrides', {}),\n        defaulted('showAbove', false),\n        output$1('placement', placement$1)\n    ];\n\n    /*\n      Layout for submenus;\n      Either left or right of the anchor menu item. Never above or below.\n      Aligned to the top or bottom of the anchor as appropriate.\n     */\n    const labelPrefix = 'link-layout';\n    // display element to the right, left edge against the right of the menu\n    const eastX = (anchor) => anchor.x + anchor.width;\n    // display element to the left, right edge against the left of the menu\n    const westX = (anchor, element) => anchor.x - element.width;\n    // display element pointing up, bottom edge against the bottom of the menu (usually to one side)\n    const northY = (anchor, element) => anchor.y - element.height + anchor.height;\n    // display element pointing down, top edge against the top of the menu (usually to one side)\n    const southY = (anchor) => anchor.y;\n    const southeast = (anchor, element, bubbles) => nu$5(eastX(anchor), southY(anchor), bubbles.southeast(), southeast$3(), \"southeast\" /* Placement.Southeast */, boundsRestriction(anchor, { left: 0 /* AnchorBoxBounds.RightEdge */, top: 2 /* AnchorBoxBounds.TopEdge */ }), labelPrefix);\n    const southwest = (anchor, element, bubbles) => nu$5(westX(anchor, element), southY(anchor), bubbles.southwest(), southwest$3(), \"southwest\" /* Placement.Southwest */, boundsRestriction(anchor, { right: 1 /* AnchorBoxBounds.LeftEdge */, top: 2 /* AnchorBoxBounds.TopEdge */ }), labelPrefix);\n    const northeast = (anchor, element, bubbles) => nu$5(eastX(anchor), northY(anchor, element), bubbles.northeast(), northeast$3(), \"northeast\" /* Placement.Northeast */, boundsRestriction(anchor, { left: 0 /* AnchorBoxBounds.RightEdge */, bottom: 3 /* AnchorBoxBounds.BottomEdge */ }), labelPrefix);\n    const northwest = (anchor, element, bubbles) => nu$5(westX(anchor, element), northY(anchor, element), bubbles.northwest(), northwest$3(), \"northwest\" /* Placement.Northwest */, boundsRestriction(anchor, { right: 1 /* AnchorBoxBounds.LeftEdge */, bottom: 3 /* AnchorBoxBounds.BottomEdge */ }), labelPrefix);\n    const all = () => [southeast, southwest, northeast, northwest];\n    const allRtl = () => [southwest, southeast, northwest, northeast];\n\n    const placement = (component, submenuInfo, origin) => {\n        const anchorBox = toBox(origin, submenuInfo.item.element);\n        const layouts = get$1(component.element, submenuInfo, all(), allRtl(), \n        // No default bottomToTop layouts currently needed\n        all(), allRtl(), Optional.none());\n        return Optional.some(nu$1({\n            anchorBox,\n            bubble: fallback(),\n            overrides: submenuInfo.overrides,\n            layouts\n        }));\n    };\n    var SubmenuAnchor = [\n        required$1('item'),\n        schema$o(),\n        defaulted('overrides', {}),\n        output$1('placement', placement)\n    ];\n\n    var AnchorSchema = choose$1('type', {\n        selection: SelectionAnchor,\n        node: NodeAnchor,\n        hotspot: HotspotAnchor,\n        submenu: SubmenuAnchor,\n        makeshift: MakeshiftAnchor\n    });\n\n    const TransitionSchema = [\n        requiredArrayOf('classes', string),\n        defaultedStringEnum('mode', 'all', ['all', 'layout', 'placement'])\n    ];\n    const PositionSchema = [\n        defaulted('useFixed', never),\n        option$3('getBounds')\n    ];\n    const PlacementSchema = [\n        requiredOf('anchor', AnchorSchema),\n        optionObjOf('transition', TransitionSchema)\n    ];\n\n    const getFixedOrigin = () => {\n        // Don't use window.innerWidth/innerHeight here, as we don't want to include scrollbars\n        // since the right/bottom position is based on the edge of the scrollbar not the window\n        const html = document.documentElement;\n        return fixed(0, 0, html.clientWidth, html.clientHeight);\n    };\n    const getRelativeOrigin = (component) => {\n        const position = absolute$3(component.element);\n        const bounds = component.element.dom.getBoundingClientRect();\n        // We think that this just needs to be kept consistent with Boxes.win. If we remove the scroll values from Boxes.win, we\n        // should change this to just bounds.left and bounds.top from getBoundingClientRect\n        return relative(position.left, position.top, bounds.width, bounds.height);\n    };\n    const place = (origin, anchoring, optBounds, placee, lastPlace, transition) => {\n        const anchor = box(anchoring.anchorBox, origin);\n        return simple(anchor, placee.element, anchoring.bubble, anchoring.layouts, lastPlace, optBounds, anchoring.overrides, transition);\n    };\n    const position$1 = (component, posConfig, posState, placee, placementSpec) => {\n        const optWithinBounds = Optional.none();\n        positionWithinBounds(component, posConfig, posState, placee, placementSpec, optWithinBounds);\n    };\n    const positionWithinBounds = (component, posConfig, posState, placee, placementSpec, optWithinBounds) => {\n        const placeeDetail = asRawOrDie$1('placement.info', objOf(PlacementSchema), placementSpec);\n        const anchorage = placeeDetail.anchor;\n        const element = placee.element;\n        const placeeState = posState.get(placee.uid);\n        // Preserve the focus as IE 11 loses it when setting visibility to hidden\n        preserve(() => {\n            // We set it to be fixed, so that it doesn't interfere with the layout of anything\n            // when calculating anchors\n            set$7(element, 'position', 'fixed');\n            const oldVisibility = getRaw(element, 'visibility');\n            set$7(element, 'visibility', 'hidden');\n            // We need to calculate the origin (esp. the bounding client rect) *after* we have done\n            // all the preprocessing of the component and placee. Otherwise, the relative positions\n            // (bottom and right) will be using the wrong dimensions\n            const origin = posConfig.useFixed() ? getFixedOrigin() : getRelativeOrigin(component);\n            anchorage.placement(component, anchorage, origin).each((anchoring) => {\n                // If \"within bounds\" is specified, it overrides any Positioning config. Otherwise, we\n                // use the Positioning config. We don't try to combine automatically here because they are\n                // sometimes serving different purposes. If the Positioning config getBounds needs to be\n                // combined with the optWithinBounds bounds, then it is the responsibility of the calling\n                // code to combine them, and pass in the combined value as optWithinBounds. The optWithinBounds\n                // will *always* override the Positioning config.\n                const optBounds = optWithinBounds.orThunk(() => posConfig.getBounds.map(apply$1));\n                // Place the element and then update the state for the placee\n                const newState = place(origin, anchoring, optBounds, placee, placeeState, placeeDetail.transition);\n                posState.set(placee.uid, newState);\n            });\n            oldVisibility.fold(() => {\n                remove$6(element, 'visibility');\n            }, (vis) => {\n                set$7(element, 'visibility', vis);\n            });\n            // We need to remove position: fixed put on by above code if it is not needed.\n            if (getRaw(element, 'left').isNone() &&\n                getRaw(element, 'top').isNone() &&\n                getRaw(element, 'right').isNone() &&\n                getRaw(element, 'bottom').isNone() &&\n                is$1(getRaw(element, 'position'), 'fixed')) {\n                remove$6(element, 'position');\n            }\n        }, element);\n    };\n    const getMode = (component, pConfig, _pState) => pConfig.useFixed() ? 'fixed' : 'absolute';\n    const reset = (component, pConfig, posState, placee) => {\n        const element = placee.element;\n        each$1(['position', 'left', 'right', 'top', 'bottom'], (prop) => remove$6(element, prop));\n        reset$2(element);\n        posState.clear(placee.uid);\n    };\n\n    var PositionApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        position: position$1,\n        positionWithinBounds: positionWithinBounds,\n        getMode: getMode,\n        reset: reset\n    });\n\n    const init$8 = () => {\n        let state = {};\n        const set = (id, data) => {\n            state[id] = data;\n        };\n        const get = (id) => get$h(state, id);\n        const clear = (id) => {\n            if (isNonNullable(id)) {\n                delete state[id];\n            }\n            else {\n                state = {};\n            }\n        };\n        return nu$4({\n            readState: () => state,\n            clear,\n            set,\n            get\n        });\n    };\n\n    var PositioningState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$8\n    });\n\n    const Positioning = create$3({\n        fields: PositionSchema,\n        name: 'positioning',\n        active: ActivePosition,\n        apis: PositionApis,\n        state: PositioningState\n    });\n\n    const chooseChannels = (channels, message) => message.universal ? channels : filter$2(channels, (ch) => contains$2(message.channels, ch));\n    const events$8 = (receiveConfig) => derive$2([\n        run$1(receive(), (component, message) => {\n            const channelMap = receiveConfig.channels;\n            const channels = keys(channelMap);\n            // NOTE: Receiving event ignores the whole simulated event part.\n            // TODO: Think about the types for this, or find a better way for this to rely on receiving.\n            const receivingData = message;\n            const targetChannels = chooseChannels(channels, receivingData);\n            each$1(targetChannels, (ch) => {\n                const channelInfo = channelMap[ch];\n                const channelSchema = channelInfo.schema;\n                const data = asRawOrDie$1('channel[' + ch + '] data\\nReceiver: ' + element(component.element), channelSchema, receivingData.data);\n                channelInfo.onReceive(component, data);\n            });\n        })\n    ]);\n\n    var ActiveReceiving = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$8\n    });\n\n    var ReceivingSchema = [\n        requiredOf('channels', setOf(\n        // Allow any keys.\n        Result.value, objOfOnly([\n            onStrictHandler('onReceive'),\n            defaulted('schema', anyValue())\n        ])))\n    ];\n\n    const Receiving = create$3({\n        fields: ReceivingSchema,\n        name: 'receiving',\n        active: ActiveReceiving\n    });\n\n    const events$7 = (reflectingConfig, reflectingState) => {\n        const update = (component, data) => {\n            reflectingConfig.updateState.each((updateState) => {\n                const newState = updateState(component, data);\n                reflectingState.set(newState);\n            });\n            // FIX: Partial duplication of Replacing + Receiving\n            reflectingConfig.renderComponents.each((renderComponents) => {\n                const newComponents = renderComponents(data, reflectingState.get());\n                const replacer = reflectingConfig.reuseDom ? withReuse : withoutReuse;\n                replacer(component, newComponents);\n            });\n        };\n        return derive$2([\n            run$1(receive(), (component, message) => {\n                // NOTE: Receiving event ignores the whole simulated event part.\n                // TODO: Think about the types for this, or find a better way for this to rely on receiving.\n                const receivingData = message;\n                if (!receivingData.universal) {\n                    const channel = reflectingConfig.channel;\n                    if (contains$2(receivingData.channels, channel)) {\n                        update(component, receivingData.data);\n                    }\n                }\n            }),\n            runOnAttached((comp, _se) => {\n                reflectingConfig.initialData.each((rawData) => {\n                    update(comp, rawData);\n                });\n            })\n        ]);\n    };\n\n    var ActiveReflecting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$7\n    });\n\n    const getState$1 = (component, replaceConfig, reflectState) => reflectState;\n\n    var ReflectingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getState: getState$1\n    });\n\n    var ReflectingSchema = [\n        required$1('channel'),\n        option$3('renderComponents'),\n        option$3('updateState'),\n        option$3('initialData'),\n        defaultedBoolean('reuseDom', true)\n    ];\n\n    const init$7 = () => {\n        const cell = Cell(Optional.none());\n        const clear = () => cell.set(Optional.none());\n        const readState = () => cell.get().getOr('none');\n        return {\n            readState,\n            get: cell.get,\n            set: cell.set,\n            clear\n        };\n    };\n\n    var ReflectingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$7\n    });\n\n    const Reflecting = create$3({\n        fields: ReflectingSchema,\n        name: 'reflecting',\n        active: ActiveReflecting,\n        apis: ReflectingApis,\n        state: ReflectingState\n    });\n\n    // NOTE: A sandbox should not start as part of the world. It is expected to be\n    // added to the sink on rebuild.\n    const rebuild = (sandbox, sConfig, sState, data) => {\n        sState.get().each((_data) => {\n            // If currently has data, so it hasn't been removed yet. It is\n            // being \"re-opened\"\n            detachChildren(sandbox);\n        });\n        const point = sConfig.getAttachPoint(sandbox);\n        attach(point, sandbox);\n        // Must be after the sandbox is in the system\n        const built = sandbox.getSystem().build(data);\n        attach(sandbox, built);\n        sState.set(built);\n        return built;\n    };\n    // Open sandbox transfers focus to the opened menu\n    const open$1 = (sandbox, sConfig, sState, data) => {\n        const newState = rebuild(sandbox, sConfig, sState, data);\n        sConfig.onOpen(sandbox, newState);\n        return newState;\n    };\n    const setContent = (sandbox, sConfig, sState, data) => sState.get().map(() => rebuild(sandbox, sConfig, sState, data));\n    // TODO AP-191 write a test for openWhileCloaked\n    const openWhileCloaked = (sandbox, sConfig, sState, data, transaction) => {\n        cloak(sandbox, sConfig);\n        open$1(sandbox, sConfig, sState, data);\n        transaction();\n        decloak(sandbox, sConfig);\n    };\n    const close$1 = (sandbox, sConfig, sState) => {\n        sState.get().each((data) => {\n            detachChildren(sandbox);\n            detach(sandbox);\n            sConfig.onClose(sandbox, data);\n            sState.clear();\n        });\n    };\n    const isOpen$1 = (_sandbox, _sConfig, sState) => sState.isOpen();\n    const isPartOf$1 = (sandbox, sConfig, sState, queryElem) => isOpen$1(sandbox, sConfig, sState) && sState.get().exists((data) => sConfig.isPartOf(sandbox, data, queryElem));\n    const getState = (_sandbox, _sConfig, sState) => sState.get();\n    const store = (sandbox, cssKey, attr, newValue) => {\n        getRaw(sandbox.element, cssKey).fold(() => {\n            remove$8(sandbox.element, attr);\n        }, (v) => {\n            set$9(sandbox.element, attr, v);\n        });\n        set$7(sandbox.element, cssKey, newValue);\n    };\n    const restore = (sandbox, cssKey, attr) => {\n        getOpt(sandbox.element, attr).fold(() => remove$6(sandbox.element, cssKey), (oldValue) => set$7(sandbox.element, cssKey, oldValue));\n    };\n    const cloak = (sandbox, sConfig, _sState) => {\n        const sink = sConfig.getAttachPoint(sandbox);\n        // Use the positioning mode of the sink, so that it does not interfere with the sink's positioning\n        // We add it here to stop it causing layout problems.\n        set$7(sandbox.element, 'position', Positioning.getMode(sink));\n        store(sandbox, 'visibility', sConfig.cloakVisibilityAttr, 'hidden');\n    };\n    const hasPosition = (element) => exists(['top', 'left', 'right', 'bottom'], (pos) => getRaw(element, pos).isSome());\n    const decloak = (sandbox, sConfig, _sState) => {\n        if (!hasPosition(sandbox.element)) {\n            // If a position value was not added to the sandbox during cloaking, remove it\n            // otherwise certain position values (absolute, relative) will impact the child that _was_ positioned\n            remove$6(sandbox.element, 'position');\n        }\n        restore(sandbox, 'visibility', sConfig.cloakVisibilityAttr);\n    };\n\n    var SandboxApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        cloak: cloak,\n        decloak: decloak,\n        open: open$1,\n        openWhileCloaked: openWhileCloaked,\n        close: close$1,\n        isOpen: isOpen$1,\n        isPartOf: isPartOf$1,\n        getState: getState,\n        setContent: setContent\n    });\n\n    const events$6 = (sandboxConfig, sandboxState) => derive$2([\n        run$1(sandboxClose(), (sandbox, _simulatedEvent) => {\n            close$1(sandbox, sandboxConfig, sandboxState);\n        })\n    ]);\n\n    var ActiveSandbox = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$6\n    });\n\n    var SandboxSchema = [\n        onHandler('onOpen'),\n        onHandler('onClose'),\n        // Maybe this should be optional\n        required$1('isPartOf'),\n        required$1('getAttachPoint'),\n        defaulted('cloakVisibilityAttr', 'data-precloak-visibility')\n    ];\n\n    const init$6 = () => {\n        const contents = value$2();\n        const readState = constant$1('not-implemented');\n        return nu$4({\n            readState,\n            isOpen: contents.isSet,\n            clear: contents.clear,\n            set: contents.set,\n            get: contents.get\n        });\n    };\n\n    var SandboxState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$6\n    });\n\n    const Sandboxing = create$3({\n        fields: SandboxSchema,\n        name: 'sandboxing',\n        active: ActiveSandbox,\n        apis: SandboxApis,\n        state: SandboxState\n    });\n\n    const getAnimationRoot = (component, slideConfig) => slideConfig.getAnimationRoot.fold(() => component.element, (get) => get(component));\n\n    const getDimensionProperty = (slideConfig) => slideConfig.dimension.property;\n    const getDimension = (slideConfig, elem) => slideConfig.dimension.getDimension(elem);\n    const disableTransitions = (component, slideConfig) => {\n        const root = getAnimationRoot(component, slideConfig);\n        remove$2(root, [slideConfig.shrinkingClass, slideConfig.growingClass]);\n    };\n    const setShrunk = (component, slideConfig) => {\n        remove$3(component.element, slideConfig.openClass);\n        add$2(component.element, slideConfig.closedClass);\n        set$7(component.element, getDimensionProperty(slideConfig), '0px');\n        reflow(component.element);\n    };\n    const setGrown = (component, slideConfig) => {\n        remove$3(component.element, slideConfig.closedClass);\n        add$2(component.element, slideConfig.openClass);\n        remove$6(component.element, getDimensionProperty(slideConfig));\n    };\n    const doImmediateShrink = (component, slideConfig, slideState, _calculatedSize) => {\n        slideState.setCollapsed();\n        // Force current dimension to begin transition\n        set$7(component.element, getDimensionProperty(slideConfig), getDimension(slideConfig, component.element));\n        // TINY-8710: we don't think reflow is required (as has been done elsewhere) as the animation is not needed\n        disableTransitions(component, slideConfig);\n        setShrunk(component, slideConfig);\n        slideConfig.onStartShrink(component);\n        slideConfig.onShrunk(component);\n    };\n    const doStartShrink = (component, slideConfig, slideState, calculatedSize) => {\n        const size = calculatedSize.getOrThunk(() => getDimension(slideConfig, component.element));\n        slideState.setCollapsed();\n        // Force current dimension to begin transition\n        set$7(component.element, getDimensionProperty(slideConfig), size);\n        reflow(component.element);\n        const root = getAnimationRoot(component, slideConfig);\n        remove$3(root, slideConfig.growingClass);\n        add$2(root, slideConfig.shrinkingClass); // enable transitions\n        setShrunk(component, slideConfig);\n        slideConfig.onStartShrink(component);\n    };\n    // A \"smartShrink\" will do an immediate shrink if no shrinking is scheduled to happen\n    const doStartSmartShrink = (component, slideConfig, slideState) => {\n        const size = getDimension(slideConfig, component.element);\n        const shrinker = size === '0px' ? doImmediateShrink : doStartShrink;\n        shrinker(component, slideConfig, slideState, Optional.some(size));\n    };\n    // Showing is complex due to the inability to transition to \"auto\".\n    // We also can't cache the dimension as the parents may have resized since it was last shown.\n    const doStartGrow = (component, slideConfig, slideState) => {\n        // Start the growing animation styles\n        const root = getAnimationRoot(component, slideConfig);\n        // Record whether this is interrupting a shrink and its current size\n        const wasShrinking = has(root, slideConfig.shrinkingClass);\n        const beforeSize = getDimension(slideConfig, component.element);\n        setGrown(component, slideConfig);\n        const fullSize = getDimension(slideConfig, component.element);\n        // If the grow is interrupting a shrink, use the size from before the grow as the start size\n        // And reflow so that the animation works.\n        const startPartialGrow = () => {\n            set$7(component.element, getDimensionProperty(slideConfig), beforeSize);\n            reflow(component.element);\n        };\n        // If the grow is not interrupting a shrink, start from 0 (shrunk)\n        const startCompleteGrow = () => {\n            setShrunk(component, slideConfig);\n        };\n        // Determine what the initial size for the grow operation should be.\n        const setStartSize = wasShrinking ? startPartialGrow : startCompleteGrow;\n        setStartSize();\n        remove$3(root, slideConfig.shrinkingClass);\n        add$2(root, slideConfig.growingClass);\n        setGrown(component, slideConfig);\n        set$7(component.element, getDimensionProperty(slideConfig), fullSize);\n        slideState.setExpanded();\n        slideConfig.onStartGrow(component);\n    };\n    const refresh$3 = (component, slideConfig, slideState) => {\n        if (slideState.isExpanded()) {\n            remove$6(component.element, getDimensionProperty(slideConfig));\n            const fullSize = getDimension(slideConfig, component.element);\n            set$7(component.element, getDimensionProperty(slideConfig), fullSize);\n        }\n    };\n    const grow = (component, slideConfig, slideState) => {\n        if (!slideState.isExpanded()) {\n            doStartGrow(component, slideConfig, slideState);\n        }\n    };\n    const shrink = (component, slideConfig, slideState) => {\n        if (slideState.isExpanded()) {\n            doStartSmartShrink(component, slideConfig, slideState);\n        }\n    };\n    const immediateShrink = (component, slideConfig, slideState) => {\n        if (slideState.isExpanded()) {\n            doImmediateShrink(component, slideConfig, slideState);\n        }\n    };\n    const hasGrown = (component, slideConfig, slideState) => slideState.isExpanded();\n    const hasShrunk = (component, slideConfig, slideState) => slideState.isCollapsed();\n    const isGrowing = (component, slideConfig, _slideState) => {\n        const root = getAnimationRoot(component, slideConfig);\n        return has(root, slideConfig.growingClass) === true;\n    };\n    const isShrinking = (component, slideConfig, _slideState) => {\n        const root = getAnimationRoot(component, slideConfig);\n        return has(root, slideConfig.shrinkingClass) === true;\n    };\n    const isTransitioning = (component, slideConfig, slideState) => isGrowing(component, slideConfig) || isShrinking(component, slideConfig);\n    const toggleGrow = (component, slideConfig, slideState) => {\n        const f = slideState.isExpanded() ? doStartSmartShrink : doStartGrow;\n        f(component, slideConfig, slideState);\n    };\n    const immediateGrow = (component, slideConfig, slideState) => {\n        if (!slideState.isExpanded()) {\n            setGrown(component, slideConfig);\n            set$7(component.element, getDimensionProperty(slideConfig), getDimension(slideConfig, component.element));\n            // TINY-8710: we don't think reflow is required (as has been done elsewhere) as the animation is not needed\n            // Keep disableTransition to handle the case where it's part way through transitioning\n            disableTransitions(component, slideConfig);\n            slideState.setExpanded();\n            slideConfig.onStartGrow(component);\n            slideConfig.onGrown(component);\n        }\n    };\n\n    var SlidingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        refresh: refresh$3,\n        grow: grow,\n        shrink: shrink,\n        immediateShrink: immediateShrink,\n        hasGrown: hasGrown,\n        hasShrunk: hasShrunk,\n        isGrowing: isGrowing,\n        isShrinking: isShrinking,\n        isTransitioning: isTransitioning,\n        toggleGrow: toggleGrow,\n        disableTransitions: disableTransitions,\n        immediateGrow: immediateGrow\n    });\n\n    const exhibit$3 = (base, slideConfig, _slideState) => {\n        const expanded = slideConfig.expanded;\n        return expanded ? nu$2({\n            classes: [slideConfig.openClass],\n            styles: {}\n        }) : nu$2({\n            classes: [slideConfig.closedClass],\n            styles: wrap(slideConfig.dimension.property, '0px')\n        });\n    };\n    const events$5 = (slideConfig, slideState) => derive$2([\n        runOnSource(transitionend(), (component, simulatedEvent) => {\n            const raw = simulatedEvent.event.raw;\n            // This will fire for all transitions, we're only interested in the dimension completion on source\n            if (raw.propertyName === slideConfig.dimension.property) {\n                disableTransitions(component, slideConfig); // disable transitions immediately (Safari animates the dimension removal below)\n                if (slideState.isExpanded()) {\n                    remove$6(component.element, slideConfig.dimension.property);\n                } // when showing, remove the dimension so it is responsive\n                const notify = slideState.isExpanded() ? slideConfig.onGrown : slideConfig.onShrunk;\n                notify(component);\n            }\n        })\n    ]);\n\n    var ActiveSliding = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$3,\n        events: events$5\n    });\n\n    var SlidingSchema = [\n        required$1('closedClass'),\n        required$1('openClass'),\n        required$1('shrinkingClass'),\n        required$1('growingClass'),\n        // Element which shrinking and growing animations\n        option$3('getAnimationRoot'),\n        onHandler('onShrunk'),\n        onHandler('onStartShrink'),\n        onHandler('onGrown'),\n        onHandler('onStartGrow'),\n        defaulted('expanded', false),\n        requiredOf('dimension', choose$1('property', {\n            width: [\n                output$1('property', 'width'),\n                output$1('getDimension', (elem) => get$c(elem) + 'px')\n            ],\n            height: [\n                output$1('property', 'height'),\n                output$1('getDimension', (elem) => get$d(elem) + 'px')\n            ]\n        }))\n    ];\n\n    const init$5 = (spec) => {\n        const state = Cell(spec.expanded);\n        const readState = () => 'expanded: ' + state.get();\n        return nu$4({\n            isExpanded: () => state.get() === true,\n            isCollapsed: () => state.get() === false,\n            setCollapsed: curry(state.set, false),\n            setExpanded: curry(state.set, true),\n            readState\n        });\n    };\n\n    var SlidingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$5\n    });\n\n    const Sliding = create$3({\n        fields: SlidingSchema,\n        name: 'sliding',\n        active: ActiveSliding,\n        apis: SlidingApis,\n        state: SlidingState\n    });\n\n    const events$4 = (streamConfig, streamState) => {\n        const streams = streamConfig.stream.streams;\n        const processor = streams.setup(streamConfig, streamState);\n        return derive$2([\n            run$1(streamConfig.event, processor),\n            runOnDetached(() => streamState.cancel())\n        ].concat(streamConfig.cancelEvent.map((e) => [\n            run$1(e, () => streamState.cancel())\n        ]).getOr([])));\n    };\n\n    var ActiveStreaming = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$4\n    });\n\n    const throttle = (_config) => {\n        const state = Cell(null);\n        const readState = () => ({\n            timer: state.get() !== null ? 'set' : 'unset'\n        });\n        const setTimer = (t) => {\n            state.set(t);\n        };\n        const cancel = () => {\n            const t = state.get();\n            if (t !== null) {\n                t.cancel();\n            }\n        };\n        return nu$4({\n            readState,\n            setTimer,\n            cancel\n        });\n    };\n    const init$4 = (spec) => spec.stream.streams.state(spec);\n\n    var StreamingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        throttle: throttle,\n        init: init$4\n    });\n\n    const setup$e = (streamInfo, streamState) => {\n        const sInfo = streamInfo.stream;\n        const throttler = last(streamInfo.onStream, sInfo.delay);\n        streamState.setTimer(throttler);\n        return (component, simulatedEvent) => {\n            throttler.throttle(component, simulatedEvent);\n            if (sInfo.stopEvent) {\n                simulatedEvent.stop();\n            }\n        };\n    };\n    var StreamingSchema = [\n        requiredOf('stream', choose$1('mode', {\n            throttle: [\n                required$1('delay'),\n                defaulted('stopEvent', true),\n                output$1('streams', {\n                    setup: setup$e,\n                    state: throttle\n                })\n            ]\n        })),\n        defaulted('event', 'input'),\n        option$3('cancelEvent'),\n        onStrictHandler('onStream')\n    ];\n\n    const Streaming = create$3({\n        fields: StreamingSchema,\n        name: 'streaming',\n        active: ActiveStreaming,\n        state: StreamingState\n    });\n\n    const exhibit$2 = (base, tabConfig) => nu$2({\n        attributes: wrapAll([\n            { key: tabConfig.tabAttr, value: 'true' }\n        ])\n    });\n\n    var ActiveTabstopping = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$2\n    });\n\n    var TabstopSchema = [\n        defaulted('tabAttr', 'data-alloy-tabstop')\n    ];\n\n    const Tabstopping = create$3({\n        fields: TabstopSchema,\n        name: 'tabstopping',\n        active: ActiveTabstopping\n    });\n\n    const updateAriaState = (component, toggleConfig, toggleState) => {\n        const ariaInfo = toggleConfig.aria;\n        ariaInfo.update(component, ariaInfo, toggleState.get());\n    };\n    const updateClass = (component, toggleConfig, toggleState) => {\n        toggleConfig.toggleClass.each((toggleClass) => {\n            if (toggleState.get()) {\n                add$2(component.element, toggleClass);\n            }\n            else {\n                remove$3(component.element, toggleClass);\n            }\n        });\n    };\n    const set = (component, toggleConfig, toggleState, state) => {\n        const initialState = toggleState.get();\n        toggleState.set(state);\n        updateClass(component, toggleConfig, toggleState);\n        updateAriaState(component, toggleConfig, toggleState);\n        if (initialState !== state) {\n            toggleConfig.onToggled(component, state);\n        }\n    };\n    const toggle$2 = (component, toggleConfig, toggleState) => {\n        set(component, toggleConfig, toggleState, !toggleState.get());\n    };\n    const on = (component, toggleConfig, toggleState) => {\n        set(component, toggleConfig, toggleState, true);\n    };\n    const off = (component, toggleConfig, toggleState) => {\n        set(component, toggleConfig, toggleState, false);\n    };\n    const isOn = (component, toggleConfig, toggleState) => toggleState.get();\n    const onLoad = (component, toggleConfig, toggleState) => {\n        // There used to be a bit of code in here that would only overwrite\n        // the attribute if it didn't have a current value. I can't remember\n        // what case that was for, so I'm removing it until it is required.\n        set(component, toggleConfig, toggleState, toggleConfig.selected);\n    };\n\n    var ToggleApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        onLoad: onLoad,\n        toggle: toggle$2,\n        isOn: isOn,\n        on: on,\n        off: off,\n        set: set\n    });\n\n    const exhibit$1 = () => nu$2({});\n    const events$3 = (toggleConfig, toggleState) => {\n        const execute = executeEvent(toggleConfig, toggleState, toggle$2);\n        const load = loadEvent(toggleConfig, toggleState, onLoad);\n        return derive$2(flatten([\n            toggleConfig.toggleOnExecute ? [execute] : [],\n            [load]\n        ]));\n    };\n\n    var ActiveToggle = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$1,\n        events: events$3\n    });\n\n    const updatePressed = (component, ariaInfo, status) => {\n        set$9(component.element, 'aria-pressed', status);\n        if (ariaInfo.syncWithExpanded) {\n            updateExpanded(component, ariaInfo, status);\n        }\n    };\n    const updateSelected = (component, ariaInfo, status) => {\n        set$9(component.element, 'aria-selected', status);\n    };\n    const updateChecked = (component, ariaInfo, status) => {\n        set$9(component.element, 'aria-checked', status);\n    };\n    const updateExpanded = (component, ariaInfo, status) => {\n        set$9(component.element, 'aria-expanded', status);\n    };\n\n    var ToggleSchema = [\n        defaulted('selected', false),\n        option$3('toggleClass'),\n        defaulted('toggleOnExecute', true),\n        onHandler('onToggled'),\n        defaultedOf('aria', {\n            mode: 'none'\n        }, choose$1('mode', {\n            pressed: [\n                defaulted('syncWithExpanded', false),\n                output$1('update', updatePressed)\n            ],\n            checked: [\n                output$1('update', updateChecked)\n            ],\n            expanded: [\n                output$1('update', updateExpanded)\n            ],\n            selected: [\n                output$1('update', updateSelected)\n            ],\n            none: [\n                output$1('update', noop)\n            ]\n        }))\n    ];\n\n    const Toggling = create$3({\n        fields: ToggleSchema,\n        name: 'toggling',\n        active: ActiveToggle,\n        apis: ToggleApis,\n        state: SetupBehaviourCellState(false)\n    });\n\n    const ExclusivityChannel = generate$6('tooltip.exclusive');\n    const ShowTooltipEvent = generate$6('tooltip.show');\n    const HideTooltipEvent = generate$6('tooltip.hide');\n    const ImmediateHideTooltipEvent = generate$6('tooltip.immediateHide');\n    const ImmediateShowTooltipEvent = generate$6('tooltip.immediateShow');\n\n    const hideAllExclusive = (component, _tConfig, _tState) => {\n        component.getSystem().broadcastOn([ExclusivityChannel], {});\n    };\n    const setComponents = (_component, _tConfig, tState, specs) => {\n        tState.getTooltip().each((tooltip) => {\n            if (tooltip.getSystem().isConnected()) {\n                Replacing.set(tooltip, specs);\n            }\n        });\n    };\n    const isEnabled = (_component, _tConfig, tState) => tState.isEnabled();\n    const setEnabled = (_component, _tConfig, tState, enabled) => tState.setEnabled(enabled);\n    const immediateOpenClose = (component, _tConfig, _tState, open) => emit(component, open ? ImmediateShowTooltipEvent : ImmediateHideTooltipEvent);\n\n    var TooltippingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        hideAllExclusive: hideAllExclusive,\n        immediateOpenClose: immediateOpenClose,\n        isEnabled: isEnabled,\n        setComponents: setComponents,\n        setEnabled: setEnabled\n    });\n\n    const events$2 = (tooltipConfig, state) => {\n        const hide = (comp) => {\n            state.getTooltip().each((p) => {\n                if (p.getSystem().isConnected()) {\n                    detach(p);\n                    tooltipConfig.onHide(comp, p);\n                    state.clearTooltip();\n                }\n            });\n            state.clearTimer();\n        };\n        const show = (comp) => {\n            if (!state.isShowing() && state.isEnabled()) {\n                hideAllExclusive(comp);\n                const sink = tooltipConfig.lazySink(comp).getOrDie();\n                const popup = comp.getSystem().build({\n                    dom: tooltipConfig.tooltipDom,\n                    components: tooltipConfig.tooltipComponents,\n                    events: derive$2(tooltipConfig.mode === 'normal'\n                        ? [\n                            run$1(mouseover(), (_) => {\n                                emit(comp, ShowTooltipEvent);\n                            }),\n                            run$1(mouseout(), (_) => {\n                                emit(comp, HideTooltipEvent);\n                            })\n                        ]\n                        : []),\n                    behaviours: derive$1([\n                        Replacing.config({})\n                    ])\n                });\n                state.setTooltip(popup);\n                attach(sink, popup);\n                tooltipConfig.onShow(comp, popup);\n                Positioning.position(sink, popup, { anchor: tooltipConfig.anchor(comp) });\n            }\n        };\n        const reposition = (comp) => {\n            state.getTooltip().each((tooltip) => {\n                const sink = tooltipConfig.lazySink(comp).getOrDie();\n                Positioning.position(sink, tooltip, { anchor: tooltipConfig.anchor(comp) });\n            });\n        };\n        const getEvents = () => {\n            switch (tooltipConfig.mode) {\n                case 'normal':\n                    return [\n                        run$1(focusin(), (comp) => {\n                            emit(comp, ImmediateShowTooltipEvent);\n                        }),\n                        run$1(postBlur(), (comp) => {\n                            emit(comp, ImmediateHideTooltipEvent);\n                        }),\n                        run$1(mouseover(), (comp) => {\n                            emit(comp, ShowTooltipEvent);\n                        }),\n                        run$1(mouseout(), (comp) => {\n                            emit(comp, HideTooltipEvent);\n                        })\n                    ];\n                case 'follow-highlight':\n                    return [\n                        run$1(highlight$1(), (comp, _se) => {\n                            emit(comp, ShowTooltipEvent);\n                        }),\n                        run$1(dehighlight$1(), (comp) => {\n                            emit(comp, HideTooltipEvent);\n                        })\n                    ];\n                case 'children-normal':\n                    return [\n                        run$1(focusin(), (comp, se) => {\n                            search(comp.element).each((_) => {\n                                if (is(se.event.target, '[data-mce-tooltip]')) {\n                                    state.getTooltip().fold(() => {\n                                        emit(comp, ImmediateShowTooltipEvent);\n                                    }, (tooltip) => {\n                                        if (state.isShowing()) {\n                                            tooltipConfig.onShow(comp, tooltip);\n                                            reposition(comp);\n                                        }\n                                    });\n                                }\n                            });\n                        }),\n                        run$1(postBlur(), (comp) => {\n                            search(comp.element).fold(() => {\n                                emit(comp, ImmediateHideTooltipEvent);\n                            }, noop);\n                        }),\n                        run$1(mouseover(), (comp) => {\n                            descendant(comp.element, '[data-mce-tooltip]:hover').each((_) => {\n                                state.getTooltip().fold(() => {\n                                    emit(comp, ShowTooltipEvent);\n                                }, (tooltip) => {\n                                    if (state.isShowing()) {\n                                        tooltipConfig.onShow(comp, tooltip);\n                                        reposition(comp);\n                                    }\n                                });\n                            });\n                        }),\n                        run$1(mouseout(), (comp) => {\n                            descendant(comp.element, '[data-mce-tooltip]:hover').fold(() => {\n                                emit(comp, HideTooltipEvent);\n                            }, noop);\n                        }),\n                    ];\n                default:\n                    return [\n                        run$1(focusin(), (comp, se) => {\n                            search(comp.element).each((_) => {\n                                if (is(se.event.target, '[data-mce-tooltip]')) {\n                                    state.getTooltip().fold(() => {\n                                        emit(comp, ImmediateShowTooltipEvent);\n                                    }, (tooltip) => {\n                                        if (state.isShowing()) {\n                                            tooltipConfig.onShow(comp, tooltip);\n                                            reposition(comp);\n                                        }\n                                    });\n                                }\n                            });\n                        }),\n                        run$1(postBlur(), (comp) => {\n                            search(comp.element).fold(() => {\n                                emit(comp, ImmediateHideTooltipEvent);\n                            }, noop);\n                        }),\n                    ];\n            }\n        };\n        return derive$2(flatten([\n            [\n                runOnInit((component) => {\n                    tooltipConfig.onSetup(component);\n                }),\n                run$1(ShowTooltipEvent, (comp) => {\n                    state.resetTimer(() => {\n                        show(comp);\n                    }, tooltipConfig.delayForShow());\n                }),\n                run$1(HideTooltipEvent, (comp) => {\n                    state.resetTimer(() => {\n                        hide(comp);\n                    }, tooltipConfig.delayForHide());\n                }),\n                run$1(ImmediateShowTooltipEvent, (comp) => {\n                    state.resetTimer(() => {\n                        show(comp);\n                    }, 0);\n                }),\n                run$1(ImmediateHideTooltipEvent, (comp) => {\n                    state.resetTimer(() => {\n                        hide(comp);\n                    }, 0);\n                }),\n                run$1(receive(), (comp, message) => {\n                    // TODO: Think about the types for this, or find a better way for this\n                    // to rely on receiving.\n                    const receivingData = message;\n                    if (!receivingData.universal) {\n                        if (contains$2(receivingData.channels, ExclusivityChannel)) {\n                            hide(comp);\n                        }\n                    }\n                }),\n                runOnDetached((comp) => {\n                    hide(comp);\n                })\n            ],\n            (getEvents())\n        ]));\n    };\n\n    var ActiveTooltipping = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$2\n    });\n\n    var TooltippingSchema = [\n        required$1('lazySink'),\n        required$1('tooltipDom'),\n        defaulted('exclusive', true),\n        defaulted('tooltipComponents', []),\n        defaultedFunction('delayForShow', constant$1(300)),\n        defaultedFunction('delayForHide', constant$1(100)),\n        defaultedFunction('onSetup', noop),\n        defaultedStringEnum('mode', 'normal', ['normal', 'follow-highlight', 'children-keyboard-focus', 'children-normal']),\n        defaulted('anchor', (comp) => ({\n            type: 'hotspot',\n            hotspot: comp,\n            layouts: {\n                onLtr: constant$1([south$2, north$2, southeast$2, northeast$2, southwest$2, northwest$2]),\n                onRtl: constant$1([south$2, north$2, southeast$2, northeast$2, southwest$2, northwest$2])\n            },\n            bubble: nu$6(0, -2, {}),\n        })),\n        onHandler('onHide'),\n        onHandler('onShow'),\n    ];\n\n    const init$3 = () => {\n        const enabled = Cell(true);\n        const timer = value$2();\n        const popup = value$2();\n        const clearTimer = () => {\n            timer.on(clearTimeout);\n        };\n        const resetTimer = (f, delay) => {\n            clearTimer();\n            timer.set(setTimeout(f, delay));\n        };\n        const readState = constant$1('not-implemented');\n        return nu$4({\n            getTooltip: popup.get,\n            isShowing: popup.isSet,\n            setTooltip: popup.set,\n            clearTooltip: popup.clear,\n            clearTimer,\n            resetTimer,\n            readState,\n            isEnabled: () => enabled.get(),\n            setEnabled: (setToEnabled) => enabled.set(setToEnabled)\n        });\n    };\n\n    var TooltippingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$3\n    });\n\n    const Tooltipping = create$3({\n        fields: TooltippingSchema,\n        name: 'tooltipping',\n        active: ActiveTooltipping,\n        state: TooltippingState,\n        apis: TooltippingApis\n    });\n\n    const exhibit = () => nu$2({\n        styles: {\n            '-webkit-user-select': 'none',\n            'user-select': 'none',\n            '-ms-user-select': 'none',\n            '-moz-user-select': '-moz-none'\n        },\n        attributes: {\n            unselectable: 'on'\n        }\n    });\n    const events$1 = () => derive$2([\n        abort(selectstart(), always)\n    ]);\n\n    var ActiveUnselecting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$1,\n        exhibit: exhibit\n    });\n\n    const Unselecting = create$3({\n        fields: [],\n        name: 'unselecting',\n        active: ActiveUnselecting\n    });\n\n    const getAttrs = (elem) => {\n        const attributes = elem.dom.attributes !== undefined ? elem.dom.attributes : [];\n        return foldl(attributes, (b, attr) => {\n            // Make class go through the class path. Do not list it as an attribute.\n            if (attr.name === 'class') {\n                return b;\n            }\n            else {\n                return { ...b, [attr.name]: attr.value };\n            }\n        }, {});\n    };\n    const getClasses = (elem) => Array.prototype.slice.call(elem.dom.classList, 0);\n    const fromHtml = (html) => {\n        const elem = SugarElement.fromHtml(html);\n        const children$1 = children(elem);\n        const attrs = getAttrs(elem);\n        const classes = getClasses(elem);\n        const contents = children$1.length === 0 ? {} : { innerHtml: get$f(elem) };\n        return {\n            tag: name$3(elem),\n            classes,\n            attributes: attrs,\n            ...contents\n        };\n    };\n\n    const record = (spec) => {\n        const uid = isSketchSpec(spec) && hasNonNullableKey(spec, 'uid') ? spec.uid : generate$4('memento');\n        const get = (anyInSystem) => anyInSystem.getSystem().getByUid(uid).getOrDie();\n        const getOpt = (anyInSystem) => anyInSystem.getSystem().getByUid(uid).toOptional();\n        const asSpec = () => ({\n            ...spec,\n            uid\n        });\n        return {\n            get,\n            getOpt,\n            asSpec\n        };\n    };\n\n    // TODO: ^ rename the parts/ api to composites, it will break mobile alloy now if we do\n    const parts$h = AlloyParts;\n    const partType$1 = PartType;\n\n    const dismissPopups = constant$1('dismiss.popups');\n    const repositionPopups = constant$1('reposition.popups');\n    const mouseReleased = constant$1('mouse.released');\n\n    const fromSource = (event, source) => {\n        const stopper = Cell(false);\n        const cutter = Cell(false);\n        const stop = () => {\n            stopper.set(true);\n        };\n        const cut = () => {\n            cutter.set(true);\n        };\n        return {\n            stop,\n            cut,\n            isStopped: stopper.get,\n            isCut: cutter.get,\n            event,\n            // Used only for tiered menu at the moment. It is an element, not a component\n            setSource: source.set,\n            getSource: source.get\n        };\n    };\n    // Events that come from outside of the alloy root (e.g. window scroll)\n    const fromExternal = (event) => {\n        const stopper = Cell(false);\n        const stop = () => {\n            stopper.set(true);\n        };\n        return {\n            stop,\n            cut: noop, // cutting has no meaning for a broadcasted event\n            isStopped: stopper.get,\n            isCut: never,\n            event,\n            // Nor do targets really\n            setSource: die('Cannot set source of a broadcasted event'),\n            getSource: die('Cannot get source of a broadcasted event')\n        };\n    };\n\n    const isDangerous = (event) => {\n        // Will trigger the Back button in the browser\n        const keyEv = event.raw;\n        return keyEv.which === BACKSPACE[0] && !contains$2(['input', 'textarea'], name$3(event.target)) && !closest$1(event.target, '[contenteditable=\"true\"]');\n    };\n    const setup$d = (container, rawSettings) => {\n        const settings = {\n            stopBackspace: true,\n            ...rawSettings\n        };\n        const pointerEvents = [\n            'touchstart',\n            'touchmove',\n            'touchend',\n            'touchcancel',\n            'gesturestart',\n            'mousedown',\n            'mouseup',\n            'mouseover',\n            'mousemove',\n            'mouseout',\n            'click'\n        ];\n        const tapEvent = monitor(settings);\n        // These events are just passed through ... no additional processing\n        const simpleEvents = map$2(pointerEvents.concat([\n            'selectstart',\n            'input',\n            'contextmenu',\n            'change',\n            'transitionend',\n            'transitioncancel',\n            // Test the drag events\n            'drag',\n            'dragstart',\n            'dragend',\n            'dragenter',\n            'dragleave',\n            'dragover',\n            'drop',\n            'keyup'\n        ]), (type) => bind$1(container, type, (event) => {\n            tapEvent.fireIfReady(event, type).each((tapStopped) => {\n                if (tapStopped) {\n                    event.kill();\n                }\n            });\n            const stopped = settings.triggerEvent(type, event);\n            if (stopped) {\n                event.kill();\n            }\n        }));\n        const pasteTimeout = value$2();\n        const onPaste = bind$1(container, 'paste', (event) => {\n            tapEvent.fireIfReady(event, 'paste').each((tapStopped) => {\n                if (tapStopped) {\n                    event.kill();\n                }\n            });\n            const stopped = settings.triggerEvent('paste', event);\n            if (stopped) {\n                event.kill();\n            }\n            pasteTimeout.set(setTimeout(() => {\n                settings.triggerEvent(postPaste(), event);\n            }, 0));\n        });\n        const onKeydown = bind$1(container, 'keydown', (event) => {\n            // Prevent default of backspace when not in input fields.\n            const stopped = settings.triggerEvent('keydown', event);\n            if (stopped) {\n                event.kill();\n            }\n            else if (settings.stopBackspace && isDangerous(event)) {\n                event.prevent();\n            }\n        });\n        const onFocusIn = bind$1(container, 'focusin', (event) => {\n            const stopped = settings.triggerEvent('focusin', event);\n            if (stopped) {\n                event.kill();\n            }\n        });\n        const focusoutTimeout = value$2();\n        const onFocusOut = bind$1(container, 'focusout', (event) => {\n            const stopped = settings.triggerEvent('focusout', event);\n            if (stopped) {\n                event.kill();\n            }\n            // INVESTIGATE: Come up with a better way of doing this. Related target can be used, but not on FF.\n            // It allows the active element to change before firing the blur that we will listen to\n            // for things like closing popups\n            focusoutTimeout.set(setTimeout(() => {\n                settings.triggerEvent(postBlur(), event);\n            }, 0));\n        });\n        const unbind = () => {\n            each$1(simpleEvents, (e) => {\n                e.unbind();\n            });\n            onKeydown.unbind();\n            onFocusIn.unbind();\n            onFocusOut.unbind();\n            onPaste.unbind();\n            pasteTimeout.on(clearTimeout);\n            focusoutTimeout.on(clearTimeout);\n        };\n        return {\n            unbind\n        };\n    };\n\n    const derive = (rawEvent, rawTarget) => {\n        const source = get$h(rawEvent, 'target').getOr(rawTarget);\n        return Cell(source);\n    };\n\n    const adt = Adt.generate([\n        { stopped: [] },\n        { resume: ['element'] },\n        { complete: [] }\n    ]);\n    const doTriggerHandler = (lookup, eventType, rawEvent, target, source, logger) => {\n        const handler = lookup(eventType, target);\n        const simulatedEvent = fromSource(rawEvent, source);\n        return handler.fold(() => {\n            // No handler, so complete.\n            logger.logEventNoHandlers(eventType, target);\n            return adt.complete();\n        }, (handlerInfo) => {\n            const descHandler = handlerInfo.descHandler;\n            const eventHandler = getCurried(descHandler);\n            eventHandler(simulatedEvent);\n            // Now, check if the event was stopped.\n            if (simulatedEvent.isStopped()) {\n                logger.logEventStopped(eventType, handlerInfo.element, descHandler.purpose);\n                return adt.stopped();\n            }\n            else if (simulatedEvent.isCut()) {\n                logger.logEventCut(eventType, handlerInfo.element, descHandler.purpose);\n                return adt.complete();\n            }\n            else {\n                return parent(handlerInfo.element).fold(() => {\n                    logger.logNoParent(eventType, handlerInfo.element, descHandler.purpose);\n                    // No parent, so complete.\n                    return adt.complete();\n                }, (parent) => {\n                    logger.logEventResponse(eventType, handlerInfo.element, descHandler.purpose);\n                    // Resume at parent\n                    return adt.resume(parent);\n                });\n            }\n        });\n    };\n    const doTriggerOnUntilStopped = (lookup, eventType, rawEvent, rawTarget, source, logger) => doTriggerHandler(lookup, eventType, rawEvent, rawTarget, source, logger).fold(\n    // stopped.\n    always, \n    // Go again.\n    (parent) => doTriggerOnUntilStopped(lookup, eventType, rawEvent, parent, source, logger), \n    // completed\n    never);\n    const triggerHandler = (lookup, eventType, rawEvent, target, logger) => {\n        const source = derive(rawEvent, target);\n        return doTriggerHandler(lookup, eventType, rawEvent, target, source, logger);\n    };\n    const broadcast = (listeners, rawEvent, _logger) => {\n        const simulatedEvent = fromExternal(rawEvent);\n        each$1(listeners, (listener) => {\n            const descHandler = listener.descHandler;\n            const handler = getCurried(descHandler);\n            handler(simulatedEvent);\n        });\n        return simulatedEvent.isStopped();\n    };\n    const triggerUntilStopped = (lookup, eventType, rawEvent, logger) => triggerOnUntilStopped(lookup, eventType, rawEvent, rawEvent.target, logger);\n    const triggerOnUntilStopped = (lookup, eventType, rawEvent, rawTarget, logger) => {\n        const source = derive(rawEvent, rawTarget);\n        return doTriggerOnUntilStopped(lookup, eventType, rawEvent, rawTarget, source, logger);\n    };\n\n    const eventHandler = (element, descHandler) => ({\n        element,\n        descHandler\n    });\n    const broadcastHandler = (id, handler) => ({\n        id,\n        descHandler: handler\n    });\n    const EventRegistry = () => {\n        const registry = {};\n        const registerId = (extraArgs, id, events) => {\n            each(events, (v, k) => {\n                const handlers = registry[k] !== undefined ? registry[k] : {};\n                handlers[id] = curryArgs(v, extraArgs);\n                registry[k] = handlers;\n            });\n        };\n        const findHandler = (handlers, elem) => read(elem)\n            .bind((id) => get$h(handlers, id))\n            .map((descHandler) => eventHandler(elem, descHandler));\n        // Given just the event type, find all handlers regardless of element\n        const filterByType = (type) => get$h(registry, type)\n            .map((handlers) => mapToArray(handlers, (f, id) => broadcastHandler(id, f)))\n            .getOr([]);\n        // Given event type, and element, find the handler.\n        const find = (isAboveRoot, type, target) => get$h(registry, type)\n            .bind((handlers) => closest(target, (elem) => findHandler(handlers, elem), isAboveRoot));\n        const unregisterId = (id) => {\n            // INVESTIGATE: Find a better way than mutation if we can.\n            each(registry, (handlersById, _eventName) => {\n                if (has$2(handlersById, id)) {\n                    delete handlersById[id];\n                }\n            });\n        };\n        return {\n            registerId,\n            unregisterId,\n            filterByType,\n            find\n        };\n    };\n\n    const Registry = () => {\n        const events = EventRegistry();\n        // An index of uid -> built components\n        const components = {};\n        const readOrTag = (component) => {\n            const elem = component.element;\n            return read(elem).getOrThunk(() => \n            // No existing tag, so add one.\n            write('uid-', component.element));\n        };\n        const failOnDuplicate = (component, tagId) => {\n            const conflict = components[tagId];\n            if (conflict === component) {\n                unregister(component);\n            }\n            else {\n                throw new Error('The tagId \"' + tagId + '\" is already used by: ' + element(conflict.element) + '\\nCannot use it for: ' + element(component.element) + '\\n' +\n                    'The conflicting element is' + (inBody(conflict.element) ? ' ' : ' not ') + 'already in the DOM');\n            }\n        };\n        const register = (component) => {\n            const tagId = readOrTag(component);\n            if (hasNonNullableKey(components, tagId)) {\n                failOnDuplicate(component, tagId);\n            }\n            // Component is passed through an an extra argument to all events\n            const extraArgs = [component];\n            events.registerId(extraArgs, tagId, component.events);\n            components[tagId] = component;\n        };\n        const unregister = (component) => {\n            read(component.element).each((tagId) => {\n                delete components[tagId];\n                events.unregisterId(tagId);\n            });\n        };\n        const filter = (type) => events.filterByType(type);\n        const find = (isAboveRoot, type, target) => events.find(isAboveRoot, type, target);\n        const getById = (id) => get$h(components, id);\n        return {\n            find,\n            filter,\n            register,\n            unregister,\n            getById\n        };\n    };\n\n    const takeover = (root) => {\n        const isAboveRoot = (el) => parent(root.element).fold(always, (parent) => eq(el, parent));\n        const registry = Registry();\n        const lookup = (eventName, target) => registry.find(isAboveRoot, eventName, target);\n        const domEvents = setup$d(root.element, {\n            triggerEvent: (eventName, event) => {\n                return monitorEvent(eventName, event.target, (logger) => triggerUntilStopped(lookup, eventName, event, logger));\n            }\n        });\n        const systemApi = {\n            // This is a real system\n            debugInfo: constant$1('real'),\n            triggerEvent: (eventName, target, data) => {\n                monitorEvent(eventName, target, (logger) => \n                // The return value is not used because this is a fake event.\n                triggerOnUntilStopped(lookup, eventName, data, target, logger));\n            },\n            triggerFocus: (target, originator) => {\n                read(target).fold(() => {\n                    // When the target is not within the alloy system, dispatch a normal focus event.\n                    focus$4(target);\n                }, (_alloyId) => {\n                    monitorEvent(focus$3(), target, (logger) => {\n                        // NOTE: This will stop at first handler.\n                        triggerHandler(lookup, focus$3(), {\n                            // originator is used by the default events to ensure that focus doesn't\n                            // get called infinitely\n                            originator,\n                            kill: noop,\n                            prevent: noop,\n                            target\n                        }, target, logger);\n                        return false;\n                    });\n                });\n            },\n            triggerEscape: (comp, simulatedEvent) => {\n                systemApi.triggerEvent('keydown', comp.element, simulatedEvent.event);\n            },\n            getByUid: (uid) => {\n                return getByUid(uid);\n            },\n            getByDom: (elem) => {\n                return getByDom(elem);\n            },\n            build: build$1,\n            buildOrPatch: buildOrPatch,\n            addToGui: (c) => {\n                add(c);\n            },\n            removeFromGui: (c) => {\n                remove(c);\n            },\n            addToWorld: (c) => {\n                addToWorld(c);\n            },\n            removeFromWorld: (c) => {\n                removeFromWorld(c);\n            },\n            broadcast: (message) => {\n                broadcast$1(message);\n            },\n            broadcastOn: (channels, message) => {\n                broadcastOn(channels, message);\n            },\n            broadcastEvent: (eventName, event) => {\n                broadcastEvent(eventName, event);\n            },\n            isConnected: always\n        };\n        const addToWorld = (component) => {\n            component.connect(systemApi);\n            if (!isText(component.element)) {\n                registry.register(component);\n                each$1(component.components(), addToWorld);\n                systemApi.triggerEvent(systemInit(), component.element, { target: component.element });\n            }\n        };\n        const removeFromWorld = (component) => {\n            if (!isText(component.element)) {\n                each$1(component.components(), removeFromWorld);\n                registry.unregister(component);\n            }\n            component.disconnect();\n        };\n        const add = (component) => {\n            attach(root, component);\n        };\n        const remove = (component) => {\n            detach(component);\n        };\n        const destroy = () => {\n            // INVESTIGATE: something with registry?\n            domEvents.unbind();\n            remove$7(root.element);\n        };\n        const broadcastData = (data) => {\n            const receivers = registry.filter(receive());\n            each$1(receivers, (receiver) => {\n                const descHandler = receiver.descHandler;\n                const handler = getCurried(descHandler);\n                handler(data);\n            });\n        };\n        const broadcast$1 = (message) => {\n            broadcastData({\n                universal: true,\n                data: message\n            });\n        };\n        const broadcastOn = (channels, message) => {\n            broadcastData({\n                universal: false,\n                channels,\n                data: message\n            });\n        };\n        // This doesn't follow usual DOM bubbling. It will just dispatch on all\n        // targets that have the event. It is the general case of the more specialised\n        // \"message\". \"messages\" may actually just go away. This is used for things\n        // like window scroll.\n        const broadcastEvent = (eventName, event) => {\n            const listeners = registry.filter(eventName);\n            return broadcast(listeners, event);\n        };\n        const getByUid = (uid) => registry.getById(uid).fold(() => Result.error(new Error('Could not find component with uid: \"' + uid + '\" in system.')), Result.value);\n        const getByDom = (elem) => {\n            const uid = read(elem).getOr('not found');\n            return getByUid(uid);\n        };\n        addToWorld(root);\n        return {\n            root,\n            element: root.element,\n            destroy,\n            add,\n            remove,\n            getByUid,\n            getByDom,\n            addToWorld,\n            removeFromWorld,\n            broadcast: broadcast$1,\n            broadcastOn,\n            broadcastEvent\n        };\n    };\n\n    const pointerEvents = () => {\n        const onClick = (component, simulatedEvent) => {\n            simulatedEvent.stop();\n            emitExecute(component);\n        };\n        return [\n            // Trigger execute when clicked\n            run$1(click(), onClick),\n            run$1(tap(), onClick),\n            // Other mouse down listeners above this one should not get mousedown behaviour (like dragging)\n            cutter(touchstart()),\n            cutter(mousedown())\n        ];\n    };\n    const events = (optAction) => {\n        const executeHandler = (action) => runOnExecute$1((component, simulatedEvent) => {\n            action(component);\n            simulatedEvent.stop();\n        });\n        return derive$2(flatten([\n            // Only listen to execute if it is supplied\n            optAction.map(executeHandler).toArray(),\n            pointerEvents()\n        ]));\n    };\n\n    const factory$n = (detail) => {\n        const events$1 = events(detail.action);\n        const tag = detail.dom.tag;\n        const lookupAttr = (attr) => get$h(detail.dom, 'attributes').bind((attrs) => get$h(attrs, attr));\n        // Button tags should not have a default role of button, and only buttons should\n        // get a type of button.\n        const getModAttributes = () => {\n            if (tag === 'button') {\n                // Default to type button, unless specified otherwise\n                const type = lookupAttr('type').getOr('button');\n                // Only use a role if it is specified\n                const roleAttrs = lookupAttr('role').map((role) => ({ role })).getOr({});\n                return {\n                    type,\n                    ...roleAttrs\n                };\n            }\n            else {\n                // We are not a button, so type is irrelevant (unless specified)\n                // Default role to button\n                const role = detail.role.getOr(lookupAttr('role').getOr('button'));\n                return { role };\n            }\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components: detail.components,\n            events: events$1,\n            behaviours: SketchBehaviours.augment(detail.buttonBehaviours, [\n                Focusing.config({}),\n                Keying.config({\n                    mode: 'execution',\n                    // Note execution will capture keyup when the focus is on the button\n                    // on Firefox, because otherwise it will fire a click event and double\n                    // up on the action\n                    useSpace: true,\n                    useEnter: true\n                })\n            ]),\n            domModification: {\n                attributes: getModAttributes()\n            },\n            eventOrder: detail.eventOrder\n        };\n    };\n    const Button = single({\n        name: 'Button',\n        factory: factory$n,\n        configFields: [\n            defaulted('uid', undefined),\n            required$1('dom'),\n            defaulted('components', []),\n            SketchBehaviours.field('buttonBehaviours', [Focusing, Keying]),\n            option$3('action'),\n            option$3('role'),\n            defaulted('eventOrder', {})\n        ]\n    });\n\n    const schema$n = constant$1([\n        defaulted('shell', false),\n        required$1('makeItem'),\n        defaulted('setupItem', noop),\n        SketchBehaviours.field('listBehaviours', [Replacing])\n    ]);\n    const customListDetail = () => ({\n        behaviours: derive$1([\n            Replacing.config({})\n        ])\n    });\n    const itemsPart = optional({\n        name: 'items',\n        overrides: customListDetail\n    });\n    const parts$g = constant$1([\n        itemsPart\n    ]);\n    const name$1 = constant$1('CustomList');\n\n    const factory$m = (detail, components, _spec, _external) => {\n        const setItems = (list, items) => {\n            getListContainer(list).fold(() => {\n                // check that the group container existed. It may not have if the components\n                // did not list anything, and shell was false.\n                // eslint-disable-next-line no-console\n                console.error('Custom List was defined to not be a shell, but no item container was specified in components');\n                throw new Error('Custom List was defined to not be a shell, but no item container was specified in components');\n            }, (container) => {\n                // Get all the children of container, because they will be items.\n                // And then use the item setGroup api\n                const itemComps = Replacing.contents(container);\n                const numListsRequired = items.length;\n                const numListsToAdd = numListsRequired - itemComps.length;\n                const itemsToAdd = numListsToAdd > 0 ?\n                    range$2(numListsToAdd, () => detail.makeItem()) : [];\n                const itemsToRemove = itemComps.slice(numListsRequired);\n                each$1(itemsToRemove, (item) => Replacing.remove(container, item));\n                each$1(itemsToAdd, (item) => Replacing.append(container, item));\n                const builtLists = Replacing.contents(container);\n                each$1(builtLists, (item, i) => {\n                    detail.setupItem(list, item, items[i], i);\n                });\n            });\n        };\n        // In shell mode, the group overrides need to be added to the main container, and there can be no children\n        const extra = detail.shell ? { behaviours: [Replacing.config({})], components: [] } : { behaviours: [], components };\n        const getListContainer = (component) => detail.shell ? Optional.some(component) : getPart(component, detail, 'items');\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components: extra.components,\n            behaviours: augment(detail.listBehaviours, extra.behaviours),\n            apis: {\n                setItems\n            }\n        };\n    };\n    const CustomList = composite({\n        name: name$1(),\n        configFields: schema$n(),\n        partFields: parts$g(),\n        factory: factory$m,\n        apis: {\n            setItems: (apis, list, items) => {\n                apis.setItems(list, items);\n            }\n        }\n    });\n\n    const attribute = 'aria-controls';\n    const find$1 = (queryElem) => {\n        const dependent = closest$4(queryElem, (elem) => {\n            if (!isElement$1(elem)) {\n                return false;\n            }\n            const id = get$g(elem, 'id');\n            return id !== undefined && id.indexOf(attribute) > -1;\n        });\n        return dependent.bind((dep) => {\n            const id = get$g(dep, 'id');\n            const dos = getRootNode(dep);\n            return descendant(dos, `[${attribute}=\"${id}\"]`);\n        });\n    };\n    const manager = () => {\n        const ariaId = generate$6(attribute);\n        const link = (elem) => {\n            set$9(elem, attribute, ariaId);\n        };\n        const unlink = (elem) => {\n            remove$8(elem, attribute);\n        };\n        return {\n            id: ariaId,\n            link,\n            unlink,\n        };\n    };\n\n    const isAriaPartOf = (component, queryElem) => find$1(queryElem).exists((owner) => isPartOf(component, owner));\n    const isPartOf = (component, queryElem) => closest$2(queryElem, (el) => eq(el, component.element), never) || isAriaPartOf(component, queryElem);\n\n    const hoverEvent = 'alloy.item-hover';\n    const focusEvent = 'alloy.item-focus';\n    const toggledEvent = 'alloy.item-toggled';\n    const onHover = (item) => {\n        // Firstly, check that the focus isn't already inside the item. This\n        // is to handle situations like widgets where the widget is inside the item\n        // and it has the focus, so as you slightly adjust the mouse, you don't\n        // want to lose focus on the widget. Note, that because this isn't API based\n        // (i.e. we are manually searching for focus), it may not be that flexible.\n        if (search(item.element).isNone() || Focusing.isFocused(item)) {\n            if (!Focusing.isFocused(item)) {\n                Focusing.focus(item);\n            }\n            emitWith(item, hoverEvent, { item });\n        }\n    };\n    const onFocus$1 = (item) => {\n        emitWith(item, focusEvent, { item });\n    };\n    const onToggled = (item, state) => {\n        emitWith(item, toggledEvent, { item, state });\n    };\n    const hover = constant$1(hoverEvent);\n    const focus$1 = constant$1(focusEvent);\n    const toggled = constant$1(toggledEvent);\n\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    const getItemRole = (detail) => detail.role.fold(() => detail.toggling\n        .map((toggling) => toggling.exclusive ? 'menuitemradio' : 'menuitemcheckbox')\n        .getOr('menuitem'), identity);\n    const getTogglingSpec = (tConfig, isOption) => ({\n        aria: {\n            mode: isOption ? 'selected' : 'checked'\n        },\n        // Filter out the additional properties that are not in Toggling Behaviour's configuration (e.g. exclusive)\n        ...filter$1(tConfig, (_value, name) => name !== 'exclusive'),\n        onToggled: (component, state) => {\n            if (isFunction(tConfig.onToggled)) {\n                tConfig.onToggled(component, state);\n            }\n            onToggled(component, state);\n        }\n    });\n    const builder$2 = (detail) => ({\n        dom: detail.dom,\n        domModification: {\n            // INVESTIGATE: If more efficient, destructure attributes out\n            ...detail.domModification,\n            attributes: {\n                'role': getItemRole(detail),\n                ...detail.domModification.attributes,\n                'aria-haspopup': detail.hasSubmenu,\n                ...(detail.hasSubmenu ? { 'aria-expanded': false } : {})\n            }\n        },\n        behaviours: SketchBehaviours.augment(detail.itemBehaviours, [\n            // Investigate, is the Toggling.revoke still necessary here?\n            detail.toggling.fold(Toggling.revoke, (tConfig) => Toggling.config(getTogglingSpec(tConfig, detail.role.exists((role) => role === 'option')))),\n            Focusing.config({\n                ignore: detail.ignoreFocus,\n                // Rationale: because nothing is focusable, when you click\n                // on the items to choose them, the focus jumps to the first\n                // focusable outer container ... often the body. If we prevent\n                // mouseDown ... that doesn't happen. But only tested on Chrome/FF.\n                stopMousedown: detail.ignoreFocus,\n                onFocus: (component) => {\n                    onFocus$1(component);\n                }\n            }),\n            Keying.config({\n                mode: 'execution'\n            }),\n            Representing.config({\n                store: {\n                    mode: 'memory',\n                    initialValue: detail.data\n                }\n            }),\n            config('item-type-events', [\n                // Treat clicks the same as a button\n                ...pointerEvents(),\n                run$1(mouseover(), onHover),\n                run$1(focusItem(), Focusing.focus)\n            ])\n        ]),\n        components: detail.components,\n        eventOrder: detail.eventOrder\n    });\n    const schema$m = [\n        required$1('data'),\n        required$1('components'),\n        required$1('dom'),\n        defaulted('hasSubmenu', false),\n        option$3('toggling'),\n        option$3('role'),\n        // Maybe this needs to have fewer behaviours\n        SketchBehaviours.field('itemBehaviours', [Toggling, Focusing, Keying, Representing]),\n        defaulted('ignoreFocus', false),\n        defaulted('domModification', {}),\n        output$1('builder', builder$2),\n        defaulted('eventOrder', {})\n    ];\n    var ItemType = schema$m;\n\n    const builder$1 = (detail) => ({\n        dom: detail.dom,\n        components: detail.components,\n        events: derive$2([\n            stopper(focusItem())\n        ])\n    });\n    const schema$l = [\n        required$1('dom'),\n        required$1('components'),\n        output$1('builder', builder$1)\n    ];\n    var SeparatorType = schema$l;\n\n    const owner$2 = constant$1('item-widget');\n    const parts$f = constant$1([\n        required({\n            name: 'widget',\n            overrides: (detail) => {\n                return {\n                    behaviours: derive$1([\n                        Representing.config({\n                            store: {\n                                mode: 'manual',\n                                getValue: (_component) => {\n                                    return detail.data;\n                                },\n                                setValue: noop\n                            }\n                        })\n                    ])\n                };\n            }\n        })\n    ]);\n\n    const builder = (detail) => {\n        const subs = substitutes(owner$2(), detail, parts$f());\n        const components = components$1(owner$2(), detail, subs.internals());\n        const focusWidget = (component) => getPart(component, detail, 'widget').map((widget) => {\n            Keying.focusIn(widget);\n            return widget;\n        });\n        const onHorizontalArrow = (component, simulatedEvent) => inside(simulatedEvent.event.target) ? Optional.none() : (() => {\n            if (detail.autofocus) {\n                simulatedEvent.setSource(component.element);\n                return Optional.none();\n            }\n            else {\n                return Optional.none();\n            }\n        })();\n        return {\n            dom: detail.dom,\n            components,\n            domModification: detail.domModification,\n            events: derive$2([\n                runOnExecute$1((component, simulatedEvent) => {\n                    focusWidget(component).each((_widget) => {\n                        simulatedEvent.stop();\n                    });\n                }),\n                run$1(mouseover(), onHover),\n                run$1(focusItem(), (component, _simulatedEvent) => {\n                    if (detail.autofocus) {\n                        focusWidget(component);\n                    }\n                    else {\n                        Focusing.focus(component);\n                    }\n                })\n            ]),\n            behaviours: SketchBehaviours.augment(detail.widgetBehaviours, [\n                Representing.config({\n                    store: {\n                        mode: 'memory',\n                        initialValue: detail.data\n                    }\n                }),\n                Focusing.config({\n                    ignore: detail.ignoreFocus,\n                    // What about stopMousedown from ItemType?\n                    onFocus: (component) => {\n                        onFocus$1(component);\n                    }\n                }),\n                Keying.config({\n                    mode: 'special',\n                    // This is required as long as Highlighting tries to focus the first thing (after focusItem fires)\n                    focusIn: detail.autofocus ? (component) => {\n                        focusWidget(component);\n                    } : revoke(),\n                    onLeft: onHorizontalArrow,\n                    onRight: onHorizontalArrow,\n                    onEscape: (component, simulatedEvent) => {\n                        // If the outer list item didn't have focus,\n                        // then focus it (i.e. escape the inner widget). Only do if not autofocusing\n                        // Autofocusing should treat the widget like it is the only item, so it should\n                        // let its outer menu handle escape\n                        if (!Focusing.isFocused(component) && !detail.autofocus) {\n                            Focusing.focus(component);\n                            return Optional.some(true);\n                        }\n                        else if (detail.autofocus) {\n                            simulatedEvent.setSource(component.element);\n                            return Optional.none();\n                        }\n                        else {\n                            return Optional.none();\n                        }\n                    }\n                })\n            ])\n        };\n    };\n    const schema$k = [\n        required$1('uid'),\n        required$1('data'),\n        required$1('components'),\n        required$1('dom'),\n        defaulted('autofocus', false),\n        defaulted('ignoreFocus', false),\n        SketchBehaviours.field('widgetBehaviours', [Representing, Focusing, Keying]),\n        defaulted('domModification', {}),\n        // We don't have the uid at this point\n        defaultUidsSchema(parts$f()),\n        output$1('builder', builder)\n    ];\n    var WidgetType = schema$k;\n\n    const itemSchema$2 = choose$1('type', {\n        widget: WidgetType,\n        item: ItemType,\n        separator: SeparatorType\n    });\n    const configureGrid = (detail, movementInfo) => ({\n        mode: 'flatgrid',\n        selector: '.' + detail.markers.item,\n        initSize: {\n            numColumns: movementInfo.initSize.numColumns,\n            numRows: movementInfo.initSize.numRows\n        },\n        focusManager: detail.focusManager\n    });\n    const configureMatrix = (detail, movementInfo) => ({\n        mode: 'matrix',\n        selectors: {\n            row: movementInfo.rowSelector,\n            cell: '.' + detail.markers.item\n        },\n        previousSelector: movementInfo.previousSelector,\n        focusManager: detail.focusManager\n    });\n    const configureMenu = (detail, movementInfo) => ({\n        mode: 'menu',\n        selector: '.' + detail.markers.item,\n        moveOnTab: movementInfo.moveOnTab,\n        focusManager: detail.focusManager\n    });\n    const parts$e = constant$1([\n        group({\n            factory: {\n                sketch: (spec) => {\n                    const itemInfo = asRawOrDie$1('menu.spec item', itemSchema$2, spec);\n                    return itemInfo.builder(itemInfo);\n                }\n            },\n            name: 'items',\n            unit: 'item',\n            defaults: (detail, u) => {\n                // Switch this to a common library\n                // The WidgetItemSpec is just because it has uid, and the others don't\n                // for some reason. So there is nothing guaranteeing that `u` is a WidgetItemSpec,\n                // so we should probably rework this code.\n                return has$2(u, 'uid') ? u : {\n                    ...u,\n                    uid: generate$4('item')\n                };\n            },\n            overrides: (detail, u) => {\n                return {\n                    type: u.type,\n                    ignoreFocus: detail.fakeFocus,\n                    domModification: {\n                        classes: [detail.markers.item]\n                    }\n                };\n            }\n        })\n    ]);\n    const schema$j = constant$1([\n        optionString('role'),\n        required$1('value'),\n        required$1('items'),\n        required$1('dom'),\n        required$1('components'),\n        defaulted('eventOrder', {}),\n        field('menuBehaviours', [Highlighting, Representing, Composing, Keying]),\n        defaultedOf('movement', {\n            // When you don't specify movement for a Menu, this is what you get\n            // a \"menu\" type of movement that moves on tab. If you want finer-grained\n            // control, like disabling moveOnTab, then you need to specify\n            // your entire movement configuration when creating your MenuSpec.\n            mode: 'menu',\n            moveOnTab: true\n        }, choose$1('mode', {\n            grid: [\n                initSize(),\n                output$1('config', configureGrid)\n            ],\n            matrix: [\n                output$1('config', configureMatrix),\n                required$1('rowSelector'),\n                defaulted('previousSelector', Optional.none),\n            ],\n            menu: [\n                defaulted('moveOnTab', true),\n                output$1('config', configureMenu)\n            ]\n        })),\n        itemMarkers(),\n        defaulted('fakeFocus', false),\n        defaulted('focusManager', dom$2()),\n        onHandler('onHighlight'),\n        onHandler('onDehighlight'),\n        defaulted('showMenuRole', true),\n    ]);\n\n    const focus = constant$1('alloy.menu-focus');\n\n    const deselectOtherRadioItems = (menu, item) => {\n        // TODO: TINY-8812 - This ideally should be done in a way such that a menu can have multiple radio groups.\n        const checkedRadioItems = descendants(menu.element, '[role=\"menuitemradio\"][aria-checked=\"true\"]');\n        each$1(checkedRadioItems, (ele) => {\n            if (!eq(ele, item.element)) {\n                menu.getSystem().getByDom(ele).each((c) => {\n                    Toggling.off(c);\n                });\n            }\n        });\n    };\n    const make$6 = (detail, components, _spec, _externals) => ({\n        uid: detail.uid,\n        dom: detail.dom,\n        markers: detail.markers,\n        behaviours: augment(detail.menuBehaviours, [\n            Highlighting.config({\n                // Highlighting for a menu is selecting items inside the menu\n                highlightClass: detail.markers.selectedItem,\n                itemClass: detail.markers.item,\n                onHighlight: detail.onHighlight,\n                onDehighlight: detail.onDehighlight\n            }),\n            Representing.config({\n                store: {\n                    mode: 'memory',\n                    initialValue: detail.value\n                }\n            }),\n            Composing.config({\n                find: Optional.some\n            }),\n            Keying.config(detail.movement.config(detail, detail.movement))\n        ]),\n        events: derive$2([\n            // This is dispatched from a menu to tell an item to be highlighted.\n            run$1(focus$1(), (menu, simulatedEvent) => {\n                // Highlight the item\n                const event = simulatedEvent.event;\n                menu.getSystem().getByDom(event.target).each((item) => {\n                    Highlighting.highlight(menu, item);\n                    simulatedEvent.stop();\n                    // Trigger the focus event on the menu.\n                    emitWith(menu, focus(), { menu, item });\n                });\n            }),\n            // Highlight the item that the cursor is over. The onHighlight\n            // code needs to handle updating focus if required\n            run$1(hover(), (menu, simulatedEvent) => {\n                const item = simulatedEvent.event.item;\n                Highlighting.highlight(menu, item);\n            }),\n            // Enforce only a single radio menu item is toggled by finding any other toggled\n            // radio menu items and untoggling them when a certain item is toggled\n            run$1(toggled(), (menu, simulatedEvent) => {\n                const { item, state } = simulatedEvent.event;\n                if (state && get$g(item.element, 'role') === 'menuitemradio') {\n                    deselectOtherRadioItems(menu, item);\n                }\n            })\n        ]),\n        components,\n        eventOrder: detail.eventOrder,\n        ...detail.showMenuRole ? {\n            domModification: {\n                attributes: {\n                    role: detail.role.getOr('menu')\n                }\n            }\n        } : {}\n    });\n\n    const Menu = composite({\n        name: 'Menu',\n        configFields: schema$j(),\n        partFields: parts$e(),\n        factory: make$6\n    });\n\n    const transpose$1 = (obj) => \n    // Assumes no duplicate fields.\n    tupleMap(obj, (v, k) => ({ k: v, v: k }));\n    const trace = (items, byItem, byMenu, finish) => \n    // Given a finishing submenu (which will be the value of expansions),\n    // find the triggering item, find its menu, and repeat the process. If there\n    // is no triggering item, we are done.\n    get$h(byMenu, finish).bind((triggerItem) => get$h(items, triggerItem).bind((triggerMenu) => {\n        const rest = trace(items, byItem, byMenu, triggerMenu);\n        return Optional.some([triggerMenu].concat(rest));\n    })).getOr([]);\n    const generate$2 = (menus, expansions) => {\n        const items = {};\n        each(menus, (menuItems, menu) => {\n            each$1(menuItems, (item) => {\n                items[item] = menu;\n            });\n        });\n        const byItem = expansions;\n        const byMenu = transpose$1(expansions);\n        // For each menu, calculate the backlog of submenus to get to it.\n        const menuPaths = map$1(byMenu, (_triggerItem, submenu) => [submenu].concat(trace(items, byItem, byMenu, submenu)));\n        return map$1(items, (menu) => get$h(menuPaths, menu).getOr([menu]));\n    };\n\n    const init$2 = () => {\n        const expansions = Cell({});\n        const menus = Cell({});\n        const paths = Cell({});\n        const primary = value$2();\n        // Probably think of a better way to store this information.\n        const directory = Cell({});\n        const clear = () => {\n            expansions.set({});\n            menus.set({});\n            paths.set({});\n            primary.clear();\n        };\n        const isClear = () => primary.get().isNone();\n        const setMenuBuilt = (menuName, built) => {\n            menus.set({\n                ...menus.get(),\n                [menuName]: {\n                    type: 'prepared',\n                    menu: built\n                }\n            });\n        };\n        const setContents = (sPrimary, sMenus, sExpansions, dir) => {\n            primary.set(sPrimary);\n            expansions.set(sExpansions);\n            menus.set(sMenus);\n            directory.set(dir);\n            const sPaths = generate$2(dir, sExpansions);\n            paths.set(sPaths);\n        };\n        const getTriggeringItem = (menuValue) => find$4(expansions.get(), (v, _k) => v === menuValue);\n        const getTriggerData = (menuValue, getItemByValue, path) => getPreparedMenu(menuValue).bind((menu) => getTriggeringItem(menuValue).bind((triggeringItemValue) => getItemByValue(triggeringItemValue).map((triggeredItem) => ({\n            triggeredMenu: menu,\n            triggeringItem: triggeredItem,\n            triggeringPath: path\n        }))));\n        const getTriggeringPath = (itemValue, getItemByValue) => {\n            // Get the path up to the last item\n            const extraPath = filter$2(lookupItem(itemValue).toArray(), (menuValue) => getPreparedMenu(menuValue).isSome());\n            return get$h(paths.get(), itemValue).bind((path) => {\n                // remember the path is [ most-recent-menu, next-most-recent-menu ]\n                // convert each menu identifier into { triggeringItem: comp, menu: comp }\n                // could combine into a fold ... probably a left to reverse ... but we'll take the\n                // straightforward version when prototyping\n                const revPath = reverse(extraPath.concat(path));\n                const triggers = bind$3(revPath, (menuValue, menuIndex) => \n                // finding menuValue, it should match the trigger\n                getTriggerData(menuValue, getItemByValue, revPath.slice(0, menuIndex + 1)).fold(() => is$1(primary.get(), menuValue) ? [] : [Optional.none()], (data) => [Optional.some(data)]));\n                // Convert List<Optional<X>> to Optional<List<X>> if ALL are Some\n                return sequence(triggers);\n            });\n        };\n        // Given an item, return a list of all menus including the one that it triggered (if there is one)\n        const expand = (itemValue) => get$h(expansions.get(), itemValue).map((menu) => {\n            const current = get$h(paths.get(), itemValue).getOr([]);\n            return [menu].concat(current);\n        });\n        const collapse = (itemValue) => \n        // Look up which key has the itemValue\n        get$h(paths.get(), itemValue).bind((path) => path.length > 1 ? Optional.some(path.slice(1)) : Optional.none());\n        const refresh = (itemValue) => get$h(paths.get(), itemValue);\n        const getPreparedMenu = (menuValue) => lookupMenu(menuValue).bind(extractPreparedMenu);\n        const lookupMenu = (menuValue) => get$h(menus.get(), menuValue);\n        const lookupItem = (itemValue) => get$h(expansions.get(), itemValue);\n        const otherMenus = (path) => {\n            const menuValues = directory.get();\n            return difference(keys(menuValues), path);\n        };\n        const getPrimary = () => primary.get().bind(getPreparedMenu);\n        const getMenus = () => menus.get();\n        return {\n            setMenuBuilt,\n            setContents,\n            expand,\n            refresh,\n            collapse,\n            lookupMenu,\n            lookupItem,\n            otherMenus,\n            getPrimary,\n            getMenus,\n            clear,\n            isClear,\n            getTriggeringPath\n        };\n    };\n    const extractPreparedMenu = (prep) => prep.type === 'prepared' ? Optional.some(prep.menu) : Optional.none();\n    const LayeredState = {\n        init: init$2,\n        extractPreparedMenu\n    };\n\n    const onMenuItemHighlightedEvent = generate$6('tiered-menu-item-highlight');\n    const onMenuItemDehighlightedEvent = generate$6('tiered-menu-item-dehighlight');\n\n    const make$5 = (detail, _rawUiSpec) => {\n        const submenuParentItems = value$2();\n        // So the way to provide extra configuration for the menus that tiered menus create is just\n        // to provide different menu specs when building up the TieredData. The TieredMenu itself\n        // does not control it, except to set: markers, fakeFocus, onHighlight, and focusManager\n        const buildMenus = (container, primaryName, menus) => map$1(menus, (spec, name) => {\n            const makeSketch = () => Menu.sketch({\n                ...spec,\n                value: name,\n                // The TieredMenu markers should be inherited by the Menu. \"Markers\" are things like\n                // what is the class for the currently selected item\n                markers: detail.markers,\n                // If the TieredMenu has been configured with FakeFocus, it needs the menus that it generates\n                // to preserve that configuration. Generally, FakeFocus is used for situations where the user\n                // wants to keep focus inside some editable element (like an input, or editor content)\n                fakeFocus: detail.fakeFocus,\n                // The TieredMenu detail.onHighlight function only relates to selecting an item,\n                // not a menu, and the menuComp it is passed is the menu, not the tiered menu.\n                // This makes it a difficult handler to use for a tieredmenu, so we are\n                // deprecating it.\n                onHighlight: (menuComp, itemComp) => {\n                    // Trigger an internal event so that we can listen to it at the tieredmenu\n                    // level, and call detail.onHighlightItem handler with tmenu, menu, and item.\n                    const highlightData = {\n                        menuComp,\n                        itemComp\n                    };\n                    emitWith(menuComp, onMenuItemHighlightedEvent, highlightData);\n                },\n                onDehighlight: (menuComp, itemComp) => {\n                    const dehighlightData = {\n                        menuComp,\n                        itemComp\n                    };\n                    // Trigger an internal event so that we can listen to it at the tieredmenu\n                    // level, and call detail.onDehighlightItem handler with tmenu, menu, and item.\n                    emitWith(menuComp, onMenuItemDehighlightedEvent, dehighlightData);\n                },\n                // The Menu itself doesn't set the focusManager based on the value of fakeFocus. It only uses\n                // its fakeFocus configuration for creating items that ignore focus, but it still needs to be\n                // told which focusManager to use. Perhaps we should change this, though it does allow for more\n                // complex focusManagers in single menus.\n                focusManager: detail.fakeFocus ? highlights() : dom$2()\n            });\n            // Only build the primary at first. Build the others as needed.\n            return name === primaryName ? {\n                type: 'prepared',\n                menu: container.getSystem().build(makeSketch())\n            } : {\n                type: 'notbuilt',\n                nbMenu: makeSketch\n            };\n        });\n        const layeredState = LayeredState.init();\n        const setup = (container) => {\n            const componentMap = buildMenus(container, detail.data.primary, detail.data.menus);\n            const directory = toDirectory();\n            layeredState.setContents(detail.data.primary, componentMap, detail.data.expansions, directory);\n            return layeredState.getPrimary();\n        };\n        const getItemValue = (item) => Representing.getValue(item).value;\n        // Find the first item with value `itemValue` in any of the menus inside this tiered menu structure\n        const getItemByValue = (_container, menus, itemValue) => \n        // Can *greatly* improve the performance of this by calculating things up front.\n        findMap(menus, (menu) => {\n            if (!menu.getSystem().isConnected()) {\n                return Optional.none();\n            }\n            const candidates = Highlighting.getCandidates(menu);\n            return find$5(candidates, (c) => getItemValue(c) === itemValue);\n        });\n        const toDirectory = (_container) => map$1(detail.data.menus, (data, _menuName) => bind$3(data.items, (item) => item.type === 'separator' ? [] : [item.data.value]));\n        // This just sets the active menu. It will not set any active items.\n        const setActiveMenu = Highlighting.highlight;\n        // The item highlighted as active is either the currently active item in the menu,\n        // or the first one.\n        const setActiveMenuAndItem = (container, menu) => {\n            // Firstly, choose the active menu\n            setActiveMenu(container, menu);\n            // Then, choose the active item inside the active menu\n            Highlighting.getHighlighted(menu).orThunk(() => Highlighting.getFirst(menu)).each((item) => {\n                if (detail.fakeFocus) {\n                    // When using fakeFocus, the items won't have a tab-index, so calling focusItem on them\n                    // won't do anything. So we need to manually call highlighting, which is what fakeFocus\n                    // uses. It would probably be better to use the focusManager specified.\n                    Highlighting.highlight(menu, item);\n                }\n                else {\n                    // We don't just use Focusing.focus here, because some items can have slightly different\n                    // handling when they respond to a focusItem event. Widgets with autofocus, for example,\n                    // will trigger a Keying.focusIn instead of Focusing.focus call, because they want to move\n                    // the focus _inside_ the widget, not just to its outer level. The focusItem event\n                    // performs a similar purpose to SystemEvents.focus() and potentially, could be consolidated.\n                    dispatch(container, item.element, focusItem());\n                }\n            });\n        };\n        const getMenus = (state, menuValues) => cat(map$2(menuValues, (mv) => state.lookupMenu(mv).bind((prep) => prep.type === 'prepared' ? Optional.some(prep.menu) : Optional.none())));\n        const closeOthers = (container, state, path) => {\n            const others = getMenus(state, state.otherMenus(path));\n            each$1(others, (o) => {\n                // May not need to do the active menu thing.\n                remove$2(o.element, [detail.markers.backgroundMenu]);\n                if (!detail.stayInDom) {\n                    Replacing.remove(container, o);\n                }\n            });\n        };\n        const getSubmenuParents = (container) => submenuParentItems.get().getOrThunk(() => {\n            const r = {};\n            const items = descendants(container.element, `.${detail.markers.item}`);\n            const parentItems = filter$2(items, (i) => get$g(i, 'aria-haspopup') === 'true');\n            each$1(parentItems, (i) => {\n                container.getSystem().getByDom(i).each((itemComp) => {\n                    const key = getItemValue(itemComp);\n                    r[key] = itemComp;\n                });\n            });\n            submenuParentItems.set(r);\n            return r;\n        });\n        // Not ideal. Ideally, we would like a map of item keys to components.\n        const updateAriaExpansions = (container, path) => {\n            const parentItems = getSubmenuParents(container);\n            each(parentItems, (v, k) => {\n                // Really should turn path into a Set\n                const expanded = contains$2(path, k);\n                set$9(v.element, 'aria-expanded', expanded);\n            });\n        };\n        const updateMenuPath = (container, state, path) => Optional.from(path[0]).bind((latestMenuName) => state.lookupMenu(latestMenuName).bind((menuPrep) => {\n            if (menuPrep.type === 'notbuilt') {\n                return Optional.none();\n            }\n            else {\n                const activeMenu = menuPrep.menu;\n                const rest = getMenus(state, path.slice(1));\n                each$1(rest, (r) => {\n                    add$2(r.element, detail.markers.backgroundMenu);\n                });\n                if (!inBody(activeMenu.element)) {\n                    Replacing.append(container, premade(activeMenu));\n                }\n                // Remove the background-menu class from the active menu\n                remove$2(activeMenu.element, [detail.markers.backgroundMenu]);\n                setActiveMenuAndItem(container, activeMenu);\n                closeOthers(container, state, path);\n                return Optional.some(activeMenu);\n            }\n        }));\n        let ExpandHighlightDecision;\n        (function (ExpandHighlightDecision) {\n            ExpandHighlightDecision[ExpandHighlightDecision[\"HighlightSubmenu\"] = 0] = \"HighlightSubmenu\";\n            ExpandHighlightDecision[ExpandHighlightDecision[\"HighlightParent\"] = 1] = \"HighlightParent\";\n        })(ExpandHighlightDecision || (ExpandHighlightDecision = {}));\n        const buildIfRequired = (container, menuName, menuPrep) => {\n            if (menuPrep.type === 'notbuilt') {\n                const menu = container.getSystem().build(menuPrep.nbMenu());\n                layeredState.setMenuBuilt(menuName, menu);\n                return menu;\n            }\n            else {\n                return menuPrep.menu;\n            }\n        };\n        const expandRight = (container, item, decision = ExpandHighlightDecision.HighlightSubmenu) => {\n            if (item.hasConfigured(Disabling) && Disabling.isDisabled(item)) {\n                return Optional.some(item);\n            }\n            else {\n                const value = getItemValue(item);\n                return layeredState.expand(value).bind((path) => {\n                    // Called when submenus are opened by keyboard AND hovering navigation\n                    updateAriaExpansions(container, path);\n                    // When expanding, always select the first.\n                    return Optional.from(path[0]).bind((menuName) => layeredState.lookupMenu(menuName).bind((activeMenuPrep) => {\n                        const activeMenu = buildIfRequired(container, menuName, activeMenuPrep);\n                        // DUPE with above. Fix later.\n                        if (!inBody(activeMenu.element)) {\n                            Replacing.append(container, premade(activeMenu));\n                        }\n                        // updateMenuPath is the code which changes the active menu. We don't always\n                        // want to change the active menu. Sometimes, we just want to show it (e.g. hover)\n                        detail.onOpenSubmenu(container, item, activeMenu, reverse(path));\n                        if (decision === ExpandHighlightDecision.HighlightSubmenu) {\n                            Highlighting.highlightFirst(activeMenu);\n                            return updateMenuPath(container, layeredState, path);\n                        }\n                        else {\n                            Highlighting.dehighlightAll(activeMenu);\n                            return Optional.some(item);\n                        }\n                    }));\n                });\n            }\n        };\n        const collapseLeft = (container, item) => {\n            const value = getItemValue(item);\n            return layeredState.collapse(value).bind((path) => {\n                // Called when submenus are closed because of KEYBOARD navigation\n                updateAriaExpansions(container, path);\n                return updateMenuPath(container, layeredState, path).map((activeMenu) => {\n                    detail.onCollapseMenu(container, item, activeMenu);\n                    return activeMenu;\n                });\n            });\n        };\n        const updateView = (container, item) => {\n            const value = getItemValue(item);\n            return layeredState.refresh(value).bind((path) => {\n                // Only this function collapses irrelevant submenus when navigating by HOVERING.\n                // Does mean this is called twice when navigating by hovering, since both\n                // updateView and expandRight are called by the ItemEvents.hover() handler\n                updateAriaExpansions(container, path);\n                return updateMenuPath(container, layeredState, path);\n            });\n        };\n        const onRight = (container, item) => inside(item.element) ? Optional.none() : expandRight(container, item, ExpandHighlightDecision.HighlightSubmenu);\n        const onLeft = (container, item) => \n        // Exclude inputs, textareas etc.\n        inside(item.element) ? Optional.none() : collapseLeft(container, item);\n        const onEscape = (container, item) => collapseLeft(container, item).orThunk(() => detail.onEscape(container, item).map(() => container) // This should only fire when the user presses ESC ... not any other close.\n        );\n        const keyOnItem = (f) => (container, simulatedEvent) => {\n            // 2022-08-16 This seems to be the only code in alloy that actually uses\n            // the getSource aspect of an event. Remember, that this code is firing\n            // when an event bubbles up the tiered menu, e.g. left arrow key.\n            // The only current code that sets the source manually is in the Widget item\n            // type, and it only sets the source when it is using autofocus. Autofocus\n            // is used to essentially treat the widget like it is the top-level item, so\n            // when events originate from *within* the widget, their source is changed to\n            // the top-level item. Consider removing EventSource from alloy altogether.\n            return closest$3(simulatedEvent.getSource(), `.${detail.markers.item}`)\n                .bind((target) => container.getSystem().getByDom(target).toOptional().bind((item) => f(container, item).map(always)));\n        };\n        // NOTE: Many of these events rely on identifying the current item by information\n        // sent with the event. However, in situations where you are using fakeFocus, but\n        // the real focus is still somewhere in the menu (e.g. search bar), this will lead to\n        // an incorrect identification of the active item. Ideally, instead of pulling the\n        // item from the event, we should just use Highlighting to identify the active item,\n        // and operate on it. However, not all events will necessarily have to happen on the\n        // active item, so we need to consider all the cases before making this change. For now,\n        // there will be a known limitation that if the real focus is still inside the TieredMenu,\n        // but the menu is using fakeFocus, then the actions will operate on the wrong targets.\n        // A workaround for that is to stop or cut or redispatch the events in whichever\n        // component has the real focus.\n        // TODO: TINY-9011 Introduce proper handling of fakeFocus in TieredMenu\n        const events = derive$2([\n            // Set \"active-menu\" for the menu with focus\n            run$1(focus(), (tmenu, simulatedEvent) => {\n                // Ensure the item is actually part of this menu structure, and not part of another menu structure that's bubbling.\n                const item = simulatedEvent.event.item;\n                layeredState.lookupItem(getItemValue(item)).each(() => {\n                    const menu = simulatedEvent.event.menu;\n                    Highlighting.highlight(tmenu, menu);\n                    const value = getItemValue(simulatedEvent.event.item);\n                    layeredState.refresh(value).each((path) => closeOthers(tmenu, layeredState, path));\n                });\n            }),\n            runOnExecute$1((component, simulatedEvent) => {\n                // Trigger on execute on the targeted element\n                // I.e. clicking on menu item\n                const target = simulatedEvent.event.target;\n                component.getSystem().getByDom(target).each((item) => {\n                    const itemValue = getItemValue(item);\n                    // INVESTIGATE: I don't know if this is doing anything any more. Check.\n                    if (itemValue.indexOf('collapse-item') === 0) {\n                        collapseLeft(component, item);\n                    }\n                    expandRight(component, item, ExpandHighlightDecision.HighlightSubmenu).fold(() => {\n                        detail.onExecute(component, item);\n                    }, noop);\n                });\n            }),\n            // Open the menu as soon as it is added to the DOM\n            runOnAttached((container, _simulatedEvent) => {\n                setup(container).each((primary) => {\n                    Replacing.append(container, premade(primary));\n                    detail.onOpenMenu(container, primary);\n                    if (detail.highlightOnOpen === HighlightOnOpen.HighlightMenuAndItem) {\n                        setActiveMenuAndItem(container, primary);\n                    }\n                    else if (detail.highlightOnOpen === HighlightOnOpen.HighlightJustMenu) {\n                        setActiveMenu(container, primary);\n                    }\n                });\n            }),\n            // Listen to the events bubbling up from menu about highlighting, and trigger\n            // our handlers with tmenu, menu and item\n            run$1(onMenuItemHighlightedEvent, (tmenuComp, se) => {\n                detail.onHighlightItem(tmenuComp, se.event.menuComp, se.event.itemComp);\n            }),\n            run$1(onMenuItemDehighlightedEvent, (tmenuComp, se) => {\n                detail.onDehighlightItem(tmenuComp, se.event.menuComp, se.event.itemComp);\n            }),\n            ...(detail.navigateOnHover ? [\n                // Hide any irrelevant submenus and expand any submenus based\n                // on hovered item\n                run$1(hover(), (tmenu, simulatedEvent) => {\n                    const item = simulatedEvent.event.item;\n                    updateView(tmenu, item);\n                    expandRight(tmenu, item, ExpandHighlightDecision.HighlightParent);\n                    detail.onHover(tmenu, item);\n                })\n            ] : [])\n        ]);\n        const getActiveItem = (container) => Highlighting.getHighlighted(container).bind(Highlighting.getHighlighted);\n        const collapseMenuApi = (container) => {\n            getActiveItem(container).each((currentItem) => {\n                collapseLeft(container, currentItem);\n            });\n        };\n        const highlightPrimary = (container) => {\n            layeredState.getPrimary().each((primary) => {\n                setActiveMenuAndItem(container, primary);\n            });\n        };\n        const extractMenuFromContainer = (container) => Optional.from(container.components()[0]).filter((comp) => get$g(comp.element, 'role') === 'menu');\n        const repositionMenus = (container) => {\n            // Get the primary menu\n            const maybeActivePrimary = layeredState.getPrimary().bind((primary) => \n            // Get the triggering path (item, menu) up to the active item\n            getActiveItem(container).bind((currentItem) => {\n                const itemValue = getItemValue(currentItem);\n                const allMenus = values(layeredState.getMenus());\n                const preparedMenus = cat(map$2(allMenus, LayeredState.extractPreparedMenu));\n                return layeredState.getTriggeringPath(itemValue, (v) => getItemByValue(container, preparedMenus, v));\n            }).map((triggeringPath) => ({ primary, triggeringPath })));\n            maybeActivePrimary.fold(() => {\n                // When a menu is open but there is no activeItem, we get the menu from the container.\n                extractMenuFromContainer(container).each((primaryMenu) => {\n                    detail.onRepositionMenu(container, primaryMenu, []);\n                });\n            }, ({ primary, triggeringPath }) => {\n                // Refresh all the menus up to the active item\n                detail.onRepositionMenu(container, primary, triggeringPath);\n            });\n        };\n        const apis = {\n            collapseMenu: collapseMenuApi,\n            highlightPrimary,\n            repositionMenus\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            markers: detail.markers,\n            behaviours: augment(detail.tmenuBehaviours, [\n                Keying.config({\n                    mode: 'special',\n                    onRight: keyOnItem(onRight),\n                    onLeft: keyOnItem(onLeft),\n                    onEscape: keyOnItem(onEscape),\n                    focusIn: (container, _keyInfo) => {\n                        layeredState.getPrimary().each((primary) => {\n                            dispatch(container, primary.element, focusItem());\n                        });\n                    }\n                }),\n                // Highlighting is used for highlighting the active menu\n                Highlighting.config({\n                    highlightClass: detail.markers.selectedMenu,\n                    itemClass: detail.markers.menu\n                }),\n                Composing.config({\n                    find: (container) => {\n                        return Highlighting.getHighlighted(container);\n                    }\n                }),\n                Replacing.config({})\n            ]),\n            eventOrder: detail.eventOrder,\n            apis,\n            events\n        };\n    };\n    const collapseItem$1 = constant$1('collapse-item');\n\n    const tieredData = (primary, menus, expansions) => ({\n        primary,\n        menus,\n        expansions\n    });\n    const singleData = (name, menu) => ({\n        primary: name,\n        menus: wrap(name, menu),\n        expansions: {}\n    });\n    const collapseItem = (text) => ({\n        value: generate$6(collapseItem$1()),\n        meta: {\n            text\n        }\n    });\n    const tieredMenu = single({\n        name: 'TieredMenu',\n        configFields: [\n            onStrictKeyboardHandler('onExecute'),\n            onStrictKeyboardHandler('onEscape'),\n            onStrictHandler('onOpenMenu'),\n            onStrictHandler('onOpenSubmenu'),\n            onHandler('onRepositionMenu'),\n            onHandler('onCollapseMenu'),\n            // Ideally, we should validate that this is a valid value, but\n            // this is an number-based enum, so it would just be a number.\n            defaulted('highlightOnOpen', HighlightOnOpen.HighlightMenuAndItem),\n            requiredObjOf('data', [\n                required$1('primary'),\n                required$1('menus'),\n                required$1('expansions')\n            ]),\n            defaulted('fakeFocus', false),\n            onHandler('onHighlightItem'),\n            onHandler('onDehighlightItem'),\n            onHandler('onHover'),\n            tieredMenuMarkers(),\n            required$1('dom'),\n            defaulted('navigateOnHover', true),\n            defaulted('stayInDom', false),\n            field('tmenuBehaviours', [Keying, Highlighting, Composing, Replacing]),\n            defaulted('eventOrder', {})\n        ],\n        apis: {\n            collapseMenu: (apis, tmenu) => {\n                apis.collapseMenu(tmenu);\n            },\n            // This will highlight the primary menu AND an item in the primary menu\n            // Do not use just to set the active menu.\n            highlightPrimary: (apis, tmenu) => {\n                apis.highlightPrimary(tmenu);\n            },\n            repositionMenus: (apis, tmenu) => {\n                apis.repositionMenus(tmenu);\n            }\n        },\n        factory: make$5,\n        extraApis: {\n            tieredData,\n            singleData,\n            collapseItem\n        }\n    });\n\n    const suffix = constant$1('sink');\n    const partType = constant$1(optional({\n        name: suffix(),\n        overrides: constant$1({\n            dom: {\n                tag: 'div'\n            },\n            behaviours: derive$1([\n                Positioning.config({\n                    // TODO: Make an internal sink also be able to be used with relative layouts\n                    useFixed: always\n                })\n            ]),\n            events: derive$2([\n                // Sinks should not let keydown or click propagate\n                cutter(keydown()),\n                cutter(mousedown()),\n                cutter(click())\n            ])\n        })\n    }));\n\n    const schema$i = objOfOnly([\n        defaulted('isExtraPart', never),\n        optionObjOf('fireEventInstead', [\n            defaulted('event', dismissRequested())\n        ])\n    ]);\n    const receivingChannel$1 = (rawSpec) => {\n        const detail = asRawOrDie$1('Dismissal', schema$i, rawSpec);\n        return {\n            [dismissPopups()]: {\n                schema: objOfOnly([\n                    required$1('target')\n                ]),\n                onReceive: (sandbox, data) => {\n                    if (Sandboxing.isOpen(sandbox)) {\n                        const isPart = Sandboxing.isPartOf(sandbox, data.target) || detail.isExtraPart(sandbox, data.target);\n                        if (!isPart) {\n                            detail.fireEventInstead.fold(() => Sandboxing.close(sandbox), (fe) => emit(sandbox, fe.event));\n                        }\n                    }\n                }\n            }\n        };\n    };\n\n    const schema$h = objOfOnly([\n        optionObjOf('fireEventInstead', [\n            defaulted('event', repositionRequested())\n        ]),\n        requiredFunction('doReposition')\n    ]);\n    const receivingChannel = (rawSpec) => {\n        const detail = asRawOrDie$1('Reposition', schema$h, rawSpec);\n        return {\n            [repositionPopups()]: {\n                onReceive: (sandbox) => {\n                    if (Sandboxing.isOpen(sandbox)) {\n                        detail.fireEventInstead.fold(() => detail.doReposition(sandbox), (fe) => emit(sandbox, fe.event));\n                    }\n                }\n            }\n        };\n    };\n\n    const getAnchor = (detail, component) => {\n        const hotspot = detail.getHotspot(component).getOr(component);\n        const type = 'hotspot';\n        const overrides = detail.getAnchorOverrides();\n        return detail.layouts.fold(() => ({ type, hotspot, overrides }), (layouts) => ({ type, hotspot, overrides, layouts }));\n    };\n    const fetch$1 = (detail, mapFetch, component) => {\n        const fetcher = detail.fetch;\n        return fetcher(component).map(mapFetch);\n    };\n    const openF = (detail, mapFetch, anchor, component, sandbox, externals, highlightOnOpen) => {\n        const futureData = fetch$1(detail, mapFetch, component);\n        const getLazySink = getSink(component, detail);\n        // TODO: Make this potentially a single menu also\n        return futureData.map((tdata) => tdata.bind((data) => {\n            const primaryMenu = data.menus[data.primary];\n            Optional.from(primaryMenu).each((menu) => {\n                detail.listRole.each((listRole) => {\n                    menu.role = listRole;\n                });\n            });\n            return Optional.from(tieredMenu.sketch({\n                // Externals are configured by the \"menu\" part. It's called external because it isn't contained\n                // within the DOM descendants of the dropdown. You can configure things like `fakeFocus` here.\n                ...externals.menu(),\n                uid: generate$4(''),\n                data,\n                highlightOnOpen,\n                onOpenMenu: (tmenu, menu) => {\n                    const sink = getLazySink().getOrDie();\n                    Positioning.position(sink, menu, { anchor });\n                    Sandboxing.decloak(sandbox);\n                },\n                onOpenSubmenu: (tmenu, item, submenu) => {\n                    const sink = getLazySink().getOrDie();\n                    Positioning.position(sink, submenu, {\n                        anchor: {\n                            type: 'submenu',\n                            item\n                        }\n                    });\n                    Sandboxing.decloak(sandbox);\n                },\n                onRepositionMenu: (tmenu, primaryMenu, submenuTriggers) => {\n                    const sink = getLazySink().getOrDie();\n                    Positioning.position(sink, primaryMenu, { anchor });\n                    each$1(submenuTriggers, (st) => {\n                        Positioning.position(sink, st.triggeredMenu, {\n                            anchor: { type: 'submenu', item: st.triggeringItem }\n                        });\n                    });\n                },\n                onEscape: () => {\n                    // Focus the triggering component after escaping the menu\n                    Focusing.focus(component);\n                    Sandboxing.close(sandbox);\n                    return Optional.some(true);\n                }\n            }));\n        }));\n    };\n    // onOpenSync is because some operations need to be applied immediately, not wrapped in a future\n    // It can avoid things like flickering due to asynchronous bouncing\n    const open = (detail, mapFetch, hotspot, sandbox, externals, onOpenSync, highlightOnOpen) => {\n        const anchor = getAnchor(detail, hotspot);\n        const processed = openF(detail, mapFetch, anchor, hotspot, sandbox, externals, highlightOnOpen);\n        return processed.map((tdata) => {\n            // If we have data, display a menu. Else, close the menu if it was open\n            tdata.fold(() => {\n                if (Sandboxing.isOpen(sandbox)) {\n                    Sandboxing.close(sandbox);\n                }\n            }, (data) => {\n                Sandboxing.cloak(sandbox);\n                Sandboxing.open(sandbox, data);\n                onOpenSync(sandbox);\n            });\n            return sandbox;\n        });\n    };\n    const close = (detail, mapFetch, component, sandbox, _externals, _onOpenSync, _highlightOnOpen) => {\n        Sandboxing.close(sandbox);\n        return Future.pure(sandbox);\n    };\n    const togglePopup = (detail, mapFetch, hotspot, externals, onOpenSync, highlightOnOpen) => {\n        const sandbox = Coupling.getCoupled(hotspot, 'sandbox');\n        const showing = Sandboxing.isOpen(sandbox);\n        const action = showing ? close : open;\n        return action(detail, mapFetch, hotspot, sandbox, externals, onOpenSync, highlightOnOpen);\n    };\n    const matchWidth = (hotspot, container, useMinWidth) => {\n        const menu = Composing.getCurrent(container).getOr(container);\n        const buttonWidth = get$c(hotspot.element);\n        if (useMinWidth) {\n            set$7(menu.element, 'min-width', buttonWidth + 'px');\n        }\n        else {\n            set$6(menu.element, buttonWidth);\n        }\n    };\n    const getSink = (anyInSystem, sinkDetail) => anyInSystem\n        .getSystem()\n        .getByUid(sinkDetail.uid + '-' + suffix())\n        .map((internalSink) => () => Result.value(internalSink))\n        .getOrThunk(() => sinkDetail.lazySink.fold(() => () => Result.error(new Error('No internal sink is specified, nor could an external sink be found')), (lazySinkFn) => () => lazySinkFn(anyInSystem)));\n    const doRepositionMenus = (sandbox) => {\n        Sandboxing.getState(sandbox).each((tmenu) => {\n            tieredMenu.repositionMenus(tmenu);\n        });\n    };\n    const makeSandbox$1 = (detail, hotspot, extras) => {\n        const ariaControls = manager();\n        const onOpen = (component, menu) => {\n            const anchor = getAnchor(detail, hotspot);\n            ariaControls.link(hotspot.element);\n            if (detail.matchWidth) {\n                matchWidth(anchor.hotspot, menu, detail.useMinWidth);\n            }\n            detail.onOpen(anchor, component, menu);\n            if (extras !== undefined && extras.onOpen !== undefined) {\n                extras.onOpen(component, menu);\n            }\n        };\n        const onClose = (component, menu) => {\n            ariaControls.unlink(hotspot.element);\n            lazySink().getOr(menu).element.dom.dispatchEvent(new window.FocusEvent('focusout'));\n            if (extras !== undefined && extras.onClose !== undefined) {\n                extras.onClose(component, menu);\n            }\n        };\n        const lazySink = getSink(hotspot, detail);\n        return {\n            dom: {\n                tag: 'div',\n                classes: detail.sandboxClasses,\n                // TODO: Add aria-selected attribute\n                attributes: {\n                    id: ariaControls.id,\n                }\n            },\n            behaviours: SketchBehaviours.augment(detail.sandboxBehaviours, [\n                Representing.config({\n                    store: {\n                        mode: 'memory',\n                        initialValue: hotspot\n                    }\n                }),\n                Sandboxing.config({\n                    onOpen,\n                    onClose,\n                    isPartOf: (container, data, queryElem) => {\n                        return isPartOf(data, queryElem) || isPartOf(hotspot, queryElem);\n                    },\n                    getAttachPoint: () => {\n                        return lazySink().getOrDie();\n                    }\n                }),\n                // The Composing of the dropdown here is the the active menu of the TieredMenu\n                // inside the sandbox.\n                Composing.config({\n                    find: (sandbox) => {\n                        return Sandboxing.getState(sandbox).bind((menu) => Composing.getCurrent(menu));\n                    }\n                }),\n                Receiving.config({\n                    channels: {\n                        ...receivingChannel$1({\n                            isExtraPart: never\n                        }),\n                        ...receivingChannel({\n                            doReposition: doRepositionMenus\n                        })\n                    }\n                })\n            ])\n        };\n    };\n    const repositionMenus = (comp) => {\n        const sandbox = Coupling.getCoupled(comp, 'sandbox');\n        doRepositionMenus(sandbox);\n    };\n\n    // TODO: Roll this back into Fields at some point\n    // Unfortunately there appears to be a cyclical dependency or something that's preventing it, but for now this will do as it's home\n    const sandboxFields = () => [\n        defaulted('sandboxClasses', []),\n        SketchBehaviours.field('sandboxBehaviours', [Composing, Receiving, Sandboxing, Representing])\n    ];\n\n    const schema$g = constant$1([\n        required$1('dom'),\n        required$1('fetch'),\n        onHandler('onOpen'),\n        onKeyboardHandler('onExecute'),\n        defaulted('getHotspot', Optional.some),\n        defaulted('getAnchorOverrides', constant$1({})),\n        schema$o(),\n        field('dropdownBehaviours', [Toggling, Coupling, Keying, Focusing]),\n        required$1('toggleClass'),\n        defaulted('eventOrder', {}),\n        option$3('lazySink'),\n        defaulted('matchWidth', false),\n        defaulted('useMinWidth', false),\n        option$3('role'),\n        option$3('listRole'),\n    ].concat(sandboxFields()));\n    const parts$d = constant$1([\n        external$1({\n            schema: [\n                tieredMenuMarkers(),\n                // Defining a defaulted field isn't necessary when dealing with\n                // external parts, because the post-boulder part spec is not passed\n                // through to any of these functions (defaults, overrides etc.). So all\n                // this does is make it a bit clearer what you should expect, but remember\n                // that the default value here is irrelevant!\n                defaulted('fakeFocus', false)\n            ],\n            name: 'menu',\n            defaults: (detail) => {\n                return {\n                    onExecute: detail.onExecute\n                };\n            }\n        }),\n        partType()\n    ]);\n\n    const factory$l = (detail, components, _spec, externals) => {\n        const lookupAttr = (attr) => get$h(detail.dom, 'attributes').bind((attrs) => get$h(attrs, attr));\n        const switchToMenu = (sandbox) => {\n            Sandboxing.getState(sandbox).each((tmenu) => {\n                // This will highlight the menu AND the item\n                tieredMenu.highlightPrimary(tmenu);\n            });\n        };\n        const togglePopup$1 = (dropdownComp, onOpenSync, highlightOnOpen) => {\n            return togglePopup(detail, identity, dropdownComp, externals, onOpenSync, highlightOnOpen);\n        };\n        const action = (component) => {\n            const onOpenSync = switchToMenu;\n            togglePopup$1(component, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n        };\n        const apis = {\n            expand: (comp) => {\n                if (!Toggling.isOn(comp)) {\n                    togglePopup$1(comp, noop, HighlightOnOpen.HighlightNone).get(noop);\n                }\n            },\n            open: (comp) => {\n                if (!Toggling.isOn(comp)) {\n                    togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n                }\n            },\n            refetch: (comp) => {\n                // Generally, the triggers for a refetch should make it so that the\n                // sandbox has been created, but it's not guaranteed, so we still handle the\n                // case where there isn't yet a sandbox.\n                const optSandbox = Coupling.getExistingCoupled(comp, 'sandbox');\n                return optSandbox.fold(() => {\n                    // If we don't have a sandbox, refetch is the same as open,\n                    // except we return when it is completed.\n                    return togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem)\n                        .map(noop);\n                }, (sandboxComp) => {\n                    // We are intentionally not preserving the selected items when\n                    // triggering a refetch, and will just highlight the first item.\n                    // Note: this will mean that submenus will close. If we want to start\n                    // preserving the selected items, we can't rely on the components themselves,\n                    // so we'd need to use the item and menu values through Representing.\n                    // However, be aware that alloy menus and items often have randomised values,\n                    // so these might not be reliable either.\n                    // NOTE: We use DropdownUtils.open directly, because we want it to 'open',\n                    // even if it's already open. If we just used apis.open, it wouldn't do\n                    // anything if it was already open, which means we wouldn't see the new\n                    // refetched data.\n                    return open(detail, identity, comp, \n                    // NOTE: The TieredMenu is inside the sandbox. They aren't the same component.\n                    sandboxComp, externals, noop, HighlightOnOpen.HighlightMenuAndItem).map(noop);\n                });\n            },\n            isOpen: Toggling.isOn,\n            close: (comp) => {\n                if (Toggling.isOn(comp)) {\n                    togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n                }\n            },\n            // If we are open, refresh the menus in the tiered menu system\n            repositionMenus: (comp) => {\n                if (Toggling.isOn(comp)) {\n                    repositionMenus(comp);\n                }\n            }\n        };\n        const triggerExecute = (comp, _se) => {\n            emitExecute(comp);\n            return Optional.some(true);\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            behaviours: augment(detail.dropdownBehaviours, [\n                Toggling.config({\n                    toggleClass: detail.toggleClass,\n                    aria: {\n                        mode: 'expanded'\n                    }\n                }),\n                Coupling.config({\n                    others: {\n                        sandbox: (hotspot) => {\n                            return makeSandbox$1(detail, hotspot, {\n                                onOpen: () => Toggling.on(hotspot),\n                                onClose: () => Toggling.off(hotspot)\n                            });\n                        }\n                    }\n                }),\n                Keying.config({\n                    mode: 'special',\n                    onSpace: triggerExecute,\n                    onEnter: triggerExecute,\n                    onDown: (comp, _se) => {\n                        if (Dropdown.isOpen(comp)) {\n                            const sandbox = Coupling.getCoupled(comp, 'sandbox');\n                            switchToMenu(sandbox);\n                        }\n                        else {\n                            Dropdown.open(comp);\n                        }\n                        return Optional.some(true);\n                    },\n                    onEscape: (comp, _se) => {\n                        if (Dropdown.isOpen(comp)) {\n                            Dropdown.close(comp);\n                            return Optional.some(true);\n                        }\n                        else {\n                            return Optional.none();\n                        }\n                    }\n                }),\n                Focusing.config({})\n            ]),\n            events: events(Optional.some(action)),\n            eventOrder: {\n                ...detail.eventOrder,\n                // Order, the button state is toggled first, so assumed !selected means close.\n                [execute$5()]: ['disabling', 'toggling', 'alloy.base.behaviour']\n            },\n            apis,\n            domModification: {\n                attributes: {\n                    'aria-haspopup': detail.listRole.getOr('true'),\n                    ...detail.role.fold(() => ({}), (role) => ({ role })),\n                    ...detail.dom.tag === 'button' ? { type: lookupAttr('type').getOr('button') } : {}\n                }\n            }\n        };\n    };\n    const Dropdown = composite({\n        name: 'Dropdown',\n        configFields: schema$g(),\n        partFields: parts$d(),\n        factory: factory$l,\n        apis: {\n            open: (apis, comp) => apis.open(comp),\n            refetch: (apis, comp) => apis.refetch(comp),\n            expand: (apis, comp) => apis.expand(comp),\n            close: (apis, comp) => apis.close(comp),\n            isOpen: (apis, comp) => apis.isOpen(comp),\n            repositionMenus: (apis, comp) => apis.repositionMenus(comp)\n        }\n    });\n\n    const owner$1 = 'form';\n    const schema$f = [\n        field('formBehaviours', [Representing])\n    ];\n    const getPartName$1 = (name) => '<alloy.field.' + name + '>';\n    const sketch$2 = (fSpec) => {\n        const parts = (() => {\n            const record = [];\n            const field = (name, config) => {\n                record.push(name);\n                return generateOne$1(owner$1, getPartName$1(name), config);\n            };\n            return {\n                field,\n                record: constant$1(record)\n            };\n        })();\n        const spec = fSpec(parts);\n        const partNames = parts.record();\n        // Unlike other sketches, a form does not know its parts in advance (as they represent each field\n        // in a particular form). Therefore, it needs to calculate the part names on the fly\n        const fieldParts = map$2(partNames, (n) => required({ name: n, pname: getPartName$1(n) }));\n        return composite$1(owner$1, schema$f, fieldParts, make$4, spec);\n    };\n    const toResult = (o, e) => o.fold(() => Result.error(e), Result.value);\n    const make$4 = (detail, components) => ({\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        // Form has an assumption that every field must have composing, and that the composed element has representing.\n        behaviours: augment(detail.formBehaviours, [\n            Representing.config({\n                store: {\n                    mode: 'manual',\n                    getValue: (form) => {\n                        const resPs = getAllParts(form, detail);\n                        return map$1(resPs, (resPThunk, pName) => resPThunk().bind((v) => {\n                            const opt = Composing.getCurrent(v);\n                            return toResult(opt, new Error(`Cannot find a current component to extract the value from for form part '${pName}': ` + element(v.element)));\n                        }).map(Representing.getValue));\n                    },\n                    setValue: (form, values) => {\n                        each(values, (newValue, key) => {\n                            getPart(form, detail, key).each((wrapper) => {\n                                Composing.getCurrent(wrapper).each((field) => {\n                                    Representing.setValue(field, newValue);\n                                });\n                            });\n                        });\n                    }\n                }\n            })\n        ]),\n        apis: {\n            getField: (form, key) => {\n                // Returns an Optional (not a result);\n                return getPart(form, detail, key).bind(Composing.getCurrent);\n            }\n        }\n    });\n    const Form = {\n        getField: makeApi((apis, component, key) => apis.getField(component, key)),\n        sketch: sketch$2\n    };\n\n    const schema$e = constant$1([\n        required$1('dom'),\n        defaulted('shell', true),\n        field('toolbarBehaviours', [Replacing])\n    ]);\n    // TODO: Dupe with Toolbar\n    const enhanceGroups = () => ({\n        behaviours: derive$1([\n            Replacing.config({})\n        ])\n    });\n    const parts$c = constant$1([\n        // Note, is the container for putting all the groups in, not a group itself.\n        optional({\n            name: 'groups',\n            overrides: enhanceGroups\n        })\n    ]);\n\n    const factory$k = (detail, components, _spec, _externals) => {\n        const setGroups = (toolbar, groups) => {\n            getGroupContainer(toolbar).fold(() => {\n                // check that the group container existed. It may not have if the components\n                // did not list anything, and shell was false.\n                // eslint-disable-next-line no-console\n                console.error('Toolbar was defined to not be a shell, but no groups container was specified in components');\n                throw new Error('Toolbar was defined to not be a shell, but no groups container was specified in components');\n            }, (container) => {\n                Replacing.set(container, groups);\n            });\n        };\n        const getGroupContainer = (component) => detail.shell ? Optional.some(component) : getPart(component, detail, 'groups');\n        // In shell mode, the group overrides need to be added to the main container, and there can be no children\n        const extra = detail.shell ? { behaviours: [Replacing.config({})], components: [] } : { behaviours: [], components };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components: extra.components,\n            behaviours: augment(detail.toolbarBehaviours, extra.behaviours),\n            apis: {\n                setGroups,\n                refresh: noop\n            },\n            domModification: {\n                attributes: {\n                    role: 'group'\n                }\n            }\n        };\n    };\n    const Toolbar = composite({\n        name: 'Toolbar',\n        configFields: schema$e(),\n        partFields: parts$c(),\n        factory: factory$k,\n        apis: {\n            setGroups: (apis, toolbar, groups) => {\n                apis.setGroups(toolbar, groups);\n            }\n        }\n    });\n\n    const schema$d = constant$1([\n        markers$1(['toggledClass']),\n        required$1('lazySink'),\n        requiredFunction('fetch'),\n        optionFunction('getBounds'),\n        optionObjOf('fireDismissalEventInstead', [\n            defaulted('event', dismissRequested())\n        ]),\n        schema$o(),\n        onHandler('onToggled'),\n    ]);\n    const parts$b = constant$1([\n        external$1({\n            name: 'button',\n            overrides: (detail) => ({\n                dom: {\n                    attributes: {\n                        'aria-haspopup': 'true'\n                    }\n                },\n                buttonBehaviours: derive$1([\n                    Toggling.config({\n                        toggleClass: detail.markers.toggledClass,\n                        aria: {\n                            mode: 'expanded'\n                        },\n                        toggleOnExecute: false,\n                        /**\n                         * For FloatingToolbars, we can hook up our `onToggled` handler directly to the Toggling\n                         * because we don't have to worry about any animations.\n                         *\n                         * Unfortunately, for SlidingToolbars, Toggling is more directly hooked into the animation for growing,\n                         * so to have an event `onToggled` that doesn't care about the animation, we can't just hook into the Toggling config.\n                         */\n                        onToggled: detail.onToggled\n                    })\n                ])\n            })\n        }),\n        external$1({\n            factory: Toolbar,\n            schema: schema$e(),\n            name: 'toolbar',\n            overrides: (detail) => {\n                return {\n                    toolbarBehaviours: derive$1([\n                        Keying.config({\n                            mode: 'cyclic',\n                            onEscape: (comp) => {\n                                getPart(comp, detail, 'button').each(Focusing.focus);\n                                // Don't return true here, as we need to allow the sandbox to handle the escape to close the overflow\n                                return Optional.none();\n                            }\n                        })\n                    ])\n                };\n            }\n        })\n    ]);\n\n    const shouldSkipFocus = value$2();\n    const toggleWithoutFocusing = (button, externals) => {\n        shouldSkipFocus.set(true);\n        toggle$1(button, externals);\n        shouldSkipFocus.clear();\n    };\n    const toggle$1 = (button, externals) => {\n        const toolbarSandbox = Coupling.getCoupled(button, 'toolbarSandbox');\n        if (Sandboxing.isOpen(toolbarSandbox)) {\n            Sandboxing.close(toolbarSandbox);\n        }\n        else {\n            Sandboxing.open(toolbarSandbox, externals.toolbar());\n        }\n    };\n    const position = (button, toolbar, detail, layouts) => {\n        const bounds = detail.getBounds.map((bounder) => bounder());\n        const sink = detail.lazySink(button).getOrDie();\n        Positioning.positionWithinBounds(sink, toolbar, {\n            anchor: {\n                type: 'hotspot',\n                hotspot: button,\n                layouts,\n                overrides: {\n                    maxWidthFunction: expandable()\n                }\n            }\n        }, bounds);\n    };\n    const setGroups$1 = (button, toolbar, detail, layouts, groups) => {\n        Toolbar.setGroups(toolbar, groups);\n        position(button, toolbar, detail, layouts);\n        Toggling.on(button);\n    };\n    const makeSandbox = (button, spec, detail) => {\n        const ariaControls = manager();\n        const onOpen = (sandbox, toolbar) => {\n            const skipFocus = shouldSkipFocus.get().getOr(false);\n            detail.fetch().get((groups) => {\n                setGroups$1(button, toolbar, detail, spec.layouts, groups);\n                ariaControls.link(button.element);\n                if (!skipFocus) {\n                    Keying.focusIn(toolbar);\n                }\n            });\n        };\n        const onClose = () => {\n            // Toggle and focus the button\n            Toggling.off(button);\n            if (!shouldSkipFocus.get().getOr(false)) {\n                Focusing.focus(button);\n            }\n            ariaControls.unlink(button.element);\n        };\n        return {\n            dom: {\n                tag: 'div',\n                attributes: {\n                    id: ariaControls.id\n                }\n            },\n            behaviours: derive$1([\n                Keying.config({\n                    mode: 'special',\n                    onEscape: (comp) => {\n                        Sandboxing.close(comp);\n                        return Optional.some(true);\n                    }\n                }),\n                Sandboxing.config({\n                    onOpen,\n                    onClose,\n                    isPartOf: (container, data, queryElem) => {\n                        return isPartOf(data, queryElem) || isPartOf(button, queryElem);\n                    },\n                    getAttachPoint: () => {\n                        return detail.lazySink(button).getOrDie();\n                    }\n                }),\n                Receiving.config({\n                    channels: {\n                        ...receivingChannel$1({\n                            isExtraPart: never,\n                            ...detail.fireDismissalEventInstead.map((fe) => ({ fireEventInstead: { event: fe.event } })).getOr({})\n                        }),\n                        ...receivingChannel({\n                            doReposition: () => {\n                                Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each((toolbar) => {\n                                    position(button, toolbar, detail, spec.layouts);\n                                });\n                            }\n                        })\n                    }\n                })\n            ])\n        };\n    };\n    const factory$j = (detail, components, spec, externals) => ({\n        ...Button.sketch({\n            ...externals.button(),\n            action: (button) => {\n                toggle$1(button, externals);\n            },\n            buttonBehaviours: SketchBehaviours.augment({ dump: externals.button().buttonBehaviours }, [\n                Coupling.config({\n                    others: {\n                        toolbarSandbox: (button) => {\n                            return makeSandbox(button, spec, detail);\n                        }\n                    }\n                })\n            ])\n        }),\n        apis: {\n            setGroups: (button, groups) => {\n                Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each((toolbar) => {\n                    setGroups$1(button, toolbar, detail, spec.layouts, groups);\n                });\n            },\n            reposition: (button) => {\n                Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each((toolbar) => {\n                    position(button, toolbar, detail, spec.layouts);\n                });\n            },\n            toggle: (button) => {\n                toggle$1(button, externals);\n            },\n            toggleWithoutFocusing: (button) => {\n                toggleWithoutFocusing(button, externals);\n            },\n            getToolbar: (button) => {\n                return Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox'));\n            },\n            isOpen: (button) => {\n                return Sandboxing.isOpen(Coupling.getCoupled(button, 'toolbarSandbox'));\n            }\n        }\n    });\n    const FloatingToolbarButton = composite({\n        name: 'FloatingToolbarButton',\n        factory: factory$j,\n        configFields: schema$d(),\n        partFields: parts$b(),\n        apis: {\n            setGroups: (apis, button, groups) => {\n                apis.setGroups(button, groups);\n            },\n            reposition: (apis, button) => {\n                apis.reposition(button);\n            },\n            toggle: (apis, button) => {\n                apis.toggle(button);\n            },\n            toggleWithoutFocusing: (apis, button) => {\n                apis.toggleWithoutFocusing(button);\n            },\n            getToolbar: (apis, button) => apis.getToolbar(button),\n            isOpen: (apis, button) => apis.isOpen(button)\n        }\n    });\n\n    const schema$c = constant$1([\n        defaulted('prefix', 'form-field'),\n        field('fieldBehaviours', [Composing, Representing])\n    ]);\n    const parts$a = constant$1([\n        optional({\n            schema: [required$1('dom')],\n            name: 'label'\n        }),\n        optional({\n            factory: {\n                sketch: (spec) => {\n                    return {\n                        uid: spec.uid,\n                        dom: {\n                            tag: 'span',\n                            styles: {\n                                display: 'none'\n                            },\n                            attributes: {\n                                'aria-hidden': 'true'\n                            },\n                            innerHtml: spec.text\n                        }\n                    };\n                }\n            },\n            schema: [required$1('text')],\n            name: 'aria-descriptor'\n        }),\n        required({\n            factory: {\n                sketch: (spec) => {\n                    const excludeFactory = exclude(spec, ['factory']);\n                    return spec.factory.sketch(excludeFactory);\n                }\n            },\n            schema: [required$1('factory')],\n            name: 'field'\n        })\n    ]);\n\n    const factory$i = (detail, components, _spec, _externals) => {\n        const behaviours = augment(detail.fieldBehaviours, [\n            Composing.config({\n                find: (container) => {\n                    return getPart(container, detail, 'field');\n                }\n            }),\n            Representing.config({\n                store: {\n                    mode: 'manual',\n                    getValue: (field) => {\n                        return Composing.getCurrent(field).bind(Representing.getValue);\n                    },\n                    setValue: (field, value) => {\n                        Composing.getCurrent(field).each((current) => {\n                            Representing.setValue(current, value);\n                        });\n                    }\n                }\n            })\n        ]);\n        const events = derive$2([\n            // Used to be systemInit\n            runOnAttached((component, _simulatedEvent) => {\n                const ps = getParts(component, detail, ['label', 'field', 'aria-descriptor']);\n                ps.field().each((field) => {\n                    const id = generate$6(detail.prefix);\n                    ps.label().each((label) => {\n                        // TODO: Find a nicer way of doing this.\n                        set$9(label.element, 'for', id);\n                        set$9(field.element, 'id', id);\n                    });\n                    ps['aria-descriptor']().each((descriptor) => {\n                        const descriptorId = generate$6(detail.prefix);\n                        set$9(descriptor.element, 'id', descriptorId);\n                        set$9(field.element, 'aria-describedby', descriptorId);\n                    });\n                });\n            })\n        ]);\n        const apis = {\n            getField: (container) => getPart(container, detail, 'field'),\n            getLabel: (container) => \n            // TODO: Use constants for part names\n            getPart(container, detail, 'label')\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            behaviours,\n            events,\n            apis\n        };\n    };\n    const FormField = composite({\n        name: 'FormField',\n        configFields: schema$c(),\n        partFields: parts$a(),\n        factory: factory$i,\n        apis: {\n            getField: (apis, comp) => apis.getField(comp),\n            getLabel: (apis, comp) => apis.getLabel(comp)\n        }\n    });\n\n    const schema$b = constant$1([\n        defaulted('field1Name', 'field1'),\n        defaulted('field2Name', 'field2'),\n        onStrictHandler('onLockedChange'),\n        markers$1(['lockClass']),\n        defaulted('locked', false),\n        SketchBehaviours.field('coupledFieldBehaviours', [Composing, Representing]),\n        defaultedFunction('onInput', noop)\n    ]);\n    const getField = (comp, detail, partName) => getPart(comp, detail, partName).bind(Composing.getCurrent);\n    const coupledPart = (selfName, otherName) => required({\n        factory: FormField,\n        name: selfName,\n        overrides: (detail) => {\n            return {\n                fieldBehaviours: derive$1([\n                    config('coupled-input-behaviour', [\n                        run$1(input(), (me) => {\n                            getField(me, detail, otherName).each((other) => {\n                                getPart(me, detail, 'lock').each((lock) => {\n                                    // TODO IMPROVEMENT: Allow locker to fire onLockedChange if it is turned on after being off.\n                                    if (Toggling.isOn(lock)) {\n                                        detail.onLockedChange(me, other, lock);\n                                    }\n                                    detail.onInput(me);\n                                });\n                            });\n                        })\n                    ])\n                ])\n            };\n        }\n    });\n    const parts$9 = constant$1([\n        coupledPart('field1', 'field2'),\n        coupledPart('field2', 'field1'),\n        required({\n            factory: Button,\n            schema: [\n                required$1('dom')\n            ],\n            name: 'lock',\n            overrides: (detail) => {\n                return {\n                    buttonBehaviours: derive$1([\n                        Toggling.config({\n                            selected: detail.locked,\n                            toggleClass: detail.markers.lockClass,\n                            aria: {\n                                mode: 'pressed'\n                            }\n                        })\n                    ])\n                };\n            }\n        })\n    ]);\n\n    const factory$h = (detail, components, _spec, _externals) => ({\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: SketchBehaviours.augment(detail.coupledFieldBehaviours, [\n            Composing.config({ find: Optional.some }),\n            Representing.config({\n                store: {\n                    mode: 'manual',\n                    getValue: (comp) => {\n                        const parts = getPartsOrDie(comp, detail, ['field1', 'field2']);\n                        return {\n                            [detail.field1Name]: Representing.getValue(parts.field1()),\n                            [detail.field2Name]: Representing.getValue(parts.field2())\n                        };\n                    },\n                    setValue: (comp, value) => {\n                        const parts = getPartsOrDie(comp, detail, ['field1', 'field2']);\n                        if (hasNonNullableKey(value, detail.field1Name)) {\n                            Representing.setValue(parts.field1(), value[detail.field1Name]);\n                        }\n                        if (hasNonNullableKey(value, detail.field2Name)) {\n                            Representing.setValue(parts.field2(), value[detail.field2Name]);\n                        }\n                    }\n                }\n            })\n        ]),\n        apis: {\n            getField1: (component) => getPart(component, detail, 'field1'),\n            getField2: (component) => getPart(component, detail, 'field2'),\n            getLock: (component) => getPart(component, detail, 'lock')\n        }\n    });\n    const FormCoupledInputs = composite({\n        name: 'FormCoupledInputs',\n        configFields: schema$b(),\n        partFields: parts$9(),\n        factory: factory$h,\n        apis: {\n            getField1: (apis, component) => apis.getField1(component),\n            getField2: (apis, component) => apis.getField2(component),\n            getLock: (apis, component) => apis.getLock(component)\n        }\n    });\n\n    const factory$g = (detail, _spec) => {\n        const options = map$2(detail.options, (option) => ({\n            dom: {\n                tag: 'option',\n                value: option.value,\n                innerHtml: option.text\n            }\n        }));\n        const initialValues = detail.data.map((v) => wrap('initialValue', v)).getOr({});\n        return {\n            uid: detail.uid,\n            dom: {\n                tag: 'select',\n                classes: detail.selectClasses,\n                attributes: detail.selectAttributes\n            },\n            components: options,\n            behaviours: augment(detail.selectBehaviours, [\n                Focusing.config({}),\n                Representing.config({\n                    store: {\n                        mode: 'manual',\n                        getValue: (select) => {\n                            return get$5(select.element);\n                        },\n                        setValue: (select, newValue) => {\n                            const firstOption = head(detail.options);\n                            // This is probably generically useful ... may become a part of Representing.\n                            const found = find$5(detail.options, (opt) => opt.value === newValue);\n                            if (found.isSome()) {\n                                set$4(select.element, newValue);\n                            }\n                            else if (select.element.dom.selectedIndex === -1 && newValue === '') {\n                                /*\n                                  Sometimes after a redial alloy tries to set a new value, but if no value has been set in the data this used to fail. Now we set the value to the first option in the list if:\n                                    The index is out of range, indicating that the list of options have changed, or was never set.\n                                    The user is not trying to set a specific value (which would be user error)\n                                */\n                                firstOption.each((value) => set$4(select.element, value.value));\n                            }\n                        },\n                        ...initialValues\n                    }\n                })\n            ])\n        };\n    };\n    const HtmlSelect = single({\n        name: 'HtmlSelect',\n        configFields: [\n            required$1('options'),\n            field('selectBehaviours', [Focusing, Representing]),\n            defaulted('selectClasses', []),\n            defaulted('selectAttributes', {}),\n            option$3('data')\n        ],\n        factory: factory$g\n    });\n\n    const makeMenu = (detail, menuSandbox, placementSpec, menuSpec, getBounds) => {\n        const lazySink = () => detail.lazySink(menuSandbox);\n        const layouts = menuSpec.type === 'horizontal' ? { layouts: {\n                onLtr: () => belowOrAbove(),\n                onRtl: () => belowOrAboveRtl()\n            } } : {};\n        const isFirstTierSubmenu = (triggeringPaths) => triggeringPaths.length === 2; // primary and first tier menu === 2 items\n        const getSubmenuLayouts = (triggeringPaths) => isFirstTierSubmenu(triggeringPaths) ? layouts : {};\n        return tieredMenu.sketch({\n            dom: {\n                tag: 'div'\n            },\n            data: menuSpec.data,\n            markers: menuSpec.menu.markers,\n            highlightOnOpen: menuSpec.menu.highlightOnOpen,\n            fakeFocus: menuSpec.menu.fakeFocus,\n            onEscape: () => {\n                // Note for the future: this should possibly also call detail.onHide\n                Sandboxing.close(menuSandbox);\n                detail.onEscape.map((handler) => handler(menuSandbox));\n                return Optional.some(true);\n            },\n            onExecute: () => {\n                return Optional.some(true);\n            },\n            onOpenMenu: (tmenu, menu) => {\n                Positioning.positionWithinBounds(lazySink().getOrDie(), menu, placementSpec, getBounds());\n            },\n            onOpenSubmenu: (tmenu, item, submenu, triggeringPaths) => {\n                const sink = lazySink().getOrDie();\n                Positioning.position(sink, submenu, {\n                    anchor: {\n                        type: 'submenu',\n                        item,\n                        ...getSubmenuLayouts(triggeringPaths)\n                    }\n                });\n            },\n            onRepositionMenu: (tmenu, primaryMenu, submenuTriggers) => {\n                const sink = lazySink().getOrDie();\n                Positioning.positionWithinBounds(sink, primaryMenu, placementSpec, getBounds());\n                each$1(submenuTriggers, (st) => {\n                    const submenuLayouts = getSubmenuLayouts(st.triggeringPath);\n                    Positioning.position(sink, st.triggeredMenu, {\n                        anchor: { type: 'submenu', item: st.triggeringItem, ...submenuLayouts }\n                    });\n                });\n            }\n        });\n    };\n    const factory$f = (detail, spec) => {\n        const isPartOfRelated = (sandbox, queryElem) => {\n            const related = detail.getRelated(sandbox);\n            return related.exists((rel) => isPartOf(rel, queryElem));\n        };\n        const setContent = (sandbox, thing) => {\n            // Keep the same location, and just change the content.\n            Sandboxing.setContent(sandbox, thing);\n        };\n        const showAt = (sandbox, thing, placementSpec) => {\n            const getBounds = Optional.none;\n            showWithinBounds(sandbox, thing, placementSpec, getBounds);\n        };\n        const showWithinBounds = (sandbox, thing, placementSpec, getBounds) => {\n            const sink = detail.lazySink(sandbox).getOrDie();\n            Sandboxing.openWhileCloaked(sandbox, thing, () => Positioning.positionWithinBounds(sink, sandbox, placementSpec, getBounds()));\n            Representing.setValue(sandbox, Optional.some({\n                mode: 'position',\n                config: placementSpec,\n                getBounds\n            }));\n        };\n        // TODO AP-191 write a test for showMenuAt\n        const showMenuAt = (sandbox, placementSpec, menuSpec) => {\n            showMenuWithinBounds(sandbox, placementSpec, menuSpec, Optional.none);\n        };\n        const showMenuWithinBounds = (sandbox, placementSpec, menuSpec, getBounds) => {\n            const menu = makeMenu(detail, sandbox, placementSpec, menuSpec, getBounds);\n            Sandboxing.open(sandbox, menu);\n            Representing.setValue(sandbox, Optional.some({\n                mode: 'menu',\n                menu\n            }));\n        };\n        const hide = (sandbox) => {\n            if (Sandboxing.isOpen(sandbox)) {\n                Representing.setValue(sandbox, Optional.none());\n                Sandboxing.close(sandbox);\n            }\n        };\n        const getContent = (sandbox) => Sandboxing.getState(sandbox);\n        const reposition = (sandbox) => {\n            if (Sandboxing.isOpen(sandbox)) {\n                Representing.getValue(sandbox).each((state) => {\n                    switch (state.mode) {\n                        case 'menu':\n                            Sandboxing.getState(sandbox).each(tieredMenu.repositionMenus);\n                            break;\n                        case 'position':\n                            const sink = detail.lazySink(sandbox).getOrDie();\n                            Positioning.positionWithinBounds(sink, sandbox, state.config, state.getBounds());\n                            break;\n                    }\n                });\n            }\n        };\n        const apis = {\n            setContent,\n            showAt,\n            showWithinBounds,\n            showMenuAt,\n            showMenuWithinBounds,\n            hide,\n            getContent,\n            reposition,\n            isOpen: Sandboxing.isOpen\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            behaviours: augment(detail.inlineBehaviours, [\n                Sandboxing.config({\n                    isPartOf: (sandbox, data, queryElem) => {\n                        return isPartOf(data, queryElem) || isPartOfRelated(sandbox, queryElem);\n                    },\n                    getAttachPoint: (sandbox) => {\n                        return detail.lazySink(sandbox).getOrDie();\n                    },\n                    onOpen: (sandbox) => {\n                        detail.onShow(sandbox);\n                    },\n                    onClose: (sandbox) => {\n                        detail.onHide(sandbox);\n                    }\n                }),\n                Representing.config({\n                    store: {\n                        mode: 'memory',\n                        initialValue: Optional.none()\n                    }\n                }),\n                Receiving.config({\n                    channels: {\n                        ...receivingChannel$1({\n                            isExtraPart: spec.isExtraPart,\n                            ...detail.fireDismissalEventInstead.map((fe) => ({ fireEventInstead: { event: fe.event } })).getOr({})\n                        }),\n                        ...receivingChannel({\n                            ...detail.fireRepositionEventInstead.map((fe) => ({ fireEventInstead: { event: fe.event } })).getOr({}),\n                            doReposition: reposition\n                        })\n                    }\n                })\n            ]),\n            eventOrder: detail.eventOrder,\n            apis\n        };\n    };\n    const InlineView = single({\n        name: 'InlineView',\n        configFields: [\n            required$1('lazySink'),\n            onHandler('onShow'),\n            onHandler('onHide'),\n            optionFunction('onEscape'),\n            field('inlineBehaviours', [Sandboxing, Representing, Receiving]),\n            optionObjOf('fireDismissalEventInstead', [\n                defaulted('event', dismissRequested())\n            ]),\n            optionObjOf('fireRepositionEventInstead', [\n                defaulted('event', repositionRequested())\n            ]),\n            defaulted('getRelated', Optional.none),\n            defaulted('isExtraPart', never),\n            defaulted('eventOrder', Optional.none)\n        ],\n        factory: factory$f,\n        apis: {\n            showAt: (apis, component, anchor, thing) => {\n                apis.showAt(component, anchor, thing);\n            },\n            showWithinBounds: (apis, component, anchor, thing, bounds) => {\n                apis.showWithinBounds(component, anchor, thing, bounds);\n            },\n            showMenuAt: (apis, component, anchor, menuSpec) => {\n                apis.showMenuAt(component, anchor, menuSpec);\n            },\n            showMenuWithinBounds: (apis, component, anchor, menuSpec, bounds) => {\n                apis.showMenuWithinBounds(component, anchor, menuSpec, bounds);\n            },\n            hide: (apis, component) => {\n                apis.hide(component);\n            },\n            isOpen: (apis, component) => apis.isOpen(component),\n            getContent: (apis, component) => apis.getContent(component),\n            setContent: (apis, component, thing) => {\n                apis.setContent(component, thing);\n            },\n            reposition: (apis, component) => {\n                apis.reposition(component);\n            }\n        }\n    });\n\n    const schema$a = constant$1([\n        defaultedString('type', 'text'),\n        option$3('data'),\n        defaulted('inputAttributes', {}),\n        defaulted('inputStyles', {}),\n        defaulted('tag', 'input'),\n        defaulted('inputClasses', []),\n        onHandler('onSetValue'),\n        defaultedFunction('fromInputValue', identity),\n        defaultedFunction('toInputValue', identity),\n        defaulted('styles', {}),\n        defaulted('eventOrder', {}),\n        field('inputBehaviours', [Representing, Focusing]),\n        defaulted('selectOnFocus', true)\n    ]);\n    const focusBehaviours = (detail) => derive$1([\n        Focusing.config({\n            onFocus: !detail.selectOnFocus ? noop : (component) => {\n                const input = component.element;\n                const value = get$5(input);\n                // TODO: There are probably more types that can't handle setSelectionRange\n                if (detail.type !== 'range') {\n                    input.dom.setSelectionRange(0, value.length);\n                }\n            }\n        })\n    ]);\n    const behaviours = (detail) => ({\n        ...focusBehaviours(detail),\n        ...augment(detail.inputBehaviours, [\n            Representing.config({\n                store: {\n                    mode: 'manual',\n                    // Propagating its Optional\n                    ...detail.data.map((data) => ({ initialValue: data })).getOr({}),\n                    getValue: (input) => {\n                        return detail.fromInputValue(get$5(input.element));\n                    },\n                    setValue: (input, data) => {\n                        const current = get$5(input.element);\n                        // Only set it if it has changed ... otherwise the cursor goes to the end.\n                        if (current !== data) {\n                            set$4(input.element, detail.toInputValue(data));\n                        }\n                    }\n                },\n                onSetValue: detail.onSetValue\n            })\n        ])\n    });\n    const dom$1 = (detail) => ({\n        tag: detail.tag,\n        attributes: {\n            type: detail.type,\n            ...detail.inputAttributes\n        },\n        styles: detail.inputStyles,\n        classes: detail.inputClasses\n    });\n\n    const factory$e = (detail, _spec) => ({\n        uid: detail.uid,\n        dom: dom$1(detail),\n        // No children.\n        components: [],\n        behaviours: behaviours(detail),\n        eventOrder: detail.eventOrder\n    });\n    const Input = single({\n        name: 'Input',\n        configFields: schema$a(),\n        factory: factory$e\n    });\n\n    const parts$8 = generate$5(owner$2(), parts$f());\n\n    const labelledBy = (labelledElement, labelElement) => {\n        const labelId = getOpt(labelledElement, 'id')\n            .fold(() => {\n            const id = generate$6('dialog-label');\n            set$9(labelElement, 'id', id);\n            return id;\n        }, identity);\n        set$9(labelledElement, 'aria-labelledby', labelId);\n    };\n\n    const schema$9 = constant$1([\n        required$1('lazySink'),\n        option$3('dragBlockClass'),\n        defaultedFunction('getBounds', win),\n        defaulted('useTabstopAt', always),\n        defaulted('firstTabstop', 0),\n        defaulted('eventOrder', {}),\n        field('modalBehaviours', [Keying]),\n        onKeyboardHandler('onExecute'),\n        onStrictKeyboardHandler('onEscape')\n    ]);\n    const basic = { sketch: identity };\n    const parts$7 = constant$1([\n        optional({\n            name: 'draghandle',\n            overrides: (detail, spec) => {\n                return {\n                    behaviours: derive$1([\n                        Dragging.config({\n                            mode: 'mouse',\n                            getTarget: (handle) => {\n                                return ancestor$1(handle, '[role=\"dialog\"]').getOr(handle);\n                            },\n                            blockerClass: detail.dragBlockClass.getOrDie(\n                            // TODO: Support errors in Optional getOrDie.\n                            new Error('The drag blocker class was not specified for a dialog with a drag handle: \\n' +\n                                JSON.stringify(spec, null, 2)).message),\n                            getBounds: detail.getDragBounds\n                        })\n                    ])\n                };\n            }\n        }),\n        required({\n            schema: [required$1('dom')],\n            name: 'title'\n        }),\n        required({\n            factory: basic,\n            schema: [required$1('dom')],\n            name: 'close'\n        }),\n        required({\n            factory: basic,\n            schema: [required$1('dom')],\n            name: 'body'\n        }),\n        optional({\n            factory: basic,\n            schema: [required$1('dom')],\n            name: 'footer'\n        }),\n        external$1({\n            factory: {\n                sketch: (spec, detail) => \n                // Merging should take care of the uid\n                ({\n                    ...spec,\n                    dom: detail.dom,\n                    components: detail.components\n                })\n            },\n            schema: [\n                defaulted('dom', {\n                    tag: 'div',\n                    styles: {\n                        position: 'fixed',\n                        left: '0px',\n                        top: '0px',\n                        right: '0px',\n                        bottom: '0px'\n                    }\n                }),\n                defaulted('components', [])\n            ],\n            name: 'blocker'\n        })\n    ]);\n\n    const factory$d = (detail, components, spec, externals) => {\n        const dialogComp = value$2();\n        // TODO IMPROVEMENT: Make close actually close the dialog by default!\n        const showDialog = (dialog) => {\n            dialogComp.set(dialog);\n            const sink = detail.lazySink(dialog).getOrDie();\n            const externalBlocker = externals.blocker();\n            const blocker = sink.getSystem().build({\n                ...externalBlocker,\n                components: externalBlocker.components.concat([\n                    premade(dialog)\n                ]),\n                behaviours: derive$1([\n                    Focusing.config({}),\n                    config('dialog-blocker-events', [\n                        // Ensure we use runOnSource otherwise this would cause an infinite loop, as `focusIn` would fire a `focusin` which would then get responded to and so forth\n                        runOnSource(focusin(), () => {\n                            Blocking.isBlocked(dialog) ? noop() : Keying.focusIn(dialog);\n                        })\n                    ])\n                ])\n            });\n            attach(sink, blocker);\n            Keying.focusIn(dialog);\n        };\n        const hideDialog = (dialog) => {\n            dialogComp.clear();\n            parent(dialog.element).each((blockerDom) => {\n                dialog.getSystem().getByDom(blockerDom).each((blocker) => {\n                    detach(blocker);\n                });\n            });\n        };\n        const getDialogBody = (dialog) => getPartOrDie(dialog, detail, 'body');\n        const getDialogFooter = (dialog) => getPart(dialog, detail, 'footer');\n        const setBusy = (dialog, getBusySpec) => {\n            Blocking.block(dialog, getBusySpec);\n        };\n        const setIdle = (dialog) => {\n            Blocking.unblock(dialog);\n        };\n        const modalEventsId = generate$6('modal-events');\n        const eventOrder = {\n            ...detail.eventOrder,\n            [attachedToDom()]: [modalEventsId].concat(detail.eventOrder['alloy.system.attached'] || [])\n        };\n        const browser = detect$1();\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            apis: {\n                show: showDialog,\n                hide: hideDialog,\n                getBody: getDialogBody,\n                getFooter: getDialogFooter,\n                setIdle,\n                setBusy\n            },\n            eventOrder,\n            domModification: {\n                attributes: {\n                    'role': 'dialog',\n                    'aria-modal': 'true'\n                }\n            },\n            behaviours: augment(detail.modalBehaviours, [\n                Replacing.config({}),\n                Keying.config({\n                    mode: 'cyclic',\n                    onEnter: detail.onExecute,\n                    onEscape: detail.onEscape,\n                    useTabstopAt: detail.useTabstopAt,\n                    firstTabstop: detail.firstTabstop\n                }),\n                Blocking.config({\n                    getRoot: dialogComp.get\n                }),\n                config(modalEventsId, [\n                    runOnAttached((c) => {\n                        // TINY-10808 - Workaround to address the dialog header not being announced on VoiceOver with aria-labelledby, ideally we should use the aria-labelledby\n                        const titleElm = getPartOrDie(c, detail, 'title').element;\n                        const title = get$6(titleElm);\n                        if (browser.os.isMacOS() && isNonNullable(title)) {\n                            set$9(c.element, 'aria-label', title);\n                        }\n                        else {\n                            labelledBy(c.element, titleElm);\n                        }\n                    })\n                ])\n            ])\n        };\n    };\n    const ModalDialog = composite({\n        name: 'ModalDialog',\n        configFields: schema$9(),\n        partFields: parts$7(),\n        factory: factory$d,\n        apis: {\n            show: (apis, dialog) => {\n                apis.show(dialog);\n            },\n            hide: (apis, dialog) => {\n                apis.hide(dialog);\n            },\n            getBody: (apis, dialog) => apis.getBody(dialog),\n            getFooter: (apis, dialog) => apis.getFooter(dialog),\n            setBusy: (apis, dialog, getBusySpec) => {\n                apis.setBusy(dialog, getBusySpec);\n            },\n            setIdle: (apis, dialog) => {\n                apis.setIdle(dialog);\n            }\n        }\n    });\n\n    const labelPart = optional({\n        schema: [required$1('dom')],\n        name: 'label'\n    });\n    const edgePart = (name) => optional({\n        name: '' + name + '-edge',\n        overrides: (detail) => {\n            const action = detail.model.manager.edgeActions[name];\n            // Not all edges have actions for all sliders.\n            // A horizontal slider will only have left and right, for instance,\n            // ignoring top, bottom and diagonal edges as they don't make sense in context of those sliders.\n            return action.fold(() => ({}), (a) => ({\n                events: derive$2([\n                    runActionExtra(touchstart(), (comp, se, d) => a(comp, d), [detail]),\n                    runActionExtra(mousedown(), (comp, se, d) => a(comp, d), [detail]),\n                    runActionExtra(mousemove(), (comp, se, det) => {\n                        if (det.mouseIsDown.get()) {\n                            a(comp, det);\n                        }\n                    }, [detail])\n                ])\n            }));\n        }\n    });\n    // When the user touches the top left edge, it should move the thumb\n    const tlEdgePart = edgePart('top-left');\n    // When the user touches the top edge, it should move the thumb\n    const tedgePart = edgePart('top');\n    // When the user touches the top right edge, it should move the thumb\n    const trEdgePart = edgePart('top-right');\n    // When the user touches the right edge, it should move the thumb\n    const redgePart = edgePart('right');\n    // When the user touches the bottom right edge, it should move the thumb\n    const brEdgePart = edgePart('bottom-right');\n    // When the user touches the bottom edge, it should move the thumb\n    const bedgePart = edgePart('bottom');\n    // When the user touches the bottom left edge, it should move the thumb\n    const blEdgePart = edgePart('bottom-left');\n    // When the user touches the left edge, it should move the thumb\n    const ledgePart = edgePart('left');\n    // The thumb part needs to have position absolute to be positioned correctly\n    const thumbPart = required({\n        name: 'thumb',\n        defaults: constant$1({\n            dom: {\n                styles: { position: 'absolute' }\n            }\n        }),\n        overrides: (detail) => {\n            return {\n                events: derive$2([\n                    // If the user touches the thumb itself, pretend they touched the spectrum instead. This\n                    // allows sliding even when they touchstart the current value\n                    redirectToPart(touchstart(), detail, 'spectrum'),\n                    redirectToPart(touchmove(), detail, 'spectrum'),\n                    redirectToPart(touchend(), detail, 'spectrum'),\n                    redirectToPart(mousedown(), detail, 'spectrum'),\n                    redirectToPart(mousemove(), detail, 'spectrum'),\n                    redirectToPart(mouseup(), detail, 'spectrum')\n                ])\n            };\n        }\n    });\n    const isShift = (event) => isShift$1(event.event);\n    const spectrumPart = required({\n        schema: [\n            customField('mouseIsDown', () => Cell(false))\n        ],\n        name: 'spectrum',\n        overrides: (detail) => {\n            const modelDetail = detail.model;\n            const model = modelDetail.manager;\n            const setValueFrom = (component, simulatedEvent) => model.getValueFromEvent(simulatedEvent).map((value) => model.setValueFrom(component, detail, value));\n            return {\n                behaviours: derive$1([\n                    // Move left and right along the spectrum\n                    Keying.config({\n                        mode: 'special',\n                        onLeft: (spectrum, event) => model.onLeft(spectrum, detail, isShift(event)),\n                        onRight: (spectrum, event) => model.onRight(spectrum, detail, isShift(event)),\n                        onUp: (spectrum, event) => model.onUp(spectrum, detail, isShift(event)),\n                        onDown: (spectrum, event) => model.onDown(spectrum, detail, isShift(event))\n                    }),\n                    Tabstopping.config({}),\n                    Focusing.config({})\n                ]),\n                events: derive$2([\n                    run$1(touchstart(), setValueFrom),\n                    run$1(touchmove(), setValueFrom),\n                    run$1(mousedown(), setValueFrom),\n                    run$1(mousemove(), (spectrum, se) => {\n                        if (detail.mouseIsDown.get()) {\n                            setValueFrom(spectrum, se);\n                        }\n                    })\n                ])\n            };\n        }\n    });\n    var SliderParts = [\n        labelPart,\n        ledgePart,\n        redgePart,\n        tedgePart,\n        bedgePart,\n        tlEdgePart,\n        trEdgePart,\n        blEdgePart,\n        brEdgePart,\n        thumbPart,\n        spectrumPart\n    ];\n\n    const _sliderChangeEvent = 'slider.change.value';\n    const sliderChangeEvent = constant$1(_sliderChangeEvent);\n    const isTouchEvent$2 = (evt) => evt.type.indexOf('touch') !== -1;\n    const getEventSource = (simulatedEvent) => {\n        const evt = simulatedEvent.event.raw;\n        if (isTouchEvent$2(evt)) {\n            const touchEvent = evt;\n            return touchEvent.touches !== undefined && touchEvent.touches.length === 1 ?\n                Optional.some(touchEvent.touches[0]).map((t) => SugarPosition(t.clientX, t.clientY)) : Optional.none();\n        }\n        else {\n            const mouseEvent = evt;\n            return mouseEvent.clientX !== undefined ? Optional.some(mouseEvent).map((me) => SugarPosition(me.clientX, me.clientY)) : Optional.none();\n        }\n    };\n\n    const t = 'top', r = 'right', b = 'bottom', l = 'left';\n    // Values\n    const minX = (detail) => detail.model.minX;\n    const minY = (detail) => detail.model.minY;\n    const min1X = (detail) => detail.model.minX - 1;\n    const min1Y = (detail) => detail.model.minY - 1;\n    const maxX = (detail) => detail.model.maxX;\n    const maxY = (detail) => detail.model.maxY;\n    const max1X = (detail) => detail.model.maxX + 1;\n    const max1Y = (detail) => detail.model.maxY + 1;\n    const range = (detail, max, min) => max(detail) - min(detail);\n    const xRange = (detail) => range(detail, maxX, minX);\n    const yRange = (detail) => range(detail, maxY, minY);\n    const halfX = (detail) => xRange(detail) / 2;\n    const halfY = (detail) => yRange(detail) / 2;\n    const step = (detail, useMultiplier) => useMultiplier ? detail.stepSize * detail.speedMultiplier : detail.stepSize;\n    const snap = (detail) => detail.snapToGrid;\n    const snapStart = (detail) => detail.snapStart;\n    const rounded = (detail) => detail.rounded;\n    // Not great but... /shrug\n    const hasEdge = (detail, edgeName) => detail[edgeName + '-edge'] !== undefined;\n    const hasLEdge = (detail) => hasEdge(detail, l);\n    const hasREdge = (detail) => hasEdge(detail, r);\n    const hasTEdge = (detail) => hasEdge(detail, t);\n    const hasBEdge = (detail) => hasEdge(detail, b);\n    // Ew, any\n    const currentValue = (detail) => detail.model.value.get();\n\n    const xyValue = (x, y) => ({\n        x,\n        y\n    });\n    const fireSliderChange$3 = (component, value) => {\n        emitWith(component, sliderChangeEvent(), { value });\n    };\n    // North West XY\n    const setToTLEdgeXY = (edge, detail) => {\n        fireSliderChange$3(edge, xyValue(min1X(detail), min1Y(detail)));\n    };\n    // North\n    const setToTEdge = (edge, detail) => {\n        fireSliderChange$3(edge, min1Y(detail));\n    };\n    // North XY\n    const setToTEdgeXY = (edge, detail) => {\n        fireSliderChange$3(edge, xyValue(halfX(detail), min1Y(detail)));\n    };\n    // North East XY\n    const setToTREdgeXY = (edge, detail) => {\n        fireSliderChange$3(edge, xyValue(max1X(detail), min1Y(detail)));\n    };\n    // East\n    const setToREdge = (edge, detail) => {\n        fireSliderChange$3(edge, max1X(detail));\n    };\n    // East XY\n    const setToREdgeXY = (edge, detail) => {\n        fireSliderChange$3(edge, xyValue(max1X(detail), halfY(detail)));\n    };\n    // South East XY\n    const setToBREdgeXY = (edge, detail) => {\n        fireSliderChange$3(edge, xyValue(max1X(detail), max1Y(detail)));\n    };\n    // South\n    const setToBEdge = (edge, detail) => {\n        fireSliderChange$3(edge, max1Y(detail));\n    };\n    // South XY\n    const setToBEdgeXY = (edge, detail) => {\n        fireSliderChange$3(edge, xyValue(halfX(detail), max1Y(detail)));\n    };\n    // South West XY\n    const setToBLEdgeXY = (edge, detail) => {\n        fireSliderChange$3(edge, xyValue(min1X(detail), max1Y(detail)));\n    };\n    // West\n    const setToLEdge = (edge, detail) => {\n        fireSliderChange$3(edge, min1X(detail));\n    };\n    // West XY\n    const setToLEdgeXY = (edge, detail) => {\n        fireSliderChange$3(edge, xyValue(min1X(detail), halfY(detail)));\n    };\n\n    const reduceBy = (value, min, max, step) => {\n        if (value < min) {\n            return value;\n        }\n        else if (value > max) {\n            return max;\n        }\n        else if (value === min) {\n            return min - 1;\n        }\n        else {\n            return Math.max(min, value - step);\n        }\n    };\n    const increaseBy = (value, min, max, step) => {\n        if (value > max) {\n            return value;\n        }\n        else if (value < min) {\n            return min;\n        }\n        else if (value === max) {\n            return max + 1;\n        }\n        else {\n            return Math.min(max, value + step);\n        }\n    };\n    const capValue = (value, min, max) => Math.max(min, Math.min(max, value));\n    const snapValueOf = (value, min, max, step, snapStart) => \n    // We are snapping by the step size. Therefore, find the nearest multiple of\n    // the step\n    snapStart.fold(() => {\n        // There is no initial snapping start, so just go from the minimum\n        const initValue = value - min;\n        const extraValue = Math.round(initValue / step) * step;\n        return capValue(min + extraValue, min - 1, max + 1);\n    }, (start) => {\n        // There is an initial snapping start, so using that as the starting point,\n        // calculate the nearest snap position based on the value\n        const remainder = (value - start) % step;\n        const adjustment = Math.round(remainder / step);\n        const rawSteps = Math.floor((value - start) / step);\n        const maxSteps = Math.floor((max - start) / step);\n        const numSteps = Math.min(maxSteps, rawSteps + adjustment);\n        const r = start + (numSteps * step);\n        return Math.max(start, r);\n    });\n    const findOffsetOf = (value, min, max) => Math.min(max, Math.max(value, min)) - min;\n    const findValueOf = (args) => {\n        const { min, max, range, value, step, snap, snapStart, rounded, hasMinEdge, hasMaxEdge, minBound, maxBound, screenRange } = args;\n        const capMin = hasMinEdge ? min - 1 : min;\n        const capMax = hasMaxEdge ? max + 1 : max;\n        if (value < minBound) {\n            return capMin;\n        }\n        else if (value > maxBound) {\n            return capMax;\n        }\n        else {\n            const offset = findOffsetOf(value, minBound, maxBound);\n            const newValue = capValue(((offset / screenRange) * range) + min, capMin, capMax);\n            if (snap && newValue >= min && newValue <= max) {\n                return snapValueOf(newValue, min, max, step, snapStart);\n            }\n            else if (rounded) {\n                return Math.round(newValue);\n            }\n            else {\n                return newValue;\n            }\n        }\n    };\n    const findOffsetOfValue$2 = (args) => {\n        const { min, max, range, value, hasMinEdge, hasMaxEdge, maxBound, maxOffset, centerMinEdge, centerMaxEdge } = args;\n        if (value < min) {\n            return hasMinEdge ? 0 : centerMinEdge;\n        }\n        else if (value > max) {\n            return hasMaxEdge ? maxBound : centerMaxEdge;\n        }\n        else {\n            // position along the slider\n            return (value - min) / range * maxOffset;\n        }\n    };\n\n    const top = 'top', right = 'right', bottom = 'bottom', left = 'left', width = 'width', height = 'height';\n    // Screen offsets from bounding client rect\n    const getBounds = (component) => component.element.dom.getBoundingClientRect();\n    const getBoundsProperty = (bounds, property) => bounds[property];\n    const getMinXBounds = (component) => {\n        const bounds = getBounds(component);\n        return getBoundsProperty(bounds, left);\n    };\n    const getMaxXBounds = (component) => {\n        const bounds = getBounds(component);\n        return getBoundsProperty(bounds, right);\n    };\n    const getMinYBounds = (component) => {\n        const bounds = getBounds(component);\n        return getBoundsProperty(bounds, top);\n    };\n    const getMaxYBounds = (component) => {\n        const bounds = getBounds(component);\n        return getBoundsProperty(bounds, bottom);\n    };\n    const getXScreenRange = (component) => {\n        const bounds = getBounds(component);\n        return getBoundsProperty(bounds, width);\n    };\n    const getYScreenRange = (component) => {\n        const bounds = getBounds(component);\n        return getBoundsProperty(bounds, height);\n    };\n    const getCenterOffsetOf = (componentMinEdge, componentMaxEdge, spectrumMinEdge) => (componentMinEdge + componentMaxEdge) / 2 - spectrumMinEdge;\n    const getXCenterOffSetOf = (component, spectrum) => {\n        const componentBounds = getBounds(component);\n        const spectrumBounds = getBounds(spectrum);\n        const componentMinEdge = getBoundsProperty(componentBounds, left);\n        const componentMaxEdge = getBoundsProperty(componentBounds, right);\n        const spectrumMinEdge = getBoundsProperty(spectrumBounds, left);\n        return getCenterOffsetOf(componentMinEdge, componentMaxEdge, spectrumMinEdge);\n    };\n    const getYCenterOffSetOf = (component, spectrum) => {\n        const componentBounds = getBounds(component);\n        const spectrumBounds = getBounds(spectrum);\n        const componentMinEdge = getBoundsProperty(componentBounds, top);\n        const componentMaxEdge = getBoundsProperty(componentBounds, bottom);\n        const spectrumMinEdge = getBoundsProperty(spectrumBounds, top);\n        return getCenterOffsetOf(componentMinEdge, componentMaxEdge, spectrumMinEdge);\n    };\n\n    // fire slider change event with x value\n    const fireSliderChange$2 = (spectrum, value) => {\n        emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    // find the value of the x offset of where the mouse was clicked from the model.\n    const findValueOfOffset$1 = (spectrum, detail, left) => {\n        const args = {\n            min: minX(detail),\n            max: maxX(detail),\n            range: xRange(detail),\n            value: left,\n            step: step(detail),\n            snap: snap(detail),\n            snapStart: snapStart(detail),\n            rounded: rounded(detail),\n            hasMinEdge: hasLEdge(detail),\n            hasMaxEdge: hasREdge(detail),\n            minBound: getMinXBounds(spectrum),\n            maxBound: getMaxXBounds(spectrum),\n            screenRange: getXScreenRange(spectrum)\n        };\n        return findValueOf(args);\n    };\n    // find the value and fire a slider change event, returning the value\n    const setValueFrom$2 = (spectrum, detail, value) => {\n        const xValue = findValueOfOffset$1(spectrum, detail, value);\n        const sliderVal = xValue;\n        fireSliderChange$2(spectrum, sliderVal);\n        return xValue;\n    };\n    // fire a slider change event with the minimum value\n    const setToMin$2 = (spectrum, detail) => {\n        const min = minX(detail);\n        fireSliderChange$2(spectrum, min);\n    };\n    // fire a slider change event with the maximum value\n    const setToMax$2 = (spectrum, detail) => {\n        const max = maxX(detail);\n        fireSliderChange$2(spectrum, max);\n    };\n    // move in a direction by step size. Fire change at the end\n    const moveBy$2 = (direction, spectrum, detail, useMultiplier) => {\n        const f = (direction > 0) ? increaseBy : reduceBy;\n        const xValue = f(currentValue(detail), minX(detail), maxX(detail), step(detail, useMultiplier));\n        fireSliderChange$2(spectrum, xValue);\n        return Optional.some(xValue);\n    };\n    const handleMovement$2 = (direction) => (spectrum, detail, useMultiplier) => moveBy$2(direction, spectrum, detail, useMultiplier).map(always);\n    // get x offset from event\n    const getValueFromEvent$2 = (simulatedEvent) => {\n        const pos = getEventSource(simulatedEvent);\n        return pos.map((p) => p.left);\n    };\n    // find the x offset of a given value from the model\n    const findOffsetOfValue$1 = (spectrum, detail, value, minEdge, maxEdge) => {\n        const minOffset = 0;\n        const maxOffset = getXScreenRange(spectrum);\n        const centerMinEdge = minEdge.bind((edge) => Optional.some(getXCenterOffSetOf(edge, spectrum))).getOr(minOffset);\n        const centerMaxEdge = maxEdge.bind((edge) => Optional.some(getXCenterOffSetOf(edge, spectrum))).getOr(maxOffset);\n        const args = {\n            min: minX(detail),\n            max: maxX(detail),\n            range: xRange(detail),\n            value,\n            hasMinEdge: hasLEdge(detail),\n            hasMaxEdge: hasREdge(detail),\n            minBound: getMinXBounds(spectrum),\n            minOffset,\n            maxBound: getMaxXBounds(spectrum),\n            maxOffset,\n            centerMinEdge,\n            centerMaxEdge\n        };\n        return findOffsetOfValue$2(args);\n    };\n    // find left offset for absolute positioning from a given value\n    const findPositionOfValue$1 = (slider, spectrum, value, minEdge, maxEdge, detail) => {\n        const offset = findOffsetOfValue$1(spectrum, detail, value, minEdge, maxEdge);\n        return (getMinXBounds(spectrum) - getMinXBounds(slider)) + offset;\n    };\n    // update the position of the thumb from the slider's current value\n    const setPositionFromValue$2 = (slider, thumb, detail, edges) => {\n        const value = currentValue(detail);\n        const pos = findPositionOfValue$1(slider, edges.getSpectrum(slider), value, edges.getLeftEdge(slider), edges.getRightEdge(slider), detail);\n        const thumbRadius = get$c(thumb.element) / 2;\n        set$7(thumb.element, 'left', (pos - thumbRadius) + 'px');\n    };\n    // Key Events\n    const onLeft$2 = handleMovement$2(-1);\n    const onRight$2 = handleMovement$2(1);\n    const onUp$2 = Optional.none;\n    const onDown$2 = Optional.none;\n    // Edge Click Actions\n    const edgeActions$2 = {\n        'top-left': Optional.none(),\n        'top': Optional.none(),\n        'top-right': Optional.none(),\n        'right': Optional.some(setToREdge),\n        'bottom-right': Optional.none(),\n        'bottom': Optional.none(),\n        'bottom-left': Optional.none(),\n        'left': Optional.some(setToLEdge)\n    };\n\n    var HorizontalModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom$2,\n        setToMin: setToMin$2,\n        setToMax: setToMax$2,\n        findValueOfOffset: findValueOfOffset$1,\n        getValueFromEvent: getValueFromEvent$2,\n        findPositionOfValue: findPositionOfValue$1,\n        setPositionFromValue: setPositionFromValue$2,\n        onLeft: onLeft$2,\n        onRight: onRight$2,\n        onUp: onUp$2,\n        onDown: onDown$2,\n        edgeActions: edgeActions$2\n    });\n\n    // fire slider change event with y value\n    const fireSliderChange$1 = (spectrum, value) => {\n        emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    // find the value of the y offset of where the mouse was clicked from the model.\n    const findValueOfOffset = (spectrum, detail, top) => {\n        const args = {\n            min: minY(detail),\n            max: maxY(detail),\n            range: yRange(detail),\n            value: top,\n            step: step(detail),\n            snap: snap(detail),\n            snapStart: snapStart(detail),\n            rounded: rounded(detail),\n            hasMinEdge: hasTEdge(detail),\n            hasMaxEdge: hasBEdge(detail),\n            minBound: getMinYBounds(spectrum),\n            maxBound: getMaxYBounds(spectrum),\n            screenRange: getYScreenRange(spectrum)\n        };\n        return findValueOf(args);\n    };\n    // find the value and fire a slider change event, returning the value\n    const setValueFrom$1 = (spectrum, detail, value) => {\n        const yValue = findValueOfOffset(spectrum, detail, value);\n        const sliderVal = yValue;\n        fireSliderChange$1(spectrum, sliderVal);\n        return yValue;\n    };\n    // fire a slider change event with the minimum value\n    const setToMin$1 = (spectrum, detail) => {\n        const min = minY(detail);\n        fireSliderChange$1(spectrum, min);\n    };\n    // fire a slider change event with the maximum value\n    const setToMax$1 = (spectrum, detail) => {\n        const max = maxY(detail);\n        fireSliderChange$1(spectrum, max);\n    };\n    // move in a direction by step size. Fire change at the end\n    const moveBy$1 = (direction, spectrum, detail, useMultiplier) => {\n        const f = (direction > 0) ? increaseBy : reduceBy;\n        const yValue = f(currentValue(detail), minY(detail), maxY(detail), step(detail, useMultiplier));\n        fireSliderChange$1(spectrum, yValue);\n        return Optional.some(yValue);\n    };\n    const handleMovement$1 = (direction) => (spectrum, detail, useMultiplier) => moveBy$1(direction, spectrum, detail, useMultiplier).map(always);\n    // get y offset from event\n    const getValueFromEvent$1 = (simulatedEvent) => {\n        const pos = getEventSource(simulatedEvent);\n        return pos.map((p) => {\n            return p.top;\n        });\n    };\n    // find the y offset of a given value from the model\n    const findOffsetOfValue = (spectrum, detail, value, minEdge, maxEdge) => {\n        const minOffset = 0;\n        const maxOffset = getYScreenRange(spectrum);\n        const centerMinEdge = minEdge.bind((edge) => Optional.some(getYCenterOffSetOf(edge, spectrum))).getOr(minOffset);\n        const centerMaxEdge = maxEdge.bind((edge) => Optional.some(getYCenterOffSetOf(edge, spectrum))).getOr(maxOffset);\n        const args = {\n            min: minY(detail),\n            max: maxY(detail),\n            range: yRange(detail),\n            value,\n            hasMinEdge: hasTEdge(detail),\n            hasMaxEdge: hasBEdge(detail),\n            minBound: getMinYBounds(spectrum),\n            minOffset,\n            maxBound: getMaxYBounds(spectrum),\n            maxOffset,\n            centerMinEdge,\n            centerMaxEdge\n        };\n        return findOffsetOfValue$2(args);\n    };\n    // find left offset for absolute positioning from a given value\n    const findPositionOfValue = (slider, spectrum, value, minEdge, maxEdge, detail) => {\n        const offset = findOffsetOfValue(spectrum, detail, value, minEdge, maxEdge);\n        return (getMinYBounds(spectrum) - getMinYBounds(slider)) + offset;\n    };\n    // update the position of the thumb from the slider's current value\n    const setPositionFromValue$1 = (slider, thumb, detail, edges) => {\n        const value = currentValue(detail);\n        const pos = findPositionOfValue(slider, edges.getSpectrum(slider), value, edges.getTopEdge(slider), edges.getBottomEdge(slider), detail);\n        const thumbRadius = get$d(thumb.element) / 2;\n        set$7(thumb.element, 'top', (pos - thumbRadius) + 'px');\n    };\n    // Key Events\n    const onLeft$1 = Optional.none;\n    const onRight$1 = Optional.none;\n    const onUp$1 = handleMovement$1(-1);\n    const onDown$1 = handleMovement$1(1);\n    // Edge Click Actions\n    const edgeActions$1 = {\n        'top-left': Optional.none(),\n        'top': Optional.some(setToTEdge),\n        'top-right': Optional.none(),\n        'right': Optional.none(),\n        'bottom-right': Optional.none(),\n        'bottom': Optional.some(setToBEdge),\n        'bottom-left': Optional.none(),\n        'left': Optional.none()\n    };\n\n    var VerticalModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom$1,\n        setToMin: setToMin$1,\n        setToMax: setToMax$1,\n        findValueOfOffset: findValueOfOffset,\n        getValueFromEvent: getValueFromEvent$1,\n        findPositionOfValue: findPositionOfValue,\n        setPositionFromValue: setPositionFromValue$1,\n        onLeft: onLeft$1,\n        onRight: onRight$1,\n        onUp: onUp$1,\n        onDown: onDown$1,\n        edgeActions: edgeActions$1\n    });\n\n    // fire slider change event with xy value\n    const fireSliderChange = (spectrum, value) => {\n        emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    const sliderValue = (x, y) => ({\n        x,\n        y\n    });\n    // find both values of x and y offsets of where the mouse was clicked from the model.\n    // then fire a slider change event with those values, returning the values\n    const setValueFrom = (spectrum, detail, value) => {\n        const xValue = findValueOfOffset$1(spectrum, detail, value.left);\n        const yValue = findValueOfOffset(spectrum, detail, value.top);\n        const val = sliderValue(xValue, yValue);\n        fireSliderChange(spectrum, val);\n        return val;\n    };\n    // move in a direction by step size. Fire change at the end\n    const moveBy = (direction, isVerticalMovement, spectrum, detail, useMultiplier) => {\n        const f = (direction > 0) ? increaseBy : reduceBy;\n        const xValue = isVerticalMovement ? currentValue(detail).x :\n            f(currentValue(detail).x, minX(detail), maxX(detail), step(detail, useMultiplier));\n        const yValue = !isVerticalMovement ? currentValue(detail).y :\n            f(currentValue(detail).y, minY(detail), maxY(detail), step(detail, useMultiplier));\n        fireSliderChange(spectrum, sliderValue(xValue, yValue));\n        return Optional.some(xValue);\n    };\n    const handleMovement = (direction, isVerticalMovement) => (spectrum, detail, useMultiplier) => moveBy(direction, isVerticalMovement, spectrum, detail, useMultiplier).map(always);\n    // fire a slider change event with the minimum value\n    const setToMin = (spectrum, detail) => {\n        const mX = minX(detail);\n        const mY = minY(detail);\n        fireSliderChange(spectrum, sliderValue(mX, mY));\n    };\n    // fire a slider change event with the maximum value\n    const setToMax = (spectrum, detail) => {\n        const mX = maxX(detail);\n        const mY = maxY(detail);\n        fireSliderChange(spectrum, sliderValue(mX, mY));\n    };\n    // get event data as a SugarPosition\n    const getValueFromEvent = (simulatedEvent) => getEventSource(simulatedEvent);\n    // update the position of the thumb from the slider's current value\n    const setPositionFromValue = (slider, thumb, detail, edges) => {\n        const value = currentValue(detail);\n        const xPos = findPositionOfValue$1(slider, edges.getSpectrum(slider), value.x, edges.getLeftEdge(slider), edges.getRightEdge(slider), detail);\n        const yPos = findPositionOfValue(slider, edges.getSpectrum(slider), value.y, edges.getTopEdge(slider), edges.getBottomEdge(slider), detail);\n        const thumbXRadius = get$c(thumb.element) / 2;\n        const thumbYRadius = get$d(thumb.element) / 2;\n        set$7(thumb.element, 'left', (xPos - thumbXRadius) + 'px');\n        set$7(thumb.element, 'top', (yPos - thumbYRadius) + 'px');\n    };\n    // Key Events\n    const onLeft = handleMovement(-1, false);\n    const onRight = handleMovement(1, false);\n    const onUp = handleMovement(-1, true);\n    const onDown = handleMovement(1, true);\n    // Edge Click Actions\n    const edgeActions = {\n        'top-left': Optional.some(setToTLEdgeXY),\n        'top': Optional.some(setToTEdgeXY),\n        'top-right': Optional.some(setToTREdgeXY),\n        'right': Optional.some(setToREdgeXY),\n        'bottom-right': Optional.some(setToBREdgeXY),\n        'bottom': Optional.some(setToBEdgeXY),\n        'bottom-left': Optional.some(setToBLEdgeXY),\n        'left': Optional.some(setToLEdgeXY)\n    };\n\n    var TwoDModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom,\n        setToMin: setToMin,\n        setToMax: setToMax,\n        getValueFromEvent: getValueFromEvent,\n        setPositionFromValue: setPositionFromValue,\n        onLeft: onLeft,\n        onRight: onRight,\n        onUp: onUp,\n        onDown: onDown,\n        edgeActions: edgeActions\n    });\n\n    const SliderSchema = [\n        defaulted('stepSize', 1),\n        defaulted('speedMultiplier', 10),\n        defaulted('onChange', noop),\n        defaulted('onChoose', noop),\n        defaulted('onInit', noop),\n        defaulted('onDragStart', noop),\n        defaulted('onDragEnd', noop),\n        defaulted('snapToGrid', false),\n        defaulted('rounded', true),\n        option$3('snapStart'),\n        requiredOf('model', choose$1('mode', {\n            x: [\n                defaulted('minX', 0),\n                defaulted('maxX', 100),\n                customField('value', (spec) => Cell(spec.mode.minX)),\n                required$1('getInitialValue'),\n                output$1('manager', HorizontalModel)\n            ],\n            y: [\n                defaulted('minY', 0),\n                defaulted('maxY', 100),\n                customField('value', (spec) => Cell(spec.mode.minY)),\n                required$1('getInitialValue'),\n                output$1('manager', VerticalModel)\n            ],\n            xy: [\n                defaulted('minX', 0),\n                defaulted('maxX', 100),\n                defaulted('minY', 0),\n                defaulted('maxY', 100),\n                customField('value', (spec) => Cell({\n                    x: spec.mode.minX,\n                    y: spec.mode.minY\n                })),\n                required$1('getInitialValue'),\n                output$1('manager', TwoDModel)\n            ]\n        })),\n        field('sliderBehaviours', [Keying, Representing]),\n        customField('mouseIsDown', () => Cell(false))\n    ];\n\n    const sketch$1 = (detail, components, _spec, _externals) => {\n        const getThumb = (component) => getPartOrDie(component, detail, 'thumb');\n        const getSpectrum = (component) => getPartOrDie(component, detail, 'spectrum');\n        const getLeftEdge = (component) => getPart(component, detail, 'left-edge');\n        const getRightEdge = (component) => getPart(component, detail, 'right-edge');\n        const getTopEdge = (component) => getPart(component, detail, 'top-edge');\n        const getBottomEdge = (component) => getPart(component, detail, 'bottom-edge');\n        const modelDetail = detail.model;\n        const model = modelDetail.manager;\n        const refresh = (slider, thumb) => {\n            model.setPositionFromValue(slider, thumb, detail, {\n                getLeftEdge,\n                getRightEdge,\n                getTopEdge,\n                getBottomEdge,\n                getSpectrum\n            });\n        };\n        const setValue = (slider, newValue) => {\n            modelDetail.value.set(newValue);\n            const thumb = getThumb(slider);\n            refresh(slider, thumb);\n        };\n        const changeValue = (slider, newValue) => {\n            setValue(slider, newValue);\n            const thumb = getThumb(slider);\n            detail.onChange(slider, thumb, newValue);\n            return Optional.some(true);\n        };\n        const resetToMin = (slider) => {\n            model.setToMin(slider, detail);\n        };\n        const resetToMax = (slider) => {\n            model.setToMax(slider, detail);\n        };\n        const choose = (slider) => {\n            const fireOnChoose = () => {\n                getPart(slider, detail, 'thumb').each((thumb) => {\n                    const value = modelDetail.value.get();\n                    detail.onChoose(slider, thumb, value);\n                });\n            };\n            const wasDown = detail.mouseIsDown.get();\n            detail.mouseIsDown.set(false);\n            // We don't want this to fire if the mouse wasn't pressed down over anything other than the slider.\n            if (wasDown) {\n                fireOnChoose();\n            }\n        };\n        const onDragStart = (slider, simulatedEvent) => {\n            simulatedEvent.stop();\n            detail.mouseIsDown.set(true);\n            detail.onDragStart(slider, getThumb(slider));\n        };\n        const onDragEnd = (slider, simulatedEvent) => {\n            simulatedEvent.stop();\n            detail.onDragEnd(slider, getThumb(slider));\n            choose(slider);\n        };\n        const focusWidget = (component) => {\n            getPart(component, detail, 'spectrum').map(Keying.focusIn);\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            behaviours: augment(detail.sliderBehaviours, [\n                Keying.config({\n                    mode: 'special',\n                    focusIn: focusWidget\n                }),\n                Representing.config({\n                    store: {\n                        mode: 'manual',\n                        getValue: (_) => {\n                            return modelDetail.value.get();\n                        },\n                        setValue\n                    }\n                }),\n                Receiving.config({\n                    channels: {\n                        [mouseReleased()]: {\n                            onReceive: choose\n                        }\n                    }\n                })\n            ]),\n            events: derive$2([\n                run$1(sliderChangeEvent(), (slider, simulatedEvent) => {\n                    changeValue(slider, simulatedEvent.event.value);\n                }),\n                runOnAttached((slider, _simulatedEvent) => {\n                    // Set the initial value\n                    const getInitial = modelDetail.getInitialValue();\n                    modelDetail.value.set(getInitial);\n                    const thumb = getThumb(slider);\n                    refresh(slider, thumb);\n                    const spectrum = getSpectrum(slider);\n                    // Call onInit instead of onChange for the first value.\n                    detail.onInit(slider, thumb, spectrum, modelDetail.value.get());\n                }),\n                run$1(touchstart(), onDragStart),\n                run$1(touchend(), onDragEnd),\n                run$1(mousedown(), (component, event) => {\n                    focusWidget(component);\n                    onDragStart(component, event);\n                }),\n                run$1(mouseup(), onDragEnd),\n            ]),\n            apis: {\n                resetToMin,\n                resetToMax,\n                setValue,\n                refresh\n            },\n            domModification: {\n                styles: {\n                    position: 'relative'\n                }\n            }\n        };\n    };\n\n    const Slider = composite({\n        name: 'Slider',\n        configFields: SliderSchema,\n        partFields: SliderParts,\n        factory: sketch$1,\n        apis: {\n            setValue: (apis, slider, value) => {\n                apis.setValue(slider, value);\n            },\n            resetToMin: (apis, slider) => {\n                apis.resetToMin(slider);\n            },\n            resetToMax: (apis, slider) => {\n                apis.resetToMax(slider);\n            },\n            refresh: (apis, slider) => {\n                apis.refresh(slider);\n            }\n        }\n    });\n\n    const owner = 'container';\n    const schema$8 = [\n        field('slotBehaviours', [])\n    ];\n    const getPartName = (name) => '<alloy.field.' + name + '>';\n    const sketch = (sSpec) => {\n        // As parts.slot is called, record all of the parts that are registered\n        // as part of this SlotContainer.\n        const parts = (() => {\n            const record = [];\n            const slot = (name, config) => {\n                record.push(name);\n                return generateOne$1(owner, getPartName(name), config);\n            };\n            return {\n                slot,\n                record: constant$1(record)\n            };\n        })();\n        const spec = sSpec(parts);\n        const partNames = parts.record();\n        // Like a Form, a SlotContainer does not know its parts in advance. So the\n        // record lists the names of the parts to put in the schema.\n        // TODO: Find a nice way to remove dupe with Form\n        const fieldParts = map$2(partNames, (n) => required({ name: n, pname: getPartName(n) }));\n        return composite$1(owner, schema$8, fieldParts, make$3, spec);\n    };\n    const make$3 = (detail, components) => {\n        const getSlotNames = (_) => getAllPartNames(detail);\n        const getSlot = (container, key) => getPart(container, detail, key);\n        const onSlot = (f, def) => (container, key) => getPart(container, detail, key).map((slot) => f(slot, key)).getOr(def);\n        const onSlots = (f) => (container, keys) => {\n            each$1(keys, (key) => f(container, key));\n        };\n        const doShowing = (comp, _key) => get$g(comp.element, 'aria-hidden') !== 'true';\n        const doShow = (comp, key) => {\n            // NOTE: May need to restore old values.\n            if (!doShowing(comp)) {\n                const element = comp.element;\n                remove$6(element, 'display');\n                remove$8(element, 'aria-hidden');\n                emitWith(comp, slotVisibility(), { name: key, visible: true });\n            }\n        };\n        const doHide = (comp, key) => {\n            // NOTE: May need to save old values.\n            if (doShowing(comp)) {\n                const element = comp.element;\n                set$7(element, 'display', 'none');\n                set$9(element, 'aria-hidden', 'true');\n                emitWith(comp, slotVisibility(), { name: key, visible: false });\n            }\n        };\n        const isShowing = onSlot(doShowing, false);\n        const hideSlot = onSlot(doHide);\n        const hideSlots = onSlots(hideSlot);\n        const hideAllSlots = (container) => hideSlots(container, getSlotNames());\n        const showSlot = onSlot(doShow);\n        const apis = {\n            getSlotNames,\n            getSlot,\n            isShowing,\n            hideSlot,\n            hideAllSlots,\n            showSlot\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            behaviours: get$2(detail.slotBehaviours),\n            apis\n        };\n    };\n    // No type safety doing it this way. But removes dupe.\n    // We could probably use spread operator to help here.\n    const slotApis = map$1({\n        getSlotNames: (apis, c) => apis.getSlotNames(c),\n        getSlot: (apis, c, key) => apis.getSlot(c, key),\n        isShowing: (apis, c, key) => apis.isShowing(c, key),\n        hideSlot: (apis, c, key) => apis.hideSlot(c, key),\n        hideAllSlots: (apis, c) => apis.hideAllSlots(c),\n        showSlot: (apis, c, key) => apis.showSlot(c, key)\n    }, (value) => makeApi(value));\n    const SlotContainer = {\n        ...slotApis,\n        ...{ sketch }\n    };\n\n    const schema$7 = constant$1([\n        required$1('toggleClass'),\n        required$1('fetch'),\n        onStrictHandler('onExecute'),\n        defaulted('getHotspot', Optional.some),\n        defaulted('getAnchorOverrides', constant$1({})),\n        schema$o(),\n        onStrictHandler('onItemExecute'),\n        option$3('lazySink'),\n        required$1('dom'),\n        onHandler('onOpen'),\n        field('splitDropdownBehaviours', [Coupling, Keying, Focusing]),\n        defaulted('matchWidth', false),\n        defaulted('useMinWidth', false),\n        defaulted('eventOrder', {}),\n        option$3('role'),\n        option$3('listRole')\n    ].concat(sandboxFields()));\n    const arrowPart = required({\n        factory: Button,\n        schema: [required$1('dom')],\n        name: 'arrow',\n        defaults: () => {\n            return {\n                buttonBehaviours: derive$1([\n                    // TODO: Remove all traces of revoking\n                    Focusing.revoke()\n                ])\n            };\n        },\n        overrides: (detail) => {\n            return {\n                dom: {\n                    tag: 'span',\n                    attributes: {\n                        role: 'presentation'\n                    }\n                },\n                action: (arrow) => {\n                    arrow.getSystem().getByUid(detail.uid).each(emitExecute);\n                },\n                buttonBehaviours: derive$1([\n                    Toggling.config({\n                        toggleOnExecute: false,\n                        toggleClass: detail.toggleClass\n                    })\n                ])\n            };\n        }\n    });\n    const buttonPart = required({\n        factory: Button,\n        schema: [required$1('dom')],\n        name: 'button',\n        defaults: () => {\n            return {\n                buttonBehaviours: derive$1([\n                    // TODO: Remove all traces of revoking\n                    Focusing.revoke()\n                ])\n            };\n        },\n        overrides: (detail) => {\n            return {\n                dom: {\n                    tag: 'span',\n                    attributes: {\n                        role: 'presentation'\n                    }\n                },\n                action: (btn) => {\n                    btn.getSystem().getByUid(detail.uid).each((splitDropdown) => {\n                        detail.onExecute(splitDropdown, btn);\n                    });\n                }\n            };\n        }\n    });\n    const parts$6 = constant$1([\n        arrowPart,\n        buttonPart,\n        optional({\n            factory: {\n                sketch: (spec) => {\n                    return {\n                        uid: spec.uid,\n                        dom: {\n                            tag: 'span',\n                            styles: {\n                                display: 'none'\n                            },\n                            attributes: {\n                                'aria-hidden': 'true'\n                            },\n                            innerHtml: spec.text\n                        }\n                    };\n                }\n            },\n            schema: [required$1('text')],\n            name: 'aria-descriptor'\n        }),\n        external$1({\n            schema: [\n                tieredMenuMarkers()\n            ],\n            name: 'menu',\n            defaults: (detail) => {\n                return {\n                    onExecute: (tmenu, item) => {\n                        // CAUTION: This won't work if the splitDropdown and the tmenu aren't\n                        // in the same mothership. It is just a default, though.\n                        tmenu.getSystem().getByUid(detail.uid).each((splitDropdown) => {\n                            detail.onItemExecute(splitDropdown, tmenu, item);\n                        });\n                    }\n                };\n            }\n        }),\n        partType()\n    ]);\n\n    const factory$c = (detail, components, spec, externals) => {\n        const switchToMenu = (sandbox) => {\n            Composing.getCurrent(sandbox).each((current) => {\n                Highlighting.highlightFirst(current);\n                Keying.focusIn(current);\n            });\n        };\n        const action = (component) => {\n            const onOpenSync = switchToMenu;\n            togglePopup(detail, identity, component, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n        };\n        const openMenu = (comp) => {\n            action(comp);\n            return Optional.some(true);\n        };\n        const executeOnButton = (comp) => {\n            const button = getPartOrDie(comp, detail, 'button');\n            emitExecute(button);\n            return Optional.some(true);\n        };\n        const buttonEvents = {\n            ...derive$2([\n                runOnAttached((component, _simulatedEvent) => {\n                    const ariaDescriptor = getPart(component, detail, 'aria-descriptor');\n                    ariaDescriptor.each((descriptor) => {\n                        const descriptorId = generate$6('aria');\n                        set$9(descriptor.element, 'id', descriptorId);\n                        set$9(component.element, 'aria-describedby', descriptorId);\n                    });\n                })\n            ]),\n            ...events(Optional.some(action))\n        };\n        const apis = {\n            repositionMenus: (comp) => {\n                if (Toggling.isOn(comp)) {\n                    repositionMenus(comp);\n                }\n            }\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            apis,\n            eventOrder: {\n                ...detail.eventOrder,\n                // Order, the button state is toggled first, so assumed !selected means close.\n                [execute$5()]: ['disabling', 'toggling', 'alloy.base.behaviour']\n            },\n            events: buttonEvents,\n            behaviours: augment(detail.splitDropdownBehaviours, [\n                Coupling.config({\n                    others: {\n                        sandbox: (hotspot) => {\n                            const arrow = getPartOrDie(hotspot, detail, 'arrow');\n                            const extras = {\n                                onOpen: () => {\n                                    Toggling.on(arrow);\n                                    Toggling.on(hotspot);\n                                },\n                                onClose: () => {\n                                    Toggling.off(arrow);\n                                    Toggling.off(hotspot);\n                                }\n                            };\n                            return makeSandbox$1(detail, hotspot, extras);\n                        }\n                    }\n                }),\n                Keying.config({\n                    mode: 'special',\n                    onSpace: executeOnButton,\n                    onEnter: executeOnButton,\n                    onDown: openMenu\n                }),\n                Focusing.config({}),\n                Toggling.config({\n                    toggleOnExecute: false,\n                    aria: {\n                        mode: 'expanded'\n                    }\n                })\n            ]),\n            domModification: {\n                attributes: {\n                    'role': detail.role.getOr('button'),\n                    'aria-haspopup': true\n                }\n            }\n        };\n    };\n    const SplitDropdown = composite({\n        name: 'SplitDropdown',\n        configFields: schema$7(),\n        partFields: parts$6(),\n        factory: factory$c,\n        apis: {\n            repositionMenus: (apis, comp) => apis.repositionMenus(comp)\n        }\n    });\n\n    const generate$1 = (xs, f) => {\n        const init = {\n            len: 0,\n            list: []\n        };\n        const r = foldl(xs, (b, a) => {\n            const value = f(a, b.len);\n            return value.fold(constant$1(b), (v) => ({\n                len: v.finish,\n                list: b.list.concat([v])\n            }));\n        }, init);\n        return r.list;\n    };\n\n    const output = (within, extra, withinWidth) => ({\n        within,\n        extra,\n        withinWidth\n    });\n    const apportion = (units, total, len) => {\n        const parray = generate$1(units, (unit, current) => {\n            const width = len(unit);\n            return Optional.some({\n                element: unit,\n                start: current,\n                finish: current + width,\n                width\n            });\n        });\n        const within = filter$2(parray, (unit) => unit.finish <= total);\n        const withinWidth = foldr(within, (acc, el) => acc + el.width, 0);\n        const extra = parray.slice(within.length);\n        return {\n            within,\n            extra,\n            withinWidth\n        };\n    };\n    const toUnit = (parray) => map$2(parray, (unit) => unit.element);\n    const fitLast = (within, extra, withinWidth) => {\n        const fits = toUnit(within.concat(extra));\n        return output(fits, [], withinWidth);\n    };\n    const overflow = (within, extra, overflower, withinWidth) => {\n        const fits = toUnit(within).concat([overflower]);\n        return output(fits, toUnit(extra), withinWidth);\n    };\n    const fitAll = (within, extra, withinWidth) => output(toUnit(within), [], withinWidth);\n    const tryFit = (total, units, len) => {\n        const divide = apportion(units, total, len);\n        return divide.extra.length === 0 ? Optional.some(divide) : Optional.none();\n    };\n    const partition = (total, units, len, overflower) => {\n        // Firstly, we try without the overflower.\n        const divide = tryFit(total, units, len).getOrThunk(() => \n        // If that doesn't work, overflow\n        apportion(units, total - len(overflower), len));\n        const within = divide.within;\n        const extra = divide.extra;\n        const withinWidth = divide.withinWidth;\n        if (extra.length === 1 && extra[0].width <= len(overflower)) {\n            return fitLast(within, extra, withinWidth);\n        }\n        else if (extra.length >= 1) {\n            return overflow(within, extra, overflower, withinWidth);\n        }\n        else {\n            return fitAll(within, extra, withinWidth);\n        }\n    };\n\n    const setGroups = (toolbar, storedGroups) => {\n        const bGroups = map$2(storedGroups, (g) => premade(g));\n        Toolbar.setGroups(toolbar, bGroups);\n    };\n    const findFocusedComp = (comps) => findMap(comps, (comp) => search(comp.element).bind((focusedElm) => comp.getSystem().getByDom(focusedElm).toOptional()));\n    const refresh$2 = (toolbar, detail, setOverflow) => {\n        // Ensure we have toolbar groups to render\n        const builtGroups = detail.builtGroups.get();\n        if (builtGroups.length === 0) {\n            return;\n        }\n        const primary = getPartOrDie(toolbar, detail, 'primary');\n        const overflowGroup = Coupling.getCoupled(toolbar, 'overflowGroup');\n        // Set the primary toolbar to have visibility hidden;\n        set$7(primary.element, 'visibility', 'hidden');\n        const groups = builtGroups.concat([overflowGroup]);\n        // Store the current focus state\n        const focusedComp = findFocusedComp(groups);\n        // Clear the overflow toolbar\n        setOverflow([]);\n        // Put all the groups inside the primary toolbar\n        setGroups(primary, groups);\n        const availableWidth = get$c(primary.element);\n        const overflows = partition(availableWidth, detail.builtGroups.get(), (comp) => Math.ceil(comp.element.dom.getBoundingClientRect().width), overflowGroup);\n        if (overflows.extra.length === 0) {\n            // Not ideal. Breaking abstraction somewhat, though remove is better than insert\n            // Can just reset the toolbar groups also ... but may be a bit slower.\n            Replacing.remove(primary, overflowGroup);\n            setOverflow([]);\n        }\n        else {\n            setGroups(primary, overflows.within);\n            setOverflow(overflows.extra);\n        }\n        remove$6(primary.element, 'visibility');\n        reflow(primary.element);\n        // Restore the focus\n        focusedComp.each(Focusing.focus);\n    };\n\n    const schema$6 = constant$1([\n        field('splitToolbarBehaviours', [Coupling]),\n        customField('builtGroups', () => Cell([]))\n    ]);\n\n    const schema$5 = constant$1([\n        markers$1(['overflowToggledClass']),\n        optionFunction('getOverflowBounds'),\n        required$1('lazySink'),\n        customField('overflowGroups', () => Cell([])),\n        onHandler('onOpened'),\n        onHandler('onClosed')\n    ].concat(schema$6()));\n    const parts$5 = constant$1([\n        required({\n            factory: Toolbar,\n            schema: schema$e(),\n            name: 'primary'\n        }),\n        external$1({\n            schema: schema$e(),\n            name: 'overflow'\n        }),\n        external$1({\n            name: 'overflow-button'\n        }),\n        external$1({\n            name: 'overflow-group'\n        })\n    ]);\n\n    const schema$4 = constant$1([\n        required$1('items'),\n        markers$1(['itemSelector']),\n        field('tgroupBehaviours', [Keying])\n    ]);\n    const parts$4 = constant$1([\n        group({\n            name: 'items',\n            unit: 'item'\n        })\n    ]);\n\n    const factory$b = (detail, components, _spec, _externals) => ({\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.tgroupBehaviours, [\n            Keying.config({\n                mode: 'flow',\n                selector: detail.markers.itemSelector\n            })\n        ]),\n        domModification: {\n            attributes: {\n                role: 'toolbar'\n            }\n        }\n    });\n    const ToolbarGroup = composite({\n        name: 'ToolbarGroup',\n        configFields: schema$4(),\n        partFields: parts$4(),\n        factory: factory$b\n    });\n\n    const buildGroups = (comps) => map$2(comps, (g) => premade(g));\n    const refresh$1 = (toolbar, memFloatingToolbarButton, detail) => {\n        refresh$2(toolbar, detail, (overflowGroups) => {\n            detail.overflowGroups.set(overflowGroups);\n            memFloatingToolbarButton.getOpt(toolbar).each((floatingToolbarButton) => {\n                FloatingToolbarButton.setGroups(floatingToolbarButton, buildGroups(overflowGroups));\n            });\n        });\n    };\n    const factory$a = (detail, components, spec, externals) => {\n        const memFloatingToolbarButton = record(FloatingToolbarButton.sketch({\n            fetch: () => Future.nu((resolve) => {\n                resolve(buildGroups(detail.overflowGroups.get()));\n            }),\n            layouts: {\n                onLtr: () => [southwest$2, southeast$2],\n                onRtl: () => [southeast$2, southwest$2],\n                onBottomLtr: () => [northwest$2, northeast$2],\n                onBottomRtl: () => [northeast$2, northwest$2]\n            },\n            getBounds: spec.getOverflowBounds,\n            lazySink: detail.lazySink,\n            fireDismissalEventInstead: {},\n            markers: {\n                toggledClass: detail.markers.overflowToggledClass\n            },\n            parts: {\n                button: externals['overflow-button'](),\n                toolbar: externals.overflow()\n            },\n            onToggled: (comp, state) => detail[state ? 'onOpened' : 'onClosed'](comp)\n        }));\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            behaviours: augment(detail.splitToolbarBehaviours, [\n                Coupling.config({\n                    others: {\n                        overflowGroup: () => {\n                            return ToolbarGroup.sketch({\n                                ...externals['overflow-group'](),\n                                items: [\n                                    memFloatingToolbarButton.asSpec()\n                                ]\n                            });\n                        }\n                    }\n                })\n            ]),\n            apis: {\n                setGroups: (toolbar, groups) => {\n                    detail.builtGroups.set(map$2(groups, toolbar.getSystem().build));\n                    refresh$1(toolbar, memFloatingToolbarButton, detail);\n                },\n                refresh: (toolbar) => refresh$1(toolbar, memFloatingToolbarButton, detail),\n                toggle: (toolbar) => {\n                    memFloatingToolbarButton.getOpt(toolbar).each((floatingToolbarButton) => {\n                        FloatingToolbarButton.toggle(floatingToolbarButton);\n                    });\n                },\n                toggleWithoutFocusing: (toolbar) => {\n                    memFloatingToolbarButton.getOpt(toolbar).each(FloatingToolbarButton.toggleWithoutFocusing);\n                },\n                isOpen: (toolbar) => memFloatingToolbarButton.getOpt(toolbar).map(FloatingToolbarButton.isOpen).getOr(false),\n                reposition: (toolbar) => {\n                    memFloatingToolbarButton.getOpt(toolbar).each((floatingToolbarButton) => {\n                        FloatingToolbarButton.reposition(floatingToolbarButton);\n                    });\n                },\n                getOverflow: (toolbar) => memFloatingToolbarButton.getOpt(toolbar).bind(FloatingToolbarButton.getToolbar)\n            },\n            domModification: {\n                attributes: { role: 'group' }\n            }\n        };\n    };\n    const SplitFloatingToolbar = composite({\n        name: 'SplitFloatingToolbar',\n        configFields: schema$5(),\n        partFields: parts$5(),\n        factory: factory$a,\n        apis: {\n            setGroups: (apis, toolbar, groups) => {\n                apis.setGroups(toolbar, groups);\n            },\n            refresh: (apis, toolbar) => {\n                apis.refresh(toolbar);\n            },\n            reposition: (apis, toolbar) => {\n                apis.reposition(toolbar);\n            },\n            toggle: (apis, toolbar) => {\n                apis.toggle(toolbar);\n            },\n            toggleWithoutFocusing: (apis, toolbar) => {\n                apis.toggle(toolbar);\n            },\n            isOpen: (apis, toolbar) => apis.isOpen(toolbar),\n            getOverflow: (apis, toolbar) => apis.getOverflow(toolbar)\n        }\n    });\n\n    const schema$3 = constant$1([\n        markers$1(['closedClass', 'openClass', 'shrinkingClass', 'growingClass', 'overflowToggledClass']),\n        onHandler('onOpened'),\n        onHandler('onClosed')\n    ].concat(schema$6()));\n    const parts$3 = constant$1([\n        required({\n            factory: Toolbar,\n            schema: schema$e(),\n            name: 'primary'\n        }),\n        required({\n            factory: Toolbar,\n            schema: schema$e(),\n            name: 'overflow',\n            overrides: (detail) => {\n                return {\n                    toolbarBehaviours: derive$1([\n                        Sliding.config({\n                            dimension: {\n                                property: 'height'\n                            },\n                            closedClass: detail.markers.closedClass,\n                            openClass: detail.markers.openClass,\n                            shrinkingClass: detail.markers.shrinkingClass,\n                            growingClass: detail.markers.growingClass,\n                            onShrunk: (comp) => {\n                                getPart(comp, detail, 'overflow-button').each((button) => {\n                                    Toggling.off(button);\n                                });\n                                detail.onClosed(comp);\n                            },\n                            onGrown: (comp) => {\n                                detail.onOpened(comp);\n                            },\n                            onStartGrow: (comp) => {\n                                getPart(comp, detail, 'overflow-button').each(Toggling.on);\n                            }\n                        }),\n                        Keying.config({\n                            mode: 'acyclic',\n                            onEscape: (comp) => {\n                                getPart(comp, detail, 'overflow-button').each(Focusing.focus);\n                                return Optional.some(true);\n                            }\n                        })\n                    ])\n                };\n            }\n        }),\n        external$1({\n            name: 'overflow-button',\n            overrides: (detail) => ({\n                buttonBehaviours: derive$1([\n                    Toggling.config({\n                        toggleClass: detail.markers.overflowToggledClass,\n                        aria: {\n                            mode: 'expanded'\n                        },\n                        toggleOnExecute: false\n                    })\n                ])\n            })\n        }),\n        external$1({\n            name: 'overflow-group'\n        })\n    ]);\n\n    const isOpen = (toolbar, detail) => getPart(toolbar, detail, 'overflow').map(Sliding.hasGrown).getOr(false);\n    const toggleToolbar = (toolbar, detail, skipFocus) => {\n        // Make sure that the toolbar needs to toggled by checking for overflow button presence\n        getPart(toolbar, detail, 'overflow-button')\n            .each((oveflowButton) => {\n            getPart(toolbar, detail, 'overflow').each((overf) => {\n                refresh(toolbar, detail);\n                if (Sliding.hasShrunk(overf)) {\n                    const fn = detail.onOpened;\n                    detail.onOpened = (comp) => {\n                        if (!skipFocus) {\n                            Keying.focusIn(overf);\n                        }\n                        fn(comp);\n                        detail.onOpened = fn;\n                    };\n                }\n                else {\n                    const fn = detail.onClosed;\n                    detail.onClosed = (comp) => {\n                        if (!skipFocus) {\n                            Focusing.focus(oveflowButton);\n                        }\n                        fn(comp);\n                        detail.onClosed = fn;\n                    };\n                }\n                Sliding.toggleGrow(overf);\n            });\n        });\n    };\n    const refresh = (toolbar, detail) => {\n        getPart(toolbar, detail, 'overflow').each((overflow) => {\n            refresh$2(toolbar, detail, (groups) => {\n                const builtGroups = map$2(groups, (g) => premade(g));\n                Toolbar.setGroups(overflow, builtGroups);\n            });\n            getPart(toolbar, detail, 'overflow-button').each((button) => {\n                if (Sliding.hasGrown(overflow)) {\n                    Toggling.on(button);\n                }\n            });\n            Sliding.refresh(overflow);\n        });\n    };\n    const factory$9 = (detail, components, spec, externals) => {\n        const toolbarToggleEvent = 'alloy.toolbar.toggle';\n        const doSetGroups = (toolbar, groups) => {\n            const built = map$2(groups, toolbar.getSystem().build);\n            detail.builtGroups.set(built);\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            behaviours: augment(detail.splitToolbarBehaviours, [\n                Coupling.config({\n                    others: {\n                        overflowGroup: (toolbar) => {\n                            return ToolbarGroup.sketch({\n                                ...externals['overflow-group'](),\n                                items: [\n                                    Button.sketch({\n                                        ...externals['overflow-button'](),\n                                        action: (_button) => {\n                                            emit(toolbar, toolbarToggleEvent);\n                                        }\n                                    })\n                                ]\n                            });\n                        }\n                    }\n                }),\n                config('toolbar-toggle-events', [\n                    run$1(toolbarToggleEvent, (toolbar) => {\n                        toggleToolbar(toolbar, detail, false);\n                    })\n                ])\n            ]),\n            apis: {\n                setGroups: (toolbar, groups) => {\n                    doSetGroups(toolbar, groups);\n                    refresh(toolbar, detail);\n                },\n                refresh: (toolbar) => refresh(toolbar, detail),\n                toggle: (toolbar) => {\n                    toggleToolbar(toolbar, detail, false);\n                },\n                toggleWithoutFocusing: (toolbar) => {\n                    toggleToolbar(toolbar, detail, true);\n                },\n                isOpen: (toolbar) => isOpen(toolbar, detail)\n            },\n            domModification: {\n                attributes: { role: 'group' }\n            }\n        };\n    };\n    const SplitSlidingToolbar = composite({\n        name: 'SplitSlidingToolbar',\n        configFields: schema$3(),\n        partFields: parts$3(),\n        factory: factory$9,\n        apis: {\n            setGroups: (apis, toolbar, groups) => {\n                apis.setGroups(toolbar, groups);\n            },\n            refresh: (apis, toolbar) => {\n                apis.refresh(toolbar);\n            },\n            toggle: (apis, toolbar) => {\n                apis.toggle(toolbar);\n            },\n            isOpen: (apis, toolbar) => apis.isOpen(toolbar)\n        }\n    });\n\n    const factory$8 = (detail, _spec) => ({\n        uid: detail.uid,\n        dom: detail.dom,\n        components: detail.components,\n        events: events(detail.action),\n        behaviours: augment(detail.tabButtonBehaviours, [\n            Focusing.config({}),\n            Keying.config({\n                mode: 'execution',\n                useSpace: true,\n                useEnter: true\n            }),\n            Representing.config({\n                store: {\n                    mode: 'memory',\n                    initialValue: detail.value\n                }\n            })\n        ]),\n        domModification: detail.domModification\n    });\n    const TabButton = single({\n        name: 'TabButton',\n        configFields: [\n            defaulted('uid', undefined),\n            required$1('value'),\n            field$1('dom', 'dom', mergeWithThunk(() => ({\n                attributes: {\n                    'role': 'tab',\n                    // NOTE: This is used in TabSection to connect \"labelledby\"\n                    'id': generate$6('aria'),\n                    'aria-selected': 'false'\n                }\n            })), anyValue()),\n            option$3('action'),\n            defaulted('domModification', {}),\n            field('tabButtonBehaviours', [Focusing, Keying, Representing]),\n            required$1('view')\n        ],\n        factory: factory$8\n    });\n\n    const schema$2 = constant$1([\n        required$1('tabs'),\n        required$1('dom'),\n        defaulted('clickToDismiss', false),\n        field('tabbarBehaviours', [Highlighting, Keying]),\n        markers$1(['tabClass', 'selectedClass'])\n    ]);\n    const tabsPart = group({\n        factory: TabButton,\n        name: 'tabs',\n        unit: 'tab',\n        overrides: (barDetail) => {\n            const dismissTab$1 = (tabbar, button) => {\n                Highlighting.dehighlight(tabbar, button);\n                emitWith(tabbar, dismissTab(), {\n                    tabbar,\n                    button\n                });\n            };\n            const changeTab$1 = (tabbar, button) => {\n                Highlighting.highlight(tabbar, button);\n                emitWith(tabbar, changeTab(), {\n                    tabbar,\n                    button\n                });\n            };\n            return {\n                action: (button) => {\n                    const tabbar = button.getSystem().getByUid(barDetail.uid).getOrDie();\n                    const activeButton = Highlighting.isHighlighted(tabbar, button);\n                    const response = (() => {\n                        if (activeButton && barDetail.clickToDismiss) {\n                            return dismissTab$1;\n                        }\n                        else if (!activeButton) {\n                            return changeTab$1;\n                        }\n                        else {\n                            return noop;\n                        }\n                    })();\n                    response(tabbar, button);\n                },\n                domModification: {\n                    classes: [barDetail.markers.tabClass]\n                }\n            };\n        }\n    });\n    const parts$2 = constant$1([\n        tabsPart\n    ]);\n\n    const factory$7 = (detail, components, _spec, _externals) => ({\n        'uid': detail.uid,\n        'dom': detail.dom,\n        components,\n        'debug.sketcher': 'Tabbar',\n        'domModification': {\n            attributes: {\n                role: 'tablist'\n            }\n        },\n        'behaviours': augment(detail.tabbarBehaviours, [\n            Highlighting.config({\n                highlightClass: detail.markers.selectedClass,\n                itemClass: detail.markers.tabClass,\n                // https://www.w3.org/TR/2010/WD-wai-aria-practices-20100916/#tabpanel\n                // Consider a more seam-less way of combining highlighting and toggling\n                onHighlight: (tabbar, tab) => {\n                    // TODO: Integrate highlighting and toggling in a nice way\n                    set$9(tab.element, 'aria-selected', 'true');\n                },\n                onDehighlight: (tabbar, tab) => {\n                    set$9(tab.element, 'aria-selected', 'false');\n                }\n            }),\n            Keying.config({\n                mode: 'flow',\n                getInitial: (tabbar) => {\n                    // Restore focus to the previously highlighted tab.\n                    return Highlighting.getHighlighted(tabbar).map((tab) => tab.element);\n                },\n                selector: '.' + detail.markers.tabClass,\n                executeOnMove: true\n            })\n        ])\n    });\n    const Tabbar = composite({\n        name: 'Tabbar',\n        configFields: schema$2(),\n        partFields: parts$2(),\n        factory: factory$7\n    });\n\n    const factory$6 = (detail, _spec) => ({\n        uid: detail.uid,\n        dom: detail.dom,\n        behaviours: augment(detail.tabviewBehaviours, [\n            Replacing.config({})\n        ]),\n        domModification: {\n            attributes: { role: 'tabpanel' }\n        }\n    });\n    const Tabview = single({\n        name: 'Tabview',\n        configFields: [\n            field('tabviewBehaviours', [Replacing])\n        ],\n        factory: factory$6\n    });\n\n    const schema$1 = constant$1([\n        defaulted('selectFirst', true),\n        onHandler('onChangeTab'),\n        onHandler('onDismissTab'),\n        defaulted('tabs', []),\n        field('tabSectionBehaviours', [])\n    ]);\n    const barPart = required({\n        factory: Tabbar,\n        schema: [\n            required$1('dom'),\n            requiredObjOf('markers', [\n                required$1('tabClass'),\n                required$1('selectedClass')\n            ])\n        ],\n        name: 'tabbar',\n        defaults: (detail) => {\n            return {\n                tabs: detail.tabs\n            };\n        }\n    });\n    const viewPart = required({\n        factory: Tabview,\n        name: 'tabview'\n    });\n    const parts$1 = constant$1([\n        barPart,\n        viewPart\n    ]);\n\n    const factory$5 = (detail, components, _spec, _externals) => {\n        const changeTab$1 = (button) => {\n            const tabValue = Representing.getValue(button);\n            getPart(button, detail, 'tabview').each((tabview) => {\n                const tabWithValue = find$5(detail.tabs, (t) => t.value === tabValue);\n                tabWithValue.each((tabData) => {\n                    const panel = tabData.view();\n                    // Update the tabview to refer to the current tab.\n                    getOpt(button.element, 'id').each((id) => {\n                        set$9(tabview.element, 'aria-labelledby', id);\n                    });\n                    Replacing.set(tabview, panel);\n                    detail.onChangeTab(tabview, button, panel);\n                });\n            });\n        };\n        const changeTabBy = (section, byPred) => {\n            getPart(section, detail, 'tabbar').each((tabbar) => {\n                byPred(tabbar).each(emitExecute);\n            });\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            behaviours: get$2(detail.tabSectionBehaviours),\n            events: derive$2(flatten([\n                detail.selectFirst ? [\n                    runOnAttached((section, _simulatedEvent) => {\n                        changeTabBy(section, Highlighting.getFirst);\n                    })\n                ] : [],\n                [\n                    run$1(changeTab(), (section, simulatedEvent) => {\n                        const button = simulatedEvent.event.button;\n                        changeTab$1(button);\n                    }),\n                    run$1(dismissTab(), (section, simulatedEvent) => {\n                        const button = simulatedEvent.event.button;\n                        detail.onDismissTab(section, button);\n                    })\n                ]\n            ])),\n            apis: {\n                getViewItems: (section) => {\n                    return getPart(section, detail, 'tabview').map((tabview) => Replacing.contents(tabview)).getOr([]);\n                },\n                // How should \"clickToDismiss\" interact with this? At the moment, it will never dismiss\n                showTab: (section, tabKey) => {\n                    // We only change the tab if it isn't currently active because that takes\n                    // the whole \"dismiss\" issue out of the equation.\n                    const getTabIfNotActive = (tabbar) => {\n                        const candidates = Highlighting.getCandidates(tabbar);\n                        const optTab = find$5(candidates, (c) => Representing.getValue(c) === tabKey);\n                        return optTab.filter((tab) => !Highlighting.isHighlighted(tabbar, tab));\n                    };\n                    changeTabBy(section, getTabIfNotActive);\n                }\n            }\n        };\n    };\n    const TabSection = composite({\n        name: 'TabSection',\n        configFields: schema$1(),\n        partFields: parts$1(),\n        factory: factory$5,\n        apis: {\n            getViewItems: (apis, component) => apis.getViewItems(component),\n            showTab: (apis, component, tabKey) => {\n                apis.showTab(component, tabKey);\n            }\n        }\n    });\n\n    // When showing a value in an input field, which part of the item do we use?\n    const setValueFromItem = (model, input, item) => {\n        const itemData = Representing.getValue(item);\n        Representing.setValue(input, itemData);\n        setCursorAtEnd(input);\n    };\n    const setSelectionOn = (input, f) => {\n        const el = input.element;\n        const value = get$5(el);\n        const node = el.dom;\n        // Only do for valid input types.\n        if (get$g(el, 'type') !== 'number') {\n            f(node, value);\n        }\n    };\n    const setCursorAtEnd = (input) => {\n        setSelectionOn(input, (node, value) => node.setSelectionRange(value.length, value.length));\n    };\n    const setSelectionToEnd = (input, startOffset) => {\n        setSelectionOn(input, (node, value) => node.setSelectionRange(startOffset, value.length));\n    };\n    const attemptSelectOver = (model, input, item) => {\n        if (!model.selectsOver) {\n            return Optional.none();\n        }\n        else {\n            const currentValue = Representing.getValue(input);\n            const inputDisplay = model.getDisplayText(currentValue);\n            const itemValue = Representing.getValue(item);\n            const itemDisplay = model.getDisplayText(itemValue);\n            return itemDisplay.indexOf(inputDisplay) === 0 ?\n                Optional.some(() => {\n                    setValueFromItem(model, input, item);\n                    setSelectionToEnd(input, inputDisplay.length);\n                })\n                : Optional.none();\n        }\n    };\n\n    const itemExecute = constant$1('alloy.typeahead.itemexecute');\n\n    // TODO: Fix this.\n    const make$2 = (detail, components, spec, externals) => {\n        const navigateList = (comp, simulatedEvent, highlighter) => {\n            /*\n             * If we have an open Sandbox with an active menu,\n             * but no highlighted item, then highlight the menu\n             *\n             * If we have an open Sandbox with an active menu,\n             * and there is a highlighted item, simulated a keydown\n             * on the menu\n             *\n             * If we have a closed sandbox, open the sandbox\n             *\n             * Regardless, this is a user initiated action. End previewing.\n             */\n            detail.previewing.set(false);\n            const sandbox = Coupling.getCoupled(comp, 'sandbox');\n            if (Sandboxing.isOpen(sandbox)) {\n                Composing.getCurrent(sandbox).each((menu) => {\n                    Highlighting.getHighlighted(menu).fold(() => {\n                        highlighter(menu);\n                    }, () => {\n                        dispatchEvent(sandbox, menu.element, 'keydown', simulatedEvent);\n                    });\n                });\n            }\n            else {\n                const onOpenSync = (sandbox) => {\n                    Composing.getCurrent(sandbox).each(highlighter);\n                };\n                open(detail, mapFetch(comp), comp, sandbox, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n            }\n        };\n        // Due to the fact that typeahead probably need to separate value from text, they can't reuse\n        // (easily) the same representing logic as input fields.\n        const focusBehaviours$1 = focusBehaviours(detail);\n        const mapFetch = (comp) => (tdata) => tdata.map((data) => {\n            const menus = values(data.menus);\n            const items = bind$3(menus, (menu) => filter$2(menu.items, (item) => item.type === 'item'));\n            const repState = Representing.getState(comp);\n            repState.update(map$2(items, (item) => item.data));\n            return data;\n        });\n        // This function (getActiveMenu) is intended to make it easier to read what is happening\n        // without having to decipher the Highlighting and Composing calls.\n        const getActiveMenu = (sandboxComp) => Composing.getCurrent(sandboxComp);\n        const typeaheadCustomEvents = 'typeaheadevents';\n        const behaviours = [\n            Focusing.config({}),\n            Representing.config({\n                onSetValue: detail.onSetValue,\n                store: {\n                    mode: 'dataset',\n                    getDataKey: (comp) => get$5(comp.element),\n                    // This really needs to be configurable\n                    getFallbackEntry: (itemString) => ({\n                        value: itemString,\n                        meta: {}\n                    }),\n                    setValue: (comp, data) => {\n                        set$4(comp.element, detail.model.getDisplayText(data));\n                    },\n                    ...detail.initialData.map((d) => wrap('initialValue', d)).getOr({})\n                }\n            }),\n            Streaming.config({\n                stream: {\n                    mode: 'throttle',\n                    delay: detail.responseTime,\n                    stopEvent: false\n                },\n                onStream: (component, _simulatedEvent) => {\n                    const sandbox = Coupling.getCoupled(component, 'sandbox');\n                    const focusInInput = Focusing.isFocused(component);\n                    // You don't want it to change when something else has triggered the change.\n                    if (focusInInput) {\n                        if (get$5(component.element).length >= detail.minChars) {\n                            // Get the value of the previously active (selected/highlighted) item. We\n                            // are going to try to preserve this.\n                            const previousValue = getActiveMenu(sandbox).bind((activeMenu) => Highlighting.getHighlighted(activeMenu).map(Representing.getValue));\n                            // Turning previewing ON here every keystroke is unnecessary, but relies\n                            // on the fact that it will be turned off if required by highlighting events.\n                            // So even if previewing was supposed to be off, turning it on here is\n                            // just temporary, because the onOpenSync below will trigger a highlight\n                            // if there was meant to be one, which will turn it off if required.\n                            detail.previewing.set(true);\n                            const onOpenSync = (_sandbox) => {\n                                // This getActiveMenu relies on a menu being highlighted / active\n                                getActiveMenu(sandbox).each((activeMenu) => {\n                                    // The folds can make this hard to follow, but the basic gist of it is\n                                    // that we want to see if we need to highlight one of the items in the\n                                    // menu that we just opened. If we do highlight an item, then that\n                                    // highlighting action will clear previewing (handled by the TieredMenu\n                                    // part configuration for onHighlight). Note: that onOpenSync runs\n                                    // *after* the highlightOnOpen setting.\n                                    //\n                                    // 1. If in \"selectsOver\" mode and we don't have a previous item,\n                                    // then highlight the first one. This one will be used as the basis\n                                    // for the \"selectsOver\" text selection. The act of highlighting the\n                                    // first item will take us out of previewing mode. If the \"selectsOver\"\n                                    // operation fails, it should clear the highlight, and restore previewing\n                                    // 2. If not in \"selectsOver\" mode, and we don't have a previous item,\n                                    // then we don't highlight anything. This will keep us in previewing\n                                    // mode until the menu is interacted with (hover, navigation etc.)\n                                    // 3. If we have a previous item, then try and rehighlight it. But if\n                                    // we can't, the just highlight the first. Either action will take us\n                                    // out of previewing mode.\n                                    previousValue.fold(() => {\n                                        // We are using \"selectOver\", so we need *something* to highlight\n                                        if (detail.model.selectsOver) {\n                                            Highlighting.highlightFirst(activeMenu);\n                                        }\n                                        // We aren't using \"selectOver\", so don't highlight anything\n                                        // to preserve our \"previewing\" mode.\n                                    }, (pv) => {\n                                        // We have a previous item, so if we can't rehighlight it, then\n                                        // we'll change to the first item. We want to keep some selection.\n                                        Highlighting.highlightBy(activeMenu, (item) => {\n                                            const itemData = Representing.getValue(item);\n                                            return itemData.value === pv.value;\n                                        });\n                                        // Highlight first if could not find it?\n                                        Highlighting.getHighlighted(activeMenu).orThunk(() => {\n                                            Highlighting.highlightFirst(activeMenu);\n                                            return Optional.none();\n                                        });\n                                    });\n                                });\n                            };\n                            open(detail, mapFetch(component), component, sandbox, externals, onOpenSync, \n                            // The onOpenSync takes care of what should be given the highlights, but\n                            // we want to highlight just the menu so that the onOpenSync can find the\n                            // activeMenu.\n                            HighlightOnOpen.HighlightJustMenu).get(noop);\n                        }\n                    }\n                },\n                cancelEvent: typeaheadCancel()\n            }),\n            Keying.config({\n                mode: 'special',\n                onDown: (comp, simulatedEvent) => {\n                    // The navigation here will stop the \"previewing\" mode, because\n                    // now the menu will get focus (fake focus, but focus nevertheless)\n                    navigateList(comp, simulatedEvent, Highlighting.highlightFirst);\n                    return Optional.some(true);\n                },\n                onEscape: (comp) => {\n                    // Escape only has handling if the sandbox is visible. It has no meaning\n                    // to the input itself.\n                    const sandbox = Coupling.getCoupled(comp, 'sandbox');\n                    if (Sandboxing.isOpen(sandbox)) {\n                        Sandboxing.close(sandbox);\n                        return Optional.some(true);\n                    }\n                    return Optional.none();\n                },\n                onUp: (comp, simulatedEvent) => {\n                    // The navigation here will stop the \"previewing\" mode, because\n                    // now the menu will get focus (fake focus, but focus nevertheless)\n                    navigateList(comp, simulatedEvent, Highlighting.highlightLast);\n                    return Optional.some(true);\n                },\n                onEnter: (comp) => {\n                    const sandbox = Coupling.getCoupled(comp, 'sandbox');\n                    const sandboxIsOpen = Sandboxing.isOpen(sandbox);\n                    // 'Previewing' means that items are shown but none has been actively selected by the user.\n                    // When previewing, all keyboard input should still be processed by the\n                    // input itself, not the menu. The menu is not considered to have focus.\n                    // 'Previewing' is turned on by (streaming) keystrokes, and turned off by\n                    // successful interaction with the menu (navigation, highlighting, hovering).\n                    // So if we aren't previewing, and the dropdown sandbox is open, then\n                    // we process <enter> keys on the items in the menu. All this will do\n                    // is trigger an itemExecute event. The typeahead events (in the spec below)\n                    // are responsible for doing something with that event.\n                    if (sandboxIsOpen && !detail.previewing.get()) {\n                        return getActiveMenu(sandbox).bind((activeMenu) => Highlighting.getHighlighted(activeMenu)).map((item) => {\n                            // And item was selected, so trigger execute and consider the\n                            // <enter> key 'handled'\n                            emitWith(comp, itemExecute(), { item });\n                            return true;\n                        });\n                    }\n                    else {\n                        // We are either previewing, or the sandbox isn't open, so we should\n                        // process the <enter> key inside the input itself. This should cancel\n                        // any attempt to fetch data (the typeaheadCancel), and trigger the execute.\n                        // We also close the sandbox if it's open.\n                        const currentValue = Representing.getValue(comp);\n                        emit(comp, typeaheadCancel());\n                        detail.onExecute(sandbox, comp, currentValue);\n                        // If we're open and previewing, close the sandbox after firing execute.\n                        if (sandboxIsOpen) {\n                            Sandboxing.close(sandbox);\n                        }\n                        return Optional.some(true);\n                    }\n                }\n            }),\n            Toggling.config({\n                toggleClass: detail.markers.openClass,\n                aria: {\n                    mode: 'expanded'\n                }\n            }),\n            Coupling.config({\n                others: {\n                    sandbox: (hotspot) => {\n                        return makeSandbox$1(detail, hotspot, {\n                            onOpen: () => Toggling.on(hotspot),\n                            onClose: () => {\n                                // TINY-9280: Remove aria-activedescendant that is set when menu item is highlighted\n                                detail.lazyTypeaheadComp.get().each((input) => remove$8(input.element, 'aria-activedescendant'));\n                                Toggling.off(hotspot);\n                            }\n                        });\n                    }\n                }\n            }),\n            config(typeaheadCustomEvents, [\n                runOnAttached((typeaheadComp) => {\n                    // Set up the reference to the typeahead, so that it can retrieved from\n                    // the tiered menu part, even if the tieredmenu is in a different\n                    // system / alloy root / mothership.\n                    detail.lazyTypeaheadComp.set(Optional.some(typeaheadComp));\n                }),\n                runOnDetached((_typeaheadComp) => {\n                    detail.lazyTypeaheadComp.set(Optional.none());\n                }),\n                runOnExecute$1((comp) => {\n                    const onOpenSync = noop;\n                    togglePopup(detail, mapFetch(comp), comp, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n                }),\n                run$1(itemExecute(), (comp, se) => {\n                    const sandbox = Coupling.getCoupled(comp, 'sandbox');\n                    // Copy the value from the executed item into the input, because it was \"chosen\"\n                    setValueFromItem(detail.model, comp, se.event.item);\n                    emit(comp, typeaheadCancel());\n                    detail.onItemExecute(comp, sandbox, se.event.item, Representing.getValue(comp));\n                    Sandboxing.close(sandbox);\n                    setCursorAtEnd(comp);\n                })\n            ].concat(detail.dismissOnBlur ? [\n                run$1(postBlur(), (typeahead) => {\n                    const sandbox = Coupling.getCoupled(typeahead, 'sandbox');\n                    // Only close the sandbox if the focus isn't inside it!\n                    if (search(sandbox.element).isNone()) {\n                        Sandboxing.close(sandbox);\n                    }\n                })\n            ] : []))\n        ];\n        // The order specified here isn't important. Alloy just requires a\n        // deterministic order for the configured behaviours.\n        const eventOrder = {\n            [detachedFromDom()]: [\n                Representing.name(),\n                Streaming.name(),\n                typeaheadCustomEvents\n            ],\n            ...detail.eventOrder,\n        };\n        return {\n            uid: detail.uid,\n            dom: dom$1(deepMerge(detail, {\n                // TODO: Add aria-activedescendant attribute\n                inputAttributes: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'list',\n                    'aria-haspopup': 'true'\n                }\n            })),\n            behaviours: {\n                ...focusBehaviours$1,\n                ...augment(detail.typeaheadBehaviours, behaviours)\n            },\n            eventOrder\n        };\n    };\n\n    const schema = constant$1([\n        option$3('lazySink'),\n        required$1('fetch'),\n        defaulted('minChars', 5),\n        defaulted('responseTime', 1000),\n        onHandler('onOpen'),\n        // TODO: Remove dupe with Dropdown\n        defaulted('getHotspot', Optional.some),\n        defaulted('getAnchorOverrides', constant$1({})),\n        defaulted('layouts', Optional.none()),\n        defaulted('eventOrder', {}),\n        // Information about what these model settings do can be found in TypeaheadTypes\n        defaultedObjOf('model', {}, [\n            defaulted('getDisplayText', (itemData) => itemData.meta !== undefined && itemData.meta.text !== undefined ? itemData.meta.text : itemData.value),\n            defaulted('selectsOver', true),\n            defaulted('populateFromBrowse', true)\n        ]),\n        onHandler('onSetValue'),\n        onKeyboardHandler('onExecute'),\n        onHandler('onItemExecute'),\n        defaulted('inputClasses', []),\n        defaulted('inputAttributes', {}),\n        defaulted('inputStyles', {}),\n        defaulted('matchWidth', true),\n        defaulted('useMinWidth', false),\n        defaulted('dismissOnBlur', true),\n        markers$1(['openClass']),\n        option$3('initialData'),\n        option$3('listRole'),\n        field('typeaheadBehaviours', [\n            Focusing, Representing, Streaming, Keying, Toggling, Coupling\n        ]),\n        customField('lazyTypeaheadComp', () => Cell(Optional.none)),\n        customField('previewing', () => Cell(true))\n    ].concat(schema$a()).concat(sandboxFields()));\n    const parts = constant$1([\n        external$1({\n            schema: [\n                tieredMenuMarkers()\n            ],\n            name: 'menu',\n            overrides: (detail) => {\n                return {\n                    fakeFocus: true,\n                    onHighlightItem: (_tmenu, menu, item) => {\n                        if (!detail.previewing.get()) {\n                            // We need to use this type of reference, rather than just looking\n                            // it up from the system by uid, because the input and the tieredmenu\n                            // might be in different systems.\n                            detail.lazyTypeaheadComp.get().each((input) => {\n                                if (detail.model.populateFromBrowse) {\n                                    setValueFromItem(detail.model, input, item);\n                                }\n                                // The focus is retained on the input element when the menu is shown, unlike the combobox, in which the focus is passed to the menu.\n                                // This results in screen readers not being able to announce the menu or highlighted item.\n                                // The solution is to tell screen readers which menu item is highlighted using the `aria-activedescendant` attribute.\n                                // TINY-9280: The aria attribute is removed when the menu is closed.\n                                // Since `onDehighlight` is called only when highlighting a new menu item, this will be handled in\n                                // https://github.com/tinymce/tinymce/blob/2d8c1c034e8aa484b868a0c44605489ee0ca9cd4/modules/alloy/src/main/ts/ephox/alloy/ui/composite/TypeaheadSpec.ts#L282\n                                getOpt(item.element, 'id').each((id) => set$9(input.element, 'aria-activedescendant', id));\n                            });\n                        }\n                        else {\n                            // ASSUMPTION: Currently, any interaction with the menu via the keyboard or the mouse\n                            // will firstly clear previewing mode before triggering any highlights\n                            // so if we are still in previewing mode by the time we get to the highlight call,\n                            // that means that the highlight was triggered NOT by the user interacting\n                            // with the menu, but instead by the Highlighting API call that happens automatically\n                            // when a streamed keyboard input event is updating its results. That call will\n                            // try to keep any active highlight if there already was one (defaulting to first\n                            // if it can't find the original), but if there wasn't an active highlight, but\n                            // it is using \"selectsOver\", it will just highlight the first item. In this\n                            // latter case, it is only doing that so that selectsOver has something to copy.\n                            // So all of the complex code below is trying to handle whether we should stay\n                            // in previewing mode after this highlight, and the ONLY case where we should stay\n                            // in previewing mode is that we were in previewing mode, we are using selectsOver,\n                            // and the selectsOver failed to succeed. In that case, to stay in previewing mode,\n                            // we want to cancel the highlight that we just made via the highlighting API\n                            // and reset previewing to true. Otherwise, all codepaths should set previewing\n                            // to false, because now we have a valid highlight.\n                            //\n                            // As of 2022-08-18, the selectsOver model is not in use by TinyMCE, so\n                            // this subtle interaction is unfortunately largely untested. Also, if we can't\n                            // get a reference to the typeahead input by lazyTypeaheadComp, then we don't\n                            // change previewing, either. Note also, that it is likely that if we checked\n                            // if selectsOver would succeed before setting the highlight in the streaming\n                            // response, this could might be a lot easier to follow.\n                            detail.lazyTypeaheadComp.get().each((input) => {\n                                attemptSelectOver(detail.model, input, item).fold(\n                                // If we are in \"previewing\" mode and we can't select over the\n                                // thing that is first, then clear the highlight.\n                                // Hopefully, this doesn't cause a flicker. Find a better\n                                // way to do this.\n                                () => {\n                                    // If using \"selectOver\", we essentially want to cancel the highlight\n                                    // that was only invoked just so that we'd have something to selectOver,\n                                    // so we dehighlight, and then, importantly, *DON'T* clear previewing.\n                                    // We'll set it to be true to be explicit, although it should\n                                    // always be true if it reached here (unless an above function changed\n                                    // it)\n                                    if (detail.model.selectsOver) {\n                                        Highlighting.dehighlight(menu, item);\n                                        detail.previewing.set(true);\n                                    }\n                                    else {\n                                        // Because we aren't using selectsOver mode, we now want to keep\n                                        // whatever highlight we just made, and because we have a highlighted\n                                        // item in the menu, we are no longer previewing.\n                                        detail.previewing.set(false);\n                                    }\n                                }, ((selectOverTextInInput) => {\n                                    // We have made a selection in the menu, and have selected over text\n                                    // in the input, so clear previewing.\n                                    selectOverTextInInput();\n                                    detail.previewing.set(false);\n                                }));\n                            });\n                        }\n                    },\n                    // Because the focus stays inside the input, this onExecute is fired when the\n                    // user \"clicks\" on an item. The focusing behaviour should be configured\n                    // so that items don't get focus, but they prevent a mousedown event from\n                    // firing so that the typeahead doesn't lose focus. This is the handler\n                    // for clicking on an item. We need to close the sandbox, update the typeahead\n                    // to show the item clicked on, and fire an execute.\n                    onExecute: (_menu, item) => {\n                        // Note: This will only work when the typeahead and menu are in the same system.\n                        return detail.lazyTypeaheadComp.get().map((typeahead) => {\n                            emitWith(typeahead, itemExecute(), { item });\n                            return true;\n                        });\n                    },\n                    onHover: (menu, item) => {\n                        // Hovering is also a user-initiated action, so previewing mode is over.\n                        // TODO: Have a better API for managing state in between parts.\n                        detail.previewing.set(false);\n                        detail.lazyTypeaheadComp.get().each((input) => {\n                            if (detail.model.populateFromBrowse) {\n                                setValueFromItem(detail.model, input, item);\n                            }\n                        });\n                    }\n                };\n            }\n        })\n    ]);\n\n    const Typeahead = composite({\n        name: 'Typeahead',\n        configFields: schema(),\n        partFields: parts(),\n        factory: make$2\n    });\n\n    var global$b = tinymce.util.Tools.resolve('tinymce.ThemeManager');\n\n    var global$a = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$9 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var ToolbarMode$1;\n    (function (ToolbarMode) {\n        ToolbarMode[\"default\"] = \"wrap\";\n        ToolbarMode[\"floating\"] = \"floating\";\n        ToolbarMode[\"sliding\"] = \"sliding\";\n        ToolbarMode[\"scrolling\"] = \"scrolling\";\n    })(ToolbarMode$1 || (ToolbarMode$1 = {}));\n    var ToolbarLocation$1;\n    (function (ToolbarLocation) {\n        ToolbarLocation[\"auto\"] = \"auto\";\n        ToolbarLocation[\"top\"] = \"top\";\n        ToolbarLocation[\"bottom\"] = \"bottom\";\n    })(ToolbarLocation$1 || (ToolbarLocation$1 = {}));\n    const option$2 = (name) => (editor) => editor.options.get(name);\n    const wrapOptional = (fn) => (editor) => Optional.from(fn(editor));\n    const register$f = (editor) => {\n        const isPhone = global$7.deviceType.isPhone();\n        const isMobile = global$7.deviceType.isTablet() || isPhone;\n        const registerOption = editor.options.register;\n        const stringOrFalseProcessor = (value) => isString(value) || value === false;\n        const stringOrNumberProcessor = (value) => isString(value) || isNumber(value);\n        registerOption('skin', {\n            processor: (value) => isString(value) || value === false,\n            default: 'oxide'\n        });\n        registerOption('skin_url', {\n            processor: 'string'\n        });\n        registerOption('height', {\n            processor: stringOrNumberProcessor,\n            default: Math.max(editor.getElement().offsetHeight, 400)\n        });\n        registerOption('width', {\n            processor: stringOrNumberProcessor,\n            default: global$9.DOM.getStyle(editor.getElement(), 'width')\n        });\n        registerOption('min_height', {\n            processor: 'number',\n            default: 100\n        });\n        registerOption('min_width', {\n            processor: 'number'\n        });\n        registerOption('max_height', {\n            processor: 'number'\n        });\n        registerOption('max_width', {\n            processor: 'number'\n        });\n        registerOption('style_formats', {\n            processor: 'object[]'\n        });\n        registerOption('style_formats_merge', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('style_formats_autohide', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('line_height_formats', {\n            processor: 'string',\n            default: '1 1.1 1.2 1.3 1.4 1.5 2'\n        });\n        registerOption('font_family_formats', {\n            processor: 'string',\n            default: 'Andale Mono=andale mono,monospace;' +\n                'Arial=arial,helvetica,sans-serif;' +\n                'Arial Black=arial black,sans-serif;' +\n                'Book Antiqua=book antiqua,palatino,serif;' +\n                'Comic Sans MS=comic sans ms,sans-serif;' +\n                'Courier New=courier new,courier,monospace;' +\n                'Georgia=georgia,palatino,serif;' +\n                'Helvetica=helvetica,arial,sans-serif;' +\n                'Impact=impact,sans-serif;' +\n                'Symbol=symbol;' +\n                'Tahoma=tahoma,arial,helvetica,sans-serif;' +\n                'Terminal=terminal,monaco,monospace;' +\n                'Times New Roman=times new roman,times,serif;' +\n                'Trebuchet MS=trebuchet ms,geneva,sans-serif;' +\n                'Verdana=verdana,geneva,sans-serif;' +\n                'Webdings=webdings;' +\n                'Wingdings=wingdings,zapf dingbats'\n        });\n        registerOption('font_size_formats', {\n            processor: 'string',\n            default: '8pt 10pt 12pt 14pt 18pt 24pt 36pt'\n        });\n        registerOption('font_size_input_default_unit', {\n            processor: 'string',\n            default: 'pt'\n        });\n        registerOption('block_formats', {\n            processor: 'string',\n            default: 'Paragraph=p;' +\n                'Heading 1=h1;' +\n                'Heading 2=h2;' +\n                'Heading 3=h3;' +\n                'Heading 4=h4;' +\n                'Heading 5=h5;' +\n                'Heading 6=h6;' +\n                'Preformatted=pre'\n        });\n        registerOption('content_langs', {\n            processor: 'object[]'\n        });\n        registerOption('removed_menuitems', {\n            processor: 'string',\n            default: ''\n        });\n        registerOption('menubar', {\n            processor: (value) => isString(value) || isBoolean(value),\n            // Phones don't have a lot of screen space so disable the menubar\n            default: !isPhone\n        });\n        registerOption('menu', {\n            processor: 'object',\n            default: {}\n        });\n        registerOption('toolbar', {\n            processor: (value) => {\n                if (isBoolean(value) || isString(value) || isArray(value)) {\n                    return { value, valid: true };\n                }\n                else {\n                    return { valid: false, message: 'Must be a boolean, string or array.' };\n                }\n            },\n            default: true\n        });\n        // Register the toolbarN variations: toolbar1 -> toolbar9\n        range$2(9, (num) => {\n            registerOption('toolbar' + (num + 1), {\n                processor: 'string'\n            });\n        });\n        registerOption('toolbar_mode', {\n            processor: 'string',\n            // Use the default side-scrolling toolbar for tablets/phones\n            default: isMobile ? 'scrolling' : 'floating'\n        });\n        registerOption('toolbar_groups', {\n            processor: 'object',\n            default: {}\n        });\n        registerOption('toolbar_location', {\n            processor: 'string',\n            default: ToolbarLocation$1.auto\n        });\n        registerOption('toolbar_persist', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('toolbar_sticky', {\n            processor: 'boolean',\n            default: editor.inline\n        });\n        registerOption('toolbar_sticky_offset', {\n            processor: 'number',\n            default: 0\n        });\n        registerOption('fixed_toolbar_container', {\n            processor: 'string',\n            default: ''\n        });\n        registerOption('fixed_toolbar_container_target', {\n            processor: 'object'\n        });\n        registerOption('ui_mode', {\n            processor: 'string',\n            default: 'combined'\n        });\n        registerOption('file_picker_callback', {\n            processor: 'function'\n        });\n        registerOption('file_picker_validator_handler', {\n            processor: 'function'\n        });\n        registerOption('file_picker_types', {\n            processor: 'string'\n        });\n        registerOption('typeahead_urls', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('anchor_top', {\n            processor: stringOrFalseProcessor,\n            default: '#top'\n        });\n        registerOption('anchor_bottom', {\n            processor: stringOrFalseProcessor,\n            default: '#bottom'\n        });\n        registerOption('draggable_modal', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('statusbar', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('elementpath', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('branding', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('promotion', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('resize', {\n            processor: (value) => value === 'both' || isBoolean(value),\n            // Editor resize doesn't work on touch devices at this stage\n            default: !global$7.deviceType.isTouch()\n        });\n        registerOption('sidebar_show', {\n            processor: 'string'\n        });\n        // This option is being registered in the theme instead of the help plugin as it cannot be accessed from the theme when registered there\n        registerOption('help_accessibility', {\n            processor: 'boolean',\n            default: editor.hasPlugin('help')\n        });\n        registerOption('default_font_stack', {\n            processor: 'string[]',\n            default: []\n        });\n    };\n    const isReadOnly = option$2('readonly');\n    const isDisabled = option$2('disabled');\n    const getHeightOption = option$2('height');\n    const getWidthOption = option$2('width');\n    const getMinWidthOption = wrapOptional(option$2('min_width'));\n    const getMinHeightOption = wrapOptional(option$2('min_height'));\n    const getMaxWidthOption = wrapOptional(option$2('max_width'));\n    const getMaxHeightOption = wrapOptional(option$2('max_height'));\n    const getUserStyleFormats = wrapOptional(option$2('style_formats'));\n    const shouldMergeStyleFormats = option$2('style_formats_merge');\n    const shouldAutoHideStyleFormats = option$2('style_formats_autohide');\n    const getContentLanguages = option$2('content_langs');\n    const getRemovedMenuItems = option$2('removed_menuitems');\n    const getToolbarMode = option$2('toolbar_mode');\n    const getToolbarGroups = option$2('toolbar_groups');\n    const getToolbarLocation = option$2('toolbar_location');\n    const fixedContainerSelector = option$2('fixed_toolbar_container');\n    const fixedToolbarContainerTarget = option$2('fixed_toolbar_container_target');\n    const isToolbarPersist = option$2('toolbar_persist');\n    const getStickyToolbarOffset = option$2('toolbar_sticky_offset');\n    const getMenubar = option$2('menubar');\n    const getToolbar = option$2('toolbar');\n    const getFilePickerCallback = option$2('file_picker_callback');\n    const getFilePickerValidatorHandler = option$2('file_picker_validator_handler');\n    const getFontSizeInputDefaultUnit = option$2('font_size_input_default_unit');\n    const getFilePickerTypes = option$2('file_picker_types');\n    const useTypeaheadUrls = option$2('typeahead_urls');\n    const getAnchorTop = option$2('anchor_top');\n    const getAnchorBottom = option$2('anchor_bottom');\n    const isDraggableModal$1 = option$2('draggable_modal');\n    const useStatusBar = option$2('statusbar');\n    const useElementPath = option$2('elementpath');\n    const useBranding = option$2('branding');\n    const getResize = option$2('resize');\n    const getPasteAsText = option$2('paste_as_text');\n    const getSidebarShow = option$2('sidebar_show');\n    const promotionEnabled = option$2('promotion');\n    const useHelpAccessibility = option$2('help_accessibility');\n    const getDefaultFontStack = option$2('default_font_stack');\n    const getSkin = option$2('skin');\n    const isSkinDisabled = (editor) => editor.options.get('skin') === false;\n    const isMenubarEnabled = (editor) => editor.options.get('menubar') !== false;\n    const getSkinUrl = (editor) => {\n        const skinUrl = editor.options.get('skin_url');\n        if (isSkinDisabled(editor)) {\n            return skinUrl;\n        }\n        else {\n            if (skinUrl) {\n                return editor.documentBaseURI.toAbsolute(skinUrl);\n            }\n            else {\n                const skin = editor.options.get('skin');\n                return global$8.baseURL + '/skins/ui/' + skin;\n            }\n        }\n    };\n    const getSkinUrlOption = (editor) => Optional.from(editor.options.get('skin_url'));\n    const getLineHeightFormats = (editor) => editor.options.get('line_height_formats').split(' ');\n    const isToolbarEnabled = (editor) => {\n        const toolbar = getToolbar(editor);\n        const isToolbarString = isString(toolbar);\n        const isToolbarObjectArray = isArray(toolbar) && toolbar.length > 0;\n        // Toolbar is enabled if its value is true, a string or non-empty object array, but not string array\n        return !isMultipleToolbars(editor) && (isToolbarObjectArray || isToolbarString || toolbar === true);\n    };\n    // Convert toolbar<n> into toolbars array\n    const getMultipleToolbarsOption = (editor) => {\n        const toolbars = range$2(9, (num) => editor.options.get('toolbar' + (num + 1)));\n        const toolbarArray = filter$2(toolbars, isString);\n        return someIf(toolbarArray.length > 0, toolbarArray);\n    };\n    // Check if multiple toolbars is enabled\n    // Multiple toolbars is enabled if toolbar value is a string array or if toolbar<n> is present\n    const isMultipleToolbars = (editor) => getMultipleToolbarsOption(editor).fold(() => {\n        const toolbar = getToolbar(editor);\n        return isArrayOf(toolbar, isString) && toolbar.length > 0;\n    }, always);\n    const isToolbarLocationBottom = (editor) => getToolbarLocation(editor) === ToolbarLocation$1.bottom;\n    const fixedContainerTarget = (editor) => {\n        var _a;\n        if (!editor.inline) {\n            // fixed_toolbar_container(_target) is only available in inline mode\n            return Optional.none();\n        }\n        const selector = (_a = fixedContainerSelector(editor)) !== null && _a !== void 0 ? _a : '';\n        if (selector.length > 0) {\n            // If we have a valid selector\n            return descendant(body(), selector);\n        }\n        const element = fixedToolbarContainerTarget(editor);\n        if (isNonNullable(element)) {\n            // If we have a valid target\n            return Optional.some(SugarElement.fromDom(element));\n        }\n        return Optional.none();\n    };\n    const useFixedContainer = (editor) => editor.inline && fixedContainerTarget(editor).isSome();\n    const getUiContainer = (editor) => {\n        const fixedContainer = fixedContainerTarget(editor);\n        return fixedContainer.getOrThunk(() => getContentContainer(getRootNode(SugarElement.fromDom(editor.getElement()))));\n    };\n    const isDistractionFree = (editor) => editor.inline && !isMenubarEnabled(editor) && !isToolbarEnabled(editor) && !isMultipleToolbars(editor);\n    const isStickyToolbar = (editor) => {\n        const isStickyToolbar = editor.options.get('toolbar_sticky');\n        return (isStickyToolbar || editor.inline) && !useFixedContainer(editor) && !isDistractionFree(editor);\n    };\n    const isSplitUiMode = (editor) => !useFixedContainer(editor) && editor.options.get('ui_mode') === 'split';\n    const getMenus = (editor) => {\n        const menu = editor.options.get('menu');\n        return map$1(menu, (menu) => ({ ...menu, items: menu.items }));\n    };\n\n    var Options = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        get ToolbarMode () { return ToolbarMode$1; },\n        get ToolbarLocation () { return ToolbarLocation$1; },\n        register: register$f,\n        getSkinUrl: getSkinUrl,\n        getSkinUrlOption: getSkinUrlOption,\n        isReadOnly: isReadOnly,\n        isDisabled: isDisabled,\n        getSkin: getSkin,\n        isSkinDisabled: isSkinDisabled,\n        getHeightOption: getHeightOption,\n        getWidthOption: getWidthOption,\n        getMinWidthOption: getMinWidthOption,\n        getMinHeightOption: getMinHeightOption,\n        getMaxWidthOption: getMaxWidthOption,\n        getMaxHeightOption: getMaxHeightOption,\n        getUserStyleFormats: getUserStyleFormats,\n        shouldMergeStyleFormats: shouldMergeStyleFormats,\n        shouldAutoHideStyleFormats: shouldAutoHideStyleFormats,\n        getLineHeightFormats: getLineHeightFormats,\n        getContentLanguages: getContentLanguages,\n        getRemovedMenuItems: getRemovedMenuItems,\n        isMenubarEnabled: isMenubarEnabled,\n        isMultipleToolbars: isMultipleToolbars,\n        isToolbarEnabled: isToolbarEnabled,\n        isToolbarPersist: isToolbarPersist,\n        getMultipleToolbarsOption: getMultipleToolbarsOption,\n        getUiContainer: getUiContainer,\n        useFixedContainer: useFixedContainer,\n        isSplitUiMode: isSplitUiMode,\n        getToolbarMode: getToolbarMode,\n        isDraggableModal: isDraggableModal$1,\n        isDistractionFree: isDistractionFree,\n        isStickyToolbar: isStickyToolbar,\n        getStickyToolbarOffset: getStickyToolbarOffset,\n        getToolbarLocation: getToolbarLocation,\n        isToolbarLocationBottom: isToolbarLocationBottom,\n        getToolbarGroups: getToolbarGroups,\n        getMenus: getMenus,\n        getMenubar: getMenubar,\n        getToolbar: getToolbar,\n        getFilePickerCallback: getFilePickerCallback,\n        getFilePickerTypes: getFilePickerTypes,\n        useTypeaheadUrls: useTypeaheadUrls,\n        getAnchorTop: getAnchorTop,\n        getAnchorBottom: getAnchorBottom,\n        getFilePickerValidatorHandler: getFilePickerValidatorHandler,\n        getFontSizeInputDefaultUnit: getFontSizeInputDefaultUnit,\n        useStatusBar: useStatusBar,\n        useElementPath: useElementPath,\n        promotionEnabled: promotionEnabled,\n        useBranding: useBranding,\n        getResize: getResize,\n        getPasteAsText: getPasteAsText,\n        getSidebarShow: getSidebarShow,\n        useHelpAccessibility: useHelpAccessibility,\n        getDefaultFontStack: getDefaultFontStack\n    });\n\n    // See https://developer.mozilla.org/en-US/docs/Glossary/Scroll_container for what makes an element scrollable\n    const nonScrollingOverflows = ['visible', 'hidden', 'clip'];\n    const isScrollingOverflowValue = (value) => trim$1(value).length > 0 && !contains$2(nonScrollingOverflows, value);\n    const isScroller = (elem) => {\n        if (isHTMLElement(elem)) {\n            const overflowX = get$e(elem, 'overflow-x');\n            const overflowY = get$e(elem, 'overflow-y');\n            return isScrollingOverflowValue(overflowX) || isScrollingOverflowValue(overflowY);\n        }\n        else {\n            return false;\n        }\n    };\n    const isFullscreen = (editor) => editor.plugins.fullscreen && editor.plugins.fullscreen.isFullscreen();\n    // NOTE: Calculating the list of scrolling ancestors each time this function is called might\n    // be unnecessary. It will depend on its usage.\n    const detect = (editor, popupSinkElem) => {\n        const ancestorsScrollers = ancestors(popupSinkElem, isScroller);\n        // If there is no scrollable container, we try to see if it's in a shadow root, and try to traverse beyond the host of shadow root to retrieve the scrollable container\n        // If it is not within a ShadowRoot, since if there's a scrollable container as the ancestors, then it would not execute the code below, or return an empty array if it's not in a ShadowRoot\n        const scrollers = ancestorsScrollers.length === 0\n            ? getShadowRoot(popupSinkElem).map(getShadowHost).map((x) => ancestors(x, isScroller)).getOr([])\n            : ancestorsScrollers;\n        return head(scrollers)\n            .map((element) => ({\n            element,\n            // A list of all scrolling elements above the nearest scroller,\n            // ordered from closest to popup -> closest to top of document\n            others: scrollers.slice(1),\n            isFullscreen: () => isFullscreen(editor)\n        }));\n    };\n    const detectWhenSplitUiMode = (editor, popupSinkElem) => isSplitUiMode(editor) ? detect(editor, popupSinkElem) : Optional.none();\n    // Using all the scrolling viewports in the ancestry, limit the absolute\n    // coordinates of window so that the bounds are limited by all the scrolling\n    // viewports.\n    const getBoundsFrom = (sc) => {\n        const scrollableBoxes = [\n            // sc.element is the main scroller, others are *additional* scrollers above that\n            // we need to combine all of them to constrain the bounds\n            ...map$2(sc.others, box$1),\n            win()\n        ];\n        return sc.isFullscreen() ? win() : constrainByMany(box$1(sc.element), scrollableBoxes);\n    };\n\n    /*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */\n\n    const {\n      entries,\n      setPrototypeOf,\n      isFrozen,\n      getPrototypeOf,\n      getOwnPropertyDescriptor\n    } = Object;\n    let {\n      freeze,\n      seal,\n      create: create$1\n    } = Object; // eslint-disable-line import/no-mutable-exports\n    let {\n      apply,\n      construct\n    } = typeof Reflect !== 'undefined' && Reflect;\n    if (!freeze) {\n      freeze = function freeze(x) {\n        return x;\n      };\n    }\n    if (!seal) {\n      seal = function seal(x) {\n        return x;\n      };\n    }\n    if (!apply) {\n      apply = function apply(fun, thisValue, args) {\n        return fun.apply(thisValue, args);\n      };\n    }\n    if (!construct) {\n      construct = function construct(Func, args) {\n        return new Func(...args);\n      };\n    }\n    const arrayForEach = unapply(Array.prototype.forEach);\n    const arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\n    const arrayPop = unapply(Array.prototype.pop);\n    const arrayPush = unapply(Array.prototype.push);\n    const arraySplice = unapply(Array.prototype.splice);\n    const stringToLowerCase = unapply(String.prototype.toLowerCase);\n    const stringToString = unapply(String.prototype.toString);\n    const stringMatch = unapply(String.prototype.match);\n    const stringReplace = unapply(String.prototype.replace);\n    const stringIndexOf = unapply(String.prototype.indexOf);\n    const stringTrim = unapply(String.prototype.trim);\n    const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n    const regExpTest = unapply(RegExp.prototype.test);\n    const typeErrorCreate = unconstruct(TypeError);\n    /**\n     * Creates a new function that calls the given function with a specified thisArg and arguments.\n     *\n     * @param func - The function to be wrapped and called.\n     * @returns A new function that calls the given function with a specified thisArg and arguments.\n     */\n    function unapply(func) {\n      return function (thisArg) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return apply(func, thisArg, args);\n      };\n    }\n    /**\n     * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n     *\n     * @param func - The constructor function to be wrapped and called.\n     * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n     */\n    function unconstruct(func) {\n      return function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return construct(func, args);\n      };\n    }\n    /**\n     * Add properties to a lookup table\n     *\n     * @param set - The set to which elements will be added.\n     * @param array - The array containing elements to be added to the set.\n     * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n     * @returns The modified set with added elements.\n     */\n    function addToSet(set, array) {\n      let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n      if (setPrototypeOf) {\n        // Make 'in' and truthy checks like Boolean(set.constructor)\n        // independent of any properties defined on Object.prototype.\n        // Prevent prototype setters from intercepting set as a this value.\n        setPrototypeOf(set, null);\n      }\n      let l = array.length;\n      while (l--) {\n        let element = array[l];\n        if (typeof element === 'string') {\n          const lcElement = transformCaseFunc(element);\n          if (lcElement !== element) {\n            // Config presets (e.g. tags.js, attrs.js) are immutable.\n            if (!isFrozen(array)) {\n              array[l] = lcElement;\n            }\n            element = lcElement;\n          }\n        }\n        set[element] = true;\n      }\n      return set;\n    }\n    /**\n     * Clean up an array to harden against CSPP\n     *\n     * @param array - The array to be cleaned.\n     * @returns The cleaned version of the array\n     */\n    function cleanArray(array) {\n      for (let index = 0; index < array.length; index++) {\n        const isPropertyExist = objectHasOwnProperty(array, index);\n        if (!isPropertyExist) {\n          array[index] = null;\n        }\n      }\n      return array;\n    }\n    /**\n     * Shallow clone an object\n     *\n     * @param object - The object to be cloned.\n     * @returns A new object that copies the original.\n     */\n    function clone(object) {\n      const newObject = create$1(null);\n      for (const [property, value] of entries(object)) {\n        const isPropertyExist = objectHasOwnProperty(object, property);\n        if (isPropertyExist) {\n          if (Array.isArray(value)) {\n            newObject[property] = cleanArray(value);\n          } else if (value && typeof value === 'object' && value.constructor === Object) {\n            newObject[property] = clone(value);\n          } else {\n            newObject[property] = value;\n          }\n        }\n      }\n      return newObject;\n    }\n    /**\n     * This method automatically checks if the prop is function or getter and behaves accordingly.\n     *\n     * @param object - The object to look up the getter function in its prototype chain.\n     * @param prop - The property name for which to find the getter function.\n     * @returns The getter function found in the prototype chain or a fallback function.\n     */\n    function lookupGetter(object, prop) {\n      while (object !== null) {\n        const desc = getOwnPropertyDescriptor(object, prop);\n        if (desc) {\n          if (desc.get) {\n            return unapply(desc.get);\n          }\n          if (typeof desc.value === 'function') {\n            return unapply(desc.value);\n          }\n        }\n        object = getPrototypeOf(object);\n      }\n      function fallbackValue() {\n        return null;\n      }\n      return fallbackValue;\n    }\n\n    const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n    const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n    const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n    // List of SVG elements that are disallowed by default.\n    // We still need to know them so that we can do namespace\n    // checks properly in case one wants to add them to\n    // allow-list.\n    const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n    const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n    // Similarly to SVG, we want to know all MathML elements,\n    // even those that we disallow by default.\n    const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n    const text$1 = freeze(['#text']);\n\n    const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\n    const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n    const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n    const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n    // eslint-disable-next-line unicorn/better-regex\n    const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n    const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n    const TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\n    const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\n    const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n    const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n    );\n    const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n    const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n    );\n    const DOCTYPE_NAME = seal(/^html$/i);\n    const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\n    var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      ARIA_ATTR: ARIA_ATTR,\n      ATTR_WHITESPACE: ATTR_WHITESPACE,\n      CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n      DATA_ATTR: DATA_ATTR,\n      DOCTYPE_NAME: DOCTYPE_NAME,\n      ERB_EXPR: ERB_EXPR,\n      IS_ALLOWED_URI: IS_ALLOWED_URI,\n      IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n      MUSTACHE_EXPR: MUSTACHE_EXPR,\n      TMPLIT_EXPR: TMPLIT_EXPR\n    });\n\n    /* eslint-disable @typescript-eslint/indent */\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n    const NODE_TYPE = {\n      element: 1,\n      attribute: 2,\n      text: 3,\n      cdataSection: 4,\n      entityReference: 5,\n      // Deprecated\n      entityNode: 6,\n      // Deprecated\n      progressingInstruction: 7,\n      comment: 8,\n      document: 9,\n      documentType: 10,\n      documentFragment: 11,\n      notation: 12 // Deprecated\n    };\n    const getGlobal = function getGlobal() {\n      return typeof window === 'undefined' ? null : window;\n    };\n    /**\n     * Creates a no-op policy for internal use only.\n     * Don't export this function outside this module!\n     * @param trustedTypes The policy factory.\n     * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n     * @return The policy created (or null, if Trusted Types\n     * are not supported or creating the policy failed).\n     */\n    const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n      if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n        return null;\n      }\n      // Allow the callers to control the unique policy name\n      // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n      // Policy creation with duplicate names throws in Trusted Types.\n      let suffix = null;\n      const ATTR_NAME = 'data-tt-policy-suffix';\n      if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n        suffix = purifyHostElement.getAttribute(ATTR_NAME);\n      }\n      const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n      try {\n        return trustedTypes.createPolicy(policyName, {\n          createHTML(html) {\n            return html;\n          },\n          createScriptURL(scriptUrl) {\n            return scriptUrl;\n          }\n        });\n      } catch (_) {\n        // Policy creation failed (most likely another DOMPurify script has\n        // already run). Skip creating the policy, as this will only cause errors\n        // if TT are enforced.\n        console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n        return null;\n      }\n    };\n    const _createHooksMap = function _createHooksMap() {\n      return {\n        afterSanitizeAttributes: [],\n        afterSanitizeElements: [],\n        afterSanitizeShadowDOM: [],\n        beforeSanitizeAttributes: [],\n        beforeSanitizeElements: [],\n        beforeSanitizeShadowDOM: [],\n        uponSanitizeAttribute: [],\n        uponSanitizeElement: [],\n        uponSanitizeShadowNode: []\n      };\n    };\n    function createDOMPurify() {\n      let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n      const DOMPurify = root => createDOMPurify(root);\n      DOMPurify.version = '3.2.4';\n      DOMPurify.removed = [];\n      if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n        // Not running in a browser, provide a factory function\n        // so that you can pass your own Window\n        DOMPurify.isSupported = false;\n        return DOMPurify;\n      }\n      let {\n        document\n      } = window;\n      const originalDocument = document;\n      const currentScript = originalDocument.currentScript;\n      const {\n        DocumentFragment,\n        HTMLTemplateElement,\n        Node,\n        Element,\n        NodeFilter,\n        NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n        HTMLFormElement,\n        DOMParser,\n        trustedTypes\n      } = window;\n      const ElementPrototype = Element.prototype;\n      const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n      const remove = lookupGetter(ElementPrototype, 'remove');\n      const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n      const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n      const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n      // As per issue #47, the web-components registry is inherited by a\n      // new document created via createHTMLDocument. As per the spec\n      // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n      // a new empty registry is used when creating a template contents owner\n      // document, so we use that as our parent document to ensure nothing\n      // is inherited.\n      if (typeof HTMLTemplateElement === 'function') {\n        const template = document.createElement('template');\n        if (template.content && template.content.ownerDocument) {\n          document = template.content.ownerDocument;\n        }\n      }\n      let trustedTypesPolicy;\n      let emptyHTML = '';\n      const {\n        implementation,\n        createNodeIterator,\n        createDocumentFragment,\n        getElementsByTagName\n      } = document;\n      const {\n        importNode\n      } = originalDocument;\n      let hooks = _createHooksMap();\n      /**\n       * Expose whether this browser supports running the full DOMPurify.\n       */\n      DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n      const {\n        MUSTACHE_EXPR,\n        ERB_EXPR,\n        TMPLIT_EXPR,\n        DATA_ATTR,\n        ARIA_ATTR,\n        IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE,\n        CUSTOM_ELEMENT\n      } = EXPRESSIONS;\n      let {\n        IS_ALLOWED_URI: IS_ALLOWED_URI$1\n      } = EXPRESSIONS;\n      /**\n       * We consider the elements and attributes below to be safe. Ideally\n       * don't add any new ones but feel free to remove unwanted ones.\n       */\n      /* allowed element names */\n      let ALLOWED_TAGS = null;\n      const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text$1]);\n      /* Allowed attribute names */\n      let ALLOWED_ATTR = null;\n      const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n      /*\n       * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n       * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n       * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n       * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n       */\n      let CUSTOM_ELEMENT_HANDLING = Object.seal(create$1(null, {\n        tagNameCheck: {\n          writable: true,\n          configurable: false,\n          enumerable: true,\n          value: null\n        },\n        attributeNameCheck: {\n          writable: true,\n          configurable: false,\n          enumerable: true,\n          value: null\n        },\n        allowCustomizedBuiltInElements: {\n          writable: true,\n          configurable: false,\n          enumerable: true,\n          value: false\n        }\n      }));\n      /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n      let FORBID_TAGS = null;\n      /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n      let FORBID_ATTR = null;\n      /* Decide if ARIA attributes are okay */\n      let ALLOW_ARIA_ATTR = true;\n      /* Decide if custom data attributes are okay */\n      let ALLOW_DATA_ATTR = true;\n      /* Decide if unknown protocols are okay */\n      let ALLOW_UNKNOWN_PROTOCOLS = false;\n      /* Decide if self-closing tags in attributes are allowed.\n       * Usually removed due to a mXSS issue in jQuery 3.0 */\n      let ALLOW_SELF_CLOSE_IN_ATTR = true;\n      /* Output should be safe for common template engines.\n       * This means, DOMPurify removes data attributes, mustaches and ERB\n       */\n      let SAFE_FOR_TEMPLATES = false;\n      /* Output should be safe even for XML used within HTML and alike.\n       * This means, DOMPurify removes comments when containing risky content.\n       */\n      let SAFE_FOR_XML = true;\n      /* Decide if document with <html>... should be returned */\n      let WHOLE_DOCUMENT = false;\n      /* Track whether config is already set on this instance of DOMPurify. */\n      let SET_CONFIG = false;\n      /* Decide if all elements (e.g. style, script) must be children of\n       * document.body. By default, browsers might move them to document.head */\n      let FORCE_BODY = false;\n      /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n       * string (or a TrustedHTML object if Trusted Types are supported).\n       * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n       */\n      let RETURN_DOM = false;\n      /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n       * string  (or a TrustedHTML object if Trusted Types are supported) */\n      let RETURN_DOM_FRAGMENT = false;\n      /* Try to return a Trusted Type object instead of a string, return a string in\n       * case Trusted Types are not supported  */\n      let RETURN_TRUSTED_TYPE = false;\n      /* Output should be free from DOM clobbering attacks?\n       * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n       */\n      let SANITIZE_DOM = true;\n      /* Achieve full DOM Clobbering protection by isolating the namespace of named\n       * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n       *\n       * HTML/DOM spec rules that enable DOM Clobbering:\n       *   - Named Access on Window (§7.3.3)\n       *   - DOM Tree Accessors (§3.1.5)\n       *   - Form Element Parent-Child Relations (§4.10.3)\n       *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n       *   - HTMLCollection (§4.2.10.2)\n       *\n       * Namespace isolation is implemented by prefixing `id` and `name` attributes\n       * with a constant string, i.e., `user-content-`\n       */\n      let SANITIZE_NAMED_PROPS = false;\n      const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n      /* Keep element content when removing element? */\n      let KEEP_CONTENT = true;\n      /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n       * of importing it into a new Document and returning a sanitized copy */\n      let IN_PLACE = false;\n      /* Allow usage of profiles like html, svg and mathMl */\n      let USE_PROFILES = {};\n      /* Tags to ignore content of when KEEP_CONTENT is true */\n      let FORBID_CONTENTS = null;\n      const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n      /* Tags that are safe for data: URIs */\n      let DATA_URI_TAGS = null;\n      const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n      /* Attributes safe for values like \"javascript:\" */\n      let URI_SAFE_ATTRIBUTES = null;\n      const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n      const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n      const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n      const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n      /* Document namespace */\n      let NAMESPACE = HTML_NAMESPACE;\n      let IS_EMPTY_INPUT = false;\n      /* Allowed XHTML+XML namespaces */\n      let ALLOWED_NAMESPACES = null;\n      const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n      let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n      let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erroneously deleted from\n      // HTML namespace.\n      const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n      /* Parsing of strict XHTML documents */\n      let PARSER_MEDIA_TYPE = null;\n      const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n      const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n      let transformCaseFunc = null;\n      /* Keep a reference to config to pass to hooks */\n      let CONFIG = null;\n      /* Ideally, do not touch anything below this line */\n      /* ______________________________________________ */\n      const formElement = document.createElement('form');\n      const isRegexOrFunction = function isRegexOrFunction(testValue) {\n        return testValue instanceof RegExp || testValue instanceof Function;\n      };\n      /**\n       * _parseConfig\n       *\n       * @param cfg optional config literal\n       */\n      // eslint-disable-next-line complexity\n      const _parseConfig = function _parseConfig() {\n        let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (CONFIG && CONFIG === cfg) {\n          return;\n        }\n        /* Shield configuration object from tampering */\n        if (!cfg || typeof cfg !== 'object') {\n          cfg = {};\n        }\n        /* Shield configuration object from prototype pollution */\n        cfg = clone(cfg);\n        PARSER_MEDIA_TYPE =\n        // eslint-disable-next-line unicorn/prefer-includes\n        SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n        // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n        transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n        /* Set configuration parameters */\n        ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n        ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n        ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n        URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n        DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n        FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n        FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n        FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n        USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n        ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n        ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n        ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n        ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n        SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n        SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n        WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n        RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n        RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n        RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n        FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n        SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n        SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n        KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n        IN_PLACE = cfg.IN_PLACE || false; // Default false\n        IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n        NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n        MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n        HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n        CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n        if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n        }\n        if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n          CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n        }\n        if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n        }\n        if (SAFE_FOR_TEMPLATES) {\n          ALLOW_DATA_ATTR = false;\n        }\n        if (RETURN_DOM_FRAGMENT) {\n          RETURN_DOM = true;\n        }\n        /* Parse profile info */\n        if (USE_PROFILES) {\n          ALLOWED_TAGS = addToSet({}, text$1);\n          ALLOWED_ATTR = [];\n          if (USE_PROFILES.html === true) {\n            addToSet(ALLOWED_TAGS, html$1);\n            addToSet(ALLOWED_ATTR, html);\n          }\n          if (USE_PROFILES.svg === true) {\n            addToSet(ALLOWED_TAGS, svg$1);\n            addToSet(ALLOWED_ATTR, svg);\n            addToSet(ALLOWED_ATTR, xml);\n          }\n          if (USE_PROFILES.svgFilters === true) {\n            addToSet(ALLOWED_TAGS, svgFilters);\n            addToSet(ALLOWED_ATTR, svg);\n            addToSet(ALLOWED_ATTR, xml);\n          }\n          if (USE_PROFILES.mathMl === true) {\n            addToSet(ALLOWED_TAGS, mathMl$1);\n            addToSet(ALLOWED_ATTR, mathMl);\n            addToSet(ALLOWED_ATTR, xml);\n          }\n        }\n        /* Merge configuration parameters */\n        if (cfg.ADD_TAGS) {\n          if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n            ALLOWED_TAGS = clone(ALLOWED_TAGS);\n          }\n          addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n        }\n        if (cfg.ADD_ATTR) {\n          if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n            ALLOWED_ATTR = clone(ALLOWED_ATTR);\n          }\n          addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n        }\n        if (cfg.ADD_URI_SAFE_ATTR) {\n          addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n        }\n        if (cfg.FORBID_CONTENTS) {\n          if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n            FORBID_CONTENTS = clone(FORBID_CONTENTS);\n          }\n          addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n        }\n        /* Add #text in case KEEP_CONTENT is set to true */\n        if (KEEP_CONTENT) {\n          ALLOWED_TAGS['#text'] = true;\n        }\n        /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n        if (WHOLE_DOCUMENT) {\n          addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n        }\n        /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n        if (ALLOWED_TAGS.table) {\n          addToSet(ALLOWED_TAGS, ['tbody']);\n          delete FORBID_TAGS.tbody;\n        }\n        if (cfg.TRUSTED_TYPES_POLICY) {\n          if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n            throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n          }\n          if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n            throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n          }\n          // Overwrite existing TrustedTypes policy.\n          trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n          // Sign local variables required by `sanitize`.\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        } else {\n          // Uninitialized policy, attempt to initialize the internal dompurify policy.\n          if (trustedTypesPolicy === undefined) {\n            trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n          }\n          // If creating the internal policy succeeded sign internal variables.\n          if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n            emptyHTML = trustedTypesPolicy.createHTML('');\n          }\n        }\n        // Prevent further manipulation of configuration.\n        // Not available in IE8, Safari 5, etc.\n        if (freeze) {\n          freeze(cfg);\n        }\n        CONFIG = cfg;\n      };\n      /* Keep track of all possible SVG and MathML tags\n       * so that we can perform the namespace checks\n       * correctly. */\n      const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n      const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n      /**\n       * @param element a DOM element whose namespace is being checked\n       * @returns Return false if the element has a\n       *  namespace that a spec-compliant parser would never\n       *  return. Return true otherwise.\n       */\n      const _checkValidNamespace = function _checkValidNamespace(element) {\n        let parent = getParentNode(element);\n        // In JSDOM, if we're inside shadow DOM, then parentNode\n        // can be null. We just simulate parent in this case.\n        if (!parent || !parent.tagName) {\n          parent = {\n            namespaceURI: NAMESPACE,\n            tagName: 'template'\n          };\n        }\n        const tagName = stringToLowerCase(element.tagName);\n        const parentTagName = stringToLowerCase(parent.tagName);\n        if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n          return false;\n        }\n        if (element.namespaceURI === SVG_NAMESPACE) {\n          // The only way to switch from HTML namespace to SVG\n          // is via <svg>. If it happens via any other tag, then\n          // it should be killed.\n          if (parent.namespaceURI === HTML_NAMESPACE) {\n            return tagName === 'svg';\n          }\n          // The only way to switch from MathML to SVG is via`\n          // svg if parent is either <annotation-xml> or MathML\n          // text integration points.\n          if (parent.namespaceURI === MATHML_NAMESPACE) {\n            return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n          }\n          // We only allow elements that are defined in SVG\n          // spec. All others are disallowed in SVG namespace.\n          return Boolean(ALL_SVG_TAGS[tagName]);\n        }\n        if (element.namespaceURI === MATHML_NAMESPACE) {\n          // The only way to switch from HTML namespace to MathML\n          // is via <math>. If it happens via any other tag, then\n          // it should be killed.\n          if (parent.namespaceURI === HTML_NAMESPACE) {\n            return tagName === 'math';\n          }\n          // The only way to switch from SVG to MathML is via\n          // <math> and HTML integration points\n          if (parent.namespaceURI === SVG_NAMESPACE) {\n            return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n          }\n          // We only allow elements that are defined in MathML\n          // spec. All others are disallowed in MathML namespace.\n          return Boolean(ALL_MATHML_TAGS[tagName]);\n        }\n        if (element.namespaceURI === HTML_NAMESPACE) {\n          // The only way to switch from SVG to HTML is via\n          // HTML integration points, and from MathML to HTML\n          // is via MathML text integration points\n          if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n            return false;\n          }\n          if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n            return false;\n          }\n          // We disallow tags that are specific for MathML\n          // or SVG and should never appear in HTML namespace\n          return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n        }\n        // For XHTML and XML documents that support custom namespaces\n        if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n          return true;\n        }\n        // The code should never reach this place (this means\n        // that the element somehow got namespace that is not\n        // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n        // Return false just in case.\n        return false;\n      };\n      /**\n       * _forceRemove\n       *\n       * @param node a DOM node\n       */\n      const _forceRemove = function _forceRemove(node) {\n        arrayPush(DOMPurify.removed, {\n          element: node\n        });\n        try {\n          // eslint-disable-next-line unicorn/prefer-dom-node-remove\n          getParentNode(node).removeChild(node);\n        } catch (_) {\n          remove(node);\n        }\n      };\n      /**\n       * _removeAttribute\n       *\n       * @param name an Attribute name\n       * @param element a DOM node\n       */\n      const _removeAttribute = function _removeAttribute(name, element) {\n        try {\n          arrayPush(DOMPurify.removed, {\n            attribute: element.getAttributeNode(name),\n            from: element\n          });\n        } catch (_) {\n          arrayPush(DOMPurify.removed, {\n            attribute: null,\n            from: element\n          });\n        }\n        element.removeAttribute(name);\n        // We void attribute values for unremovable \"is\" attributes\n        if (name === 'is') {\n          if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n            try {\n              _forceRemove(element);\n            } catch (_) {}\n          } else {\n            try {\n              element.setAttribute(name, '');\n            } catch (_) {}\n          }\n        }\n      };\n      /**\n       * _initDocument\n       *\n       * @param dirty - a string of dirty markup\n       * @return a DOM, filled with the dirty markup\n       */\n      const _initDocument = function _initDocument(dirty) {\n        /* Create a HTML document */\n        let doc = null;\n        let leadingWhitespace = null;\n        if (FORCE_BODY) {\n          dirty = '<remove></remove>' + dirty;\n        } else {\n          /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n          const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n          leadingWhitespace = matches && matches[0];\n        }\n        if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n          // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n          dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n        }\n        const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        /*\n         * Use the DOMParser API by default, fallback later if needs be\n         * DOMParser not work for svg when has multiple root element.\n         */\n        if (NAMESPACE === HTML_NAMESPACE) {\n          try {\n            doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n          } catch (_) {}\n        }\n        /* Use createHTMLDocument in case DOMParser is not available */\n        if (!doc || !doc.documentElement) {\n          doc = implementation.createDocument(NAMESPACE, 'template', null);\n          try {\n            doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n          } catch (_) {\n            // Syntax error if dirtyPayload is invalid xml\n          }\n        }\n        const body = doc.body || doc.documentElement;\n        if (dirty && leadingWhitespace) {\n          body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n        }\n        /* Work on whole document or just its body */\n        if (NAMESPACE === HTML_NAMESPACE) {\n          return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n        }\n        return WHOLE_DOCUMENT ? doc.documentElement : body;\n      };\n      /**\n       * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n       *\n       * @param root The root element or node to start traversing on.\n       * @return The created NodeIterator\n       */\n      const _createNodeIterator = function _createNodeIterator(root) {\n        return createNodeIterator.call(root.ownerDocument || root, root,\n        // eslint-disable-next-line no-bitwise\n        NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n      };\n      /**\n       * _isClobbered\n       *\n       * @param element element to check for clobbering attacks\n       * @return true if clobbered, false if safe\n       */\n      const _isClobbered = function _isClobbered(element) {\n        return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n      };\n      /**\n       * Checks whether the given object is a DOM node.\n       *\n       * @param value object to check whether it's a DOM node\n       * @return true is object is a DOM node\n       */\n      const _isNode = function _isNode(value) {\n        return typeof Node === 'function' && value instanceof Node;\n      };\n      function _executeHooks(hooks, currentNode, data) {\n        arrayForEach(hooks, hook => {\n          hook.call(DOMPurify, currentNode, data, CONFIG);\n        });\n      }\n      /**\n       * _sanitizeElements\n       *\n       * @protect nodeName\n       * @protect textContent\n       * @protect removeChild\n       * @param currentNode to check for permission to exist\n       * @return true if node was killed, false if left alive\n       */\n      const _sanitizeElements = function _sanitizeElements(currentNode) {\n        let content = null;\n        /* Execute a hook if present */\n        _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n        /* Check if element is clobbered or can clobber */\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n        /* Now let's check the element's type and name */\n        const tagName = transformCaseFunc(currentNode.nodeName);\n        /* Execute a hook if present */\n        _executeHooks(hooks.uponSanitizeElement, currentNode, {\n          tagName,\n          allowedTags: ALLOWED_TAGS\n        });\n        /* Detect mXSS attempts abusing namespace confusion */\n        if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n        /* Remove any occurrence of processing instructions */\n        if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n          _forceRemove(currentNode);\n          return true;\n        }\n        /* Remove any kind of possibly harmful comments */\n        if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n        /* Remove element if anything forbids its presence */\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          /* Check if we have a custom element to handle */\n          if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n            if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n              return false;\n            }\n            if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n              return false;\n            }\n          }\n          /* Keep content except for bad-listed elements */\n          if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n            const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n            const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n            if (childNodes && parentNode) {\n              const childCount = childNodes.length;\n              for (let i = childCount - 1; i >= 0; --i) {\n                const childClone = cloneNode(childNodes[i], true);\n                childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n                parentNode.insertBefore(childClone, getNextSibling(currentNode));\n              }\n            }\n          }\n          _forceRemove(currentNode);\n          return true;\n        }\n        /* Check whether element has a valid namespace */\n        if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n        /* Make sure that older browsers don't get fallback-tag mXSS */\n        if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n        /* Sanitize element content to be template-safe */\n        if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n          /* Get the element's text content */\n          content = currentNode.textContent;\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            content = stringReplace(content, expr, ' ');\n          });\n          if (currentNode.textContent !== content) {\n            arrayPush(DOMPurify.removed, {\n              element: currentNode.cloneNode()\n            });\n            currentNode.textContent = content;\n          }\n        }\n        /* Execute a hook if present */\n        _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n        return false;\n      };\n      /**\n       * _isValidAttribute\n       *\n       * @param lcTag Lowercase tag name of containing element.\n       * @param lcName Lowercase attribute name.\n       * @param value Attribute value.\n       * @return Returns true if `value` is valid, otherwise false.\n       */\n      // eslint-disable-next-line complexity\n      const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n        /* Make sure attribute cannot clobber */\n        if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n          return false;\n        }\n        /* Allow valid data-* attributes: At least one character after \"-\"\n            (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n            XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n            We don't need to check the value; it's always URI safe. */\n        if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n          if (\n          // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n          // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n          // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n          _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n          // Alternative, second condition checks if it's an `is`-attribute, AND\n          // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n          lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n            return false;\n          }\n          /* Check value is safe. First, is attr inert? If so, is safe */\n        } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n          return false;\n        } else ;\n        return true;\n      };\n      /**\n       * _isBasicCustomElement\n       * checks if at least one dash is included in tagName, and it's not the first char\n       * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n       *\n       * @param tagName name of the tag of the node to sanitize\n       * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n       */\n      const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n        return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n      };\n      /**\n       * _sanitizeAttributes\n       *\n       * @protect attributes\n       * @protect nodeName\n       * @protect removeAttribute\n       * @protect setAttribute\n       *\n       * @param currentNode to sanitize\n       */\n      const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n        /* Execute a hook if present */\n        _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n        const {\n          attributes\n        } = currentNode;\n        /* Check if we have attributes; if not we might have a text node */\n        if (!attributes || _isClobbered(currentNode)) {\n          return;\n        }\n        const hookEvent = {\n          attrName: '',\n          attrValue: '',\n          keepAttr: true,\n          allowedAttributes: ALLOWED_ATTR,\n          forceKeepAttr: undefined\n        };\n        let l = attributes.length;\n        /* Go backwards over all attributes; safely remove bad ones */\n        while (l--) {\n          const attr = attributes[l];\n          const {\n            name,\n            namespaceURI,\n            value: attrValue\n          } = attr;\n          const lcName = transformCaseFunc(name);\n          let value = name === 'value' ? attrValue : stringTrim(attrValue);\n          const initValue = value;\n          /* Execute a hook if present */\n          hookEvent.attrName = lcName;\n          hookEvent.attrValue = value;\n          hookEvent.keepAttr = true;\n          hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n          _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n          value = hookEvent.attrValue;\n          /* Full DOM Clobbering protection via namespace isolation,\n           * Prefix id and name attributes with `user-content-`\n           */\n          if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n            // Remove the attribute with this value\n            _removeAttribute(name, currentNode);\n            // Prefix the value and later re-create the attribute with the sanitized value\n            value = SANITIZE_NAMED_PROPS_PREFIX + value;\n          }\n          /* Work around a security issue with comments inside attributes */\n          if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n            _removeAttribute(name, currentNode);\n            continue;\n          }\n          /* Did the hooks approve of the attribute? */\n          if (hookEvent.forceKeepAttr) {\n            continue;\n          }\n          /* Remove attribute */\n          /* Did the hooks approve of the attribute? */\n          if (!hookEvent.keepAttr) {\n            _removeAttribute(name, currentNode);\n            continue;\n          }\n          /* Work around a security issue in jQuery 3.0 */\n          if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n            _removeAttribute(name, currentNode);\n            continue;\n          }\n          /* Sanitize attribute content to be template-safe */\n          if (SAFE_FOR_TEMPLATES) {\n            arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n              value = stringReplace(value, expr, ' ');\n            });\n          }\n          /* Is `value` valid for this attribute? */\n          const lcTag = transformCaseFunc(currentNode.nodeName);\n          if (!_isValidAttribute(lcTag, lcName, value)) {\n            _removeAttribute(name, currentNode);\n            continue;\n          }\n          /* Handle attributes that require Trusted Types */\n          if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n            if (namespaceURI) ; else {\n              switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n                case 'TrustedHTML':\n                  {\n                    value = trustedTypesPolicy.createHTML(value);\n                    break;\n                  }\n                case 'TrustedScriptURL':\n                  {\n                    value = trustedTypesPolicy.createScriptURL(value);\n                    break;\n                  }\n              }\n            }\n          }\n          /* Handle invalid data-* attribute set by try-catching it */\n          if (value !== initValue) {\n            try {\n              if (namespaceURI) {\n                currentNode.setAttributeNS(namespaceURI, name, value);\n              } else {\n                /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n                currentNode.setAttribute(name, value);\n              }\n              if (_isClobbered(currentNode)) {\n                _forceRemove(currentNode);\n              } else {\n                arrayPop(DOMPurify.removed);\n              }\n            } catch (_) {}\n          }\n        }\n        /* Execute a hook if present */\n        _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n      };\n      /**\n       * _sanitizeShadowDOM\n       *\n       * @param fragment to iterate over recursively\n       */\n      const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n        let shadowNode = null;\n        const shadowIterator = _createNodeIterator(fragment);\n        /* Execute a hook if present */\n        _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n        while (shadowNode = shadowIterator.nextNode()) {\n          /* Execute a hook if present */\n          _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n          /* Sanitize tags and elements */\n          _sanitizeElements(shadowNode);\n          /* Check attributes next */\n          _sanitizeAttributes(shadowNode);\n          /* Deep shadow DOM detected */\n          if (shadowNode.content instanceof DocumentFragment) {\n            _sanitizeShadowDOM(shadowNode.content);\n          }\n        }\n        /* Execute a hook if present */\n        _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n      };\n      // eslint-disable-next-line complexity\n      DOMPurify.sanitize = function (dirty) {\n        let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        let body = null;\n        let importedNode = null;\n        let currentNode = null;\n        let returnNode = null;\n        /* Make sure we have a string to sanitize.\n          DO NOT return early, as this will return the wrong type if\n          the user has requested a DOM object rather than a string */\n        IS_EMPTY_INPUT = !dirty;\n        if (IS_EMPTY_INPUT) {\n          dirty = '<!-->';\n        }\n        /* Stringify, in case dirty is an object */\n        if (typeof dirty !== 'string' && !_isNode(dirty)) {\n          if (typeof dirty.toString === 'function') {\n            dirty = dirty.toString();\n            if (typeof dirty !== 'string') {\n              throw typeErrorCreate('dirty is not a string, aborting');\n            }\n          } else {\n            throw typeErrorCreate('toString is not a function');\n          }\n        }\n        /* Return dirty HTML if DOMPurify cannot run */\n        if (!DOMPurify.isSupported) {\n          return dirty;\n        }\n        /* Assign config vars */\n        if (!SET_CONFIG) {\n          _parseConfig(cfg);\n        }\n        /* Clean up removed elements */\n        DOMPurify.removed = [];\n        /* Check if dirty is correctly typed for IN_PLACE */\n        if (typeof dirty === 'string') {\n          IN_PLACE = false;\n        }\n        if (IN_PLACE) {\n          /* Do some early pre-sanitization to avoid unsafe root nodes */\n          if (dirty.nodeName) {\n            const tagName = transformCaseFunc(dirty.nodeName);\n            if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n              throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n            }\n          }\n        } else if (dirty instanceof Node) {\n          /* If dirty is a DOM element, append to an empty document to avoid\n             elements being stripped by the parser */\n          body = _initDocument('<!---->');\n          importedNode = body.ownerDocument.importNode(dirty, true);\n          if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n            /* Node is already a body, use as is */\n            body = importedNode;\n          } else if (importedNode.nodeName === 'HTML') {\n            body = importedNode;\n          } else {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            body.appendChild(importedNode);\n          }\n        } else {\n          /* Exit directly if we have nothing to do */\n          if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n          // eslint-disable-next-line unicorn/prefer-includes\n          dirty.indexOf('<') === -1) {\n            return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n          }\n          /* Initialize the document to work on */\n          body = _initDocument(dirty);\n          /* Check we have a DOM node from the data */\n          if (!body) {\n            return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n          }\n        }\n        /* Remove first element node (ours) if FORCE_BODY is set */\n        if (body && FORCE_BODY) {\n          _forceRemove(body.firstChild);\n        }\n        /* Get node iterator */\n        const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n        /* Now start iterating over the created document */\n        while (currentNode = nodeIterator.nextNode()) {\n          /* Sanitize tags and elements */\n          _sanitizeElements(currentNode);\n          /* Check attributes next */\n          _sanitizeAttributes(currentNode);\n          /* Shadow DOM detected, sanitize it */\n          if (currentNode.content instanceof DocumentFragment) {\n            _sanitizeShadowDOM(currentNode.content);\n          }\n        }\n        /* If we sanitized `dirty` in-place, return it. */\n        if (IN_PLACE) {\n          return dirty;\n        }\n        /* Return sanitized string or DOM */\n        if (RETURN_DOM) {\n          if (RETURN_DOM_FRAGMENT) {\n            returnNode = createDocumentFragment.call(body.ownerDocument);\n            while (body.firstChild) {\n              // eslint-disable-next-line unicorn/prefer-dom-node-append\n              returnNode.appendChild(body.firstChild);\n            }\n          } else {\n            returnNode = body;\n          }\n          if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n            /*\n              AdoptNode() is not used because internal state is not reset\n              (e.g. the past names map of a HTMLFormElement), this is safe\n              in theory but we would rather not risk another attack vector.\n              The state that is cloned by importNode() is explicitly defined\n              by the specs.\n            */\n            returnNode = importNode.call(originalDocument, returnNode, true);\n          }\n          return returnNode;\n        }\n        let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n        /* Serialize doctype if allowed */\n        if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n          serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n        }\n        /* Sanitize final string template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            serializedHTML = stringReplace(serializedHTML, expr, ' ');\n          });\n        }\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n      };\n      DOMPurify.setConfig = function () {\n        let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _parseConfig(cfg);\n        SET_CONFIG = true;\n      };\n      DOMPurify.clearConfig = function () {\n        CONFIG = null;\n        SET_CONFIG = false;\n      };\n      DOMPurify.isValidAttribute = function (tag, attr, value) {\n        /* Initialize shared config vars if necessary. */\n        if (!CONFIG) {\n          _parseConfig({});\n        }\n        const lcTag = transformCaseFunc(tag);\n        const lcName = transformCaseFunc(attr);\n        return _isValidAttribute(lcTag, lcName, value);\n      };\n      DOMPurify.addHook = function (entryPoint, hookFunction) {\n        if (typeof hookFunction !== 'function') {\n          return;\n        }\n        arrayPush(hooks[entryPoint], hookFunction);\n      };\n      DOMPurify.removeHook = function (entryPoint, hookFunction) {\n        if (hookFunction !== undefined) {\n          const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n          return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n        }\n        return arrayPop(hooks[entryPoint]);\n      };\n      DOMPurify.removeHooks = function (entryPoint) {\n        hooks[entryPoint] = [];\n      };\n      DOMPurify.removeAllHooks = function () {\n        hooks = _createHooksMap();\n      };\n      return DOMPurify;\n    }\n    var purify = createDOMPurify();\n\n    const sanitizeHtmlString = (html) => purify().sanitize(html);\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    // Icons that need to be transformed in RTL\n    const rtlTransform = {\n        'indent': true,\n        'outdent': true,\n        'table-insert-column-after': true,\n        'table-insert-column-before': true,\n        'paste-column-after': true,\n        'paste-column-before': true,\n        'unordered-list': true,\n        'list-bull-circle': true,\n        'list-bull-disc': true,\n        'list-bull-default': true,\n        'list-bull-square': true\n    };\n    const defaultIconName = 'temporary-placeholder';\n    const defaultIcon = (icons) => () => get$h(icons, defaultIconName).getOr('!not found!');\n    const getIconName = (name, icons) => {\n        const lcName = name.toLowerCase();\n        // If in rtl mode then try to see if we have a rtl icon to use instead\n        if (global$6.isRtl()) {\n            const rtlName = ensureTrailing(lcName, '-rtl');\n            return has$2(icons, rtlName) ? rtlName : lcName;\n        }\n        else {\n            return lcName;\n        }\n    };\n    const lookupIcon = (name, icons) => get$h(icons, getIconName(name, icons));\n    const get = (name, iconProvider) => {\n        const icons = iconProvider();\n        return lookupIcon(name, icons).getOrThunk(defaultIcon(icons));\n    };\n    const getOr = (name, iconProvider, fallbackIcon) => {\n        const icons = iconProvider();\n        return lookupIcon(name, icons).or(fallbackIcon).getOrThunk(defaultIcon(icons));\n    };\n    const needsRtlTransform = (iconName) => global$6.isRtl() ? has$2(rtlTransform, iconName) : false;\n    const addFocusableBehaviour = () => config('add-focusable', [\n        runOnAttached((comp) => {\n            // set focusable=false on SVGs to prevent focusing the toolbar when tabbing into the editor\n            child(comp.element, 'svg').each((svg) => set$9(svg, 'focusable', 'false'));\n        })\n    ]);\n    const renderIcon$3 = (spec, iconName, icons, fallbackIcon) => {\n        var _a, _b;\n        // If RTL, add the flip icon class if the icon doesn't have a `-rtl` icon available.\n        const rtlIconClasses = needsRtlTransform(iconName) ? ['tox-icon--flip'] : [];\n        const iconHtml = get$h(icons, getIconName(iconName, icons)).or(fallbackIcon).getOrThunk(defaultIcon(icons));\n        return {\n            dom: {\n                tag: spec.tag,\n                attributes: (_a = spec.attributes) !== null && _a !== void 0 ? _a : {},\n                classes: spec.classes.concat(rtlIconClasses),\n                innerHtml: iconHtml\n            },\n            behaviours: derive$1([\n                ...(_b = spec.behaviours) !== null && _b !== void 0 ? _b : [],\n                addFocusableBehaviour()\n            ])\n        };\n    };\n    const render$4 = (iconName, spec, iconProvider, fallbackIcon = Optional.none()) => renderIcon$3(spec, iconName, iconProvider(), fallbackIcon);\n    const renderFirst = (iconNames, spec, iconProvider) => {\n        const icons = iconProvider();\n        const iconName = find$5(iconNames, (name) => has$2(icons, getIconName(name, icons)));\n        return renderIcon$3(spec, iconName.getOr(defaultIconName), icons, Optional.none());\n    };\n\n    const notificationIconMap = {\n        success: 'checkmark',\n        error: 'warning',\n        err: 'error',\n        warning: 'warning',\n        warn: 'warning',\n        info: 'info'\n    };\n    const factory$4 = (detail) => {\n        // For using the alert banner as a standalone banner\n        const notificationTextId = generate$6('notification-text');\n        const memBannerText = record({\n            dom: fromHtml(`<p id=${notificationTextId}>${sanitizeHtmlString(detail.backstageProvider.translate(detail.text))}</p>`),\n            behaviours: derive$1([\n                Replacing.config({})\n            ])\n        });\n        const renderPercentBar = (percent) => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-bar'],\n                styles: {\n                    width: `${percent}%`\n                }\n            }\n        });\n        const renderPercentText = (percent) => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-text'],\n                innerHtml: `${percent}%`\n            }\n        });\n        const memBannerProgress = record({\n            dom: {\n                tag: 'div',\n                classes: detail.progress ? ['tox-progress-bar', 'tox-progress-indicator'] : ['tox-progress-bar']\n            },\n            components: [\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-bar-container']\n                    },\n                    components: [\n                        renderPercentBar(0)\n                    ]\n                },\n                renderPercentText(0)\n            ],\n            behaviours: derive$1([\n                Replacing.config({})\n            ])\n        });\n        const updateProgress = (comp, percent) => {\n            if (comp.getSystem().isConnected()) {\n                memBannerProgress.getOpt(comp).each((progress) => {\n                    Replacing.set(progress, [\n                        {\n                            dom: {\n                                tag: 'div',\n                                classes: ['tox-bar-container']\n                            },\n                            components: [\n                                renderPercentBar(percent)\n                            ]\n                        },\n                        renderPercentText(percent)\n                    ]);\n                });\n            }\n        };\n        const updateText = (comp, text) => {\n            if (comp.getSystem().isConnected()) {\n                const banner = memBannerText.get(comp);\n                Replacing.set(banner, [\n                    text$2(text)\n                ]);\n            }\n        };\n        const apis = {\n            updateProgress,\n            updateText\n        };\n        const iconChoices = flatten([\n            detail.icon.toArray(),\n            [detail.level],\n            Optional.from(notificationIconMap[detail.level]).toArray()\n        ]);\n        const memButton = record(Button.sketch({\n            dom: {\n                tag: 'button',\n                classes: ['tox-notification__dismiss', 'tox-button', 'tox-button--naked', 'tox-button--icon'],\n                attributes: {\n                    'aria-label': detail.backstageProvider.translate('Close')\n                }\n            },\n            components: [\n                render$4('close', {\n                    tag: 'span',\n                    classes: ['tox-icon'],\n                }, detail.iconProvider)\n            ],\n            buttonBehaviours: derive$1([\n                Tabstopping.config({}),\n                Tooltipping.config({\n                    ...detail.backstageProvider.tooltips.getConfig({\n                        tooltipText: detail.backstageProvider.translate('Close')\n                    })\n                })\n            ]),\n            action: (comp) => {\n                detail.onAction(comp);\n            }\n        }));\n        const notificationIconSpec = renderFirst(iconChoices, { tag: 'div', classes: ['tox-notification__icon'] }, detail.iconProvider);\n        const notificationBodySpec = {\n            dom: {\n                tag: 'div',\n                classes: ['tox-notification__body']\n            },\n            components: [\n                memBannerText.asSpec()\n            ],\n            behaviours: derive$1([\n                Replacing.config({})\n            ])\n        };\n        const components = [notificationIconSpec, notificationBodySpec];\n        return {\n            uid: detail.uid,\n            dom: {\n                tag: 'div',\n                attributes: {\n                    'role': 'alert',\n                    'aria-labelledby': notificationTextId\n                },\n                classes: ['tox-notification', 'tox-notification--in', `tox-notification--${detail.level}`],\n            },\n            behaviours: derive$1([\n                Tabstopping.config({}),\n                Focusing.config({}),\n                Keying.config({\n                    mode: 'special',\n                    onEscape: (comp) => {\n                        detail.onAction(comp);\n                        return Optional.some(true);\n                    }\n                })\n            ]),\n            components: components\n                .concat(detail.progress ? [memBannerProgress.asSpec()] : [])\n                .concat([memButton.asSpec()]),\n            apis\n        };\n    };\n    const Notification = single({\n        name: 'Notification',\n        factory: factory$4,\n        configFields: [\n            defaultedStringEnum('level', 'info', ['success', 'error', 'warning', 'warn', 'info']),\n            required$1('progress'),\n            option$3('icon'),\n            required$1('onAction'),\n            required$1('text'),\n            required$1('iconProvider'),\n            required$1('backstageProvider'),\n        ],\n        apis: {\n            updateProgress: (apis, comp, percent) => {\n                apis.updateProgress(comp, percent);\n            },\n            updateText: (apis, comp, text) => {\n                apis.updateText(comp, text);\n            }\n        }\n    });\n\n    var NotificationManagerImpl = (editor, extras, uiMothership, notificationRegion) => {\n        const sharedBackstage = extras.backstage.shared;\n        const getBoundsContainer = () => SugarElement.fromDom(editor.queryCommandValue('ToggleView') === '' ? editor.getContentAreaContainer() : editor.getContainer());\n        const getBounds = () => {\n            const contentArea = box$1(getBoundsContainer());\n            return Optional.some(contentArea);\n        };\n        const clampComponentsToBounds = (components) => {\n            getBounds().each((bounds) => {\n                each$1(components, (comp) => {\n                    remove$6(comp.element, 'width');\n                    if (get$c(comp.element) > bounds.width) {\n                        set$7(comp.element, 'width', bounds.width + 'px');\n                    }\n                });\n            });\n        };\n        const open = (settings, closeCallback, isEditorOrUIFocused) => {\n            const close = () => {\n                const removeNotificationAndReposition = (region) => {\n                    Replacing.remove(region, notification);\n                    reposition();\n                };\n                const manageRegionVisibility = (region, editorOrUiFocused) => {\n                    if (children(region.element).length === 0) {\n                        handleEmptyRegion(region, editorOrUiFocused);\n                    }\n                    else {\n                        handleRegionWithChildren(region, editorOrUiFocused);\n                    }\n                };\n                const handleEmptyRegion = (region, editorOrUIFocused) => {\n                    InlineView.hide(region);\n                    notificationRegion.clear();\n                    if (editorOrUIFocused) {\n                        editor.focus();\n                    }\n                };\n                const handleRegionWithChildren = (region, editorOrUIFocused) => {\n                    if (editorOrUIFocused) {\n                        Keying.focusIn(region);\n                    }\n                };\n                notificationRegion.on((region) => {\n                    closeCallback();\n                    const editorOrUIFocused = isEditorOrUIFocused();\n                    removeNotificationAndReposition(region);\n                    manageRegionVisibility(region, editorOrUIFocused);\n                });\n            };\n            const shouldApplyDocking = () => !isStickyToolbar(editor) || !sharedBackstage.header.isPositionedAtTop();\n            const notification = build$1(Notification.sketch({\n                text: settings.text,\n                level: contains$2(['success', 'error', 'warning', 'warn', 'info'], settings.type) ? settings.type : undefined,\n                progress: settings.progressBar === true,\n                icon: settings.icon,\n                onAction: close,\n                iconProvider: sharedBackstage.providers.icons,\n                backstageProvider: sharedBackstage.providers,\n            }));\n            if (!notificationRegion.isSet()) {\n                const notificationWrapper = build$1(InlineView.sketch({\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-notifications-container'],\n                        attributes: {\n                            'aria-label': 'Notifications',\n                            'role': 'region'\n                        }\n                    },\n                    lazySink: sharedBackstage.getSink,\n                    fireDismissalEventInstead: {},\n                    ...sharedBackstage.header.isPositionedAtTop() ? {} : { fireRepositionEventInstead: {} },\n                    inlineBehaviours: derive$1([\n                        Keying.config({\n                            mode: 'cyclic',\n                            selector: '.tox-notification, .tox-notification a, .tox-notification button',\n                        }),\n                        Replacing.config({}),\n                        ...(shouldApplyDocking()\n                            ? [\n                                Docking.config({\n                                    contextual: {\n                                        lazyContext: () => Optional.some(box$1(getBoundsContainer())),\n                                        fadeInClass: 'tox-notification-container-dock-fadein',\n                                        fadeOutClass: 'tox-notification-container-dock-fadeout',\n                                        transitionClass: 'tox-notification-container-dock-transition'\n                                    },\n                                    modes: ['top'],\n                                    lazyViewport: (comp) => {\n                                        const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n                                        return optScrollingContext\n                                            .map((sc) => {\n                                            const combinedBounds = getBoundsFrom(sc);\n                                            return {\n                                                bounds: combinedBounds,\n                                                optScrollEnv: Optional.some({\n                                                    currentScrollTop: sc.element.dom.scrollTop,\n                                                    scrollElmTop: absolute$3(sc.element).top\n                                                })\n                                            };\n                                        }).getOrThunk(() => ({\n                                            bounds: win(),\n                                            optScrollEnv: Optional.none()\n                                        }));\n                                    }\n                                })\n                            ] : [])\n                    ])\n                }));\n                const notificationSpec = premade(notification);\n                const anchorOverrides = {\n                    maxHeightFunction: expandable$1()\n                };\n                const anchor = {\n                    ...sharedBackstage.anchors.banner(),\n                    overrides: anchorOverrides\n                };\n                notificationRegion.set(notificationWrapper);\n                uiMothership.add(notificationWrapper);\n                InlineView.showWithinBounds(notificationWrapper, notificationSpec, { anchor }, getBounds);\n            }\n            else {\n                const notificationSpec = premade(notification);\n                notificationRegion.on((notificationWrapper) => {\n                    Replacing.append(notificationWrapper, notificationSpec);\n                    InlineView.reposition(notificationWrapper);\n                    if (notification.hasConfigured(Docking)) {\n                        Docking.refresh(notificationWrapper);\n                    }\n                    clampComponentsToBounds(notificationWrapper.components());\n                });\n            }\n            if (isNumber(settings.timeout) && settings.timeout > 0) {\n                global$a.setEditorTimeout(editor, () => {\n                    close();\n                }, settings.timeout);\n            }\n            const reposition = () => {\n                notificationRegion.on((region) => {\n                    InlineView.reposition(region);\n                    if (region.hasConfigured(Docking)) {\n                        Docking.refresh(region);\n                    }\n                    clampComponentsToBounds(region.components());\n                });\n            };\n            const thisNotification = {\n                close,\n                reposition,\n                text: (nuText) => {\n                    // check if component is still mounted\n                    Notification.updateText(notification, nuText);\n                },\n                settings,\n                getEl: () => notification.element.dom,\n                progressBar: {\n                    value: (percent) => {\n                        Notification.updateProgress(notification, percent);\n                    }\n                }\n            };\n            return thisNotification;\n        };\n        const close = (notification) => {\n            notification.close();\n        };\n        const getArgs = (notification) => {\n            return notification.settings;\n        };\n        return {\n            open,\n            close,\n            getArgs\n        };\n    };\n\n    const setup$c = (api, editor) => {\n        const redirectKeyToItem = (item, e) => {\n            emitWith(item, keydown(), { raw: e });\n        };\n        const getItem = () => api.getMenu().bind(Highlighting.getHighlighted);\n        editor.on('keydown', (e) => {\n            const keyCode = e.which;\n            // If the autocompleter isn't activated then do nothing\n            if (!api.isActive()) {\n                return;\n            }\n            if (api.isMenuOpen()) {\n                // Pressing <enter> executes any item currently selected, or does nothing\n                if (keyCode === 13) {\n                    getItem().each(emitExecute);\n                    e.preventDefault();\n                    // Pressing <down> either highlights the first option, or moves down the menu\n                }\n                else if (keyCode === 40) {\n                    getItem().fold(\n                    // No current item, so highlight the first one\n                    () => {\n                        api.getMenu().each(Highlighting.highlightFirst);\n                    }, \n                    // There is a current item, so move down in the menu\n                    (item) => {\n                        redirectKeyToItem(item, e);\n                    });\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    // Pressing <up>, <left>, <right> gets redirected to the selected item\n                }\n                else if (keyCode === 37 || keyCode === 38 || keyCode === 39) {\n                    getItem().each((item) => {\n                        redirectKeyToItem(item, e);\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    });\n                }\n            }\n            else {\n                // Pressing <enter>, <down> or <up> closes the autocompleter when it's active but the menu isn't open\n                if (keyCode === 13 || keyCode === 38 || keyCode === 40) {\n                    api.cancelIfNecessary();\n                }\n            }\n        });\n        editor.on('NodeChange', () => {\n            // Close if active, not in the middle of an onAction callback and we're no longer inside the autocompleter span\n            if (api.isActive() && !api.isProcessingAction() && !editor.queryCommandState('mceAutoCompleterInRange')) {\n                api.cancelIfNecessary();\n            }\n        });\n    };\n    const AutocompleterEditorEvents = {\n        setup: setup$c\n    };\n\n    var ItemResponse;\n    (function (ItemResponse) {\n        ItemResponse[ItemResponse[\"CLOSE_ON_EXECUTE\"] = 0] = \"CLOSE_ON_EXECUTE\";\n        ItemResponse[ItemResponse[\"BUBBLE_TO_SANDBOX\"] = 1] = \"BUBBLE_TO_SANDBOX\";\n    })(ItemResponse || (ItemResponse = {}));\n    var ItemResponse$1 = ItemResponse;\n\n    const navClass = 'tox-menu-nav__js';\n    const selectableClass = 'tox-collection__item';\n    const colorClass = 'tox-swatch';\n    const presetClasses = {\n        normal: navClass,\n        color: colorClass\n    };\n    const tickedClass = 'tox-collection__item--enabled';\n    const groupHeadingClass = 'tox-collection__group-heading';\n    const iconClass = 'tox-collection__item-icon';\n    const imageClass = 'tox-collection__item-image';\n    const imageSelectorClasll = 'tox-collection__item-image-selector';\n    const textClass = 'tox-collection__item-label';\n    const accessoryClass = 'tox-collection__item-accessory';\n    const caretClass = 'tox-collection__item-caret';\n    const checkmarkClass = 'tox-collection__item-checkmark';\n    const activeClass = 'tox-collection__item--active';\n    const containerClass = 'tox-collection__item-container';\n    const containerColumnClass = 'tox-collection__item-container--column';\n    const containerRowClass = 'tox-collection__item-container--row';\n    const containerAlignRightClass = 'tox-collection__item-container--align-right';\n    const containerAlignLeftClass = 'tox-collection__item-container--align-left';\n    const containerValignTopClass = 'tox-collection__item-container--valign-top';\n    const containerValignMiddleClass = 'tox-collection__item-container--valign-middle';\n    const containerValignBottomClass = 'tox-collection__item-container--valign-bottom';\n    const classForPreset = (presets) => get$h(presetClasses, presets).getOr(navClass);\n\n    const forMenu = (presets) => {\n        if (presets === 'color') {\n            return 'tox-swatches';\n        }\n        else {\n            return 'tox-menu';\n        }\n    };\n    const classes = (presets) => ({\n        backgroundMenu: 'tox-background-menu',\n        selectedMenu: 'tox-selected-menu',\n        selectedItem: 'tox-collection__item--active',\n        hasIcons: 'tox-menu--has-icons',\n        menu: forMenu(presets),\n        tieredMenu: 'tox-tiered-menu'\n    });\n\n    const markers = (presets) => {\n        const menuClasses = classes(presets);\n        return {\n            backgroundMenu: menuClasses.backgroundMenu,\n            selectedMenu: menuClasses.selectedMenu,\n            menu: menuClasses.menu,\n            selectedItem: menuClasses.selectedItem,\n            item: classForPreset(presets)\n        };\n    };\n    const dom = (hasIcons, columns, presets) => {\n        const menuClasses = classes(presets);\n        return {\n            tag: 'div',\n            classes: flatten([\n                [menuClasses.menu, `tox-menu-${columns}-column`],\n                hasIcons ? [menuClasses.hasIcons] : []\n            ])\n        };\n    };\n    const components = [\n        Menu.parts.items({})\n    ];\n    // NOTE: Up to here.\n    const part = (hasIcons, columns, presets) => {\n        const menuClasses = classes(presets);\n        const d = {\n            tag: 'div',\n            classes: flatten([\n                [menuClasses.tieredMenu]\n            ])\n        };\n        return {\n            dom: d,\n            markers: markers(presets)\n        };\n    };\n\n    // This event is triggered by a menu item from a dropdown when it wants the\n    // dropdown to refetch its contents based on a search string.\n    const refetchTriggerEvent = generate$6('refetch-trigger-event');\n    // This event is triggerd by a menu item from a dropdown, when it wants to\n    // redispatch that event to the currently active item of that dropdown menu. It will\n    // be used in situations where the event should be firing on the item with fake focus,\n    // but instead it is firing on the item with real focus (e.g of real focus:\n    // menu search field)\n    const redirectMenuItemInteractionEvent = generate$6('redirect-menu-item-interaction');\n\n    // This is not stored in ItemClasses, because the searcher is not actually\n    // contained within items. It isn't part of their navigation, and it\n    // isn't maintained by menus. It is just part of the first menu, but\n    // not its items.\n    const menuSearcherClass = 'tox-menu__searcher';\n    // Ideally, we'd be using mementos to find it again, but we'd need to pass\n    // that memento onto the dropdown, which isn't going to have it. Especially,\n    // because the dropdown isn't responsible for putting this searcher component\n    // into the menu, NestedMenus is.\n    const findWithinSandbox = (sandboxComp) => {\n        return descendant(sandboxComp.element, `.${menuSearcherClass}`).bind((inputElem) => sandboxComp.getSystem().getByDom(inputElem).toOptional());\n    };\n    // There is nothing sandbox-specific about this code. It just needs to be\n    // a container that wraps the search field.\n    const findWithinMenu = findWithinSandbox;\n    const restoreState = (inputComp, searcherState) => {\n        Representing.setValue(inputComp, searcherState.fetchPattern);\n        inputComp.element.dom.selectionStart = searcherState.selectionStart;\n        inputComp.element.dom.selectionEnd = searcherState.selectionEnd;\n    };\n    const saveState = (inputComp) => {\n        const fetchPattern = Representing.getValue(inputComp);\n        const selectionStart = inputComp.element.dom.selectionStart;\n        const selectionEnd = inputComp.element.dom.selectionEnd;\n        return {\n            fetchPattern,\n            selectionStart,\n            selectionEnd\n        };\n    };\n    // Make sure there is ARIA communicating the currently active item in the results.\n    const setActiveDescendant = (inputComp, active) => {\n        getOpt(active.element, 'id')\n            .each((id) => set$9(inputComp.element, 'aria-activedescendant', id));\n    };\n    const renderMenuSearcher = (spec) => {\n        const handleByBrowser = (comp, se) => {\n            // We \"cut\" this event, so that the browser still handles it, but it is not processed\n            // by any of the above alloy components. We could also do this by stopping propagation,\n            // but not preventing default, but it's probably good to allow some overarching thing\n            // in the DOM (outside of alloy) to stop it if they want to.\n            se.cut();\n            // Returning a Some here (regardless of boolean value) is going to call `stop` on the\n            // simulated event, which is going to call: preventDefault and stopPropagation. We want\n            // neither of these things to happen, so we return None here to say that it hasn't been\n            // handled. But because we've cut it, it will not propagate to any other alloy components\n            return Optional.none();\n        };\n        const handleByHighlightedItem = (comp, se) => {\n            // Because we need to redispatch based on highlighted items that we don't know about here,\n            // we are going to emit an event, that the sandbox listens to, and the sandbox will\n            // redispatch the event.\n            const eventData = {\n                interactionEvent: se.event,\n                eventType: se.event.raw.type\n            };\n            emitWith(comp, redirectMenuItemInteractionEvent, eventData);\n            return Optional.some(true);\n        };\n        const customSearcherEventsName = 'searcher-events';\n        return {\n            dom: {\n                tag: 'div',\n                // NOTE: This is very intentionally NOT the navigation class, because\n                // we don't want the searcher to be part of the navigation. This class\n                // is just for styling consistency. Perhaps it should be its own class.\n                classes: [selectableClass]\n            },\n            components: [\n                Input.sketch({\n                    inputClasses: [menuSearcherClass, 'tox-textfield'],\n                    inputAttributes: {\n                        ...(spec.placeholder.map((placeholder) => ({ placeholder: spec.i18n(placeholder) })).getOr({})),\n                        // This ARIA is based on the algolia example documented in TINY-8952\n                        'type': 'search',\n                        'aria-autocomplete': 'list'\n                    },\n                    inputBehaviours: derive$1([\n                        config(customSearcherEventsName, [\n                            // When the user types into the search field, we want to retrigger\n                            // a fetch on the dropdown. This will be fired from within the\n                            // dropdown's sandbox, so the dropdown is going to have to listen\n                            // for it there. See CommonDropdown.ts.\n                            run$1(\n                            // Use \"input\" to handle keydown, paste etc.\n                            input(), (inputComp) => {\n                                emit(inputComp, refetchTriggerEvent);\n                            }),\n                            run$1(keydown(), (inputComp, se) => {\n                                // The Special Keying config type since TINY-7005 processes the Escape\n                                // key on keyup, not keydown. We need to stop the keydown event for this\n                                // input, because some browsers (e.g. Chrome) will process a keydown\n                                // for Escape inside an input[type=search] by clearing the input value,\n                                // and then triggering an \"input\" event. This \"input\" event will trigger\n                                // a refetch, which if it completes before the keyup is fired for Escape,\n                                // will go back to only showing one level of menu. Then, when the escape\n                                // keyup is processed by Keying, it will close the single remaining menu.\n                                // This has the effect of closing *all* menus that are open when Escape is\n                                // pressed instead of the last one. So, instead, we are going to kill the\n                                // keydown event, so that it doesn't have the default browser behaviour, and\n                                // won't trigger an input (and then Refetch). Then the keyup will still fire\n                                // so just one level of the menu will close. This is all based on the underlying\n                                // assumption that preventDefault and/or stop on a keydown does not suppress\n                                // the related keyup. All of the documentation found so far, suggests it should\n                                // only suppress the keypress, not the keyup, but that might not be across all\n                                // browsers, or implemented consistently.\n                                if (se.event.raw.key === 'Escape') {\n                                    se.stop();\n                                }\n                            })\n                        ]),\n                        // In addition to input handling, we want special handling for\n                        // Up/Down/Left/Right/Enter/Escape/Space. We can divide these into two categories\n                        //  - events that we don't want to allow the overall menu system to process (left and right and space)\n                        //  - events that we want to redispatch on the \"highlighted item\" based on the\n                        // current fake focus.\n                        Keying.config({\n                            mode: 'special',\n                            onLeft: handleByBrowser,\n                            onRight: handleByBrowser,\n                            onSpace: handleByBrowser,\n                            onEnter: handleByHighlightedItem,\n                            onEscape: handleByHighlightedItem,\n                            onUp: handleByHighlightedItem,\n                            onDown: handleByHighlightedItem\n                        })\n                    ]),\n                    // Because we have customised handling for keydown, and we are configuring\n                    // Keying, we need to specify which \"behaviour\" (custom events or keying) gets to\n                    // process the keydown event first. In this situation, we want to stop escape before\n                    // anything happens (although it really isn't necessary)\n                    eventOrder: {\n                        keydown: [customSearcherEventsName, Keying.name()]\n                    }\n                })\n            ]\n        };\n    };\n\n    const searchResultsClass = 'tox-collection--results__js';\n    // NOTE: this is operating on the the final AlloySpec\n    const augmentWithAria = (item) => {\n        var _a;\n        if (item.dom) {\n            return {\n                ...item,\n                dom: {\n                    ...item.dom,\n                    attributes: {\n                        ...(_a = item.dom.attributes) !== null && _a !== void 0 ? _a : {},\n                        'id': generate$6('aria-item-search-result-id'),\n                        'aria-selected': 'false'\n                    }\n                }\n            };\n        }\n        else {\n            return item;\n        }\n    };\n\n    const chunk = (rowDom, numColumns) => (items) => {\n        const chunks = chunk$1(items, numColumns);\n        return map$2(chunks, (c) => ({\n            dom: rowDom,\n            components: c\n        }));\n    };\n    const forSwatch = (columns) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-menu', 'tox-swatches-menu']\n        },\n        components: [\n            {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-swatches']\n                },\n                components: [\n                    Menu.parts.items({\n                        preprocess: columns !== 'auto' ? chunk({\n                            tag: 'div',\n                            classes: ['tox-swatches__row']\n                        }, columns) : identity\n                    })\n                ]\n            }\n        ]\n    });\n    const forImageSelector = (columns) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-menu', 'tox-image-selector-menu']\n        },\n        components: [\n            {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-image-selector']\n                },\n                components: [\n                    Menu.parts.items({\n                        preprocess: columns !== 'auto' ? chunk({\n                            tag: 'div',\n                            classes: ['tox-image-selector__row']\n                        }, columns) : identity\n                    })\n                ]\n            }\n        ]\n    });\n    const forToolbar = (columns) => ({\n        dom: {\n            tag: 'div',\n            // TODO: Configurable lg setting?\n            classes: ['tox-menu', 'tox-collection', 'tox-collection--toolbar', 'tox-collection--toolbar-lg']\n        },\n        components: [\n            Menu.parts.items({\n                preprocess: chunk({\n                    tag: 'div',\n                    classes: ['tox-collection__group']\n                }, columns)\n            })\n        ]\n    });\n    // NOTE: That type signature isn't quite true.\n    const preprocessCollection = (items, isSeparator) => {\n        const allSplits = [];\n        let currentSplit = [];\n        each$1(items, (item, i) => {\n            if (isSeparator(item, i)) {\n                if (currentSplit.length > 0) {\n                    allSplits.push(currentSplit);\n                }\n                currentSplit = [];\n                if (has$2(item.dom, 'innerHtml') || item.components && item.components.length > 0) {\n                    currentSplit.push(item);\n                }\n            }\n            else {\n                currentSplit.push(item);\n            }\n        });\n        if (currentSplit.length > 0) {\n            allSplits.push(currentSplit);\n        }\n        return map$2(allSplits, (s) => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-collection__group']\n            },\n            components: s\n        }));\n    };\n    const insertItemsPlaceholder = (columns, initItems, onItem) => {\n        return Menu.parts.items({\n            preprocess: (rawItems) => {\n                // Add any information to the items that is required. For example\n                // when the items are results in a searchable menu, we need them to have\n                // an ID that can be referenced by aria-activedescendant\n                const enrichedItems = map$2(rawItems, onItem);\n                if (columns !== 'auto' && columns > 1) {\n                    return chunk({\n                        tag: 'div',\n                        classes: ['tox-collection__group']\n                    }, columns)(enrichedItems);\n                }\n                else {\n                    return preprocessCollection(enrichedItems, (_item, i) => initItems[i].type === 'separator');\n                }\n            }\n        });\n    };\n    const forCollection = (columns, initItems, _hasIcons = true) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-menu', 'tox-collection'].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid'])\n        },\n        components: [\n            // We don't need to add IDs for each item because there are no\n            // aria relationships we need to maintain\n            insertItemsPlaceholder(columns, initItems, identity)\n        ]\n    });\n    const forCollectionWithSearchResults = (columns, initItems, _hasIcons = true) => {\n        // A collection with results is exactly like a collection, except it also has\n        // an ID and class on its outer div to allow for aria-controls relationships, and ids\n        // on its items.\n        // This connects the search bar with the list box.\n        const ariaControlsSearchResults = generate$6('aria-controls-search-results');\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-menu', 'tox-collection', searchResultsClass].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid']),\n                attributes: {\n                    id: ariaControlsSearchResults\n                }\n            },\n            components: [\n                // For each item, it needs to have an ID, so that we can refer to it\n                // by the aria-activedescendant attribute\n                insertItemsPlaceholder(columns, initItems, augmentWithAria)\n            ]\n        };\n    };\n    // Does a searchable menu *really* support columns !== 1 ?\n    const forCollectionWithSearchField = (columns, initItems, searchField) => {\n        // This connects the search bar with the list box.\n        const ariaControlsSearchResults = generate$6('aria-controls-search-results');\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-menu', 'tox-collection'].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid'])\n            },\n            components: [\n                // Importantly, the search bar is not in the \"items\" part, which means that it is\n                // not given any of the item decorations by default. In order to ensure that is\n                // not part of the navigation, however, we need to prevent it from getting the nav\n                // class. For general collection menu items, it is navClass, which is:\n                // tox-menu-nav__js. So simply, do not add this class when creating\n                // the search, so that it isn't in the navigation. Ideally, it would only ever look\n                // inside its items section, but the items aren't guaranteed to have a separate\n                // container, and navigation candidates are found anywhere inside the menu\n                // container. We could add configuration to alloy's Menu movement, where there was\n                // a 'navigation container' that all items would be in. That could be another\n                // way to solve the problem. For now, we'll just manually avoid adding the navClass\n                renderMenuSearcher({\n                    i18n: global$6.translate,\n                    placeholder: searchField.placeholder\n                }),\n                {\n                    // We need a separate container for the items, because this is the container\n                    // that multiple tox-collection__groups might go into, and will be the container\n                    // that the search bar controls.\n                    dom: {\n                        tag: 'div',\n                        classes: [\n                            ...(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid']),\n                            searchResultsClass\n                        ],\n                        attributes: {\n                            id: ariaControlsSearchResults\n                        }\n                    },\n                    components: [\n                        // For each item, it needs to have an ID, so that we can refer to it\n                        // by the aria-activedescendant attribute\n                        insertItemsPlaceholder(columns, initItems, augmentWithAria)\n                    ]\n                }\n            ]\n        };\n    };\n    const forHorizontalCollection = (initItems, _hasIcons = true) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-collection', 'tox-collection--horizontal']\n        },\n        components: [\n            Menu.parts.items({\n                preprocess: (items) => preprocessCollection(items, (_item, i) => initItems[i].type === 'separator')\n            })\n        ]\n    });\n\n    const menuHasIcons = (xs) => exists(xs, (item) => 'icon' in item && item.icon !== undefined);\n    const handleError = (error) => {\n        // eslint-disable-next-line no-console\n        console.error(formatError(error));\n        // eslint-disable-next-line no-console\n        console.log(error);\n        return Optional.none();\n    };\n    const createHorizontalPartialMenuWithAlloyItems = (value, _hasIcons, items, _columns, _menuLayout) => {\n        // Horizontal collections do not support different menu layout structures currently.\n        const structure = forHorizontalCollection(items);\n        return {\n            value,\n            dom: structure.dom,\n            components: structure.components,\n            items\n        };\n    };\n    const createPartialMenuWithAlloyItems = (value, hasIcons, items, columns, menuLayout) => {\n        const getNormalStructure = () => {\n            if (menuLayout.menuType !== 'searchable') {\n                return forCollection(columns, items);\n            }\n            else {\n                return menuLayout.searchMode.searchMode === 'search-with-field'\n                    ? forCollectionWithSearchField(columns, items, menuLayout.searchMode)\n                    : forCollectionWithSearchResults(columns, items);\n            }\n        };\n        if (menuLayout.menuType === 'color') {\n            const structure = forSwatch(columns);\n            return {\n                value,\n                dom: structure.dom,\n                components: structure.components,\n                items\n            };\n        }\n        else if (menuLayout.menuType === 'imageselector' && columns !== 'auto') {\n            const structure = forImageSelector(columns);\n            return {\n                value,\n                dom: structure.dom,\n                components: structure.components,\n                items\n            };\n        }\n        else if (menuLayout.menuType === 'normal' && columns === 'auto') {\n            const structure = forCollection(columns, items);\n            return {\n                value,\n                dom: structure.dom,\n                components: structure.components,\n                items\n            };\n        }\n        else if (menuLayout.menuType === 'normal' || menuLayout.menuType === 'searchable') {\n            const structure = getNormalStructure();\n            return {\n                value,\n                dom: structure.dom,\n                components: structure.components,\n                items\n            };\n        }\n        else if (menuLayout.menuType === 'listpreview' && columns !== 'auto') {\n            const structure = forToolbar(columns);\n            return {\n                value,\n                dom: structure.dom,\n                components: structure.components,\n                items\n            };\n        }\n        else {\n            return {\n                value,\n                dom: dom(hasIcons, columns, menuLayout.menuType),\n                components: components,\n                items\n            };\n        }\n    };\n\n    const type = requiredString('type');\n    const name = requiredString('name');\n    const label = requiredString('label');\n    const text = requiredString('text');\n    const title = requiredString('title');\n    const icon = requiredString('icon');\n    const url = requiredString('url');\n    const value = requiredString('value');\n    const fetch = requiredFunction('fetch');\n    const getSubmenuItems = requiredFunction('getSubmenuItems');\n    const onAction = requiredFunction('onAction');\n    const onItemAction = requiredFunction('onItemAction');\n    const onSetup = defaultedFunction('onSetup', () => noop);\n    const optionalName = optionString('name');\n    const optionalText = optionString('text');\n    const optionalRole = optionString('role');\n    const optionalIcon = optionString('icon');\n    const optionalTooltip = optionString('tooltip');\n    const optionalLabel = optionString('label');\n    const optionalShortcut = optionString('shortcut');\n    const optionalSelect = optionFunction('select');\n    const active = defaultedBoolean('active', false);\n    const borderless = defaultedBoolean('borderless', false);\n    const enabled = defaultedBoolean('enabled', true);\n    const primary = defaultedBoolean('primary', false);\n    const defaultedColumns = (num) => defaulted('columns', num);\n    const defaultedMeta = defaulted('meta', {});\n    const defaultedOnAction = defaultedFunction('onAction', noop);\n    const defaultedType = (type) => defaultedString('type', type);\n    const generatedName = (namePrefix) => field$1('name', 'name', defaultedThunk(() => generate$6(`${namePrefix}-name`)), string);\n    const generatedValue = (valuePrefix) => field$1('value', 'value', defaultedThunk(() => generate$6(`${valuePrefix}-value`)), anyValue());\n\n    const alertBannerFields = [\n        type,\n        text,\n        requiredStringEnum('level', ['info', 'warn', 'error', 'success']),\n        icon,\n        defaulted('url', '')\n    ];\n    const alertBannerSchema = objOf(alertBannerFields);\n\n    const createBarFields = (itemsField) => [\n        type,\n        itemsField\n    ];\n\n    const buttonFields = [\n        type,\n        text,\n        enabled,\n        generatedName('button'),\n        optionalIcon,\n        borderless,\n        // this should be defaulted to `secondary` but the implementation needs to manage the deprecation\n        optionStringEnum('buttonType', ['primary', 'secondary', 'toolbar']),\n        // this should be removed, but must live here because FieldSchema doesn't have a way to manage deprecated fields\n        primary,\n        defaultedString('context', 'mode:design')\n    ];\n    const buttonSchema = objOf(buttonFields);\n\n    const formComponentFields = [\n        type,\n        name\n    ];\n    const formComponentWithLabelFields = formComponentFields.concat([\n        optionalLabel\n    ]);\n\n    const checkboxFields = formComponentFields.concat([\n        label,\n        enabled,\n        defaultedString('context', 'mode:design')\n    ]);\n    const checkboxSchema = objOf(checkboxFields);\n    const checkboxDataProcessor = boolean;\n\n    const collectionFields = formComponentWithLabelFields.concat([\n        defaultedColumns('auto'),\n        defaultedString('context', 'mode:design')\n    ]);\n    const collectionSchema = objOf(collectionFields);\n    // TODO: Make type for CollectionItem\n    const collectionDataProcessor = arrOfObj([\n        value,\n        text,\n        icon\n    ]);\n\n    const colorInputFields = formComponentWithLabelFields.concat([\n        defaultedString('storageKey', 'default'),\n        defaultedString('context', 'mode:design'),\n    ]);\n    const colorInputSchema = objOf(colorInputFields);\n    const colorInputDataProcessor = string;\n\n    const colorPickerFields = formComponentWithLabelFields;\n    const colorPickerSchema = objOf(colorPickerFields);\n    const colorPickerDataProcessor = string;\n\n    const customEditorFields = formComponentFields.concat([\n        defaultedString('tag', 'textarea'),\n        requiredString('scriptId'),\n        requiredString('scriptUrl'),\n        optionFunction('onFocus'),\n        defaultedPostMsg('settings', undefined)\n    ]);\n    const customEditorFieldsOld = formComponentFields.concat([\n        defaultedString('tag', 'textarea'),\n        requiredFunction('init')\n    ]);\n    const customEditorSchema = valueOf((v) => asRaw('customeditor.old', objOfOnly(customEditorFieldsOld), v).orThunk(() => asRaw('customeditor.new', objOfOnly(customEditorFields), v)));\n    const customEditorDataProcessor = string;\n\n    const commonMenuItemFields = [\n        enabled,\n        optionalText,\n        optionalRole,\n        optionalShortcut,\n        generatedValue('menuitem'),\n        defaultedMeta,\n        defaultedString('context', 'mode:design')\n    ];\n\n    const dialogToggleMenuItemSchema = objOf([\n        type,\n        name\n    ].concat(commonMenuItemFields));\n    const dialogToggleMenuItemDataProcessor = boolean;\n\n    const baseFooterButtonFields = [\n        generatedName('button'),\n        optionalIcon,\n        defaultedStringEnum('align', 'end', ['start', 'end']),\n        // this should be removed, but must live here because FieldSchema doesn't have a way to manage deprecated fields\n        primary,\n        enabled,\n        // this should be defaulted to `secondary` but the implementation needs to manage the deprecation\n        optionStringEnum('buttonType', ['primary', 'secondary']),\n        defaultedString('context', 'mode:design')\n    ];\n    const dialogFooterButtonFields = [\n        ...baseFooterButtonFields,\n        text\n    ];\n    const normalFooterButtonFields = [\n        requiredStringEnum('type', ['submit', 'cancel', 'custom']),\n        ...dialogFooterButtonFields\n    ];\n    const menuFooterButtonFields = [\n        requiredStringEnum('type', ['menu']),\n        optionalText,\n        optionalTooltip,\n        optionalIcon,\n        requiredArrayOf('items', dialogToggleMenuItemSchema),\n        ...baseFooterButtonFields\n    ];\n    const toggleButtonSpecFields = [\n        ...baseFooterButtonFields,\n        requiredStringEnum('type', ['togglebutton']),\n        optionalTooltip,\n        optionalIcon,\n        optionalText,\n        defaultedBoolean('active', false)\n    ];\n    const dialogFooterButtonSchema = choose$1('type', {\n        submit: normalFooterButtonFields,\n        cancel: normalFooterButtonFields,\n        custom: normalFooterButtonFields,\n        menu: menuFooterButtonFields,\n        togglebutton: toggleButtonSpecFields\n    });\n\n    const dropZoneFields = formComponentWithLabelFields.concat([\n        defaultedString('context', 'mode:design'),\n    ]);\n    const dropZoneSchema = objOf(dropZoneFields);\n    const dropZoneDataProcessor = arrOfVal();\n\n    const createGridFields = (itemsField) => [\n        type,\n        requiredNumber('columns'),\n        itemsField\n    ];\n\n    const htmlPanelFields = [\n        type,\n        requiredString('html'),\n        defaultedStringEnum('presets', 'presentation', ['presentation', 'document']),\n        defaultedFunction('onInit', noop),\n        defaultedBoolean('stretched', false),\n    ];\n    const htmlPanelSchema = objOf(htmlPanelFields);\n\n    const iframeFields = formComponentWithLabelFields.concat([\n        defaultedBoolean('border', false),\n        defaultedBoolean('sandboxed', true),\n        defaultedBoolean('streamContent', false),\n        defaultedBoolean('transparent', true)\n    ]);\n    const iframeSchema = objOf(iframeFields);\n    const iframeDataProcessor = string;\n\n    const imagePreviewSchema = objOf(formComponentFields.concat([\n        optionString('height'),\n    ]));\n    const imagePreviewDataProcessor = objOf([\n        requiredString('url'),\n        optionNumber('zoom'),\n        optionNumber('cachedWidth'),\n        optionNumber('cachedHeight'),\n    ]);\n\n    const inputFields = formComponentWithLabelFields.concat([\n        optionString('inputMode'),\n        optionString('placeholder'),\n        defaultedBoolean('maximized', false),\n        enabled,\n        defaultedString('context', 'mode:design'),\n    ]);\n    const inputSchema = objOf(inputFields);\n    const inputDataProcessor = string;\n\n    const createLabelFields = (itemsField) => [\n        type,\n        label,\n        itemsField,\n        defaultedStringEnum('align', 'start', ['start', 'center', 'end']),\n        optionString('for')\n    ];\n\n    const listBoxSingleItemFields = [\n        text,\n        value\n    ];\n    const listBoxNestedItemFields = [\n        text,\n        requiredArrayOf('items', thunkOf('items', () => listBoxItemSchema))\n    ];\n    const listBoxItemSchema = oneOf([\n        objOf(listBoxSingleItemFields),\n        objOf(listBoxNestedItemFields)\n    ]);\n    const listBoxFields = formComponentWithLabelFields.concat([\n        requiredArrayOf('items', listBoxItemSchema),\n        enabled,\n        defaultedString('context', 'mode:design')\n    ]);\n    const listBoxSchema = objOf(listBoxFields);\n    const listBoxDataProcessor = string;\n\n    const selectBoxFields = formComponentWithLabelFields.concat([\n        requiredArrayOfObj('items', [\n            text,\n            value\n        ]),\n        defaultedNumber('size', 1),\n        enabled,\n        defaultedString('context', 'mode:design')\n    ]);\n    const selectBoxSchema = objOf(selectBoxFields);\n    const selectBoxDataProcessor = string;\n\n    const sizeInputFields = formComponentWithLabelFields.concat([\n        defaultedBoolean('constrain', true),\n        enabled,\n        defaultedString('context', 'mode:design')\n    ]);\n    const sizeInputSchema = objOf(sizeInputFields);\n    const sizeInputDataProcessor = objOf([\n        requiredString('width'),\n        requiredString('height')\n    ]);\n\n    const sliderFields = formComponentFields.concat([\n        label,\n        defaultedNumber('min', 0),\n        defaultedNumber('max', 0),\n    ]);\n    const sliderSchema = objOf(sliderFields);\n    const sliderInputDataProcessor = number;\n\n    const tableFields = [\n        type,\n        requiredArrayOf('header', string),\n        requiredArrayOf('cells', arrOf(string))\n    ];\n    const tableSchema = objOf(tableFields);\n\n    const textAreaFields = formComponentWithLabelFields.concat([\n        optionString('placeholder'),\n        defaultedBoolean('maximized', false),\n        enabled,\n        defaultedString('context', 'mode:design'),\n    ]);\n    const textAreaSchema = objOf(textAreaFields);\n    const textAreaDataProcessor = string;\n\n    const baseMenuButtonFields = [\n        defaultedString('buttonType', 'default'),\n        optionString('text'),\n        optionString('tooltip'),\n        optionString('icon'),\n        defaultedOf('search', false, \n        // So our boulder validation are:\n        // a) boolean -> we need to map it into an Option\n        // b) object -> we need to map it into a Some\n        oneOf([\n            // Unfortunately, due to objOf not checking to see that the\n            // input is an object, the boolean check MUST be first\n            boolean,\n            objOf([\n                optionString('placeholder')\n            ])\n        ], \n        // This function allows you to standardise the output.\n        (x) => {\n            if (isBoolean(x)) {\n                return x ? Optional.some({ placeholder: Optional.none() }) : Optional.none();\n            }\n            else {\n                return Optional.some(x);\n            }\n        })),\n        requiredFunction('fetch'),\n        defaultedFunction('onSetup', () => noop),\n        defaultedString('context', 'mode:design')\n    ];\n\n    const MenuButtonSchema = objOf([\n        type,\n        ...baseMenuButtonFields\n    ]);\n    const createMenuButton = (spec) => asRaw('menubutton', MenuButtonSchema, spec);\n\n    const baseTreeItemFields = [\n        requiredStringEnum('type', ['directory', 'leaf']),\n        title,\n        requiredString('id'),\n        optionOf('menu', MenuButtonSchema),\n        optionString('customStateIcon'),\n        optionString('customStateIconTooltip'),\n    ];\n    const treeItemLeafFields = baseTreeItemFields;\n    const treeItemLeafSchema = objOf(treeItemLeafFields);\n    const treeItemDirectoryFields = baseTreeItemFields.concat([\n        requiredArrayOf('children', thunkOf('children', () => {\n            return choose$2('type', {\n                directory: treeItemDirectorySchema,\n                leaf: treeItemLeafSchema,\n            });\n        })),\n    ]);\n    const treeItemDirectorySchema = objOf(treeItemDirectoryFields);\n    const treeItemSchema = choose$2('type', {\n        directory: treeItemDirectorySchema,\n        leaf: treeItemLeafSchema,\n    });\n    const treeFields = [\n        type,\n        requiredArrayOf('items', treeItemSchema),\n        optionFunction('onLeafAction'),\n        optionFunction('onToggleExpand'),\n        defaultedArrayOf('defaultExpandedIds', [], string),\n        optionString('defaultSelectedId'),\n    ];\n    const treeSchema = objOf(treeFields);\n\n    const urlInputFields = formComponentWithLabelFields.concat([\n        defaultedStringEnum('filetype', 'file', ['image', 'media', 'file']),\n        enabled,\n        optionString('picker_text'),\n        defaultedString('context', 'mode:design')\n    ]);\n    const urlInputSchema = objOf(urlInputFields);\n    const urlInputDataProcessor = objOf([\n        value,\n        defaultedMeta\n    ]);\n\n    const createItemsField = (name) => field$1('items', 'items', required$2(), arrOf(valueOf((v) => asRaw(`Checking item of ${name}`, itemSchema$1, v).fold((sErr) => Result.error(formatError(sErr)), (passValue) => Result.value(passValue)))));\n    // We're using a thunk here so we can refer to panel fields\n    const itemSchema$1 = valueThunk(() => choose$2('type', {\n        alertbanner: alertBannerSchema,\n        bar: objOf(createBarFields(createItemsField('bar'))),\n        button: buttonSchema,\n        checkbox: checkboxSchema,\n        colorinput: colorInputSchema,\n        colorpicker: colorPickerSchema,\n        dropzone: dropZoneSchema,\n        grid: objOf(createGridFields(createItemsField('grid'))),\n        iframe: iframeSchema,\n        input: inputSchema,\n        listbox: listBoxSchema,\n        selectbox: selectBoxSchema,\n        sizeinput: sizeInputSchema,\n        slider: sliderSchema,\n        textarea: textAreaSchema,\n        urlinput: urlInputSchema,\n        customeditor: customEditorSchema,\n        htmlpanel: htmlPanelSchema,\n        imagepreview: imagePreviewSchema,\n        collection: collectionSchema,\n        label: objOf(createLabelFields(createItemsField('label'))),\n        table: tableSchema,\n        tree: treeSchema,\n        panel: panelSchema\n    }));\n    const panelFields = [\n        type,\n        defaulted('classes', []),\n        requiredArrayOf('items', itemSchema$1)\n    ];\n    const panelSchema = objOf(panelFields);\n\n    const tabFields = [\n        generatedName('tab'),\n        title,\n        requiredArrayOf('items', itemSchema$1)\n    ];\n    const tabPanelFields = [\n        type,\n        requiredArrayOfObj('tabs', tabFields)\n    ];\n    const tabPanelSchema = objOf(tabPanelFields);\n\n    const dialogButtonFields = dialogFooterButtonFields;\n    const dialogButtonSchema = dialogFooterButtonSchema;\n    const dialogSchema = objOf([\n        requiredString('title'),\n        requiredOf('body', choose$2('type', {\n            panel: panelSchema,\n            tabpanel: tabPanelSchema\n        })),\n        defaultedString('size', 'normal'),\n        defaultedArrayOf('buttons', [], dialogButtonSchema),\n        defaulted('initialData', {}),\n        defaultedFunction('onAction', noop),\n        defaultedFunction('onChange', noop),\n        defaultedFunction('onSubmit', noop),\n        defaultedFunction('onClose', noop),\n        defaultedFunction('onCancel', noop),\n        defaultedFunction('onTabChange', noop)\n    ]);\n    const createDialog = (spec) => asRaw('dialog', dialogSchema, spec);\n\n    const urlDialogButtonSchema = objOf([\n        requiredStringEnum('type', ['cancel', 'custom']),\n        ...dialogButtonFields\n    ]);\n    const urlDialogSchema = objOf([\n        requiredString('title'),\n        requiredString('url'),\n        optionNumber('height'),\n        optionNumber('width'),\n        optionArrayOf('buttons', urlDialogButtonSchema),\n        defaultedFunction('onAction', noop),\n        defaultedFunction('onCancel', noop),\n        defaultedFunction('onClose', noop),\n        defaultedFunction('onMessage', noop)\n    ]);\n    const createUrlDialog = (spec) => asRaw('dialog', urlDialogSchema, spec);\n\n    // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n    const getAllObjects = (obj) => {\n        if (isObject(obj)) {\n            return [obj].concat(bind$3(values(obj), getAllObjects));\n        }\n        else if (isArray(obj)) {\n            return bind$3(obj, getAllObjects);\n        }\n        else {\n            return [];\n        }\n    };\n\n    const isNamedItem = (obj) => isString(obj.type) && isString(obj.name);\n    const dataProcessors = {\n        checkbox: checkboxDataProcessor,\n        colorinput: colorInputDataProcessor,\n        colorpicker: colorPickerDataProcessor,\n        dropzone: dropZoneDataProcessor,\n        input: inputDataProcessor,\n        iframe: iframeDataProcessor,\n        imagepreview: imagePreviewDataProcessor,\n        selectbox: selectBoxDataProcessor,\n        sizeinput: sizeInputDataProcessor,\n        slider: sliderInputDataProcessor,\n        listbox: listBoxDataProcessor,\n        size: sizeInputDataProcessor,\n        textarea: textAreaDataProcessor,\n        urlinput: urlInputDataProcessor,\n        customeditor: customEditorDataProcessor,\n        collection: collectionDataProcessor,\n        togglemenuitem: dialogToggleMenuItemDataProcessor\n    };\n    const getDataProcessor = (item) => Optional.from(dataProcessors[item.type]);\n    const getNamedItems = (structure) => filter$2(getAllObjects(structure), isNamedItem);\n\n    const createDataValidator = (structure) => {\n        const namedItems = getNamedItems(structure);\n        const fields = bind$3(namedItems, (item) => getDataProcessor(item).fold(() => [], (schema) => [requiredOf(item.name, schema)]));\n        return objOf(fields);\n    };\n\n    const extract = (structure) => {\n        var _a;\n        const internalDialog = getOrDie(createDialog(structure));\n        const dataValidator = createDataValidator(structure);\n        // We used to validate data here, but it's done when loading the dialog in tinymce\n        const initialData = (_a = structure.initialData) !== null && _a !== void 0 ? _a : {};\n        return {\n            internalDialog,\n            dataValidator,\n            initialData\n        };\n    };\n    const DialogManager = {\n        open: (factory, structure) => {\n            const extraction = extract(structure);\n            return factory(extraction.internalDialog, extraction.initialData, extraction.dataValidator);\n        },\n        openUrl: (factory, structure) => {\n            const internalDialog = getOrDie(createUrlDialog(structure));\n            return factory(internalDialog);\n        },\n        redial: (structure) => extract(structure)\n    };\n\n    const separatorMenuItemSchema = objOf([\n        type,\n        optionalText\n    ]);\n    const createSeparatorMenuItem = (spec) => asRaw('separatormenuitem', separatorMenuItemSchema, spec);\n\n    const autocompleterItemSchema = objOf([\n        // Currently, autocomplete items don't support configuring type, active, disabled, meta\n        defaultedType('autocompleteitem'),\n        active,\n        enabled,\n        defaultedMeta,\n        value,\n        optionalText,\n        optionalIcon\n    ]);\n    objOf([\n        type,\n        requiredString('trigger'),\n        defaultedNumber('minChars', 1),\n        defaultedColumns(1),\n        defaultedNumber('maxResults', 10),\n        optionFunction('matches'),\n        fetch,\n        onAction,\n        defaultedArrayOf('highlightOn', [], string)\n    ]);\n    const createSeparatorItem = (spec) => asRaw('Autocompleter.Separator', separatorMenuItemSchema, spec);\n    const createAutocompleterItem = (spec) => asRaw('Autocompleter.Item', autocompleterItemSchema, spec);\n\n    const baseToolbarButtonFields = [\n        enabled,\n        optionalTooltip,\n        optionalIcon,\n        optionalText,\n        onSetup,\n        defaultedString('context', 'mode:design')\n    ];\n    const toolbarButtonSchema = objOf([\n        type,\n        onAction,\n        optionalShortcut\n    ].concat(baseToolbarButtonFields));\n    const createToolbarButton = (spec) => asRaw('toolbarbutton', toolbarButtonSchema, spec);\n\n    const baseToolbarToggleButtonFields = [\n        active\n    ].concat(baseToolbarButtonFields);\n    const toggleButtonSchema = objOf(baseToolbarToggleButtonFields.concat([\n        type,\n        onAction,\n        optionalShortcut\n    ]));\n    const createToggleButton = (spec) => asRaw('ToggleButton', toggleButtonSchema, spec);\n\n    const contextBarFields = [\n        defaultedFunction('predicate', never),\n        defaultedStringEnum('scope', 'node', ['node', 'editor']),\n        defaultedStringEnum('position', 'selection', ['node', 'selection', 'line'])\n    ];\n\n    const contextButtonFields = baseToolbarButtonFields.concat([\n        defaultedType('contextformbutton'),\n        defaultedString('align', 'end'),\n        primary,\n        onAction,\n        customField('original', identity)\n    ]);\n    const contextToggleButtonFields = baseToolbarToggleButtonFields.concat([\n        defaultedType('contextformbutton'),\n        defaultedString('align', 'end'),\n        primary,\n        onAction,\n        customField('original', identity)\n    ]);\n    const launchButtonFields$1 = baseToolbarButtonFields.concat([\n        defaultedType('contextformbutton')\n    ]);\n    const launchToggleButtonFields = baseToolbarToggleButtonFields.concat([\n        defaultedType('contextformtogglebutton')\n    ]);\n    const toggleOrNormal = choose$1('type', {\n        contextformbutton: contextButtonFields,\n        contextformtogglebutton: contextToggleButtonFields\n    });\n    const baseContextFormFields = [\n        optionalLabel,\n        requiredArrayOf('commands', toggleOrNormal),\n        optionOf('launch', choose$1('type', {\n            contextformbutton: launchButtonFields$1,\n            contextformtogglebutton: launchToggleButtonFields\n        })),\n        defaultedFunction('onInput', noop),\n        defaultedFunction('onSetup', noop)\n    ];\n    const contextFormFields = [\n        ...contextBarFields,\n        ...baseContextFormFields,\n        requiredStringEnum('type', ['contextform']),\n        defaultedFunction('initValue', constant$1('')),\n        optionString('placeholder'),\n    ];\n    const contextSliderFormFields = [\n        ...contextBarFields,\n        ...baseContextFormFields,\n        requiredStringEnum('type', ['contextsliderform']),\n        defaultedFunction('initValue', constant$1(0)),\n        defaultedFunction('min', constant$1(0)),\n        defaultedFunction('max', constant$1(100))\n    ];\n    const contextSizeInputFormFields = [\n        ...contextBarFields,\n        ...baseContextFormFields,\n        requiredStringEnum('type', ['contextsizeinputform']),\n        defaultedFunction('initValue', constant$1({ width: '', height: '' }))\n    ];\n    const contextFormSchema = choose$1('type', {\n        contextform: contextFormFields,\n        contextsliderform: contextSliderFormFields,\n        contextsizeinputform: contextSizeInputFormFields\n    });\n    const createContextForm = (spec) => asRaw('ContextForm', contextFormSchema, spec);\n\n    const launchButtonFields = baseToolbarButtonFields.concat([\n        defaultedType('contexttoolbarbutton')\n    ]);\n    const contextToolbarSchema = objOf([\n        defaultedType('contexttoolbar'),\n        optionObjOf('launch', launchButtonFields),\n        requiredOf('items', oneOf([\n            string,\n            arrOfObj([\n                optionString('name'),\n                optionString('label'),\n                requiredArrayOf('items', string)\n            ])\n        ])),\n    ].concat(contextBarFields));\n    const toolbarGroupBackToSpec = (toolbarGroup) => ({\n        name: toolbarGroup.name.getOrUndefined(),\n        label: toolbarGroup.label.getOrUndefined(),\n        items: toolbarGroup.items\n    });\n    const contextToolbarToSpec = (contextToolbar) => ({\n        ...contextToolbar,\n        launch: contextToolbar.launch.getOrUndefined(),\n        items: isString(contextToolbar.items) ? contextToolbar.items : map$2(contextToolbar.items, toolbarGroupBackToSpec)\n    });\n    const createContextToolbar = (spec) => asRaw('ContextToolbar', contextToolbarSchema, spec);\n\n    const cardImageFields = [\n        type,\n        requiredString('src'),\n        optionString('alt'),\n        defaultedArrayOf('classes', [], string)\n    ];\n    const cardImageSchema = objOf(cardImageFields);\n\n    const cardTextFields = [\n        type,\n        text,\n        optionalName,\n        defaultedArrayOf('classes', ['tox-collection__item-label'], string)\n    ];\n    const cardTextSchema = objOf(cardTextFields);\n\n    const itemSchema = valueThunk(() => choose$2('type', {\n        cardimage: cardImageSchema,\n        cardtext: cardTextSchema,\n        cardcontainer: cardContainerSchema\n    }));\n    const cardContainerSchema = objOf([\n        type,\n        defaultedString('direction', 'horizontal'),\n        defaultedString('align', 'left'),\n        defaultedString('valign', 'middle'),\n        requiredArrayOf('items', itemSchema)\n    ]);\n\n    const cardMenuItemSchema = objOf([\n        type,\n        optionalLabel,\n        requiredArrayOf('items', itemSchema),\n        onSetup,\n        defaultedOnAction\n    ].concat(commonMenuItemFields));\n    const createCardMenuItem = (spec) => asRaw('cardmenuitem', cardMenuItemSchema, spec);\n\n    const choiceMenuItemSchema = objOf([\n        type,\n        active,\n        optionalIcon,\n        optionalLabel\n    ].concat(commonMenuItemFields));\n    const createChoiceMenuItem = (spec) => asRaw('choicemenuitem', choiceMenuItemSchema, spec);\n\n    const baseFields = [\n        type,\n        requiredString('fancytype'),\n        defaultedOnAction\n    ];\n    const insertTableFields = [\n        defaulted('initData', {})\n    ].concat(baseFields);\n    const colorSwatchFields = [\n        optionFunction('select'),\n        defaultedObjOf('initData', {}, [\n            defaultedBoolean('allowCustomColors', true),\n            defaultedString('storageKey', 'default'),\n            // Note: We don't validate the colors as they are instead validated by choiceschema when rendering\n            optionArrayOf('colors', anyValue())\n        ])\n    ].concat(baseFields);\n    const imageSelectFields = [\n        optionFunction('select'),\n        requiredObjOf('initData', [\n            requiredNumber('columns'),\n            // Note: We don't validate the items as they are instead validated by imageMenuItemSchema when rendering\n            defaultedArrayOf('items', [], anyValue())\n        ])\n    ].concat(baseFields);\n    const fancyMenuItemSchema = choose$1('fancytype', {\n        inserttable: insertTableFields,\n        colorswatch: colorSwatchFields,\n        imageselect: imageSelectFields\n    });\n    const createFancyMenuItem = (spec) => asRaw('fancymenuitem', fancyMenuItemSchema, spec);\n\n    const imageMenuItemSchema = objOf([\n        type,\n        active,\n        url,\n        optionalLabel,\n        optionalTooltip\n    ].concat(commonMenuItemFields));\n    const resetImageItemSchema = objOf([\n        type,\n        active,\n        icon,\n        label,\n        optionalTooltip,\n        value\n    ].concat(commonMenuItemFields));\n    const createImageMenuItem = (spec) => asRaw('imagemenuitem', imageMenuItemSchema, spec);\n    const createResetImageItem = (spec) => asRaw('resetimageitem', resetImageItemSchema, spec);\n\n    const menuItemSchema = objOf([\n        type,\n        onSetup,\n        defaultedOnAction,\n        optionalIcon\n    ].concat(commonMenuItemFields));\n    const createMenuItem = (spec) => asRaw('menuitem', menuItemSchema, spec);\n\n    const nestedMenuItemSchema = objOf([\n        type,\n        getSubmenuItems,\n        onSetup,\n        optionalIcon\n    ].concat(commonMenuItemFields));\n    const createNestedMenuItem = (spec) => asRaw('nestedmenuitem', nestedMenuItemSchema, spec);\n\n    const toggleMenuItemSchema = objOf([\n        type,\n        optionalIcon,\n        active,\n        onSetup,\n        onAction\n    ].concat(commonMenuItemFields));\n    const createToggleMenuItem = (spec) => asRaw('togglemenuitem', toggleMenuItemSchema, spec);\n\n    const sidebarSchema = objOf([\n        optionalIcon,\n        optionalTooltip,\n        defaultedFunction('onShow', noop),\n        defaultedFunction('onHide', noop),\n        onSetup\n    ]);\n    const createSidebar = (spec) => asRaw('sidebar', sidebarSchema, spec);\n\n    const groupToolbarButtonSchema = objOf([\n        type,\n        requiredOf('items', oneOf([\n            arrOfObj([\n                name,\n                requiredArrayOf('items', string)\n            ]),\n            string\n        ]))\n    ].concat(baseToolbarButtonFields));\n    const createGroupToolbarButton = (spec) => asRaw('GroupToolbarButton', groupToolbarButtonSchema, spec);\n\n    const splitButtonSchema = objOf([\n        type,\n        optionalTooltip,\n        optionalIcon,\n        optionalText,\n        optionalSelect,\n        fetch,\n        onSetup,\n        // TODO: Validate the allowed presets\n        defaultedStringEnum('presets', 'normal', ['normal', 'color', 'listpreview']),\n        defaultedColumns(1),\n        onAction,\n        onItemAction,\n        defaultedString('context', 'mode:design')\n    ]);\n    const createSplitButton = (spec) => asRaw('SplitButton', splitButtonSchema, spec);\n\n    const baseButtonFields = [\n        optionalText,\n        optionalIcon,\n        optionString('tooltip'),\n        defaultedStringEnum('buttonType', 'secondary', ['primary', 'secondary']),\n        defaultedBoolean('borderless', false),\n        requiredFunction('onAction'),\n        defaultedString('context', 'mode:design')\n    ];\n    const normalButtonFields = [\n        ...baseButtonFields,\n        text,\n        requiredStringEnum('type', ['button']),\n    ];\n    const toggleButtonFields = [\n        ...baseButtonFields,\n        defaultedBoolean('active', false),\n        requiredStringEnum('type', ['togglebutton'])\n    ];\n    const schemaWithoutGroupButton = {\n        button: normalButtonFields,\n        togglebutton: toggleButtonFields,\n    };\n    const groupFields = [\n        requiredStringEnum('type', ['group']),\n        defaultedArrayOf('buttons', [], choose$1('type', schemaWithoutGroupButton))\n    ];\n    const viewButtonSchema = choose$1('type', {\n        ...schemaWithoutGroupButton,\n        group: groupFields\n    });\n\n    const viewSchema = objOf([\n        defaultedArrayOf('buttons', [], viewButtonSchema),\n        requiredFunction('onShow'),\n        requiredFunction('onHide')\n    ]);\n    const createView = (spec) => asRaw('view', viewSchema, spec);\n\n    const detectSize = (comp, margin, selectorClass) => {\n        const descendants$1 = descendants(comp.element, '.' + selectorClass);\n        // TODO: This seems to cause performance issues in the emoji dialog\n        if (descendants$1.length > 0) {\n            const columnLength = findIndex$1(descendants$1, (c) => {\n                const thisTop = c.dom.getBoundingClientRect().top;\n                const cTop = descendants$1[0].dom.getBoundingClientRect().top;\n                return Math.abs(thisTop - cTop) > margin;\n            }).getOr(descendants$1.length);\n            return Optional.some({\n                numColumns: columnLength,\n                numRows: Math.ceil(descendants$1.length / columnLength)\n            });\n        }\n        else {\n            return Optional.none();\n        }\n    };\n\n    // Consider moving to alloy once it takes shape.\n    const namedEvents = (name, handlers) => derive$1([\n        config(name, handlers)\n    ]);\n    const unnamedEvents = (handlers) => namedEvents(generate$6('unnamed-events'), handlers);\n    const SimpleBehaviours = {\n        namedEvents,\n        unnamedEvents\n    };\n\n    const item = (disabled) => Disabling.config({\n        disabled,\n        disableClass: 'tox-collection__item--state-disabled'\n    });\n    const button = (disabled) => Disabling.config({\n        disabled\n    });\n    const splitButton = (disabled) => Disabling.config({\n        disabled,\n        disableClass: 'tox-tbtn--disabled'\n    });\n    const toolbarButton = (disabled) => Disabling.config({\n        disabled,\n        disableClass: 'tox-tbtn--disabled',\n        useNative: false\n    });\n    const DisablingConfigs = {\n        item,\n        button,\n        splitButton,\n        toolbarButton\n    };\n\n    const runWithApi = (info, comp) => {\n        const api = info.getApi(comp);\n        return (f) => {\n            f(api);\n        };\n    };\n    // These handlers are used for providing common onAttached and onDetached handlers.\n    // Essentially, the `editorOffCell` is used store the onDestroy function returned\n    // by onSetup. The reason onControlAttached doesn't create the cell itself, is because\n    // it also has to be passed into onControlDetached. We could make this function return\n    // the cell and the onAttachedHandler, but that would provide too much complexity.\n    const onControlAttached = (info, editorOffCell) => runOnAttached((comp) => {\n        if (isFunction(info.onBeforeSetup)) {\n            info.onBeforeSetup(comp);\n        }\n        const run = runWithApi(info, comp);\n        run((api) => {\n            const onDestroy = info.onSetup(api);\n            if (isFunction(onDestroy)) {\n                editorOffCell.set(onDestroy);\n            }\n        });\n    });\n    const onControlDetached = (getApi, editorOffCell) => runOnDetached((comp) => runWithApi(getApi, comp)(editorOffCell.get()));\n    const onContextFormControlDetached = (getApi, editorOffCell, valueState) => runOnDetached((comp) => {\n        valueState.set(Representing.getValue(comp));\n        return runWithApi(getApi, comp)(editorOffCell.get());\n    });\n\n    const UiStateChannel = 'silver.uistate';\n    const messageSetDisabled = 'setDisabled';\n    const messageSetEnabled = 'setEnabled';\n    const messageInit = 'init';\n    const messageSwitchMode = 'switchmode';\n    const modeContextMessages = [messageSwitchMode, messageInit];\n    const broadcastEvents = (uiRefs, messageType) => {\n        const outerContainer = uiRefs.mainUi.outerContainer;\n        const motherships = [uiRefs.mainUi.mothership, ...uiRefs.uiMotherships];\n        if (messageType === messageSetDisabled) {\n            each$1(motherships, (m) => {\n                m.broadcastOn([dismissPopups()], { target: outerContainer.element });\n            });\n        }\n        each$1(motherships, (m) => {\n            m.broadcastOn([UiStateChannel], messageType);\n        });\n    };\n    const setupEventsForUi = (editor, uiRefs) => {\n        editor.on('init SwitchMode', (event) => {\n            broadcastEvents(uiRefs, event.type);\n        });\n        editor.on('DisabledStateChange', (event) => {\n            if (!event.isDefaultPrevented()) {\n                // When the event state indicates the editor is **enabled** (`event.state` is false),\n                // we send an 'init' message instead of 'setEnabled' because the editor might be in read-only mode.\n                // Sending 'setEnabled' would enable all the toolbar buttons, which is undesirable if the editor is read-only.\n                const messageType = event.state ? messageSetDisabled : messageInit;\n                broadcastEvents(uiRefs, messageType);\n                // After refreshing the state of the buttons, trigger a NodeChange event.\n                if (!event.state) {\n                    editor.nodeChanged();\n                }\n            }\n        });\n        editor.on('NodeChange', (e) => {\n            const messageType = editor.ui.isEnabled() ? e.type : messageSetDisabled;\n            broadcastEvents(uiRefs, messageType);\n        });\n        if (isReadOnly(editor)) {\n            editor.mode.set('readonly');\n        }\n    };\n    const toggleOnReceive = (getContext) => Receiving.config({\n        channels: {\n            [UiStateChannel]: {\n                onReceive: (comp, messageType) => {\n                    if (messageType === messageSetDisabled || messageType === messageSetEnabled) {\n                        Disabling.set(comp, messageType === messageSetDisabled);\n                        return;\n                    }\n                    const { contextType, shouldDisable } = getContext();\n                    if (contextType === 'mode' && !contains$2(modeContextMessages, messageType)) {\n                        return;\n                    }\n                    Disabling.set(comp, shouldDisable);\n                }\n            }\n        }\n    });\n\n    // Perform `action` when an item is clicked on, close menus, and stop event\n    const onMenuItemExecute = (info, itemResponse) => runOnExecute$1((comp, simulatedEvent) => {\n        // If there is an action, run the action\n        runWithApi(info, comp)(info.onAction);\n        if (!info.triggersSubmenu && itemResponse === ItemResponse$1.CLOSE_ON_EXECUTE) {\n            if (comp.getSystem().isConnected()) {\n                emit(comp, sandboxClose());\n            }\n            simulatedEvent.stop();\n        }\n    });\n    const menuItemEventOrder = {\n        // TODO: use the constants provided by behaviours.\n        [execute$5()]: ['disabling', 'alloy.base.behaviour', 'toggling', 'item-events']\n    };\n\n    const componentRenderPipeline = cat;\n    const renderCommonItem = (spec, structure, itemResponse, providersBackstage) => {\n        const editorOffCell = Cell(noop);\n        return {\n            type: 'item',\n            dom: structure.dom,\n            components: componentRenderPipeline(structure.optComponents),\n            data: spec.data,\n            eventOrder: menuItemEventOrder,\n            hasSubmenu: spec.triggersSubmenu,\n            itemBehaviours: derive$1([\n                config('item-events', [\n                    onMenuItemExecute(spec, itemResponse),\n                    onControlAttached(spec, editorOffCell),\n                    onControlDetached(spec, editorOffCell)\n                ]),\n                DisablingConfigs.item(() => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context)),\n                Replacing.config({})\n            ].concat(spec.itemBehaviours))\n        };\n    };\n    const buildData = (source) => ({\n        value: source.value,\n        meta: {\n            text: source.text.getOr(''),\n            ...source.meta\n        }\n    });\n\n    const renderImage$1 = (spec, imageUrl) => {\n        var _a, _b;\n        const spinnerElement = SugarElement.fromTag('div');\n        add$2(spinnerElement, 'tox-image-selector-loading-spinner');\n        const addSpinnerElement = (loadingElement) => {\n            add$2(loadingElement, 'tox-image-selector-loading-spinner-wrapper');\n            append$2(loadingElement, spinnerElement);\n        };\n        const removeSpinnerElement = (loadingElement) => {\n            remove$3(loadingElement, 'tox-image-selector-loading-spinner-wrapper');\n            remove$7(spinnerElement);\n        };\n        return {\n            dom: {\n                tag: spec.tag,\n                attributes: (_a = spec.attributes) !== null && _a !== void 0 ? _a : {},\n                classes: spec.classes,\n            },\n            components: [\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-image-selector-image-wrapper']\n                    },\n                    components: [\n                        {\n                            dom: {\n                                tag: 'img',\n                                attributes: { src: imageUrl },\n                                classes: ['tox-image-selector-image-img']\n                            }\n                        },\n                    ]\n                },\n                ...spec.checkMark.toArray()\n            ],\n            behaviours: derive$1([\n                ...(_b = spec.behaviours) !== null && _b !== void 0 ? _b : [],\n                config('render-image-events', [\n                    runOnAttached((component) => {\n                        addSpinnerElement(component.element);\n                        descendant(component.element, 'img').each((image$1) => {\n                            image(image$1).catch((e) => {\n                                // eslint-disable-next-line no-console\n                                console.error(e);\n                            }).finally(() => {\n                                removeSpinnerElement(component.element);\n                            });\n                        });\n                    })\n                ]),\n            ])\n        };\n    };\n    const render$3 = (imageUrl, spec) => renderImage$1(spec, imageUrl);\n\n    // Converts shortcut format to Mac/PC variants\n    // Note: This is different to the help shortcut converter, as it doesn't padd the + symbol with spaces\n    //       so as to not take up large amounts of space in the menus\n    const convertText = (source) => {\n        const isMac = global$7.os.isMacOS() || global$7.os.isiOS();\n        const mac = {\n            alt: '\\u2325',\n            ctrl: '\\u2303',\n            shift: '\\u21E7',\n            meta: '\\u2318',\n            access: '\\u2303\\u2325'\n        };\n        const other = {\n            meta: 'Ctrl',\n            access: 'Shift+Alt'\n        };\n        const replace = isMac ? mac : other;\n        const shortcut = source.split('+');\n        const updated = map$2(shortcut, (segment) => {\n            // search lowercase, but if not found use the original\n            const search = segment.toLowerCase().trim();\n            return has$2(replace, search) ? replace[search] : segment;\n        });\n        return isMac ? updated.join('') : updated.join('+');\n    };\n\n    const renderIcon$2 = (name, icons, classes = [iconClass]) => render$4(name, { tag: 'div', classes }, icons);\n    const renderText = (text) => ({\n        dom: {\n            tag: 'div',\n            classes: [textClass]\n        },\n        components: [text$2(global$6.translate(text))]\n    });\n    const renderHtml = (html, classes) => ({\n        dom: {\n            tag: 'div',\n            classes,\n            innerHtml: html\n        }\n    });\n    const renderStyledText = (style, text) => ({\n        dom: {\n            tag: 'div',\n            classes: [textClass]\n        },\n        components: [\n            {\n                dom: {\n                    tag: style.tag,\n                    styles: style.styles\n                },\n                components: [text$2(global$6.translate(text))]\n            }\n        ]\n    });\n    const renderShortcut = (shortcut) => ({\n        dom: {\n            tag: 'div',\n            classes: [accessoryClass]\n        },\n        components: [\n            text$2(convertText(shortcut))\n        ]\n    });\n    const renderCheckmark = (icons) => renderIcon$2('checkmark', icons, [checkmarkClass]);\n    const renderSubmenuCaret = (icons) => renderIcon$2('chevron-right', icons, [caretClass]);\n    const renderDownwardsCaret = (icons) => renderIcon$2('chevron-down', icons, [caretClass]);\n    const renderContainer = (container, components) => {\n        const directionClass = container.direction === 'vertical' ? containerColumnClass : containerRowClass;\n        const alignClass = container.align === 'left' ? containerAlignLeftClass : containerAlignRightClass;\n        const getValignClass = () => {\n            switch (container.valign) {\n                case 'top':\n                    return containerValignTopClass;\n                case 'middle':\n                    return containerValignMiddleClass;\n                case 'bottom':\n                    return containerValignBottomClass;\n            }\n        };\n        return {\n            dom: {\n                tag: 'div',\n                classes: [\n                    containerClass,\n                    directionClass,\n                    alignClass,\n                    getValignClass()\n                ]\n            },\n            components\n        };\n    };\n    const renderImage = (src, classes, alt) => ({\n        dom: {\n            tag: 'img',\n            classes,\n            attributes: {\n                src,\n                alt: alt.getOr('')\n            }\n        }\n    });\n\n    const renderColorStructure = (item, providerBackstage, fallbackIcon) => {\n        const colorPickerCommand = 'custom';\n        const removeColorCommand = 'remove';\n        const itemValue = item.value;\n        const iconSvg = item.iconContent.map((name) => getOr(name, providerBackstage.icons, fallbackIcon));\n        const attributes = item.ariaLabel.map((al) => ({\n            'aria-label': providerBackstage.translate(al),\n            'data-mce-name': al\n        })).getOr({});\n        const getDom = () => {\n            const common = colorClass;\n            const icon = iconSvg.getOr('');\n            const baseDom = {\n                tag: 'div',\n                attributes,\n                classes: [common]\n            };\n            if (itemValue === colorPickerCommand) {\n                return {\n                    ...baseDom,\n                    tag: 'button',\n                    classes: [...baseDom.classes, 'tox-swatches__picker-btn'],\n                    innerHtml: icon\n                };\n            }\n            else if (itemValue === removeColorCommand) {\n                return {\n                    ...baseDom,\n                    classes: [...baseDom.classes, 'tox-swatch--remove'],\n                    innerHtml: icon\n                };\n            }\n            else if (isNonNullable(itemValue)) {\n                return {\n                    ...baseDom,\n                    attributes: {\n                        ...baseDom.attributes,\n                        'data-mce-color': itemValue\n                    },\n                    styles: {\n                        'background-color': itemValue\n                    },\n                    innerHtml: icon\n                };\n            }\n            else {\n                return baseDom;\n            }\n        };\n        return {\n            dom: getDom(),\n            optComponents: []\n        };\n    };\n    const renderItemDomStructure = (ariaLabel, classes) => {\n        const domTitle = ariaLabel.map((label) => ({\n            attributes: {\n                'id': generate$6('menu-item'),\n                'aria-label': global$6.translate(label)\n            }\n        })).getOr({});\n        return {\n            tag: 'div',\n            classes: [navClass, selectableClass].concat(classes),\n            ...domTitle\n        };\n    };\n    const createLabel = (label) => {\n        return {\n            dom: {\n                tag: 'label'\n            },\n            components: [\n                text$2(label)\n            ]\n        };\n    };\n    const renderNormalItemStructure = (info, providersBackstage, renderIcons, fallbackIcon) => {\n        // TODO: TINY-3036 Work out a better way of dealing with custom icons\n        const iconSpec = { tag: 'div', classes: [iconClass] };\n        const renderIcon = (iconName) => render$4(iconName, iconSpec, providersBackstage.icons, fallbackIcon);\n        const renderEmptyIcon = () => Optional.some({ dom: iconSpec });\n        // Note: renderIcons indicates if any icons are present in the menu - if false then the icon column will not be present for the whole menu\n        const leftIcon = renderIcons ? info.iconContent.map(renderIcon).orThunk(renderEmptyIcon) : Optional.none();\n        // TINY-3345: Dedicated columns for icon and checkmark if applicable\n        const checkmark = info.checkMark;\n        // Style items and autocompleter both have meta. Need to branch on style\n        // This could probably be more stable...\n        const textRender = Optional.from(info.meta).fold(() => renderText, (meta) => has$2(meta, 'style') ? curry(renderStyledText, meta.style) : renderText);\n        const content = info.htmlContent.fold(() => info.textContent.map(textRender), (html) => Optional.some(renderHtml(html, [textClass])));\n        const menuItem = {\n            dom: renderItemDomStructure(info.ariaLabel, []),\n            optComponents: [\n                leftIcon,\n                content,\n                info.shortcutContent.map(renderShortcut),\n                checkmark,\n                info.caret,\n                info.labelContent.map(createLabel)\n            ]\n        };\n        return menuItem;\n    };\n    const renderImgItemStructure = (info) => {\n        const menuItem = {\n            dom: renderItemDomStructure(info.ariaLabel, [imageSelectorClasll]),\n            optComponents: [\n                Optional.some(render$3(info.iconContent.getOrDie(), { tag: 'div', classes: [imageClass], checkMark: info.checkMark })),\n                info.labelContent.map(createLabel)\n            ]\n        };\n        return menuItem;\n    };\n    // TODO: Maybe need aria-label\n    const renderItemStructure = (info, providersBackstage, renderIcons, fallbackIcon = Optional.none()) => {\n        if (info.presets === 'color') {\n            return renderColorStructure(info, providersBackstage, fallbackIcon);\n        }\n        else if (info.presets === 'img') {\n            return renderImgItemStructure(info);\n        }\n        else {\n            return renderNormalItemStructure(info, providersBackstage, renderIcons, fallbackIcon);\n        }\n    };\n\n    // Use meta to pass through special information about the tooltip\n    // (yes this is horrible but it is not yet public API)\n    const tooltipBehaviour = (meta, sharedBackstage, tooltipText) => get$h(meta, 'tooltipWorker')\n        .map((tooltipWorker) => [\n        Tooltipping.config({\n            lazySink: sharedBackstage.getSink,\n            tooltipDom: {\n                tag: 'div',\n                classes: ['tox-tooltip-worker-container']\n            },\n            tooltipComponents: [],\n            anchor: (comp) => ({\n                type: 'submenu',\n                item: comp,\n                overrides: {\n                    // NOTE: this avoids it setting overflow and max-height.\n                    maxHeightFunction: expandable$1\n                }\n            }),\n            mode: 'follow-highlight',\n            onShow: (component, _tooltip) => {\n                tooltipWorker((elm) => {\n                    Tooltipping.setComponents(component, [\n                        external({ element: SugarElement.fromDom(elm) })\n                    ]);\n                });\n            }\n        })\n    ])\n        .getOrThunk(() => {\n        return tooltipText.map((text) => [\n            Tooltipping.config({\n                ...sharedBackstage.providers.tooltips.getConfig({\n                    tooltipText: text\n                }),\n                mode: 'follow-highlight'\n            })\n        ]).getOr([]);\n    });\n    const encodeText = (text) => global$9.DOM.encode(text);\n    const replaceText = (text, matchText) => {\n        const translated = global$6.translate(text);\n        const encoded = encodeText(translated);\n        if (matchText.length > 0) {\n            const escapedMatchRegex = new RegExp(escape(matchText), 'gi');\n            return encoded.replace(escapedMatchRegex, (match) => `<span class=\"tox-autocompleter-highlight\">${match}</span>`);\n        }\n        else {\n            return encoded;\n        }\n    };\n    const renderAutocompleteItem = (spec, matchText, useText, presets, onItemValueHandler, itemResponse, sharedBackstage, renderIcons = true) => {\n        const structure = renderItemStructure({\n            presets,\n            textContent: Optional.none(),\n            htmlContent: useText ? spec.text.map((text) => replaceText(text, matchText)) : Optional.none(),\n            ariaLabel: spec.text,\n            labelContent: Optional.none(),\n            iconContent: spec.icon,\n            shortcutContent: Optional.none(),\n            checkMark: Optional.none(),\n            caret: Optional.none(),\n            value: spec.value\n        }, sharedBackstage.providers, renderIcons, spec.icon);\n        const tooltipString = spec.text.filter((text) => !useText && text !== '');\n        return renderCommonItem({\n            context: 'mode:design',\n            data: buildData(spec),\n            enabled: spec.enabled,\n            getApi: constant$1({}),\n            onAction: (_api) => onItemValueHandler(spec.value, spec.meta),\n            onSetup: constant$1(noop),\n            triggersSubmenu: false,\n            itemBehaviours: tooltipBehaviour(spec, sharedBackstage, tooltipString)\n        }, structure, itemResponse, sharedBackstage.providers);\n    };\n\n    const render$2 = (items, extras) => map$2(items, (item) => {\n        switch (item.type) {\n            case 'cardcontainer':\n                return renderContainer(item, render$2(item.items, extras));\n            case 'cardimage':\n                return renderImage(item.src, item.classes, item.alt);\n            case 'cardtext':\n                // Only highlight targeted text components\n                const shouldHighlight = item.name.exists((name) => contains$2(extras.cardText.highlightOn, name));\n                const matchText = shouldHighlight ? Optional.from(extras.cardText.matchText).getOr('') : '';\n                return renderHtml(replaceText(item.text, matchText), item.classes);\n        }\n    });\n    const renderCardMenuItem = (spec, itemResponse, sharedBackstage, extras) => {\n        const getApi = (component) => ({\n            isEnabled: () => !Disabling.isDisabled(component),\n            setEnabled: (state) => {\n                Disabling.set(component, !state);\n                // Disable sub components\n                each$1(descendants(component.element, '*'), (elm) => {\n                    component.getSystem().getByDom(elm).each((comp) => {\n                        if (comp.hasConfigured(Disabling)) {\n                            Disabling.set(comp, !state);\n                        }\n                    });\n                });\n            }\n        });\n        const structure = {\n            dom: renderItemDomStructure(spec.label, []),\n            optComponents: [\n                Optional.some({\n                    dom: {\n                        tag: 'div',\n                        classes: [containerClass, containerRowClass]\n                    },\n                    components: render$2(spec.items, extras)\n                })\n            ]\n        };\n        return renderCommonItem({\n            context: 'mode:design',\n            data: buildData({ text: Optional.none(), ...spec }),\n            enabled: spec.enabled,\n            getApi,\n            onAction: spec.onAction,\n            onSetup: spec.onSetup,\n            triggersSubmenu: false,\n            itemBehaviours: Optional.from(extras.itemBehaviours).getOr([])\n        }, structure, itemResponse, sharedBackstage.providers);\n    };\n\n    const renderChoiceItem = (spec, useText, presets, onItemValueHandler, isSelected, itemResponse, providersBackstage, renderIcons = true) => {\n        const getApi = (component) => ({\n            setActive: (state) => {\n                Toggling.set(component, state);\n            },\n            isActive: () => Toggling.isOn(component),\n            isEnabled: () => !Disabling.isDisabled(component),\n            setEnabled: (state) => Disabling.set(component, !state)\n        });\n        const structure = renderItemStructure({\n            presets,\n            textContent: useText ? spec.text : Optional.none(),\n            htmlContent: Optional.none(),\n            labelContent: spec.label,\n            ariaLabel: spec.text,\n            iconContent: spec.icon,\n            shortcutContent: useText ? spec.shortcut : Optional.none(),\n            // useText essentially says that we have one column. In one column lists, we should show a tick\n            // The tick is controlled by the tickedClass (via css). It is always present\n            // but is hidden unless the tickedClass is present.\n            checkMark: useText ? Optional.some(renderCheckmark(providersBackstage.icons)) : Optional.none(),\n            caret: Optional.none(),\n            value: spec.value\n        }, providersBackstage, renderIcons);\n        const optTooltipping = spec.text\n            .filter(constant$1(!useText))\n            .map((t) => Tooltipping.config(providersBackstage.tooltips.getConfig({\n            tooltipText: providersBackstage.translate(t)\n        })));\n        return deepMerge(renderCommonItem({\n            context: spec.context,\n            data: buildData(spec),\n            enabled: spec.enabled,\n            getApi,\n            onAction: (_api) => onItemValueHandler(spec.value),\n            onSetup: (api) => {\n                api.setActive(isSelected);\n                return noop;\n            },\n            triggersSubmenu: false,\n            itemBehaviours: [\n                ...optTooltipping.toArray()\n            ]\n        }, structure, itemResponse, providersBackstage), {\n            toggling: {\n                toggleClass: tickedClass,\n                toggleOnExecute: false,\n                selected: spec.active,\n                exclusive: true\n            }\n        });\n    };\n\n    const hexColour = (value) => ({\n        value: normalizeHex(value)\n    });\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    const isHexString = (hex) => shorthandRegex.test(hex) || longformRegex.test(hex);\n    const normalizeHex = (hex) => removeLeading(hex, '#').toUpperCase();\n    const fromString$1 = (hex) => isHexString(hex) ? Optional.some({ value: normalizeHex(hex) }) : Optional.none();\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    const getLongForm = (hex) => {\n        const hexString = hex.value.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n        return { value: hexString };\n    };\n    const extractValues = (hex) => {\n        const longForm = getLongForm(hex);\n        const splitForm = longformRegex.exec(longForm.value);\n        return splitForm === null ? ['FFFFFF', 'FF', 'FF', 'FF'] : splitForm;\n    };\n    const toHex = (component) => {\n        const hex = component.toString(16);\n        return (hex.length === 1 ? '0' + hex : hex).toUpperCase();\n    };\n    const fromRgba = (rgbaColour) => {\n        const value = toHex(rgbaColour.red) + toHex(rgbaColour.green) + toHex(rgbaColour.blue);\n        return hexColour(value);\n    };\n\n    const hsvColour = (hue, saturation, value) => ({\n        hue,\n        saturation,\n        value\n    });\n    const fromRgb = (rgbaColour) => {\n        let h = 0;\n        let s = 0;\n        let v = 0;\n        const r = rgbaColour.red / 255;\n        const g = rgbaColour.green / 255;\n        const b = rgbaColour.blue / 255;\n        const minRGB = Math.min(r, Math.min(g, b));\n        const maxRGB = Math.max(r, Math.max(g, b));\n        if (minRGB === maxRGB) {\n            v = minRGB;\n            return hsvColour(0, 0, v * 100);\n        }\n        /* eslint no-nested-ternary:0 */\n        const d = (r === minRGB) ? g - b : ((b === minRGB) ? r - g : b - r);\n        h = (r === minRGB) ? 3 : ((b === minRGB) ? 1 : 5);\n        h = 60 * (h - d / (maxRGB - minRGB));\n        s = (maxRGB - minRGB) / maxRGB;\n        v = maxRGB;\n        return hsvColour(Math.round(h), Math.round(s * 100), Math.round(v * 100));\n    };\n\n    /* eslint-disable no-console */\n    const min = Math.min;\n    const max = Math.max;\n    const round$1 = Math.round;\n    const rgbRegex = /^\\s*rgb\\s*\\(\\s*(\\d+)\\s*[,\\s]\\s*(\\d+)\\s*[,\\s]\\s*(\\d+)\\s*\\)\\s*$/i;\n    // This regex will match rgba(0, 0, 0, 0.5) or rgba(0, 0, 0, 50%) , or without commas\n    const rgbaRegex = /^\\s*rgba\\s*\\(\\s*(\\d+)\\s*[,\\s]\\s*(\\d+)\\s*[,\\s]\\s*(\\d+)\\s*[,\\s]\\s*((?:\\d?\\.\\d+|\\d+)%?)\\s*\\)\\s*$/i;\n    const rgbaColour = (red, green, blue, alpha) => ({\n        red,\n        green,\n        blue,\n        alpha\n    });\n    const isRgbaComponent = (value) => {\n        const num = parseInt(value, 10);\n        return num.toString() === value && num >= 0 && num <= 255;\n    };\n    const fromHsv = (hsv) => {\n        let r;\n        let g;\n        let b;\n        const hue = (hsv.hue || 0) % 360;\n        let saturation = hsv.saturation / 100;\n        let brightness = hsv.value / 100;\n        saturation = max(0, min(saturation, 1));\n        brightness = max(0, min(brightness, 1));\n        if (saturation === 0) {\n            r = g = b = round$1(255 * brightness);\n            return rgbaColour(r, g, b, 1);\n        }\n        const side = hue / 60;\n        const chroma = brightness * saturation;\n        const x = chroma * (1 - Math.abs(side % 2 - 1));\n        const match = brightness - chroma;\n        switch (Math.floor(side)) {\n            case 0:\n                r = chroma;\n                g = x;\n                b = 0;\n                break;\n            case 1:\n                r = x;\n                g = chroma;\n                b = 0;\n                break;\n            case 2:\n                r = 0;\n                g = chroma;\n                b = x;\n                break;\n            case 3:\n                r = 0;\n                g = x;\n                b = chroma;\n                break;\n            case 4:\n                r = x;\n                g = 0;\n                b = chroma;\n                break;\n            case 5:\n                r = chroma;\n                g = 0;\n                b = x;\n                break;\n            default:\n                r = g = b = 0;\n        }\n        r = round$1(255 * (r + match));\n        g = round$1(255 * (g + match));\n        b = round$1(255 * (b + match));\n        return rgbaColour(r, g, b, 1);\n    };\n    // Temporarily using: https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    const fromHex = (hexColour) => {\n        const result = extractValues(hexColour);\n        const red = parseInt(result[1], 16);\n        const green = parseInt(result[2], 16);\n        const blue = parseInt(result[3], 16);\n        return rgbaColour(red, green, blue, 1);\n    };\n    const fromStringValues = (red, green, blue, alpha) => {\n        const r = parseInt(red, 10);\n        const g = parseInt(green, 10);\n        const b = parseInt(blue, 10);\n        const a = parseFloat(alpha);\n        return rgbaColour(r, g, b, a);\n    };\n    const fromString = (rgbaString) => {\n        const rgbMatch = rgbRegex.exec(rgbaString);\n        if (rgbMatch !== null) {\n            return Optional.some(fromStringValues(rgbMatch[1], rgbMatch[2], rgbMatch[3], '1'));\n        }\n        const rgbaMatch = rgbaRegex.exec(rgbaString);\n        if (rgbaMatch !== null) {\n            return Optional.some(fromStringValues(rgbaMatch[1], rgbaMatch[2], rgbaMatch[3], rgbaMatch[4]));\n        }\n        return Optional.none();\n    };\n    const toString = (rgba) => `rgba(${rgba.red},${rgba.green},${rgba.blue},${rgba.alpha})`;\n    const red = rgbaColour(255, 0, 0, 1);\n\n    const hexToHsv = (hex) => fromRgb(fromHex(hex));\n    const hsvToHex = (hsv) => fromRgba(fromHsv(hsv));\n    const anyToHex = (color) => fromString$1(color)\n        .orThunk(() => fromString(color).map(fromRgba))\n        .getOrThunk(() => {\n        // Not dealing with Hex or RGBA so use a canvas to parse the color\n        const canvas = document.createElement('canvas');\n        canvas.height = 1;\n        canvas.width = 1;\n        const canvasContext = canvas.getContext('2d');\n        // all valid colors after this point\n        canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n        // invalid colors will be shown as white - the first assignment will pass and the second may be ignored\n        canvasContext.fillStyle = '#FFFFFF';\n        canvasContext.fillStyle = color;\n        canvasContext.fillRect(0, 0, 1, 1);\n        const rgba = canvasContext.getImageData(0, 0, 1, 1).data;\n        const r = rgba[0];\n        const g = rgba[1];\n        const b = rgba[2];\n        const a = rgba[3];\n        return fromRgba(rgbaColour(r, g, b, a));\n    });\n\n    const fireSkinLoaded$1 = (editor) => {\n        editor.dispatch('SkinLoaded');\n    };\n    const fireSkinLoadError$1 = (editor, error) => {\n        editor.dispatch('SkinLoadError', error);\n    };\n    const fireResizeEditor = (editor) => {\n        editor.dispatch('ResizeEditor');\n    };\n    const fireResizeContent = (editor, e) => {\n        editor.dispatch('ResizeContent', e);\n    };\n    const fireScrollContent = (editor, e) => {\n        editor.dispatch('ScrollContent', e);\n    };\n    const fireTextColorChange = (editor, data) => {\n        editor.dispatch('TextColorChange', data);\n    };\n    const fireAfterProgressState = (editor, state) => {\n        editor.dispatch('AfterProgressState', { state });\n    };\n    const fireResolveName = (editor, node) => editor.dispatch('ResolveName', {\n        name: node.nodeName.toLowerCase(),\n        target: node\n    });\n    const fireToggleToolbarDrawer = (editor, state) => {\n        editor.dispatch('ToggleToolbarDrawer', { state });\n    };\n    const fireStylesTextUpdate = (editor, data) => {\n        editor.dispatch('StylesTextUpdate', data);\n    };\n    const fireAlignTextUpdate = (editor, data) => {\n        editor.dispatch('AlignTextUpdate', data);\n    };\n    const fireFontSizeTextUpdate = (editor, data) => {\n        editor.dispatch('FontSizeTextUpdate', data);\n    };\n    const fireFontSizeInputTextUpdate = (editor, data) => {\n        editor.dispatch('FontSizeInputTextUpdate', data);\n    };\n    const fireBlocksTextUpdate = (editor, data) => {\n        editor.dispatch('BlocksTextUpdate', data);\n    };\n    const fireFontFamilyTextUpdate = (editor, data) => {\n        editor.dispatch('FontFamilyTextUpdate', data);\n    };\n    const fireToggleSidebar = (editor) => {\n        editor.dispatch('ToggleSidebar');\n    };\n    const fireToggleView = (editor) => {\n        editor.dispatch('ToggleView');\n    };\n    const fireContextToolbarClose = (editor) => {\n        editor.dispatch('ContextToolbarClose');\n    };\n    const fireContextFormSlideBack = (editor) => {\n        editor.dispatch('ContextFormSlideBack');\n    };\n\n    const composeUnbinders = (f, g) => () => {\n        f();\n        g();\n    };\n    const onSetupEditableToggle = (editor, enabledPredicate = always) => onSetupEvent(editor, 'NodeChange', (api) => {\n        api.setEnabled(editor.selection.isEditable() && enabledPredicate());\n    });\n    const onSetupFormatToggle = (editor, name) => (api) => {\n        const boundFormatChangeCallback = unbindable();\n        const init = () => {\n            api.setActive(editor.formatter.match(name));\n            const binding = editor.formatter.formatChanged(name, api.setActive);\n            boundFormatChangeCallback.set(binding);\n        };\n        // The editor may or may not have been setup yet, so check for that\n        editor.initialized ? init() : editor.once('init', init);\n        return () => {\n            editor.off('init', init);\n            boundFormatChangeCallback.clear();\n        };\n    };\n    const onSetupStateToggle = (editor, name) => (api) => {\n        const unbindEditableToogle = onSetupEditableToggle(editor)(api);\n        const unbindFormatToggle = onSetupFormatToggle(editor, name)(api);\n        return () => {\n            unbindEditableToogle();\n            unbindFormatToggle();\n        };\n    };\n    const onSetupEvent = (editor, event, f) => (api) => {\n        const handleEvent = () => f(api);\n        const init = () => {\n            f(api);\n            editor.on(event, handleEvent);\n        };\n        // The editor may or may not have been setup yet, so check for that\n        editor.initialized ? init() : editor.once('init', init);\n        return () => {\n            editor.off('init', init);\n            editor.off(event, handleEvent);\n        };\n    };\n    const onActionToggleFormat$1 = (editor) => (rawItem) => () => {\n        editor.undoManager.transact(() => {\n            editor.focus();\n            editor.execCommand('mceToggleFormat', false, rawItem.format);\n        });\n    };\n    const onActionExecCommand = (editor, command) => () => editor.execCommand(command);\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.LocalStorage');\n\n    const cacheStorage = {};\n    const ColorCache = (storageId, max = 10) => {\n        const storageString = global$5.getItem(storageId);\n        const localstorage = isString(storageString) ? JSON.parse(storageString) : [];\n        const prune = (list) => {\n            // When the localStorage cache is too big,\n            // remove the difference from the tail (head is fresh, tail is stale!)\n            const diff = max - list.length;\n            return (diff < 0) ? list.slice(0, max) : list;\n        };\n        const cache = prune(localstorage);\n        const add = (key) => {\n            // Remove duplicates first.\n            indexOf(cache, key).each(remove);\n            cache.unshift(key);\n            // When max size is exceeded, the oldest colors will be removed\n            if (cache.length > max) {\n                cache.pop();\n            }\n            global$5.setItem(storageId, JSON.stringify(cache));\n        };\n        const remove = (idx) => {\n            cache.splice(idx, 1);\n        };\n        const state = () => cache.slice(0);\n        return {\n            add,\n            state\n        };\n    };\n    const getCacheForId = (id) => get$h(cacheStorage, id).getOrThunk(() => {\n        const storageId = `tinymce-custom-colors-${id}`;\n        const currentData = global$5.getItem(storageId);\n        if (isNullable(currentData)) {\n            const legacyDefault = global$5.getItem('tinymce-custom-colors');\n            global$5.setItem(storageId, isNonNullable(legacyDefault) ? legacyDefault : '[]');\n        }\n        const storage = ColorCache(storageId, 10);\n        cacheStorage[id] = storage;\n        return storage;\n    });\n    const getCurrentColors = (id) => map$2(getCacheForId(id).state(), (color) => ({\n        type: 'choiceitem',\n        text: color,\n        icon: 'checkmark',\n        value: color\n    }));\n    const addColor = (id, color) => {\n        getCacheForId(id).add(color);\n    };\n\n    const foregroundId = 'forecolor';\n    const backgroundId = 'hilitecolor';\n    const fallbackCols = 5;\n    const mapColors = (colorMap) => mapColorsRaw(colorMap.map((color, index) => {\n        if (index % 2 === 0) {\n            return '#' + anyToHex(color).value;\n        }\n        return color;\n    }));\n    const mapColorsRaw = (colorMap) => {\n        const colors = [];\n        for (let i = 0; i < colorMap.length; i += 2) {\n            colors.push({\n                text: colorMap[i + 1],\n                value: colorMap[i],\n                icon: 'checkmark',\n                type: 'choiceitem'\n            });\n        }\n        return colors;\n    };\n    const option$1 = (name) => (editor) => editor.options.get(name);\n    const fallbackColor = '#000000';\n    const register$e = (editor) => {\n        const registerOption = editor.options.register;\n        const colorProcessor = (value) => {\n            if (isArrayOf(value, isString)) {\n                return { value: mapColors(value), valid: true };\n            }\n            else {\n                return { valid: false, message: 'Must be an array of strings.' };\n            }\n        };\n        const colorProcessorRaw = (value) => {\n            if (isArrayOf(value, isString)) {\n                return { value: mapColorsRaw(value), valid: true };\n            }\n            else {\n                return { valid: false, message: 'Must be an array of strings.' };\n            }\n        };\n        const colorColsProcessor = (value) => {\n            if (isNumber(value) && value > 0) {\n                return { value, valid: true };\n            }\n            else {\n                return { valid: false, message: 'Must be a positive number.' };\n            }\n        };\n        registerOption('color_map', {\n            processor: colorProcessor,\n            default: [\n                '#BFEDD2', 'Light Green',\n                '#FBEEB8', 'Light Yellow',\n                '#F8CAC6', 'Light Red',\n                '#ECCAFA', 'Light Purple',\n                '#C2E0F4', 'Light Blue',\n                '#2DC26B', 'Green',\n                '#F1C40F', 'Yellow',\n                '#E03E2D', 'Red',\n                '#B96AD9', 'Purple',\n                '#3598DB', 'Blue',\n                '#169179', 'Dark Turquoise',\n                '#E67E23', 'Orange',\n                '#BA372A', 'Dark Red',\n                '#843FA1', 'Dark Purple',\n                '#236FA1', 'Dark Blue',\n                '#ECF0F1', 'Light Gray',\n                '#CED4D9', 'Medium Gray',\n                '#95A5A6', 'Gray',\n                '#7E8C8D', 'Dark Gray',\n                '#34495E', 'Navy Blue',\n                '#000000', 'Black',\n                '#ffffff', 'White'\n            ]\n        });\n        registerOption('color_map_raw', {\n            processor: colorProcessorRaw,\n        });\n        registerOption('color_map_background', {\n            processor: colorProcessor\n        });\n        registerOption('color_map_foreground', {\n            processor: colorProcessor\n        });\n        registerOption('color_cols', {\n            processor: colorColsProcessor,\n            default: calcCols(editor)\n        });\n        registerOption('color_cols_foreground', {\n            processor: colorColsProcessor,\n            default: defaultCols(editor, foregroundId)\n        });\n        registerOption('color_cols_background', {\n            processor: colorColsProcessor,\n            default: defaultCols(editor, backgroundId)\n        });\n        registerOption('custom_colors', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('color_default_foreground', {\n            processor: 'string',\n            default: fallbackColor\n        });\n        registerOption('color_default_background', {\n            processor: 'string',\n            default: fallbackColor\n        });\n    };\n    const getColors$2 = (editor, id) => {\n        if (id === foregroundId && editor.options.isSet('color_map_foreground')) {\n            return option$1('color_map_foreground')(editor);\n        }\n        else if (id === backgroundId && editor.options.isSet('color_map_background')) {\n            return option$1('color_map_background')(editor);\n        }\n        else if (editor.options.isSet('color_map_raw')) {\n            return option$1('color_map_raw')(editor);\n        }\n        else {\n            return option$1('color_map')(editor);\n        }\n    };\n    const calcCols = (editor, id = 'default') => Math.max(fallbackCols, Math.ceil(Math.sqrt(getColors$2(editor, id).length)));\n    const defaultCols = (editor, id) => {\n        const defaultCols = option$1('color_cols')(editor);\n        const calculatedCols = calcCols(editor, id);\n        if (defaultCols === calcCols(editor)) {\n            return calculatedCols;\n        }\n        else {\n            return defaultCols;\n        }\n    };\n    const getColorCols$1 = (editor, id = 'default') => {\n        const getCols = () => {\n            if (id === foregroundId) {\n                return option$1('color_cols_foreground')(editor);\n            }\n            else if (id === backgroundId) {\n                return option$1('color_cols_background')(editor);\n            }\n            else {\n                return option$1('color_cols')(editor);\n            }\n        };\n        return Math.round(getCols());\n    };\n    const hasCustomColors$1 = option$1('custom_colors');\n    const getDefaultForegroundColor = option$1('color_default_foreground');\n    const getDefaultBackgroundColor = option$1('color_default_background');\n\n    const defaultBackgroundColor = 'rgba(0, 0, 0, 0)';\n    const isValidBackgroundColor = (value) => fromString(value).exists((c) => c.alpha !== 0);\n    // Climb up the tree to find the value of the background until finding a non-transparent value or defaulting.\n    const getClosestCssBackgroundColorValue = (scope) => {\n        return closest(scope, (node) => {\n            if (isElement$1(node)) {\n                const color = get$e(node, 'background-color');\n                return someIf(isValidBackgroundColor(color), color);\n            }\n            else {\n                return Optional.none();\n            }\n        }).getOr(defaultBackgroundColor);\n    };\n    const getCurrentColor = (editor, format) => {\n        const node = SugarElement.fromDom(editor.selection.getStart());\n        const cssRgbValue = format === 'hilitecolor'\n            ? getClosestCssBackgroundColorValue(node)\n            : get$e(node, 'color');\n        return fromString(cssRgbValue).map((rgba) => '#' + fromRgba(rgba).value);\n    };\n    const applyFormat = (editor, format, value) => {\n        editor.undoManager.transact(() => {\n            editor.focus();\n            editor.formatter.apply(format, { value });\n            editor.nodeChanged();\n        });\n    };\n    const removeFormat = (editor, format) => {\n        editor.undoManager.transact(() => {\n            editor.focus();\n            editor.formatter.remove(format, { value: null }, undefined, true);\n            editor.nodeChanged();\n        });\n    };\n    const registerCommands = (editor) => {\n        editor.addCommand('mceApplyTextcolor', (format, value) => {\n            applyFormat(editor, format, value);\n        });\n        editor.addCommand('mceRemoveTextcolor', (format) => {\n            removeFormat(editor, format);\n        });\n    };\n    const getAdditionalColors = (hasCustom) => {\n        const type = 'choiceitem';\n        const remove = {\n            type,\n            text: 'Remove color',\n            icon: 'color-swatch-remove-color',\n            value: 'remove'\n        };\n        const custom = {\n            type,\n            text: 'Custom color',\n            icon: 'color-picker',\n            value: 'custom'\n        };\n        return hasCustom ? [\n            remove,\n            custom\n        ] : [remove];\n    };\n    const applyColor = (editor, format, value, onChoice) => {\n        if (value === 'custom') {\n            const dialog = colorPickerDialog(editor);\n            dialog((colorOpt) => {\n                colorOpt.each((color) => {\n                    addColor(format, color);\n                    editor.execCommand('mceApplyTextcolor', format, color);\n                    onChoice(color);\n                });\n            }, getCurrentColor(editor, format).getOr(fallbackColor));\n        }\n        else if (value === 'remove') {\n            onChoice('');\n            editor.execCommand('mceRemoveTextcolor', format);\n        }\n        else {\n            onChoice(value);\n            editor.execCommand('mceApplyTextcolor', format, value);\n        }\n    };\n    const getColors$1 = (colors, id, hasCustom) => colors.concat(getCurrentColors(id).concat(getAdditionalColors(hasCustom)));\n    const getFetch$1 = (colors, id, hasCustom) => (callback) => {\n        callback(getColors$1(colors, id, hasCustom));\n    };\n    const setIconColor = (splitButtonApi, name, newColor) => {\n        const id = name === 'forecolor' ? 'tox-icon-text-color__color' : 'tox-icon-highlight-bg-color__color';\n        splitButtonApi.setIconFill(id, newColor);\n    };\n    const setTooltip = (buttonApi, tooltip) => {\n        buttonApi.setTooltip(tooltip);\n    };\n    const select$1 = (editor, format) => (value) => {\n        const optCurrentHex = getCurrentColor(editor, format);\n        return is$1(optCurrentHex, value.toUpperCase());\n    };\n    // Selecting `Remove Color` would set the lastColor to ''\n    const getToolTipText = (editor, format, lastColor) => {\n        if (isEmpty(lastColor)) {\n            return format === 'forecolor' ? 'Text color' : 'Background color';\n        }\n        const tooltipPrefix = format === 'forecolor' ? 'Text color {0}' : 'Background color {0}';\n        const colors = getColors$1(getColors$2(editor, format), format, false);\n        const colorText = find$5(colors, (c) => c.value === lastColor).getOr({ text: '' }).text;\n        return editor.translate([tooltipPrefix, editor.translate(colorText)]);\n    };\n    const registerTextColorButton = (editor, name, format, lastColor) => {\n        editor.ui.registry.addSplitButton(name, {\n            tooltip: getToolTipText(editor, format, lastColor.get()),\n            presets: 'color',\n            icon: name === 'forecolor' ? 'text-color' : 'highlight-bg-color',\n            select: select$1(editor, format),\n            columns: getColorCols$1(editor, format),\n            fetch: getFetch$1(getColors$2(editor, format), format, hasCustomColors$1(editor)),\n            onAction: (_splitButtonApi) => {\n                applyColor(editor, format, lastColor.get(), noop);\n            },\n            onItemAction: (_splitButtonApi, value) => {\n                applyColor(editor, format, value, (newColor) => {\n                    lastColor.set(newColor);\n                    fireTextColorChange(editor, {\n                        name,\n                        color: newColor\n                    });\n                });\n            },\n            onSetup: (splitButtonApi) => {\n                setIconColor(splitButtonApi, name, lastColor.get());\n                const handler = (e) => {\n                    if (e.name === name) {\n                        setIconColor(splitButtonApi, e.name, e.color);\n                        setTooltip(splitButtonApi, getToolTipText(editor, format, e.color));\n                    }\n                };\n                editor.on('TextColorChange', handler);\n                return composeUnbinders(onSetupEditableToggle(editor)(splitButtonApi), () => {\n                    editor.off('TextColorChange', handler);\n                });\n            }\n        });\n    };\n    const registerTextColorMenuItem = (editor, name, format, text, lastColor) => {\n        editor.ui.registry.addNestedMenuItem(name, {\n            text,\n            icon: name === 'forecolor' ? 'text-color' : 'highlight-bg-color',\n            onSetup: (api) => {\n                setTooltip(api, getToolTipText(editor, format, lastColor.get()));\n                setIconColor(api, name, lastColor.get());\n                return onSetupEditableToggle(editor)(api);\n            },\n            getSubmenuItems: () => [\n                {\n                    type: 'fancymenuitem',\n                    fancytype: 'colorswatch',\n                    select: select$1(editor, format),\n                    initData: {\n                        storageKey: format,\n                    },\n                    onAction: (data) => {\n                        applyColor(editor, format, data.value, (newColor) => {\n                            lastColor.set(newColor);\n                            fireTextColorChange(editor, {\n                                name,\n                                color: newColor\n                            });\n                        });\n                    },\n                }\n            ]\n        });\n    };\n    const colorPickerDialog = (editor) => (callback, value) => {\n        let isValid = false;\n        const onSubmit = (api) => {\n            const data = api.getData();\n            const hex = data.colorpicker;\n            if (isValid) {\n                callback(Optional.from(hex));\n                api.close();\n            }\n            else {\n                editor.windowManager.alert(editor.translate(['Invalid hex color code: {0}', hex]));\n            }\n        };\n        const onAction = (_api, details) => {\n            if (details.name === 'hex-valid') {\n                isValid = details.value;\n            }\n        };\n        const initialData = {\n            colorpicker: value\n        };\n        editor.windowManager.open({\n            title: 'Color Picker',\n            size: 'normal',\n            body: {\n                type: 'panel',\n                items: [\n                    {\n                        type: 'colorpicker',\n                        name: 'colorpicker',\n                        label: 'Color'\n                    }\n                ]\n            },\n            buttons: [\n                {\n                    type: 'cancel',\n                    name: 'cancel',\n                    text: 'Cancel'\n                },\n                {\n                    type: 'submit',\n                    name: 'save',\n                    text: 'Save',\n                    primary: true\n                }\n            ],\n            initialData,\n            onAction,\n            onSubmit,\n            onClose: noop,\n            onCancel: () => {\n                callback(Optional.none());\n            }\n        });\n    };\n    const register$d = (editor) => {\n        registerCommands(editor);\n        const fallbackColorForeground = getDefaultForegroundColor(editor);\n        const fallbackColorBackground = getDefaultBackgroundColor(editor);\n        const lastForeColor = Cell(fallbackColorForeground);\n        const lastBackColor = Cell(fallbackColorBackground);\n        registerTextColorButton(editor, 'forecolor', 'forecolor', lastForeColor);\n        registerTextColorButton(editor, 'backcolor', 'hilitecolor', lastBackColor);\n        registerTextColorMenuItem(editor, 'forecolor', 'forecolor', 'Text color', lastForeColor);\n        registerTextColorMenuItem(editor, 'backcolor', 'hilitecolor', 'Background color', lastBackColor);\n    };\n\n    const renderImgItem = (spec, onItemValueHandler, isSelected, itemResponse, providersBackstage) => {\n        const getApi = (component) => ({\n            setActive: (state) => {\n                Toggling.set(component, state);\n            },\n            isActive: () => Toggling.isOn(component),\n            isEnabled: () => !Disabling.isDisabled(component),\n            setEnabled: (state) => Disabling.set(component, !state)\n        });\n        const structure = renderItemStructure({\n            presets: 'img',\n            textContent: Optional.none(),\n            htmlContent: Optional.none(),\n            ariaLabel: spec.tooltip,\n            iconContent: Optional.some(spec.url),\n            labelContent: spec.label,\n            shortcutContent: Optional.none(),\n            checkMark: Optional.some(renderCheckmark(providersBackstage.icons)),\n            caret: Optional.none(),\n            value: spec.value\n        }, providersBackstage, true);\n        const optTooltipping = spec.tooltip\n            .map((t) => Tooltipping.config(providersBackstage.tooltips.getConfig({\n            tooltipText: providersBackstage.translate(t)\n        })));\n        return deepMerge(renderCommonItem({\n            context: spec.context,\n            data: buildData(spec),\n            enabled: spec.enabled,\n            getApi,\n            onAction: (api) => {\n                onItemValueHandler(spec.value);\n                api.setActive(true);\n            },\n            onSetup: (api) => {\n                api.setActive(isSelected);\n                return noop;\n            },\n            triggersSubmenu: false,\n            itemBehaviours: [\n                ...optTooltipping.toArray()\n            ]\n        }, structure, itemResponse, providersBackstage), {\n            toggling: {\n                toggleClass: tickedClass,\n                toggleOnExecute: false,\n                selected: spec.active,\n                exclusive: true\n            }\n        });\n    };\n\n    const createPartialChoiceMenu = (value, items, onItemValueHandler, columns, presets, itemResponse, select, providersBackstage) => {\n        const hasIcons = menuHasIcons(items);\n        const presetItemTypes = presets !== 'color' ? 'normal' : 'color';\n        const alloyItems = createChoiceItems(items, onItemValueHandler, columns, presetItemTypes, itemResponse, select, providersBackstage);\n        const menuLayout = {\n            menuType: presets\n        };\n        return createPartialMenuWithAlloyItems(value, hasIcons, alloyItems, columns, menuLayout);\n    };\n    const createChoiceItems = (items, onItemValueHandler, columns, itemPresets, itemResponse, select, providersBackstage) => cat(map$2(items, (item) => {\n        if (item.type === 'choiceitem') {\n            return createChoiceMenuItem(item).fold(handleError, (d) => Optional.some(renderChoiceItem(d, columns === 1, itemPresets, onItemValueHandler, select(d.value), itemResponse, providersBackstage, menuHasIcons(items))));\n        }\n        else if (item.type === 'imageitem') {\n            return createImageMenuItem(item).fold(handleError, (d) => Optional.some(renderImgItem(d, onItemValueHandler, select(d.value), itemResponse, providersBackstage)));\n        }\n        else if (item.type === 'resetimage') {\n            return createResetImageItem(item).fold(handleError, (d) => Optional.some(renderChoiceItem(({\n                ...d,\n                type: 'choiceitem',\n                text: d.tooltip,\n                icon: Optional.some(d.icon),\n                label: Optional.some(d.label),\n            }), columns === 1, itemPresets, onItemValueHandler, select(d.value), itemResponse, providersBackstage, menuHasIcons(items))));\n        }\n        else {\n            return Optional.none();\n        }\n    }));\n\n    const deriveMenuMovement = (columns, presets) => {\n        const menuMarkers = markers(presets);\n        if (columns === 1) {\n            return { mode: 'menu', moveOnTab: true };\n        }\n        else if (columns === 'auto') {\n            return {\n                mode: 'grid',\n                selector: '.' + menuMarkers.item,\n                initSize: {\n                    numColumns: 1,\n                    numRows: 1\n                }\n            };\n        }\n        else {\n            const rowClass = {\n                color: 'tox-swatches__row',\n                imageselector: 'tox-image-selector__row',\n                listpreview: 'tox-collection__group',\n                normal: 'tox-collection__group'\n            }[presets];\n            return {\n                mode: 'matrix',\n                rowSelector: '.' + rowClass,\n                previousSelector: (menu) => {\n                    // We only want the navigation to start on the selected item if we are in color-mode (The colorswatch)\n                    return presets === 'color'\n                        ? descendant(menu.element, '[aria-checked=true]')\n                        : Optional.none();\n                }\n            };\n        }\n    };\n    const deriveCollectionMovement = (columns, presets) => {\n        if (columns === 1) {\n            return {\n                mode: 'menu',\n                moveOnTab: false,\n                selector: '.tox-collection__item'\n            };\n        }\n        else if (columns === 'auto') {\n            return {\n                mode: 'flatgrid',\n                selector: '.' + 'tox-collection__item',\n                initSize: {\n                    numColumns: 1,\n                    numRows: 1\n                }\n            };\n        }\n        else {\n            return {\n                mode: 'matrix',\n                selectors: {\n                    row: presets === 'color' ? '.tox-swatches__row' : '.tox-collection__group',\n                    cell: presets === 'color' ? `.${colorClass}` : `.${selectableClass}`\n                }\n            };\n        }\n    };\n\n    const renderColorSwatchItem = (spec, backstage) => {\n        const items = getColorItems(spec, backstage);\n        const columns = backstage.colorinput.getColorCols(spec.initData.storageKey);\n        const presets = 'color';\n        const menuSpec = createPartialChoiceMenu(generate$6('menu-value'), items, (value) => {\n            spec.onAction({ value });\n        }, columns, presets, ItemResponse$1.CLOSE_ON_EXECUTE, spec.select.getOr(never), backstage.shared.providers);\n        const widgetSpec = {\n            ...menuSpec,\n            markers: markers(presets),\n            movement: deriveMenuMovement(columns, presets),\n            // TINY-10806: Avoid duplication of ARIA role=\"menu\" in the accessibility tree for Color Swatch menu item.\n            showMenuRole: false\n        };\n        return {\n            type: 'widget',\n            data: { value: generate$6('widget-id') },\n            dom: {\n                tag: 'div',\n                classes: ['tox-fancymenuitem']\n            },\n            autofocus: true,\n            components: [\n                parts$8.widget(Menu.sketch(widgetSpec))\n            ]\n        };\n    };\n    const getColorItems = (spec, backstage) => {\n        const useCustomColors = spec.initData.allowCustomColors && backstage.colorinput.hasCustomColors();\n        return spec.initData.colors.fold(() => getColors$1(backstage.colorinput.getColors(spec.initData.storageKey), spec.initData.storageKey, useCustomColors), (colors) => colors.concat(getAdditionalColors(useCustomColors)));\n    };\n\n    const renderImageSelector = (spec, backstage) => {\n        const presets = 'imageselector';\n        const columns = spec.initData.columns;\n        const menuSpec = createPartialChoiceMenu(generate$6('menu-value'), spec.initData.items, (value) => {\n            spec.onAction({ value });\n        }, columns, presets, ItemResponse$1.CLOSE_ON_EXECUTE, spec.select.getOr(never), backstage.shared.providers);\n        const widgetSpec = {\n            ...menuSpec,\n            markers: markers(presets),\n            movement: deriveMenuMovement(columns, presets),\n            // TINY-10806: Avoid duplication of ARIA role=\"menu\" in the accessibility tree for Image Selector menu item.\n            showMenuRole: false\n        };\n        return {\n            type: 'widget',\n            data: { value: generate$6('widget-id') },\n            dom: {\n                tag: 'div',\n                classes: ['tox-fancymenuitem', 'tox-collection--toolbar']\n            },\n            autofocus: true,\n            components: [\n                parts$8.widget(Menu.sketch(widgetSpec))\n            ]\n        };\n    };\n\n    const cellOverEvent = generate$6('cell-over');\n    const cellExecuteEvent = generate$6('cell-execute');\n    const makeAnnouncementText = (backstage) => (row, col) => backstage.shared.providers.translate(['{0} columns, {1} rows', col, row]);\n    const makeCell = (row, col, label) => {\n        const emitCellOver = (c) => emitWith(c, cellOverEvent, { row, col });\n        const emitExecute = (c) => emitWith(c, cellExecuteEvent, { row, col });\n        const onClick = (c, se) => {\n            se.stop();\n            emitExecute(c);\n        };\n        return build$1({\n            dom: {\n                tag: 'div',\n                attributes: {\n                    role: 'button',\n                    ['aria-label']: label\n                }\n            },\n            behaviours: derive$1([\n                config('insert-table-picker-cell', [\n                    run$1(mouseover(), Focusing.focus),\n                    run$1(execute$5(), emitExecute),\n                    run$1(click(), onClick),\n                    run$1(tap(), onClick)\n                ]),\n                Toggling.config({\n                    toggleClass: 'tox-insert-table-picker__selected',\n                    toggleOnExecute: false\n                }),\n                Focusing.config({ onFocus: emitCellOver })\n            ])\n        });\n    };\n    const makeCells = (getCellLabel, numRows, numCols) => {\n        const cells = [];\n        for (let i = 0; i < numRows; i++) {\n            const row = [];\n            for (let j = 0; j < numCols; j++) {\n                const label = getCellLabel(i + 1, j + 1);\n                row.push(makeCell(i, j, label));\n            }\n            cells.push(row);\n        }\n        return cells;\n    };\n    const selectCells = (cells, selectedRow, selectedColumn, numRows, numColumns) => {\n        for (let i = 0; i < numRows; i++) {\n            for (let j = 0; j < numColumns; j++) {\n                Toggling.set(cells[i][j], i <= selectedRow && j <= selectedColumn);\n            }\n        }\n    };\n    const makeComponents = (cells) => bind$3(cells, (cellRow) => map$2(cellRow, premade));\n    const makeLabelText = (row, col) => text$2(`${col}x${row}`);\n    const renderInsertTableMenuItem = (spec, backstage) => {\n        const numRows = 10;\n        const numColumns = 10;\n        const getCellLabel = makeAnnouncementText(backstage);\n        const cells = makeCells(getCellLabel, numRows, numColumns);\n        const emptyLabelText = makeLabelText(0, 0);\n        const memLabel = record({\n            dom: {\n                tag: 'span',\n                classes: ['tox-insert-table-picker__label'],\n            },\n            components: [emptyLabelText],\n            behaviours: derive$1([\n                Replacing.config({})\n            ])\n        });\n        return {\n            type: 'widget',\n            data: { value: generate$6('widget-id') },\n            dom: {\n                tag: 'div',\n                classes: ['tox-fancymenuitem']\n            },\n            autofocus: true,\n            components: [parts$8.widget({\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-insert-table-picker']\n                    },\n                    components: makeComponents(cells).concat(memLabel.asSpec()),\n                    behaviours: derive$1([\n                        config('insert-table-picker', [\n                            runOnAttached((c) => {\n                                // Restore the empty label when opened, otherwise it may still be using an old label from last time it was opened\n                                Replacing.set(memLabel.get(c), [emptyLabelText]);\n                            }),\n                            runWithTarget(cellOverEvent, (c, t, e) => {\n                                const { row, col } = e.event;\n                                selectCells(cells, row, col, numRows, numColumns);\n                                Replacing.set(memLabel.get(c), [makeLabelText(row + 1, col + 1)]);\n                            }),\n                            runWithTarget(cellExecuteEvent, (c, _, e) => {\n                                const { row, col } = e.event;\n                                // Close the sandbox before triggering the action\n                                emit(c, sandboxClose());\n                                spec.onAction({ numRows: row + 1, numColumns: col + 1 });\n                            })\n                        ]),\n                        Keying.config({\n                            initSize: {\n                                numRows,\n                                numColumns\n                            },\n                            mode: 'flatgrid',\n                            selector: '[role=\"button\"]'\n                        })\n                    ])\n                })]\n        };\n    };\n\n    const fancyMenuItems = {\n        inserttable: renderInsertTableMenuItem,\n        colorswatch: renderColorSwatchItem,\n        imageselect: renderImageSelector\n    };\n    const renderFancyMenuItem = (spec, backstage) => get$h(fancyMenuItems, spec.fancytype).map((render) => render(spec, backstage));\n\n    // Note, this does not create a valid SketchSpec.\n    const renderNestedItem = (spec, itemResponse, providersBackstage, renderIcons = true, downwardsCaret = false) => {\n        const caret = downwardsCaret ? renderDownwardsCaret(providersBackstage.icons) : renderSubmenuCaret(providersBackstage.icons);\n        const getApi = (component) => ({\n            isEnabled: () => !Disabling.isDisabled(component),\n            setEnabled: (state) => Disabling.set(component, !state),\n            setIconFill: (id, value) => {\n                descendant(component.element, `svg path[class=\"${id}\"], rect[class=\"${id}\"]`).each((underlinePath) => {\n                    set$9(underlinePath, 'fill', value);\n                });\n            },\n            setTooltip: (tooltip) => {\n                const translatedTooltip = providersBackstage.translate(tooltip);\n                set$9(component.element, 'aria-label', translatedTooltip);\n            }\n        });\n        const structure = renderItemStructure({\n            presets: 'normal',\n            iconContent: spec.icon,\n            textContent: spec.text,\n            htmlContent: Optional.none(),\n            ariaLabel: spec.text,\n            labelContent: Optional.none(),\n            caret: Optional.some(caret),\n            checkMark: Optional.none(),\n            shortcutContent: spec.shortcut\n        }, providersBackstage, renderIcons);\n        return renderCommonItem({\n            context: spec.context,\n            data: buildData(spec),\n            getApi,\n            enabled: spec.enabled,\n            onAction: noop,\n            onSetup: spec.onSetup,\n            triggersSubmenu: true,\n            itemBehaviours: []\n        }, structure, itemResponse, providersBackstage);\n    };\n\n    // Note, this does not create a valid SketchSpec.\n    const renderNormalItem = (spec, itemResponse, providersBackstage, renderIcons = true) => {\n        const getApi = (component) => ({\n            isEnabled: () => !Disabling.isDisabled(component),\n            setEnabled: (state) => Disabling.set(component, !state)\n        });\n        const structure = renderItemStructure({\n            presets: 'normal',\n            iconContent: spec.icon,\n            textContent: spec.text,\n            htmlContent: Optional.none(),\n            labelContent: Optional.none(),\n            ariaLabel: spec.text,\n            caret: Optional.none(),\n            checkMark: Optional.none(),\n            shortcutContent: spec.shortcut\n        }, providersBackstage, renderIcons);\n        return renderCommonItem({\n            context: spec.context,\n            data: buildData(spec),\n            getApi,\n            enabled: spec.enabled,\n            onAction: spec.onAction,\n            onSetup: spec.onSetup,\n            triggersSubmenu: false,\n            itemBehaviours: []\n        }, structure, itemResponse, providersBackstage);\n    };\n\n    const renderSeparatorItem = (spec) => ({\n        type: 'separator',\n        dom: {\n            tag: 'div',\n            classes: [selectableClass, groupHeadingClass]\n        },\n        components: spec.text.map(text$2).toArray()\n    });\n\n    const renderToggleMenuItem = (spec, itemResponse, providersBackstage, renderIcons = true) => {\n        const getApi = (component) => ({\n            setActive: (state) => {\n                Toggling.set(component, state);\n            },\n            isActive: () => Toggling.isOn(component),\n            isEnabled: () => !Disabling.isDisabled(component),\n            setEnabled: (state) => Disabling.set(component, !state)\n        });\n        // BespokeSelects use meta to pass through styling information. Bespokes should only\n        // be togglemenuitems hence meta is only passed through in this MenuItem.\n        const structure = renderItemStructure({\n            iconContent: spec.icon,\n            textContent: spec.text,\n            htmlContent: Optional.none(),\n            labelContent: Optional.none(),\n            ariaLabel: spec.text,\n            checkMark: Optional.some(renderCheckmark(providersBackstage.icons)),\n            caret: Optional.none(),\n            shortcutContent: spec.shortcut,\n            presets: 'normal',\n            meta: spec.meta\n        }, providersBackstage, renderIcons);\n        return deepMerge(renderCommonItem({\n            context: spec.context,\n            data: buildData(spec),\n            enabled: spec.enabled,\n            getApi,\n            onAction: spec.onAction,\n            onSetup: spec.onSetup,\n            triggersSubmenu: false,\n            itemBehaviours: []\n        }, structure, itemResponse, providersBackstage), {\n            toggling: {\n                toggleClass: tickedClass,\n                toggleOnExecute: false,\n                selected: spec.active\n            },\n            role: spec.role.getOrUndefined()\n        });\n    };\n\n    const autocomplete = renderAutocompleteItem;\n    const separator$3 = renderSeparatorItem;\n    const normal = renderNormalItem;\n    const nested = renderNestedItem;\n    const toggle = renderToggleMenuItem;\n    const fancy = renderFancyMenuItem;\n    const card = renderCardMenuItem;\n\n    const identifyMenuLayout = (searchMode) => {\n        switch (searchMode.searchMode) {\n            case 'no-search': {\n                return {\n                    menuType: 'normal'\n                };\n            }\n            default: {\n                return {\n                    menuType: 'searchable',\n                    searchMode\n                };\n            }\n        }\n    };\n    const handleRefetchTrigger = (originalSandboxComp) => {\n        // At the moment, a Sandbox is \"Represented\" by its triggering Dropdown.\n        // We'll want to make this an official API, in case we change it later.\n        const dropdown = Representing.getValue(originalSandboxComp);\n        // Because refetch will replace the entire menu, we need to store the\n        // original version of the searcher state, so that we can reinstate it\n        // after the fetch completes (which is async)\n        const optSearcherState = findWithinSandbox(originalSandboxComp).map(saveState);\n        Dropdown.refetch(dropdown).get(() => {\n            // It has completed, so now find the searcher and set its value\n            // again. We can't just use the originalSandbox, because that will\n            // have been thrown away and recreated by now.\n            const newSandboxComp = Coupling.getCoupled(dropdown, 'sandbox');\n            optSearcherState.each((searcherState) => findWithinSandbox(newSandboxComp).each((inputComp) => restoreState(inputComp, searcherState)));\n        });\n    };\n    // This event is triggered by the searcher for key events\n    // that should be handled by the currently selected item\n    // (that is, the one with *fake* focus, not real focus). So we\n    // need to redispatch them to the selected item in the sandbox.\n    const handleRedirectToMenuItem = (sandboxComp, se) => {\n        getActiveMenuItemFrom(sandboxComp).each((activeItem) => {\n            retargetAndDispatchWith(sandboxComp, activeItem.element, se.event.eventType, se.event.interactionEvent);\n        });\n    };\n    // This function is useful when you have fakeFocus, so you can't just find the\n    // currently focused item (or the item that triggered a key event). It relies on\n    // the following relationships between components\n    // The Sandbox creates a tieredmenu, so Sandboxing.getState returns the TieredMenu\n    // The TieredMenu uses Highlighting for managing which menus are active, so\n    // Highlighting.getHighlighted(tmenu) is the current active menu\n    // The Menu uses highlighting to manage the active item, so use\n    // Highlighting.getHighlighted(menu) to get the current item.\n    const getActiveMenuItemFrom = (sandboxComp) => {\n        // Consider moving some of these things into shared APIs. For example, make an extra API\n        // for TieredMenu to get the highlighted item.\n        return Sandboxing.getState(sandboxComp)\n            .bind(Highlighting.getHighlighted)\n            .bind(Highlighting.getHighlighted);\n    };\n    const getSearchResults = (activeMenuComp) => {\n        // Depending on the menu layout, the search results will either be the entire\n        // menu, or something within the menu.\n        return has(activeMenuComp.element, searchResultsClass)\n            ? Optional.some(activeMenuComp.element)\n            : descendant(activeMenuComp.element, '.' + searchResultsClass);\n    };\n    // Model the interaction with ARIA\n    const updateAriaOnHighlight = (tmenuComp, menuComp, itemComp) => {\n        // This ARIA behaviour is based on the algolia example documented in TINY-8952\n        findWithinMenu(tmenuComp).each((inputComp) => {\n            setActiveDescendant(inputComp, itemComp);\n            const optActiveResults = getSearchResults(menuComp);\n            optActiveResults.each((resultsElem) => {\n                // Link aria-controls of the input to the id of the results container.\n                getOpt(resultsElem, 'id')\n                    .each((controlledId) => set$9(inputComp.element, 'aria-controls', controlledId));\n            });\n        });\n        // Update the aria-selected on the item. The removal is handled by onDehighlight\n        set$9(itemComp.element, 'aria-selected', 'true');\n    };\n    const updateAriaOnDehighlight = (tmenuComp, menuComp, itemComp) => {\n        // This ARIA behaviour is based on the algolia example documented in TINY-8952\n        set$9(itemComp.element, 'aria-selected', 'false');\n    };\n    const focusSearchField = (tmenuComp) => {\n        findWithinMenu(tmenuComp).each((searcherComp) => Focusing.focus(searcherComp));\n    };\n    const getSearchPattern = (dropdownComp) => {\n        // Dropdowns are \"coupled\" with their sandbox and generally, create them on demand.\n        // When using \"getExistingCoupled\" of Coupling, it only returns the coupled\n        // component (here: the sandbox) if it already exists ... it won't do any creation.\n        // So here, we are trying to get possible fetchContext information for our fetch\n        // callback. If there is no sandbox, then there is no open menu, and we\n        // don't have any search context, so use an empty string. Otherwise, dive into\n        // the sandbox, and find the search field's current pattern.\n        const optSandboxComp = Coupling.getExistingCoupled(dropdownComp, 'sandbox');\n        return optSandboxComp\n            .bind(findWithinSandbox)\n            .map(saveState)\n            .map((state) => state.fetchPattern)\n            .getOr('');\n    };\n\n    var FocusMode;\n    (function (FocusMode) {\n        FocusMode[FocusMode[\"ContentFocus\"] = 0] = \"ContentFocus\";\n        FocusMode[FocusMode[\"UiFocus\"] = 1] = \"UiFocus\";\n    })(FocusMode || (FocusMode = {}));\n    const createMenuItemFromBridge = (item, itemResponse, backstage, menuHasIcons, isHorizontalMenu) => {\n        const providersBackstage = backstage.shared.providers;\n        // If we're making a horizontal menu (mobile context menu) we want text OR icons\n        // to simplify the UI. We also don't want shortcut text.\n        const parseForHorizontalMenu = (menuitem) => !isHorizontalMenu ? menuitem : ({\n            ...menuitem,\n            shortcut: Optional.none(),\n            icon: menuitem.text.isSome() ? Optional.none() : menuitem.icon\n        });\n        switch (item.type) {\n            case 'menuitem':\n                return createMenuItem(item).fold(handleError, (d) => Optional.some(normal(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons)));\n            case 'nestedmenuitem':\n                return createNestedMenuItem(item).fold(handleError, (d) => Optional.some(nested(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons, isHorizontalMenu)));\n            case 'togglemenuitem':\n                return createToggleMenuItem(item).fold(handleError, (d) => Optional.some(toggle(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons)));\n            case 'separator':\n                return createSeparatorMenuItem(item).fold(handleError, (d) => Optional.some(separator$3(d)));\n            case 'fancymenuitem':\n                return createFancyMenuItem(item).fold(handleError, \n                // Fancy menu items don't have shortcuts or icons\n                (d) => fancy(d, backstage));\n            default: {\n                // eslint-disable-next-line no-console\n                console.error('Unknown item in general menu', item);\n                return Optional.none();\n            }\n        }\n    };\n    const createAutocompleteItems = (items, matchText, onItemValueHandler, columns, itemResponse, sharedBackstage, highlightOn) => {\n        // Render text and icons if we're using a single column, otherwise only render icons\n        const renderText = columns === 1;\n        const renderIcons = !renderText || menuHasIcons(items);\n        return cat(map$2(items, (item) => {\n            switch (item.type) {\n                case 'separator':\n                    return createSeparatorItem(item).fold(handleError, (d) => Optional.some(separator$3(d)));\n                case 'cardmenuitem':\n                    return createCardMenuItem(item).fold(handleError, (d) => Optional.some(card({\n                        ...d,\n                        // Intercept action\n                        onAction: (api) => {\n                            d.onAction(api);\n                            onItemValueHandler(d.value, d.meta);\n                        }\n                    }, itemResponse, sharedBackstage, {\n                        itemBehaviours: tooltipBehaviour(d.meta, sharedBackstage, Optional.none()),\n                        cardText: {\n                            matchText,\n                            highlightOn\n                        }\n                    })));\n                case 'autocompleteitem':\n                default:\n                    return createAutocompleterItem(item).fold(handleError, (d) => Optional.some(autocomplete(d, matchText, renderText, 'normal', onItemValueHandler, itemResponse, sharedBackstage, renderIcons)));\n            }\n        }));\n    };\n    const createPartialMenu = (value, items, itemResponse, backstage, isHorizontalMenu, searchMode) => {\n        const hasIcons = menuHasIcons(items);\n        const alloyItems = cat(map$2(items, (item) => {\n            // Have to check each item for an icon, instead of as part of hasIcons above,\n            // else in horizontal menus, items with an icon but without text will display\n            // with neither\n            const itemHasIcon = (i) => isHorizontalMenu ? !has$2(i, 'text') : hasIcons;\n            const createItem = (i) => createMenuItemFromBridge(i, itemResponse, backstage, itemHasIcon(i), isHorizontalMenu);\n            if (item.type === 'nestedmenuitem' && item.getSubmenuItems().length <= 0) {\n                return createItem({ ...item, enabled: false });\n            }\n            else {\n                return createItem(item);\n            }\n        }));\n        // The menu layout is dependent upon our search mode.\n        const menuLayout = identifyMenuLayout(searchMode);\n        const createPartial = isHorizontalMenu ?\n            createHorizontalPartialMenuWithAlloyItems :\n            createPartialMenuWithAlloyItems;\n        return createPartial(value, hasIcons, alloyItems, 1, menuLayout);\n    };\n    const createTieredDataFrom = (partialMenu) => tieredMenu.singleData(partialMenu.value, partialMenu);\n    const createInlineMenuFrom = (partialMenu, columns, focusMode, presets) => {\n        const movement = deriveMenuMovement(columns, presets);\n        const menuMarkers = markers(presets);\n        return {\n            data: createTieredDataFrom({\n                ...partialMenu,\n                movement,\n                menuBehaviours: SimpleBehaviours.unnamedEvents(columns !== 'auto' ? [] : [\n                    runOnAttached((comp, _se) => {\n                        detectSize(comp, 4, menuMarkers.item).each(({ numColumns, numRows }) => {\n                            Keying.setGridSize(comp, numRows, numColumns);\n                        });\n                    })\n                ])\n            }),\n            menu: {\n                markers: markers(presets),\n                fakeFocus: focusMode === FocusMode.ContentFocus\n            }\n        };\n    };\n\n    const rangeToSimRange = (r) => SimRange.create(SugarElement.fromDom(r.startContainer), r.startOffset, SugarElement.fromDom(r.endContainer), r.endOffset);\n    const register$c = (editor, sharedBackstage) => {\n        const autocompleterId = generate$6('autocompleter');\n        const processingAction = Cell(false);\n        const activeState = Cell(false);\n        const activeRange = value$2();\n        const autocompleter = build$1(InlineView.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-autocompleter'],\n                attributes: {\n                    id: autocompleterId\n                }\n            },\n            components: [],\n            fireDismissalEventInstead: {},\n            inlineBehaviours: derive$1([\n                config('dismissAutocompleter', [\n                    run$1(dismissRequested(), () => cancelIfNecessary()),\n                    run$1(highlight$1(), (_, se) => {\n                        getOpt(se.event.target, 'id').each((id) => set$9(SugarElement.fromDom(editor.getBody()), 'aria-activedescendant', id));\n                    }),\n                ])\n            ]),\n            lazySink: sharedBackstage.getSink\n        }));\n        const isMenuOpen = () => InlineView.isOpen(autocompleter);\n        const isActive = activeState.get;\n        const hideIfNecessary = () => {\n            if (isMenuOpen()) {\n                InlineView.hide(autocompleter);\n                editor.dom.remove(autocompleterId, false);\n                const editorBody = SugarElement.fromDom(editor.getBody());\n                getOpt(editorBody, 'aria-owns')\n                    .filter((ariaOwnsAttr) => ariaOwnsAttr === autocompleterId)\n                    .each(() => {\n                    remove$8(editorBody, 'aria-owns');\n                    remove$8(editorBody, 'aria-activedescendant');\n                });\n            }\n        };\n        const getMenu = () => InlineView.getContent(autocompleter).bind((tmenu) => {\n            // The autocompleter menu will be the first child component of the tiered menu.\n            // Unfortunately a memento can't be used to do this lookup because the component\n            // id is changed while generating the tiered menu.\n            return get$i(tmenu.components(), 0);\n        });\n        const cancelIfNecessary = () => editor.execCommand('mceAutocompleterClose');\n        const getCombinedItems = (matches) => {\n            const columns = findMap(matches, (m) => Optional.from(m.columns)).getOr(1);\n            return bind$3(matches, (match) => {\n                const choices = match.items;\n                return createAutocompleteItems(choices, match.matchText, (itemValue, itemMeta) => {\n                    const autocompleterApi = {\n                        hide: () => cancelIfNecessary(),\n                        reload: (fetchOptions) => {\n                            hideIfNecessary();\n                            editor.execCommand('mceAutocompleterReload', false, { fetchOptions });\n                        }\n                    };\n                    // Asks the editor for a new active range that emits an event that updates\n                    // the activeRange state not ideal but trying to avoid direct method calls to the core.\n                    // We need to get a fresh range since when you hit enter the IME commits and the updates the DOM so we then need to rescan.\n                    editor.execCommand('mceAutocompleterRefreshActiveRange');\n                    activeRange.get().each((range) => {\n                        processingAction.set(true);\n                        match.onAction(autocompleterApi, range, itemValue, itemMeta);\n                        processingAction.set(false);\n                    });\n                }, columns, ItemResponse$1.BUBBLE_TO_SANDBOX, sharedBackstage, match.highlightOn);\n            });\n        };\n        const display = (lookupData, items) => {\n            // Display the autocompleter menu\n            const columns = findMap(lookupData, (ld) => Optional.from(ld.columns)).getOr(1);\n            InlineView.showMenuAt(autocompleter, {\n                anchor: {\n                    type: 'selection',\n                    getSelection: () => activeRange.get().map(rangeToSimRange),\n                    root: SugarElement.fromDom(editor.getBody()),\n                }\n            }, createInlineMenuFrom(createPartialMenuWithAlloyItems('autocompleter-value', true, items, columns, { menuType: 'normal' }), columns, FocusMode.ContentFocus, \n            // Use the constant.\n            'normal'));\n            getMenu().each(Highlighting.highlightFirst);\n        };\n        const updateDisplay = (lookupData) => {\n            const combinedItems = getCombinedItems(lookupData);\n            // Open the autocompleter if there are items to show\n            if (combinedItems.length > 0) {\n                display(lookupData, combinedItems);\n                set$9(SugarElement.fromDom(editor.getBody()), 'aria-owns', autocompleterId);\n                if (!editor.inline) {\n                    cloneAutocompleterToEditorDoc();\n                }\n            }\n            else {\n                hideIfNecessary();\n            }\n        };\n        const cloneAutocompleterToEditorDoc = () => {\n            if (editor.dom.get(autocompleterId)) {\n                editor.dom.remove(autocompleterId, false);\n            }\n            const docElm = editor.getDoc().documentElement;\n            const selection = editor.selection.getNode();\n            const newElm = deep(autocompleter.element);\n            setAll(newElm, {\n                border: '0',\n                clip: 'rect(0 0 0 0)',\n                height: '1px',\n                margin: '-1px',\n                overflow: 'hidden',\n                padding: '0',\n                position: 'absolute',\n                width: '1px',\n                top: `${selection.offsetTop}px`,\n                left: `${selection.offsetLeft}px`,\n            });\n            editor.dom.add(docElm, newElm.dom);\n            // Clean up positioning styles so that the \"hidden\" autocompleter is around the selection\n            descendant(newElm, '[role=\"menu\"]').each((child) => {\n                remove$6(child, 'position');\n                remove$6(child, 'max-height');\n            });\n        };\n        editor.on('AutocompleterStart', ({ lookupData }) => {\n            activeState.set(true);\n            processingAction.set(false);\n            updateDisplay(lookupData);\n        });\n        editor.on('AutocompleterUpdate', ({ lookupData }) => updateDisplay(lookupData));\n        editor.on('AutocompleterUpdateActiveRange', ({ range }) => activeRange.set(range));\n        editor.on('AutocompleterEnd', () => {\n            // Hide the menu and reset\n            hideIfNecessary();\n            activeState.set(false);\n            processingAction.set(false);\n            activeRange.clear();\n        });\n        const autocompleterUiApi = {\n            cancelIfNecessary,\n            isMenuOpen,\n            isActive,\n            isProcessingAction: processingAction.get,\n            getMenu\n        };\n        AutocompleterEditorEvents.setup(autocompleterUiApi, editor);\n    };\n    const Autocompleter = {\n        register: register$c\n    };\n\n    const renderBar = (spec, backstage) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-bar', 'tox-form__controls-h-stack']\n        },\n        components: map$2(spec.items, backstage.interpreter)\n    });\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.html.Entities');\n\n    const renderFormFieldWith = (pLabel, pField, extraClasses, extraBehaviours) => {\n        const spec = renderFormFieldSpecWith(pLabel, pField, extraClasses, extraBehaviours);\n        return FormField.sketch(spec);\n    };\n    const renderFormField = (pLabel, pField) => renderFormFieldWith(pLabel, pField, [], []);\n    const renderFormFieldSpecWith = (pLabel, pField, extraClasses, extraBehaviours) => ({\n        dom: renderFormFieldDomWith(extraClasses),\n        components: pLabel.toArray().concat([pField]),\n        fieldBehaviours: derive$1(extraBehaviours)\n    });\n    const renderFormFieldDom = () => renderFormFieldDomWith([]);\n    const renderFormFieldDomWith = (extraClasses) => ({\n        tag: 'div',\n        classes: ['tox-form__group'].concat(extraClasses)\n    });\n    const renderLabel$3 = (label, providersBackstage) => FormField.parts.label({\n        dom: {\n            tag: 'label',\n            classes: ['tox-label']\n        },\n        components: [\n            text$2(providersBackstage.translate(label))\n        ]\n    });\n\n    const formChangeEvent = generate$6('form-component-change');\n    const formInputEvent = generate$6('form-component-input');\n    const formCloseEvent = generate$6('form-close');\n    const formCancelEvent = generate$6('form-cancel');\n    const formActionEvent = generate$6('form-action');\n    const formSubmitEvent = generate$6('form-submit');\n    const formBlockEvent = generate$6('form-block');\n    const formUnblockEvent = generate$6('form-unblock');\n    const formTabChangeEvent = generate$6('form-tabchange');\n    const formResizeEvent = generate$6('form-resize');\n\n    const renderCollection = (spec, providersBackstage, initialData) => {\n        // DUPE with TextField.\n        const pLabel = spec.label.map((label) => renderLabel$3(label, providersBackstage));\n        const icons = providersBackstage.icons();\n        // TINY-10174: Icon string is either in icon pack or displayed directly\n        const getIcon = (icon) => { var _a; return (_a = icons[icon]) !== null && _a !== void 0 ? _a : icon; };\n        const runOnItem = (f) => (comp, se) => {\n            closest$3(se.event.target, '[data-collection-item-value]').each((target) => {\n                f(comp, se, target, get$g(target, 'data-collection-item-value'));\n            });\n        };\n        const setContents = (comp, items) => {\n            // Giving it a default `mode:design` context, these shouldn't run at all in mode:readonly\n            const disabled = providersBackstage.checkUiComponentContext('mode:design').shouldDisable || providersBackstage.isDisabled();\n            const disabledClass = disabled ? ' tox-collection__item--state-disabled' : '';\n            const htmlLines = map$2(items, (item) => {\n                const itemText = global$6.translate(item.text);\n                const textContent = spec.columns === 1 ? `<div class=\"tox-collection__item-label\">${itemText}</div>` : '';\n                const iconContent = `<div class=\"tox-collection__item-icon\">${getIcon(item.icon)}</div>`;\n                // Replacing the hyphens and underscores in collection items with spaces\n                // to ensure the screen readers pronounce the words correctly.\n                // This is only for aria purposes. Emoticon and Special Character names will still use _ and - for autocompletion.\n                const mapItemName = {\n                    '_': ' ',\n                    ' - ': ' ',\n                    '-': ' '\n                };\n                // Using aria-label here overrides the Apple description of emojis and special characters in Mac/ MS description in Windows.\n                // But if only the title attribute is used instead, the names are read out twice. i.e., the description followed by the item.text.\n                const ariaLabel = itemText.replace(/\\_| \\- |\\-/g, (match) => mapItemName[match]);\n                return `<div data-mce-tooltip=\"${ariaLabel}\" class=\"tox-collection__item${disabledClass}\" tabindex=\"-1\" data-collection-item-value=\"${global$4.encodeAllRaw(item.value)}\" aria-label=\"${ariaLabel}\">${iconContent}${textContent}</div>`;\n            });\n            const chunks = spec.columns !== 'auto' && spec.columns > 1 ? chunk$1(htmlLines, spec.columns) : [htmlLines];\n            const html = map$2(chunks, (ch) => `<div class=\"tox-collection__group\">${ch.join('')}</div>`);\n            set$8(comp.element, html.join(''));\n        };\n        const onClick = runOnItem((comp, se, tgt, itemValue) => {\n            se.stop();\n            if (!(providersBackstage.checkUiComponentContext('mode:design').shouldDisable || providersBackstage.isDisabled())) {\n                emitWith(comp, formActionEvent, {\n                    name: spec.name,\n                    value: itemValue\n                });\n            }\n        });\n        const collectionEvents = [\n            run$1(mouseover(), runOnItem((comp, se, tgt) => {\n                focus$4(tgt, true);\n            })),\n            run$1(click(), onClick),\n            run$1(tap(), onClick),\n            run$1(focusin(), runOnItem((comp, se, tgt) => {\n                descendant(comp.element, '.' + activeClass).each((currentActive) => {\n                    remove$3(currentActive, activeClass);\n                });\n                add$2(tgt, activeClass);\n            })),\n            run$1(focusout(), runOnItem((comp) => {\n                descendant(comp.element, '.' + activeClass).each((currentActive) => {\n                    remove$3(currentActive, activeClass);\n                    blur$1(currentActive);\n                });\n            })),\n            runOnExecute$1(runOnItem((comp, se, tgt, itemValue) => {\n                emitWith(comp, formActionEvent, {\n                    name: spec.name,\n                    value: itemValue\n                });\n            })),\n        ];\n        const iterCollectionItems = (comp, applyAttributes) => map$2(descendants(comp.element, '.tox-collection__item'), applyAttributes);\n        const pField = FormField.parts.field({\n            dom: {\n                tag: 'div',\n                // FIX: Read from columns\n                classes: ['tox-collection'].concat(spec.columns !== 1 ? ['tox-collection--grid'] : ['tox-collection--list'])\n            },\n            components: [],\n            factory: { sketch: identity },\n            behaviours: derive$1([\n                Disabling.config({\n                    disabled: () => providersBackstage.checkUiComponentContext(spec.context).shouldDisable,\n                    onDisabled: (comp) => {\n                        iterCollectionItems(comp, (childElm) => {\n                            add$2(childElm, 'tox-collection__item--state-disabled');\n                            set$9(childElm, 'aria-disabled', true);\n                        });\n                    },\n                    onEnabled: (comp) => {\n                        iterCollectionItems(comp, (childElm) => {\n                            remove$3(childElm, 'tox-collection__item--state-disabled');\n                            remove$8(childElm, 'aria-disabled');\n                        });\n                    }\n                }),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context)),\n                Replacing.config({}),\n                Tooltipping.config({\n                    ...providersBackstage.tooltips.getConfig({\n                        tooltipText: '',\n                        onShow: (comp) => {\n                            descendant(comp.element, '.' + activeClass + '[data-mce-tooltip]').each((current) => {\n                                getOpt(current, 'data-mce-tooltip').each((text) => {\n                                    Tooltipping.setComponents(comp, providersBackstage.tooltips.getComponents({ tooltipText: text }));\n                                });\n                            });\n                        }\n                    }),\n                    mode: 'children-keyboard-focus',\n                    anchor: (comp) => ({\n                        type: 'node',\n                        node: descendant(comp.element, '.' + activeClass).orThunk(() => first('.tox-collection__item')),\n                        root: comp.element,\n                        layouts: {\n                            onLtr: constant$1([south$2, north$2, southeast$2, northeast$2, southwest$2, northwest$2]),\n                            onRtl: constant$1([south$2, north$2, southeast$2, northeast$2, southwest$2, northwest$2])\n                        },\n                        bubble: nu$6(0, -2, {}),\n                    })\n                }),\n                Representing.config({\n                    store: {\n                        mode: 'memory',\n                        initialValue: initialData.getOr([])\n                    },\n                    onSetValue: (comp, items) => {\n                        setContents(comp, items);\n                        if (spec.columns === 'auto') {\n                            detectSize(comp, 5, 'tox-collection__item').each(({ numRows, numColumns }) => {\n                                Keying.setGridSize(comp, numRows, numColumns);\n                            });\n                        }\n                        emit(comp, formResizeEvent);\n                    }\n                }),\n                Tabstopping.config({}),\n                Keying.config(deriveCollectionMovement(spec.columns, 'normal')),\n                config('collection-events', collectionEvents)\n            ]),\n            eventOrder: {\n                [execute$5()]: ['disabling', 'alloy.base.behaviour', 'collection-events'],\n                [focusin()]: ['collection-events', 'tooltipping'],\n            }\n        });\n        const extraClasses = ['tox-form__group--collection'];\n        return renderFormFieldWith(pLabel, pField, extraClasses, []);\n    };\n\n    const renderPanelButton = (spec, sharedBackstage) => Dropdown.sketch({\n        dom: spec.dom,\n        components: spec.components,\n        toggleClass: 'mce-active',\n        dropdownBehaviours: derive$1([\n            DisablingConfigs.button(() => sharedBackstage.providers.isDisabled() || sharedBackstage.providers.checkUiComponentContext(spec.context).shouldDisable),\n            toggleOnReceive(() => sharedBackstage.providers.checkUiComponentContext(spec.context)),\n            Unselecting.config({}),\n            Tabstopping.config({})\n        ]),\n        layouts: spec.layouts,\n        sandboxClasses: ['tox-dialog__popups'],\n        lazySink: sharedBackstage.getSink,\n        fetch: (comp) => Future.nu((callback) => spec.fetch(callback)).map((items) => Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6('menu-value'), items, (value) => {\n            spec.onItemAction(comp, value);\n        }, spec.columns, spec.presets, ItemResponse$1.CLOSE_ON_EXECUTE, \n        // No colour is ever selected on opening\n        never, sharedBackstage.providers), {\n            movement: deriveMenuMovement(spec.columns, spec.presets)\n        })))),\n        parts: {\n            menu: part(false, 1, spec.presets)\n        }\n    });\n\n    const colorInputChangeEvent = generate$6('color-input-change');\n    const colorSwatchChangeEvent = generate$6('color-swatch-change');\n    const colorPickerCancelEvent = generate$6('color-picker-cancel');\n    const renderColorInput = (spec, sharedBackstage, colorInputBackstage, initialData) => {\n        const pField = FormField.parts.field({\n            factory: Input,\n            inputClasses: ['tox-textfield'],\n            data: initialData,\n            onSetValue: (c) => Invalidating.run(c).get(noop),\n            inputBehaviours: derive$1([\n                Disabling.config({\n                    disabled: () => sharedBackstage.providers.isDisabled() || sharedBackstage.providers.checkUiComponentContext(spec.context).shouldDisable\n                }),\n                toggleOnReceive(() => sharedBackstage.providers.checkUiComponentContext(spec.context)),\n                Tabstopping.config({}),\n                Invalidating.config({\n                    invalidClass: 'tox-textbox-field-invalid',\n                    getRoot: (comp) => parentElement(comp.element),\n                    notify: {\n                        onValid: (comp) => {\n                            // onValid should pass through the value here\n                            // We need a snapshot of the value validated.\n                            const val = Representing.getValue(comp);\n                            emitWith(comp, colorInputChangeEvent, {\n                                color: val\n                            });\n                        }\n                    },\n                    validator: {\n                        validateOnLoad: false,\n                        validate: (input) => {\n                            const inputValue = Representing.getValue(input);\n                            // Consider empty strings valid colours\n                            if (inputValue.length === 0) {\n                                return Future.pure(Result.value(true));\n                            }\n                            else {\n                                const span = SugarElement.fromTag('span');\n                                set$7(span, 'background-color', inputValue);\n                                const res = getRaw(span, 'background-color').fold(\n                                // TODO: Work out what we want to do here.\n                                () => Result.error('blah'), (_) => Result.value(inputValue));\n                                return Future.pure(res);\n                            }\n                        }\n                    }\n                })\n            ]),\n            selectOnFocus: false\n        });\n        const pLabel = spec.label.map((label) => renderLabel$3(label, sharedBackstage.providers));\n        const emitSwatchChange = (colorBit, value) => {\n            emitWith(colorBit, colorSwatchChangeEvent, {\n                value\n            });\n        };\n        const onItemAction = (comp, value) => {\n            memColorButton.getOpt(comp).each((colorBit) => {\n                if (value === 'custom') {\n                    colorInputBackstage.colorPicker((valueOpt) => {\n                        valueOpt.fold(() => emit(colorBit, colorPickerCancelEvent), (value) => {\n                            emitSwatchChange(colorBit, value);\n                            addColor(spec.storageKey, value);\n                        });\n                    }, '#ffffff');\n                }\n                else if (value === 'remove') {\n                    emitSwatchChange(colorBit, '');\n                }\n                else {\n                    emitSwatchChange(colorBit, value);\n                }\n            });\n        };\n        const memColorButton = record(renderPanelButton({\n            dom: {\n                tag: 'span',\n                attributes: {\n                    'aria-label': sharedBackstage.providers.translate('Color swatch')\n                }\n            },\n            layouts: {\n                onRtl: () => [southwest$2, southeast$2, south$2],\n                onLtr: () => [southeast$2, southwest$2, south$2]\n            },\n            components: [],\n            fetch: getFetch$1(colorInputBackstage.getColors(spec.storageKey), spec.storageKey, colorInputBackstage.hasCustomColors()),\n            columns: colorInputBackstage.getColorCols(spec.storageKey),\n            presets: 'color',\n            onItemAction,\n            context: spec.context\n        }, sharedBackstage));\n        return FormField.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-form__group']\n            },\n            components: pLabel.toArray().concat([\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-color-input']\n                    },\n                    components: [\n                        pField,\n                        memColorButton.asSpec()\n                    ]\n                }\n            ]),\n            fieldBehaviours: derive$1([\n                config('form-field-events', [\n                    run$1(colorInputChangeEvent, (comp, se) => {\n                        memColorButton.getOpt(comp).each((colorButton) => {\n                            set$7(colorButton.element, 'background-color', se.event.color);\n                        });\n                        emitWith(comp, formChangeEvent, { name: spec.name });\n                    }),\n                    run$1(colorSwatchChangeEvent, (comp, se) => {\n                        FormField.getField(comp).each((field) => {\n                            Representing.setValue(field, se.event.value);\n                            // Focus the field now that we've set its value\n                            Composing.getCurrent(comp).each(Focusing.focus);\n                        });\n                    }),\n                    run$1(colorPickerCancelEvent, (comp, _se) => {\n                        FormField.getField(comp).each((_field) => {\n                            Composing.getCurrent(comp).each(Focusing.focus);\n                        });\n                    })\n                ])\n            ])\n        });\n    };\n\n    // TODO: Move this to alloy if the concept works out\n    const self = () => Composing.config({\n        find: Optional.some\n    });\n    const memento$1 = (mem) => Composing.config({\n        find: mem.getOpt\n    });\n    const childAt = (index) => Composing.config({\n        find: (comp) => child$2(comp.element, index)\n            .bind((element) => comp.getSystem().getByDom(element).toOptional())\n    });\n    const ComposingConfigs = {\n        self,\n        memento: memento$1,\n        childAt\n    };\n\n    const processors = objOf([\n        defaulted('preprocess', identity),\n        defaulted('postprocess', identity)\n    ]);\n    const memento = (mem, rawProcessors) => {\n        const ps = asRawOrDie$1('RepresentingConfigs.memento processors', processors, rawProcessors);\n        return Representing.config({\n            store: {\n                mode: 'manual',\n                getValue: (comp) => {\n                    const other = mem.get(comp);\n                    const rawValue = Representing.getValue(other);\n                    return ps.postprocess(rawValue);\n                },\n                setValue: (comp, rawValue) => {\n                    const newValue = ps.preprocess(rawValue);\n                    const other = mem.get(comp);\n                    Representing.setValue(other, newValue);\n                }\n            }\n        });\n    };\n    const withComp = (optInitialValue, getter, setter) => Representing.config({\n        store: {\n            mode: 'manual',\n            ...optInitialValue.map((initialValue) => ({ initialValue })).getOr({}),\n            getValue: getter,\n            setValue: setter\n        }\n    });\n    const withElement = (initialValue, getter, setter) => withComp(initialValue, (c) => getter(c.element), (c, v) => setter(c.element, v));\n    const domHtml = (optInitialValue) => withElement(optInitialValue, get$f, set$8);\n    const memory = (initialValue) => Representing.config({\n        store: {\n            mode: 'memory',\n            initialValue\n        }\n    });\n\n    const fieldsUpdate = generate$6('rgb-hex-update');\n    const sliderUpdate = generate$6('slider-update');\n    const paletteUpdate = generate$6('palette-update');\n\n    const sliderFactory = (translate, getClass) => {\n        const spectrum = Slider.parts.spectrum({\n            dom: {\n                tag: 'div',\n                classes: [getClass('hue-slider-spectrum')],\n                attributes: {\n                    role: 'presentation'\n                }\n            }\n        });\n        const thumb = Slider.parts.thumb({\n            dom: {\n                tag: 'div',\n                classes: [getClass('hue-slider-thumb')],\n                attributes: {\n                    role: 'presentation'\n                }\n            }\n        });\n        return Slider.sketch({\n            dom: {\n                tag: 'div',\n                classes: [getClass('hue-slider')],\n                attributes: {\n                    'role': 'slider',\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 360,\n                    'aria-valuenow': 120,\n                }\n            },\n            rounded: false,\n            model: {\n                mode: 'y',\n                getInitialValue: constant$1(0)\n            },\n            components: [\n                spectrum,\n                thumb\n            ],\n            sliderBehaviours: derive$1([\n                Focusing.config({})\n            ]),\n            onChange: (slider, _thumb, value) => {\n                set$9(slider.element, 'aria-valuenow', Math.floor(360 - (value * 3.6)));\n                emitWith(slider, sliderUpdate, {\n                    value\n                });\n            }\n        });\n    };\n\n    const validInput = generate$6('valid-input');\n    const invalidInput = generate$6('invalid-input');\n    const validatingInput = generate$6('validating-input');\n    const translatePrefix = 'colorcustom.rgb.';\n    const uninitiatedTooltipApi = {\n        isEnabled: always,\n        setEnabled: noop,\n        immediatelyShow: noop,\n        immediatelyHide: noop,\n    };\n    const rgbFormFactory = (translate, getClass, onValidHexx, onInvalidHexx, tooltipGetConfig, makeIcon) => {\n        const setTooltipEnabled = (enabled, tooltipApi) => {\n            const api = tooltipApi.get();\n            if (enabled === api.isEnabled()) {\n                return;\n            }\n            api.setEnabled(enabled);\n            if (enabled) {\n                api.immediatelyShow();\n            }\n            else {\n                api.immediatelyHide();\n            }\n        };\n        const invalidation = (label, isValid, tooltipApi) => Invalidating.config({\n            invalidClass: getClass('invalid'),\n            notify: {\n                onValidate: (comp) => {\n                    emitWith(comp, validatingInput, {\n                        type: label\n                    });\n                },\n                onValid: (comp) => {\n                    setTooltipEnabled(false, tooltipApi);\n                    emitWith(comp, validInput, {\n                        type: label,\n                        value: Representing.getValue(comp)\n                    });\n                },\n                onInvalid: (comp) => {\n                    setTooltipEnabled(true, tooltipApi);\n                    emitWith(comp, invalidInput, {\n                        type: label,\n                        value: Representing.getValue(comp)\n                    });\n                }\n            },\n            validator: {\n                validate: (comp) => {\n                    const value = Representing.getValue(comp);\n                    const res = isValid(value) ? Result.value(true) : Result.error(translate('aria.input.invalid'));\n                    return Future.pure(res);\n                },\n                validateOnLoad: false\n            }\n        });\n        const renderTextField = (isValid, name, label, description, data) => {\n            const tooltipApi = Cell(uninitiatedTooltipApi);\n            const helptext = translate(translatePrefix + 'range');\n            const pLabel = FormField.parts.label({\n                dom: { tag: 'label' },\n                components: [text$2(label)]\n            });\n            const pField = FormField.parts.field({\n                data,\n                factory: Input,\n                inputAttributes: {\n                    'type': 'text',\n                    'aria-label': description,\n                    ...name === 'hex' ? { 'aria-live': 'polite' } : {}\n                },\n                inputClasses: [getClass('textfield')],\n                // Have basic invalidating and tabstopping behaviour.\n                inputBehaviours: derive$1([\n                    invalidation(name, isValid, tooltipApi),\n                    Tabstopping.config({}),\n                    Tooltipping.config({\n                        ...tooltipGetConfig({\n                            tooltipText: '',\n                            onSetup: (comp) => {\n                                tooltipApi.set({\n                                    isEnabled: () => {\n                                        return Tooltipping.isEnabled(comp);\n                                    },\n                                    setEnabled: (enabled) => {\n                                        return Tooltipping.setEnabled(comp, enabled);\n                                    },\n                                    immediatelyShow: () => {\n                                        return Tooltipping.immediateOpenClose(comp, true);\n                                    },\n                                    immediatelyHide: () => {\n                                        return Tooltipping.immediateOpenClose(comp, false);\n                                    },\n                                });\n                                Tooltipping.setEnabled(comp, false);\n                            },\n                            onShow: (component, _tooltip) => {\n                                Tooltipping.setComponents(component, [\n                                    {\n                                        dom: {\n                                            tag: 'p',\n                                            classes: [\n                                                getClass('rgb-warning-note')\n                                            ]\n                                        },\n                                        components: [text$2(translate(name === 'hex' ? 'colorcustom.rgb.invalidHex' : 'colorcustom.rgb.invalid'))]\n                                    }\n                                ]);\n                            },\n                        })\n                    })\n                ]),\n                // If it was invalid, and the value was set, run validation against it.\n                onSetValue: (input) => {\n                    if (Invalidating.isInvalid(input)) {\n                        const run = Invalidating.run(input);\n                        run.get(noop);\n                    }\n                }\n            });\n            const errorId = generate$6('aria-invalid');\n            const memInvalidIcon = record(makeIcon('invalid', Optional.some(errorId), 'warning'));\n            const memStatus = record({\n                dom: {\n                    tag: 'div',\n                    classes: [getClass('invalid-icon')]\n                },\n                components: [\n                    memInvalidIcon.asSpec()\n                ]\n            });\n            const comps = [pLabel, pField, memStatus.asSpec()];\n            const concats = name !== 'hex' ? [FormField.parts['aria-descriptor']({\n                    text: helptext\n                })] : [];\n            const components = comps.concat(concats);\n            return {\n                dom: {\n                    tag: 'div',\n                    attributes: {\n                        role: 'presentation'\n                    },\n                    classes: [\n                        getClass('rgb-container'),\n                    ]\n                },\n                components\n            };\n        };\n        const copyRgbToHex = (form, rgba) => {\n            const hex = fromRgba(rgba);\n            Form.getField(form, 'hex').each((hexField) => {\n                // Not amazing, but it turns out that if we have an invalid RGB field, and no hex code\n                // and then type in a valid three digit hex code, the RGB field will be overriden, then validate and then set\n                // the hex field to be the six digit version of that same three digit hex code. This is incorrect.\n                if (!Focusing.isFocused(hexField)) {\n                    Representing.setValue(form, {\n                        hex: hex.value\n                    });\n                }\n            });\n            return hex;\n        };\n        const copyRgbToForm = (form, rgb) => {\n            const red = rgb.red;\n            const green = rgb.green;\n            const blue = rgb.blue;\n            Representing.setValue(form, { red, green, blue });\n        };\n        const memPreview = record({\n            dom: {\n                tag: 'div',\n                classes: [getClass('rgba-preview')],\n                styles: {\n                    'background-color': 'white'\n                },\n                attributes: {\n                    role: 'presentation'\n                }\n            }\n        });\n        const updatePreview = (anyInSystem, hex) => {\n            memPreview.getOpt(anyInSystem).each((preview) => {\n                set$7(preview.element, 'background-color', '#' + hex.value);\n            });\n        };\n        const factory = () => {\n            const state = {\n                red: Cell(Optional.some(255)),\n                green: Cell(Optional.some(255)),\n                blue: Cell(Optional.some(255)),\n                hex: Cell(Optional.some('ffffff'))\n            };\n            const copyHexToRgb = (form, hex) => {\n                const rgb = fromHex(hex);\n                copyRgbToForm(form, rgb);\n                setValueRgb(rgb);\n            };\n            const get = (prop) => state[prop].get();\n            const set = (prop, value) => {\n                state[prop].set(value);\n            };\n            const getValueRgb = () => get('red').bind((red) => get('green').bind((green) => get('blue').map((blue) => rgbaColour(red, green, blue, 1))));\n            // TODO: Find way to use this for palette and slider updates\n            const setValueRgb = (rgb) => {\n                const red = rgb.red;\n                const green = rgb.green;\n                const blue = rgb.blue;\n                set('red', Optional.some(red));\n                set('green', Optional.some(green));\n                set('blue', Optional.some(blue));\n            };\n            const onInvalidInput = (form, simulatedEvent) => {\n                const data = simulatedEvent.event;\n                if (data.type !== 'hex') {\n                    set(data.type, Optional.none());\n                }\n                else {\n                    onInvalidHexx(form);\n                }\n            };\n            const onValidHex = (form, value) => {\n                onValidHexx(form);\n                const hex = hexColour(value);\n                set('hex', Optional.some(hex.value));\n                const rgb = fromHex(hex);\n                copyRgbToForm(form, rgb);\n                setValueRgb(rgb);\n                emitWith(form, fieldsUpdate, {\n                    hex\n                });\n                updatePreview(form, hex);\n            };\n            const onValidRgb = (form, prop, value) => {\n                const val = parseInt(value, 10);\n                set(prop, Optional.some(val));\n                getValueRgb().each((rgb) => {\n                    const hex = copyRgbToHex(form, rgb);\n                    emitWith(form, fieldsUpdate, {\n                        hex\n                    });\n                    updatePreview(form, hex);\n                });\n            };\n            const isHexInputEvent = (data) => data.type === 'hex';\n            const onValidInput = (form, simulatedEvent) => {\n                const data = simulatedEvent.event;\n                if (isHexInputEvent(data)) {\n                    onValidHex(form, data.value);\n                }\n                else {\n                    onValidRgb(form, data.type, data.value);\n                }\n            };\n            const formPartStrings = (key) => ({\n                label: translate(translatePrefix + key + '.label'),\n                description: translate(translatePrefix + key + '.description')\n            });\n            const redStrings = formPartStrings('red');\n            const greenStrings = formPartStrings('green');\n            const blueStrings = formPartStrings('blue');\n            const hexStrings = formPartStrings('hex');\n            // TODO: Provide a nice way of adding APIs to existing sketchers\n            return deepMerge(Form.sketch((parts) => ({\n                dom: {\n                    tag: 'form',\n                    classes: [getClass('rgb-form')],\n                    attributes: { 'aria-label': translate('aria.color.picker') }\n                },\n                components: [\n                    parts.field('red', FormField.sketch(renderTextField(isRgbaComponent, 'red', redStrings.label, redStrings.description, 255))),\n                    parts.field('green', FormField.sketch(renderTextField(isRgbaComponent, 'green', greenStrings.label, greenStrings.description, 255))),\n                    parts.field('blue', FormField.sketch(renderTextField(isRgbaComponent, 'blue', blueStrings.label, blueStrings.description, 255))),\n                    parts.field('hex', FormField.sketch(renderTextField(isHexString, 'hex', hexStrings.label, hexStrings.description, 'ffffff'))),\n                    memPreview.asSpec()\n                ],\n                formBehaviours: derive$1([\n                    Invalidating.config({\n                        invalidClass: getClass('form-invalid')\n                    }),\n                    config('rgb-form-events', [\n                        run$1(validInput, onValidInput),\n                        run$1(invalidInput, onInvalidInput),\n                        run$1(validatingInput, onInvalidInput)\n                    ])\n                ])\n            })), {\n                apis: {\n                    updateHex: (form, hex) => {\n                        Representing.setValue(form, {\n                            hex: hex.value\n                        });\n                        copyHexToRgb(form, hex);\n                        updatePreview(form, hex);\n                    }\n                }\n            });\n        };\n        const rgbFormSketcher = single({\n            factory,\n            name: 'RgbForm',\n            configFields: [],\n            apis: {\n                updateHex: (apis, form, hex) => {\n                    apis.updateHex(form, hex);\n                }\n            },\n            extraApis: {}\n        });\n        return rgbFormSketcher;\n    };\n\n    const paletteFactory = (translate, getClass) => {\n        const spectrumPart = Slider.parts.spectrum({\n            dom: {\n                tag: 'canvas',\n                attributes: {\n                    role: 'presentation'\n                },\n                classes: [getClass('sv-palette-spectrum')]\n            }\n        });\n        const thumbPart = Slider.parts.thumb({\n            dom: {\n                tag: 'div',\n                attributes: {\n                    role: 'presentation'\n                },\n                classes: [getClass('sv-palette-thumb')],\n                innerHtml: `<div class=${getClass('sv-palette-inner-thumb')} role=\"presentation\"></div>`\n            }\n        });\n        const setColour = (canvas, rgba) => {\n            const { width, height } = canvas;\n            const ctx = canvas.getContext('2d');\n            if (ctx === null) {\n                return;\n            }\n            ctx.fillStyle = rgba;\n            ctx.fillRect(0, 0, width, height);\n            const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n            grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n            grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n            ctx.fillStyle = grdWhite;\n            ctx.fillRect(0, 0, width, height);\n            const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n            grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n            grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n            ctx.fillStyle = grdBlack;\n            ctx.fillRect(0, 0, width, height);\n        };\n        const setPaletteHue = (slider, hue) => {\n            const canvas = slider.components()[0].element.dom;\n            const hsv = hsvColour(hue, 100, 100);\n            const rgba = fromHsv(hsv);\n            setColour(canvas, toString(rgba));\n        };\n        const setPaletteThumb = (slider, hex) => {\n            const hsv = fromRgb(fromHex(hex));\n            Slider.setValue(slider, { x: hsv.saturation, y: 100 - hsv.value });\n            set$9(slider.element, 'aria-valuetext', translate(['Saturation {0}%, Brightness {1}%', hsv.saturation, hsv.value]));\n        };\n        const factory = (_detail) => {\n            const getInitialValue = constant$1({\n                x: 0,\n                y: 0\n            });\n            const onChange = (slider, _thumb, value) => {\n                if (!isNumber(value)) {\n                    set$9(slider.element, 'aria-valuetext', translate(['Saturation {0}%, Brightness {1}%', Math.floor(value.x), Math.floor(100 - value.y)]));\n                }\n                emitWith(slider, paletteUpdate, {\n                    value\n                });\n            };\n            const onInit = (_slider, _thumb, spectrum, _value) => {\n                // Maybe make this initial value configurable?\n                setColour(spectrum.element.dom, toString(red));\n            };\n            const sliderBehaviours = derive$1([\n                Composing.config({\n                    find: Optional.some\n                }),\n                Focusing.config({})\n            ]);\n            return Slider.sketch({\n                dom: {\n                    tag: 'div',\n                    attributes: {\n                        'role': 'slider',\n                        'aria-valuetext': translate(['Saturation {0}%, Brightness {1}%', 0, 0])\n                    },\n                    classes: [getClass('sv-palette')]\n                },\n                model: {\n                    mode: 'xy',\n                    getInitialValue,\n                },\n                rounded: false,\n                components: [\n                    spectrumPart,\n                    thumbPart\n                ],\n                onChange,\n                onInit,\n                sliderBehaviours\n            });\n        };\n        const saturationBrightnessPaletteSketcher = single({\n            factory,\n            name: 'SaturationBrightnessPalette',\n            configFields: [],\n            apis: {\n                setHue: (_apis, slider, hue) => {\n                    setPaletteHue(slider, hue);\n                },\n                setThumb: (_apis, slider, hex) => {\n                    setPaletteThumb(slider, hex);\n                }\n            },\n            extraApis: {}\n        });\n        return saturationBrightnessPaletteSketcher;\n    };\n\n    const makeFactory = (translate, getClass, tooltipConfig, makeIcon) => {\n        const factory = (detail) => {\n            const rgbForm = rgbFormFactory(translate, getClass, detail.onValidHex, detail.onInvalidHex, tooltipConfig, makeIcon);\n            const sbPalette = paletteFactory(translate, getClass);\n            const hueSliderToDegrees = (hue) => (100 - hue) / 100 * 360;\n            const hueDegreesToSlider = (hue) => 100 - (hue / 360) * 100;\n            const state = {\n                paletteRgba: Cell(red),\n                paletteHue: Cell(0)\n            };\n            const memSlider = record(sliderFactory(translate, getClass));\n            const memPalette = record(sbPalette.sketch({}));\n            const memRgb = record(rgbForm.sketch({}));\n            const updatePalette = (anyInSystem, _hex, hue) => {\n                memPalette.getOpt(anyInSystem).each((palette) => {\n                    sbPalette.setHue(palette, hue);\n                });\n            };\n            const updateFields = (anyInSystem, hex) => {\n                memRgb.getOpt(anyInSystem).each((form) => {\n                    rgbForm.updateHex(form, hex);\n                });\n            };\n            const updateSlider = (anyInSystem, _hex, hue) => {\n                memSlider.getOpt(anyInSystem).each((slider) => {\n                    Slider.setValue(slider, hueDegreesToSlider(hue));\n                });\n            };\n            const updatePaletteThumb = (anyInSystem, hex) => {\n                memPalette.getOpt(anyInSystem).each((palette) => {\n                    sbPalette.setThumb(palette, hex);\n                });\n            };\n            const updateState = (hex, hue) => {\n                const rgba = fromHex(hex);\n                state.paletteRgba.set(rgba);\n                state.paletteHue.set(hue);\n            };\n            const runUpdates = (anyInSystem, hex, hue, updates) => {\n                updateState(hex, hue);\n                each$1(updates, (update) => {\n                    update(anyInSystem, hex, hue);\n                });\n            };\n            const onPaletteUpdate = () => {\n                const updates = [updateFields];\n                return (form, simulatedEvent) => {\n                    const value = simulatedEvent.event.value;\n                    const oldHue = state.paletteHue.get();\n                    const newHsv = hsvColour(oldHue, value.x, (100 - value.y));\n                    const newHex = hsvToHex(newHsv);\n                    runUpdates(form, newHex, oldHue, updates);\n                };\n            };\n            const onSliderUpdate = () => {\n                const updates = [updatePalette, updateFields];\n                return (form, simulatedEvent) => {\n                    const hue = hueSliderToDegrees(simulatedEvent.event.value);\n                    const oldRgb = state.paletteRgba.get();\n                    const oldHsv = fromRgb(oldRgb);\n                    const newHsv = hsvColour(hue, oldHsv.saturation, oldHsv.value);\n                    const newHex = hsvToHex(newHsv);\n                    runUpdates(form, newHex, hue, updates);\n                };\n            };\n            const onFieldsUpdate = () => {\n                const updates = [updatePalette, updateSlider, updatePaletteThumb];\n                return (form, simulatedEvent) => {\n                    const hex = simulatedEvent.event.hex;\n                    const hsv = hexToHsv(hex);\n                    runUpdates(form, hex, hsv.hue, updates);\n                };\n            };\n            return {\n                uid: detail.uid,\n                dom: detail.dom,\n                components: [\n                    memPalette.asSpec(),\n                    memSlider.asSpec(),\n                    memRgb.asSpec()\n                ],\n                behaviours: derive$1([\n                    config('colour-picker-events', [\n                        run$1(fieldsUpdate, onFieldsUpdate()),\n                        run$1(paletteUpdate, onPaletteUpdate()),\n                        run$1(sliderUpdate, onSliderUpdate())\n                    ]),\n                    Composing.config({\n                        find: (comp) => memRgb.getOpt(comp)\n                    }),\n                    Keying.config({\n                        mode: 'acyclic'\n                    })\n                ])\n            };\n        };\n        const colourPickerSketcher = single({\n            name: 'ColourPicker',\n            configFields: [\n                required$1('dom'),\n                defaulted('onValidHex', noop),\n                defaulted('onInvalidHex', noop)\n            ],\n            factory\n        });\n        return colourPickerSketcher;\n    };\n\n    const english = {\n        'colorcustom.rgb.red.label': 'R',\n        'colorcustom.rgb.red.description': 'Red channel',\n        'colorcustom.rgb.green.label': 'G',\n        'colorcustom.rgb.green.description': 'Green channel',\n        'colorcustom.rgb.blue.label': 'B',\n        'colorcustom.rgb.blue.description': 'Blue channel',\n        'colorcustom.rgb.hex.label': '#',\n        'colorcustom.rgb.hex.description': 'Hex color code',\n        'colorcustom.rgb.range': 'Range 0 to 255',\n        'colorcustom.rgb.invalid': 'Numbers only, 0 to 255',\n        'colorcustom.rgb.invalidHex': 'Hexadecimal only, 000000 to FFFFFF',\n        'aria.color.picker': 'Color Picker',\n        'aria.input.invalid': 'Invalid input'\n    };\n    const translate = (providerBackstage) => (key) => {\n        if (isString(key)) {\n            return providerBackstage.translate(english[key]);\n        }\n        else {\n            return providerBackstage.translate(key);\n        }\n    };\n    const renderColorPicker = (_spec, providerBackstage, initialData) => {\n        const getClass = (key) => 'tox-' + key;\n        const renderIcon = (name, errId, icon = name, label = name) => render$4(icon, {\n            tag: 'div',\n            classes: ['tox-icon', 'tox-control-wrap__status-icon-' + name],\n            attributes: {\n                'title': providerBackstage.translate(label),\n                'aria-live': 'polite',\n                ...errId.fold(() => ({}), (id) => ({ id }))\n            }\n        }, providerBackstage.icons);\n        const colourPickerFactory = makeFactory(translate(providerBackstage), getClass, providerBackstage.tooltips.getConfig, renderIcon);\n        const onValidHex = (form) => {\n            emitWith(form, formActionEvent, { name: 'hex-valid', value: true });\n        };\n        const onInvalidHex = (form) => {\n            emitWith(form, formActionEvent, { name: 'hex-valid', value: false });\n        };\n        const memPicker = record(colourPickerFactory.sketch({\n            dom: {\n                tag: 'div',\n                classes: [getClass('color-picker-container')],\n                attributes: {\n                    role: 'presentation'\n                }\n            },\n            onValidHex,\n            onInvalidHex\n        }));\n        return {\n            dom: {\n                tag: 'div'\n            },\n            components: [\n                memPicker.asSpec()\n            ],\n            behaviours: derive$1([\n                // We'll allow invalid values\n                withComp(initialData, (comp) => {\n                    const picker = memPicker.get(comp);\n                    const optRgbForm = Composing.getCurrent(picker);\n                    const optHex = optRgbForm.bind((rgbForm) => {\n                        const formValues = Representing.getValue(rgbForm);\n                        return formValues.hex;\n                    });\n                    return optHex.map((hex) => '#' + removeLeading(hex, '#')).getOr('');\n                }, (comp, newValue) => {\n                    const pattern = /^#([a-fA-F0-9]{3}(?:[a-fA-F0-9]{3})?)/;\n                    const valOpt = Optional.from(pattern.exec(newValue)).bind((matches) => get$i(matches, 1));\n                    const picker = memPicker.get(comp);\n                    const optRgbForm = Composing.getCurrent(picker);\n                    optRgbForm.fold(() => {\n                        // eslint-disable-next-line no-console\n                        console.log('Can not find form');\n                    }, (rgbForm) => {\n                        Representing.setValue(rgbForm, {\n                            hex: valOpt.getOr('')\n                        });\n                        // So not the way to do this.\n                        Form.getField(rgbForm, 'hex').each((hexField) => {\n                            emit(hexField, input());\n                        });\n                    });\n                }),\n                ComposingConfigs.self()\n            ])\n        };\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Resource');\n\n    const isOldCustomEditor = (spec) => has$2(spec, 'init');\n    const renderCustomEditor = (spec) => {\n        const editorApi = value$2();\n        const memReplaced = record({\n            dom: {\n                tag: spec.tag\n            }\n        });\n        const initialValue = value$2();\n        const focusBehaviour = !isOldCustomEditor(spec) && spec.onFocus.isSome() ? [\n            Focusing.config({\n                onFocus: (comp) => {\n                    spec.onFocus.each((onFocusFn) => {\n                        onFocusFn(comp.element.dom);\n                    });\n                }\n            }),\n            Tabstopping.config({})\n        ] : [];\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-custom-editor']\n            },\n            behaviours: derive$1([\n                config('custom-editor-events', [\n                    runOnAttached((component) => {\n                        memReplaced.getOpt(component).each((ta) => {\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                            (isOldCustomEditor(spec)\n                                ? spec.init(ta.element.dom)\n                                : global$3.load(spec.scriptId, spec.scriptUrl).then((init) => init(ta.element.dom, spec.settings))).then((ea) => {\n                                initialValue.on((cvalue) => {\n                                    ea.setValue(cvalue);\n                                });\n                                initialValue.clear();\n                                editorApi.set(ea);\n                            });\n                        });\n                    })\n                ]),\n                withComp(Optional.none(), () => editorApi.get().fold(() => initialValue.get().getOr(''), (ed) => ed.getValue()), (_component, value) => {\n                    editorApi.get().fold(() => initialValue.set(value), (ed) => ed.setValue(value));\n                }),\n                ComposingConfigs.self()\n            ].concat(focusBehaviour)),\n            components: [memReplaced.asSpec()]\n        };\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const browseFilesEvent = generate$6('browse.files.event');\n    const filterByExtension = (files, providersBackstage) => {\n        const allowedImageFileTypes = global$2.explode(providersBackstage.getOption('images_file_types'));\n        const isFileInAllowedTypes = (file) => exists(allowedImageFileTypes, (type) => endsWith(file.name.toLowerCase(), `.${type.toLowerCase()}`));\n        return filter$2(from(files), isFileInAllowedTypes);\n    };\n    const renderDropZone = (spec, providersBackstage, initialData) => {\n        // TODO: Consider moving to alloy\n        const stopper = (_, se) => {\n            se.stop();\n        };\n        // TODO: Consider moving to alloy\n        const sequence = (actions) => (comp, se) => {\n            each$1(actions, (a) => {\n                a(comp, se);\n            });\n        };\n        const onDrop = (comp, se) => {\n            var _a;\n            if (!Disabling.isDisabled(comp)) {\n                const transferEvent = se.event.raw;\n                emitWith(comp, browseFilesEvent, { files: (_a = transferEvent.dataTransfer) === null || _a === void 0 ? void 0 : _a.files });\n            }\n        };\n        const onSelect = (component, simulatedEvent) => {\n            const input = simulatedEvent.event.raw.target;\n            emitWith(component, browseFilesEvent, { files: input.files });\n        };\n        const handleFiles = (component, files) => {\n            if (files) {\n                Representing.setValue(component, filterByExtension(files, providersBackstage));\n                emitWith(component, formChangeEvent, { name: spec.name });\n            }\n        };\n        const memInput = record({\n            dom: {\n                tag: 'input',\n                attributes: {\n                    type: 'file',\n                    accept: 'image/*'\n                },\n                styles: {\n                    display: 'none'\n                }\n            },\n            behaviours: derive$1([\n                config('input-file-events', [\n                    cutter(click()),\n                    cutter(tap())\n                ])\n            ])\n        });\n        const pLabel = spec.label.map((label) => renderLabel$3(label, providersBackstage));\n        const pField = FormField.parts.field({\n            factory: Button,\n            dom: {\n                tag: 'button',\n                styles: {\n                    position: 'relative'\n                },\n                classes: ['tox-button', 'tox-button--secondary']\n            },\n            components: [\n                text$2(providersBackstage.translate('Browse for an image')),\n                memInput.asSpec()\n            ],\n            action: (comp) => {\n                const inputComp = memInput.get(comp);\n                inputComp.element.dom.click();\n            },\n            buttonBehaviours: derive$1([\n                ComposingConfigs.self(),\n                memory(initialData.getOr([])),\n                Tabstopping.config({}),\n                DisablingConfigs.button(() => providersBackstage.checkUiComponentContext(spec.context).shouldDisable),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context))\n            ])\n        });\n        const wrapper = {\n            dom: {\n                tag: 'div',\n                classes: ['tox-dropzone-container']\n            },\n            behaviours: derive$1([\n                Disabling.config({\n                    disabled: () => providersBackstage.checkUiComponentContext(spec.context).shouldDisable\n                }),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context)),\n                Toggling.config({\n                    toggleClass: 'dragenter',\n                    toggleOnExecute: false\n                }),\n                config('dropzone-events', [\n                    run$1('dragenter', sequence([stopper, Toggling.toggle])),\n                    run$1('dragleave', sequence([stopper, Toggling.toggle])),\n                    run$1('dragover', stopper),\n                    run$1('drop', sequence([stopper, onDrop])),\n                    run$1(change(), onSelect)\n                ])\n            ]),\n            components: [\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-dropzone'],\n                        styles: {}\n                    },\n                    components: [\n                        {\n                            dom: {\n                                tag: 'p'\n                            },\n                            components: [\n                                text$2(providersBackstage.translate('Drop an image here'))\n                            ]\n                        },\n                        pField\n                    ]\n                }\n            ]\n        };\n        return renderFormFieldWith(pLabel, wrapper, ['tox-form__group--stretched'], [config('handle-files', [\n                run$1(browseFilesEvent, (comp, se) => {\n                    FormField.getField(comp).each((field) => {\n                        handleFiles(field, se.event.files);\n                    });\n                })\n            ])]);\n    };\n\n    const renderGrid = (spec, backstage) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-form__grid', `tox-form__grid--${spec.columns}col`]\n        },\n        components: map$2(spec.items, backstage.interpreter)\n    });\n\n    const beforeObject = generate$6('alloy-fake-before-tabstop');\n    const afterObject = generate$6('alloy-fake-after-tabstop');\n    const craftWithClasses = (classes) => {\n        return {\n            dom: {\n                tag: 'div',\n                styles: {\n                    width: '1px',\n                    height: '1px',\n                    outline: 'none'\n                },\n                attributes: {\n                    tabindex: '0' // Capture native tabbing in the appropriate order\n                },\n                classes\n            },\n            behaviours: derive$1([\n                Focusing.config({ ignore: true }),\n                Tabstopping.config({})\n            ])\n        };\n    };\n    const craft = (containerClasses, spec) => {\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-navobj', ...containerClasses.getOr([])]\n            },\n            components: [\n                craftWithClasses([beforeObject]),\n                spec,\n                craftWithClasses([afterObject])\n            ],\n            behaviours: derive$1([\n                ComposingConfigs.childAt(1)\n            ])\n        };\n    };\n    // TODO: Create an API in alloy to do this.\n    const triggerTab = (placeholder, shiftKey) => {\n        emitWith(placeholder, keydown(), {\n            raw: {\n                which: 9,\n                shiftKey\n            }\n        });\n    };\n    const onFocus = (container, targetComp) => {\n        const target = targetComp.element;\n        // If focus has shifted naturally to a before object, the tab direction is backwards.\n        if (has(target, beforeObject)) {\n            triggerTab(container, true);\n        }\n        else if (has(target, afterObject)) {\n            triggerTab(container, false);\n        }\n    };\n    const isPseudoStop = (element) => {\n        return closest$1(element, ['.' + beforeObject, '.' + afterObject].join(','), never);\n    };\n\n    const dialogChannel = generate$6('update-dialog');\n    const titleChannel = generate$6('update-title');\n    const bodyChannel = generate$6('update-body');\n    const footerChannel = generate$6('update-footer');\n    const bodySendMessageChannel = generate$6('body-send-message');\n    const dialogFocusShiftedChannel = generate$6('dialog-focus-shifted');\n\n    const browser = detect$1().browser;\n    const isSafari = browser.isSafari();\n    const isFirefox = browser.isFirefox();\n    const isSafariOrFirefox = isSafari || isFirefox;\n    const isChromium = browser.isChromium();\n    const isElementScrollAtBottom = ({ scrollTop, scrollHeight, clientHeight }) => Math.ceil(scrollTop) + clientHeight >= scrollHeight;\n    const scrollToY = (win, y) => \n    // TINY-10128: The iframe body is occasionally null when we attempt to scroll, so instead of using body.scrollHeight, use a\n    // fallback value of 99999999. To minimise the potential impact of future browser changes, this fallback is significantly smaller\n    // than the minimum of the maximum value Window.scrollTo would take on supported browsers:\n    // Chromium: > Number.MAX_SAFE_INTEGER\n    // Safari: 2^31 - 1 = 2147483647\n    // Firefox: 2147483583\n    win.scrollTo(0, y === 'bottom' ? 99999999 : y);\n    const getScrollingElement = (doc, html) => {\n        // TINY-10110: The scrolling element can change between body and documentElement depending on whether there\n        // is a doctype declaration. However, this behavior is inconsistent on Chrome and Safari so checking for\n        // the scroll properties is the most reliable way to determine which element is the scrolling element, at\n        // least for the purposes of determining whether scroll is at bottom.\n        const body = doc.body;\n        return Optional.from(!/^<!DOCTYPE (html|HTML)/.test(html) &&\n            (!isChromium && !isSafari || isNonNullable(body) && (body.scrollTop !== 0 || Math.abs(body.scrollHeight - body.clientHeight) > 1))\n            ? body : doc.documentElement);\n    };\n    const writeValue = (iframeElement, html, fallbackFn) => {\n        const iframe = iframeElement.dom;\n        Optional.from(iframe.contentDocument).fold(fallbackFn, (doc) => {\n            let lastScrollTop = 0;\n            // TINY-10032: If documentElement (or body) is nullable, we assume document is empty and so scroll is at bottom.\n            const isScrollAtBottom = getScrollingElement(doc, html).map((el) => {\n                lastScrollTop = el.scrollTop;\n                return el;\n            }).forall(isElementScrollAtBottom);\n            const scrollAfterWrite = () => {\n                const win = iframe.contentWindow;\n                if (isNonNullable(win)) {\n                    if (isScrollAtBottom) {\n                        scrollToY(win, 'bottom');\n                    }\n                    else if (!isScrollAtBottom && isSafariOrFirefox && lastScrollTop !== 0) {\n                        // TINY-10078: Safari and Firefox reset scroll to top on each document.write(), so we need to restore scroll manually\n                        scrollToY(win, lastScrollTop);\n                    }\n                }\n            };\n            // TINY-10109: On Safari, attempting to scroll before the iframe has finished loading will cause scroll to reset to top upon load.\n            // TINY-10128: We will not wait for the load event on Chrome and Firefox since doing so causes the scroll to jump around erratically,\n            // especially on Firefox. However, not waiting for load has the trade-off of potentially losing bottom scroll when updating at a very\n            // rapid rate, as attempting to scroll before the iframe body is loaded will not work.\n            if (isSafari) {\n                iframe.addEventListener('load', scrollAfterWrite, { once: true });\n            }\n            doc.open();\n            doc.write(html);\n            doc.close();\n            if (!isSafari) {\n                scrollAfterWrite();\n            }\n        });\n    };\n    // TINY-10078: On Firefox, throttle to 200ms to improve scrolling experience. Since we are manually maintaining previous scroll position\n    // on each update, when updating rapidly without a throttle, attempting to scroll around the iframe can feel stuck.\n    // TINY-10097: On Safari, throttle to 500ms to reduce flickering as the document.write() method still observes significant flickering.\n    // Also improves scrolling, as scroll positions are maintained manually similar to Firefox.\n    const throttleInterval = someIf(isSafariOrFirefox, isSafari ? 500 : 200);\n    // TINY-10078: Use Throttler.adaptable to ensure that any content added during the waiting period is not lost.\n    const writeValueThrottler = throttleInterval.map((interval) => adaptable(writeValue, interval));\n    const getDynamicSource = (initialData, stream) => {\n        const cachedValue = Cell(initialData.getOr(''));\n        return {\n            getValue: (_frameComponent) => \n            // Ideally we should fetch data from the iframe...innerHtml, this triggers Cors errors\n            cachedValue.get(),\n            setValue: (frameComponent, html) => {\n                if (cachedValue.get() !== html) {\n                    const iframeElement = frameComponent.element;\n                    const setSrcdocValue = () => set$9(iframeElement, 'srcdoc', html);\n                    if (stream) {\n                        writeValueThrottler.fold(constant$1(writeValue), (throttler) => throttler.throttle)(iframeElement, html, setSrcdocValue);\n                    }\n                    else {\n                        // TINY-3769: We need to use srcdoc here, instead of src with a data URI, otherwise browsers won't retain the Origin.\n                        // See https://bugs.chromium.org/p/chromium/issues/detail?id=58999#c11\n                        setSrcdocValue();\n                    }\n                }\n                cachedValue.set(html);\n            }\n        };\n    };\n    const renderIFrame = (spec, providersBackstage, initialData) => {\n        const baseClass = 'tox-dialog__iframe';\n        const opaqueClass = spec.transparent ? [] : [`${baseClass}--opaque`];\n        const containerBorderedClass = spec.border ? [`tox-navobj-bordered`] : [];\n        const attributes = {\n            ...spec.label.map((title) => ({ title })).getOr({}),\n            ...initialData.map((html) => ({ srcdoc: html })).getOr({}),\n            ...spec.sandboxed ? { sandbox: 'allow-scripts allow-same-origin' } : {}\n        };\n        const sourcing = getDynamicSource(initialData, spec.streamContent);\n        const pLabel = spec.label.map((label) => renderLabel$3(label, providersBackstage));\n        const factory = (newSpec) => craft(Optional.from(containerBorderedClass), {\n            // We need to use the part uid or the label and field won't be linked with ARIA\n            uid: newSpec.uid,\n            dom: {\n                tag: 'iframe',\n                attributes,\n                classes: [\n                    baseClass,\n                    ...opaqueClass\n                ]\n            },\n            behaviours: derive$1([\n                Tabstopping.config({}),\n                Focusing.config({}),\n                withComp(initialData, sourcing.getValue, sourcing.setValue),\n                Receiving.config({\n                    channels: {\n                        [dialogFocusShiftedChannel]: {\n                            onReceive: (comp, message) => {\n                                message.newFocus.each((newFocus) => {\n                                    parentElement(comp.element).each((parent) => {\n                                        const f = eq(comp.element, newFocus) ? add$2 : remove$3;\n                                        f(parent, 'tox-navobj-bordered-focus');\n                                    });\n                                });\n                            }\n                        }\n                    }\n                })\n            ])\n        });\n        // Note, it's not going to handle escape at this point.\n        const pField = FormField.parts.field({\n            factory: { sketch: factory }\n        });\n        return renderFormFieldWith(pLabel, pField, ['tox-form__group--stretched'], []);\n    };\n\n    const calculateImagePosition = (panelWidth, panelHeight, imageWidth, imageHeight, zoom) => {\n        const width = imageWidth * zoom;\n        const height = imageHeight * zoom;\n        const left = Math.max(0, panelWidth / 2 - width / 2);\n        const top = Math.max(0, panelHeight / 2 - height / 2);\n        return {\n            left: left.toString() + 'px',\n            top: top.toString() + 'px',\n            width: width.toString() + 'px',\n            height: height.toString() + 'px',\n        };\n    };\n    const zoomToFit = (panel, width, height) => {\n        const panelW = get$c(panel);\n        const panelH = get$d(panel);\n        return Math.min(panelW / width, panelH / height, 1);\n    };\n    const renderImagePreview = (spec, initialData) => {\n        const cachedData = Cell(initialData.getOr({ url: '' }));\n        const memImage = record({\n            dom: {\n                tag: 'img',\n                classes: ['tox-imagepreview__image'],\n                attributes: initialData.map((data) => ({ src: data.url })).getOr({})\n            },\n        });\n        const memContainer = record({\n            dom: {\n                tag: 'div',\n                classes: ['tox-imagepreview__container'],\n                attributes: {\n                    role: 'presentation'\n                },\n            },\n            components: [\n                memImage.asSpec()\n            ]\n        });\n        const setValue = (frameComponent, data) => {\n            const translatedData = {\n                url: data.url\n            };\n            // update properties that are set by the data\n            data.zoom.each((z) => translatedData.zoom = z);\n            data.cachedWidth.each((z) => translatedData.cachedWidth = z);\n            data.cachedHeight.each((z) => translatedData.cachedHeight = z);\n            cachedData.set(translatedData);\n            const applyFramePositioning = () => {\n                const { cachedWidth, cachedHeight, zoom } = translatedData;\n                if (!isUndefined(cachedWidth) && !isUndefined(cachedHeight)) {\n                    if (isUndefined(zoom)) {\n                        const z = zoomToFit(frameComponent.element, cachedWidth, cachedHeight);\n                        // sneaky mutation since we own the object\n                        translatedData.zoom = z;\n                    }\n                    const position = calculateImagePosition(get$c(frameComponent.element), get$d(frameComponent.element), cachedWidth, cachedHeight, translatedData.zoom);\n                    memContainer.getOpt(frameComponent).each((container) => {\n                        setAll(container.element, position);\n                    });\n                }\n            };\n            memImage.getOpt(frameComponent).each((imageComponent) => {\n                const img = imageComponent.element;\n                if (data.url !== get$g(img, 'src')) {\n                    set$9(img, 'src', data.url);\n                    remove$3(frameComponent.element, 'tox-imagepreview__loaded');\n                }\n                applyFramePositioning();\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                image(img).then((img) => {\n                    // Ensure the component hasn't been removed while the image was loading\n                    // if it is disconnected, just do nothing\n                    if (frameComponent.getSystem().isConnected()) {\n                        add$2(frameComponent.element, 'tox-imagepreview__loaded');\n                        // sneaky mutation since we own the object\n                        translatedData.cachedWidth = img.dom.naturalWidth;\n                        translatedData.cachedHeight = img.dom.naturalHeight;\n                        applyFramePositioning();\n                    }\n                });\n            });\n        };\n        const styles = {};\n        spec.height.each((h) => styles.height = h);\n        // TODO: TINY-8393 Use the initial data properly once it's validated\n        const fakeValidatedData = initialData.map((d) => ({\n            url: d.url,\n            zoom: Optional.from(d.zoom),\n            cachedWidth: Optional.from(d.cachedWidth),\n            cachedHeight: Optional.from(d.cachedHeight),\n        }));\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-imagepreview'],\n                styles,\n                attributes: {\n                    role: 'presentation'\n                }\n            },\n            components: [\n                memContainer.asSpec(),\n            ],\n            behaviours: derive$1([\n                ComposingConfigs.self(),\n                withComp(fakeValidatedData, () => \n                /*\n                  NOTE: This is intentionally returning the cached image width and height.\n      \n                  Including those details in the dialog data helps when `setData` only changes the URL, as\n                  the old image must continue to be displayed at the old size until the new image has loaded.\n                */\n                cachedData.get(), setValue),\n            ])\n        };\n    };\n\n    const renderLabel$2 = (spec, backstageShared, getCompByName) => {\n        const baseClass = 'tox-label';\n        const centerClass = spec.align === 'center' ? [`${baseClass}--center`] : [];\n        const endClass = spec.align === 'end' ? [`${baseClass}--end`] : [];\n        const label = record({\n            dom: {\n                tag: 'label',\n                classes: [baseClass, ...centerClass, ...endClass]\n            },\n            components: [\n                text$2(backstageShared.providers.translate(spec.label))\n            ]\n        });\n        const comps = map$2(spec.items, backstageShared.interpreter);\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-form__group']\n            },\n            components: [\n                label.asSpec(),\n                ...comps\n            ],\n            behaviours: derive$1([\n                ComposingConfigs.self(),\n                Replacing.config({}),\n                domHtml(Optional.none()),\n                Keying.config({\n                    mode: 'acyclic'\n                }),\n                config('label', [\n                    runOnAttached((comp) => {\n                        spec.for.each((name) => {\n                            getCompByName(name).each((target) => {\n                                label.getOpt(comp).each((labelComp) => {\n                                    var _a;\n                                    const id = (_a = get$g(target.element, 'id')) !== null && _a !== void 0 ? _a : generate$6('form-field');\n                                    set$9(target.element, 'id', id);\n                                    set$9(labelComp.element, 'for', id);\n                                });\n                            });\n                        });\n                    })\n                ]),\n            ])\n        };\n    };\n\n    const internalToolbarButtonExecute = generate$6('toolbar.button.execute');\n    // Perform `action` when an item is clicked on, close menus, and stop event\n    const onToolbarButtonExecute = (info) => runOnExecute$1((comp, _simulatedEvent) => {\n        // If there is an action, run the action\n        runWithApi(info, comp)((itemApi) => {\n            emitWith(comp, internalToolbarButtonExecute, {\n                buttonApi: itemApi\n            });\n            info.onAction(itemApi);\n        });\n    });\n    const commonButtonDisplayEvent = generate$6('common-button-display-events');\n    const toolbarButtonEventOrder = {\n        // TODO: use the constants provided by behaviours.\n        [execute$5()]: ['disabling', 'alloy.base.behaviour', 'toggling', 'toolbar-button-events', 'tooltipping'],\n        [attachedToDom()]: [\n            'toolbar-button-events',\n            commonButtonDisplayEvent\n        ],\n        [detachedFromDom()]: ['toolbar-button-events', 'dropdown-events', 'tooltipping'],\n        [mousedown()]: [\n            'focusing',\n            'alloy.base.behaviour',\n            commonButtonDisplayEvent\n        ]\n    };\n\n    const forceInitialSize = (comp) => set$7(comp.element, 'width', get$e(comp.element, 'width'));\n\n    const renderIcon$1 = (iconName, iconsProvider, behaviours) => render$4(iconName, {\n        tag: 'span',\n        classes: [\"tox-icon\" /* ToolbarButtonClasses.Icon */, \"tox-tbtn__icon-wrap\" /* ToolbarButtonClasses.IconWrap */],\n        behaviours\n    }, iconsProvider);\n    const renderIconFromPack$1 = (iconName, iconsProvider) => renderIcon$1(iconName, iconsProvider, []);\n    const renderReplaceableIconFromPack = (iconName, iconsProvider) => renderIcon$1(iconName, iconsProvider, [Replacing.config({})]);\n    const renderLabel$1 = (text, prefix, providersBackstage) => ({\n        dom: {\n            tag: 'span',\n            classes: [`${prefix}__select-label`]\n        },\n        components: [\n            text$2(providersBackstage.translate(text))\n        ],\n        behaviours: derive$1([\n            Replacing.config({})\n        ])\n    });\n\n    const updateMenuText = generate$6('update-menu-text');\n    const updateMenuIcon = generate$6('update-menu-icon');\n    const updateTooltiptext = generate$6('update-tooltip-text');\n    // TODO: Use renderCommonStructure here.\n    const renderCommonDropdown = (spec, prefix, sharedBackstage, btnName) => {\n        const editorOffCell = Cell(noop);\n        const tooltip = Cell(spec.tooltip);\n        // We need mementos for display text and display icon because on the events\n        // updateMenuText and updateMenuIcon respectively, their contents are changed\n        // via Replacing. These events are generally emitted by dropdowns that want the\n        // main text and icon to match the current selection (e.g. bespokes like font family)\n        const optMemDisplayText = spec.text.map((text) => record(renderLabel$1(text, prefix, sharedBackstage.providers)));\n        const optMemDisplayIcon = spec.icon.map((iconName) => record(renderReplaceableIconFromPack(iconName, sharedBackstage.providers.icons)));\n        /*\n         * The desired behaviour here is:\n         *\n         *   when left or right is pressed, and it isn't associated with expanding or\n         *   collapsing a submenu, then it should navigate to the next menu item, and\n         *   expand it (without highlighting any items in the expanded menu).\n         *   It also needs to close the previous menu\n         */\n        const onLeftOrRightInMenu = (comp, se) => {\n            // The originating dropdown is stored on the sandbox itself. This is just an\n            // implementation detail of alloy. We really need to make it a fully-fledged API.\n            // TODO: TINY-9014 Make SandboxAPI have a function that just delegates to Representing\n            const dropdown = Representing.getValue(comp);\n            // Focus the dropdown. Current workaround required to make FlowLayout recognise the current focus.\n            // The triggering keydown is going to try to move the focus left or\n            // right of the current menu, so it needs to know what the current menu dropdown is. It\n            // can't work it out by the current focus, because the current focus is *in* the menu, so\n            // we help it by moving the focus to the button, so it can work out what the next menu to\n            // the left or right is.\n            Focusing.focus(dropdown);\n            emitWith(dropdown, 'keydown', {\n                raw: se.event.raw\n            });\n            // Because we have just navigated off this open menu, we want to close it.\n            // INVESTIGATE: TINY-9014: Is this handling situations where there were no menus\n            // to move to? Does it matter if we still close it when there are no other menus?\n            Dropdown.close(dropdown);\n            // The Optional.some(true) tells the keyboard handler that this event was handled,\n            // which will do things like stopPropagation and preventDefault.\n            return Optional.some(true);\n        };\n        const role = spec.role.fold(() => ({}), (role) => ({ role }));\n        const listRole = Optional.from(spec.listRole).map((listRole) => ({ listRole })).getOr({});\n        const ariaLabelAttribute = spec.ariaLabel.fold(() => ({}), (ariaLabel) => {\n            const translatedAriaLabel = sharedBackstage.providers.translate(ariaLabel);\n            return {\n                'aria-label': translatedAriaLabel\n            };\n        });\n        const iconSpec = render$4('chevron-down', {\n            tag: 'div',\n            classes: [`${prefix}__select-chevron`]\n        }, sharedBackstage.providers.icons);\n        const fixWidthBehaviourName = generate$6('common-button-display-events');\n        // Should we use Id.generate here?\n        const customEventsName = 'dropdown-events';\n        const memDropdown = record(Dropdown.sketch({\n            ...spec.uid ? { uid: spec.uid } : {},\n            ...role,\n            ...listRole,\n            dom: {\n                tag: 'button',\n                classes: [prefix, `${prefix}--select`].concat(map$2(spec.classes, (c) => `${prefix}--${c}`)),\n                attributes: {\n                    ...ariaLabelAttribute,\n                    ...(isNonNullable(btnName) ? { 'data-mce-name': btnName } : {})\n                }\n            },\n            components: componentRenderPipeline([\n                optMemDisplayIcon.map((mem) => mem.asSpec()),\n                optMemDisplayText.map((mem) => mem.asSpec()),\n                Optional.some(iconSpec)\n            ]),\n            matchWidth: true,\n            useMinWidth: true,\n            // When the dropdown opens, if we are in search mode, then we want to\n            // focus our searcher.\n            onOpen: (anchor, dropdownComp, tmenuComp) => {\n                if (spec.searchable) {\n                    focusSearchField(tmenuComp);\n                }\n            },\n            dropdownBehaviours: derive$1([\n                ...spec.dropdownBehaviours,\n                DisablingConfigs.button(() => spec.disabled || sharedBackstage.providers.checkUiComponentContext(spec.context).shouldDisable),\n                toggleOnReceive(() => sharedBackstage.providers.checkUiComponentContext(spec.context)),\n                // INVESTIGATE (TINY-9012): There was a old comment here about something not quite working, and that\n                // we can still get the button focused. It was probably related to Unselecting.\n                Unselecting.config({}),\n                Replacing.config({}),\n                ...(spec.tooltip.map((t) => Tooltipping.config(sharedBackstage.providers.tooltips.getConfig({\n                    tooltipText: sharedBackstage.providers.translate(t),\n                    onShow: (comp) => {\n                        if (lift2(tooltip.get(), spec.tooltip, (tooltipStr, tt) => tt !== tooltipStr).getOr(false)) {\n                            const translatedTooltip = sharedBackstage.providers.translate(tooltip.get().getOr(''));\n                            Tooltipping.setComponents(comp, sharedBackstage.providers.tooltips.getComponents({ tooltipText: translatedTooltip }));\n                        }\n                    }\n                })))).toArray(),\n                // This is the generic way to make onSetup and onDestroy call as the component is attached /\n                // detached from the page/DOM.\n                config(customEventsName, [\n                    onControlAttached(spec, editorOffCell),\n                    onControlDetached(spec, editorOffCell)\n                ]),\n                config(fixWidthBehaviourName, [\n                    runOnAttached((comp, _se) => {\n                        if (spec.listRole !== 'listbox') {\n                            forceInitialSize(comp);\n                        }\n                    }),\n                ]),\n                config('update-dropdown-width-variable', [\n                    run$1(windowResize(), (comp, _se) => Dropdown.close(comp)),\n                ]),\n                config('menubutton-update-display-text', [\n                    // These handlers are just using Replacing to replace either the menu\n                    // text or the icon.\n                    run$1(updateMenuText, (comp, se) => {\n                        optMemDisplayText.bind((mem) => mem.getOpt(comp)).each((displayText) => {\n                            Replacing.set(displayText, [text$2(sharedBackstage.providers.translate(se.event.text))]);\n                        });\n                    }),\n                    run$1(updateMenuIcon, (comp, se) => {\n                        optMemDisplayIcon.bind((mem) => mem.getOpt(comp)).each((displayIcon) => {\n                            Replacing.set(displayIcon, [\n                                renderReplaceableIconFromPack(se.event.icon, sharedBackstage.providers.icons)\n                            ]);\n                        });\n                    }),\n                    run$1(updateTooltiptext, (comp, se) => {\n                        const translatedTooltip = sharedBackstage.providers.translate(se.event.text);\n                        set$9(comp.element, 'aria-label', translatedTooltip);\n                        tooltip.set(Optional.some(se.event.text));\n                    })\n                ])\n            ]),\n            eventOrder: deepMerge(toolbarButtonEventOrder, {\n                // INVESTIGATE (TINY-9014): Explain why we need the events in this order.\n                // Ideally, have a test that fails when they are in a different order if order\n                // is important\n                [mousedown()]: ['focusing', 'alloy.base.behaviour', 'item-type-events', 'normal-dropdown-events'],\n                [attachedToDom()]: [\n                    'toolbar-button-events',\n                    Tooltipping.name(),\n                    customEventsName,\n                    fixWidthBehaviourName,\n                ]\n            }),\n            sandboxBehaviours: derive$1([\n                Keying.config({\n                    mode: 'special',\n                    onLeft: onLeftOrRightInMenu,\n                    onRight: onLeftOrRightInMenu\n                }),\n                config('dropdown-sandbox-events', [\n                    run$1(refetchTriggerEvent, (originalSandboxComp, se) => {\n                        handleRefetchTrigger(originalSandboxComp);\n                        // It's a custom event that no-one else should be listening to, so stop it.\n                        se.stop();\n                    }),\n                    run$1(redirectMenuItemInteractionEvent, (sandboxComp, se) => {\n                        handleRedirectToMenuItem(sandboxComp, se);\n                        // It's a custom event that no-one else should be listening to, so stop it.\n                        se.stop();\n                    })\n                ])\n            ]),\n            lazySink: sharedBackstage.getSink,\n            toggleClass: `${prefix}--active`,\n            parts: {\n                menu: {\n                    ...part(false, spec.columns, spec.presets),\n                    // When the menu is \"searchable\", use fakeFocus so that keyboard\n                    // focus stays in the search field\n                    fakeFocus: spec.searchable,\n                    // We don't want to update the  `aria-selected` on highlight or dehighlight for the `listbox` role because that is used to indicate the selected item\n                    ...(spec.listRole === 'listbox' ? {} : {\n                        onHighlightItem: updateAriaOnHighlight,\n                        onCollapseMenu: (tmenuComp, itemCompCausingCollapse, nowActiveMenuComp) => {\n                            // We want to update ARIA on collapsing as well, because it isn't changing\n                            // the highlights. So what we need to do is get the right parameters to\n                            // pass to updateAriaOnHighlight\n                            Highlighting.getHighlighted(nowActiveMenuComp).each((itemComp) => {\n                                updateAriaOnHighlight(tmenuComp, nowActiveMenuComp, itemComp);\n                            });\n                        },\n                        onDehighlightItem: updateAriaOnDehighlight\n                    })\n                }\n            },\n            getAnchorOverrides: () => {\n                return {\n                    maxHeightFunction: (element, available) => {\n                        anchored()(element, available - 10);\n                    },\n                };\n            },\n            fetch: (comp) => Future.nu(curry(spec.fetch, comp))\n        }));\n        return memDropdown.asSpec();\n    };\n\n    const isMenuItemReference = (item) => isString(item);\n    const isSeparator$2 = (item) => item.type === 'separator';\n    const isExpandingMenuItem = (item) => has$2(item, 'getSubmenuItems');\n    const separator$2 = {\n        type: 'separator'\n    };\n    const unwrapReferences = (items, menuItems) => {\n        // Unwrap any string based menu item references\n        const realItems = foldl(items, (acc, item) => {\n            if (isMenuItemReference(item)) {\n                if (item === '') {\n                    return acc;\n                }\n                else if (item === '|') {\n                    // Ignore the separator if it's at the start or a duplicate\n                    return acc.length > 0 && !isSeparator$2(acc[acc.length - 1]) ? acc.concat([separator$2]) : acc;\n                }\n                else if (has$2(menuItems, item.toLowerCase())) {\n                    return acc.concat([menuItems[item.toLowerCase()]]);\n                }\n                else {\n                    // TODO: Add back after TINY-3232 is implemented\n                    // console.error('No representation for menuItem: ' + item);\n                    return acc;\n                }\n            }\n            else {\n                return acc.concat([item]);\n            }\n        }, []);\n        // Remove any trailing separators\n        if (realItems.length > 0 && isSeparator$2(realItems[realItems.length - 1])) {\n            realItems.pop();\n        }\n        return realItems;\n    };\n    const getFromExpandingItem = (item, menuItems) => {\n        const submenuItems = item.getSubmenuItems();\n        const rest = expand(submenuItems, menuItems);\n        const newMenus = deepMerge(rest.menus, { [item.value]: rest.items });\n        const newExpansions = deepMerge(rest.expansions, { [item.value]: item.value });\n        return {\n            item,\n            menus: newMenus,\n            expansions: newExpansions\n        };\n    };\n    const generateValueIfRequired = (item) => {\n        // Use the value already in item if it has one.\n        const itemValue = get$h(item, 'value').getOrThunk(() => generate$6('generated-menu-item'));\n        return deepMerge({ value: itemValue }, item);\n    };\n    // Takes items, and consolidates them into its return value\n    const expand = (items, menuItems) => {\n        // Fistly, we do all substitution using the registry for any items referenced by their\n        // string key.\n        const realItems = unwrapReferences(isString(items) ? items.split(' ') : items, menuItems);\n        // Now that we have complete bridge Item specs for all items, we need to collect the\n        // submenus, items in the primary menu, and triggering menu items all into one\n        // giant object to from the building blocks on our TieredData\n        return foldr(realItems, (acc, item) => {\n            if (isExpandingMenuItem(item)) {\n                // We generate a random value for item, but only if there isn't an existing value\n                const itemWithValue = generateValueIfRequired(item);\n                // The newData isn't quite in the format you might expect. The list of items\n                // for an item with nested items is just the single parent item. All of the nested\n                // items becomes part of '.menus'. Finally, the expansions is just a map from\n                // the triggering item to the first submenu. Incidentally, they are given the same\n                // value (triggering item and submenu), for convenience.\n                const newData = getFromExpandingItem(itemWithValue, menuItems);\n                return {\n                    // Combine all of our current submenus and items with the new submenus created by\n                    // this item with nested subitems\n                    menus: deepMerge(acc.menus, newData.menus),\n                    // Add our parent item into the list of items in the *current menu*.\n                    items: [newData.item, ...acc.items],\n                    // Merge together our \"this item opens this submenu\" objects\n                    expansions: deepMerge(acc.expansions, newData.expansions)\n                };\n            }\n            else {\n                // If we aren't creating any submenus, then all we need to do is add this item\n                // to the list of items in the current menu. So this is the same as an expanding\n                // menu item, except it doesn't add to `menus` or `expansions`.\n                return {\n                    ...acc,\n                    items: [item, ...acc.items]\n                };\n            }\n        }, {\n            menus: {},\n            expansions: {},\n            items: []\n        });\n    };\n\n    const getSearchModeForField = (settings) => {\n        return settings.search.fold(() => ({ searchMode: 'no-search' }), (searchSettings) => ({\n            searchMode: 'search-with-field',\n            placeholder: searchSettings.placeholder\n        }));\n    };\n    const getSearchModeForResults = (settings) => {\n        return settings.search.fold(() => ({ searchMode: 'no-search' }), (_) => ({ searchMode: 'search-with-results' }));\n    };\n    const build = (items, itemResponse, backstage, settings) => {\n        const primary = generate$6('primary-menu');\n        // The expand process identifies all the items, submenus, and triggering items\n        // defined by the list of items. It substitutes the strings using the values registered\n        // in the menuItem registry where necessary. It is the building blocks of TieredData,\n        // but everything is still just in the bridge item format ... nothing has been turned\n        // into AlloySpecs.\n        const data = expand(items, backstage.shared.providers.menuItems());\n        if (data.items.length === 0) {\n            return Optional.none();\n        }\n        // Only the main menu has a searchable widget (if it is enabled)\n        const mainMenuSearchMode = getSearchModeForField(settings);\n        const mainMenu = createPartialMenu(primary, data.items, itemResponse, backstage, settings.isHorizontalMenu, mainMenuSearchMode);\n        // The submenus do not have the search field, but will have search results for\n        // connecting to the search field via aria-controls\n        const submenuSearchMode = getSearchModeForResults(settings);\n        const submenus = map$1(data.menus, (menuItems, menuName) => createPartialMenu(menuName, menuItems, itemResponse, backstage, \n        // Currently, submenus cannot be horizontal menus (so always false)\n        false, submenuSearchMode));\n        const menus = deepMerge(submenus, wrap(primary, mainMenu));\n        return Optional.from(tieredMenu.tieredData(primary, menus, data.expansions));\n    };\n\n    const isSingleListItem = (item) => !has$2(item, 'items');\n    const dataAttribute = 'data-value';\n    const fetchItems = (dropdownComp, name, items, selectedValue, hasNestedItems) => map$2(items, (item) => {\n        if (!isSingleListItem(item)) {\n            return {\n                type: 'nestedmenuitem',\n                text: item.text,\n                getSubmenuItems: () => fetchItems(dropdownComp, name, item.items, selectedValue, hasNestedItems)\n            };\n        }\n        else {\n            return {\n                type: 'togglemenuitem',\n                ...(hasNestedItems ? {} : { role: 'option' }),\n                text: item.text,\n                value: item.value,\n                active: item.value === selectedValue,\n                onAction: () => {\n                    Representing.setValue(dropdownComp, item.value);\n                    emitWith(dropdownComp, formChangeEvent, { name });\n                    Focusing.focus(dropdownComp);\n                }\n            };\n        }\n    });\n    const findItemByValue = (items, value) => findMap(items, (item) => {\n        if (!isSingleListItem(item)) {\n            return findItemByValue(item.items, value);\n        }\n        else {\n            return someIf(item.value === value, item);\n        }\n    });\n    const renderListBox = (spec, backstage, initialData) => {\n        const hasNestedItems = exists(spec.items, (item) => !isSingleListItem(item));\n        const providersBackstage = backstage.shared.providers;\n        const initialItem = initialData\n            .bind((value) => findItemByValue(spec.items, value))\n            .orThunk(() => head(spec.items).filter(isSingleListItem));\n        const pLabel = spec.label.map((label) => renderLabel$3(label, providersBackstage));\n        const pField = FormField.parts.field({\n            dom: {},\n            factory: {\n                sketch: (sketchSpec) => renderCommonDropdown({\n                    context: spec.context,\n                    uid: sketchSpec.uid,\n                    text: initialItem.map((item) => item.text),\n                    icon: Optional.none(),\n                    tooltip: Optional.none(),\n                    role: someIf(!hasNestedItems, 'combobox'),\n                    ...(hasNestedItems ? {} : { listRole: 'listbox' }),\n                    ariaLabel: spec.label,\n                    fetch: (comp, callback) => {\n                        const items = fetchItems(comp, spec.name, spec.items, Representing.getValue(comp), hasNestedItems);\n                        callback(build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n                            isHorizontalMenu: false,\n                            search: Optional.none()\n                        }));\n                    },\n                    onSetup: constant$1(noop),\n                    getApi: constant$1({}),\n                    columns: 1,\n                    presets: 'normal',\n                    classes: [],\n                    dropdownBehaviours: [\n                        Tabstopping.config({}),\n                        withComp(initialItem.map((item) => item.value), (comp) => get$g(comp.element, dataAttribute), (comp, data) => {\n                            // We only want to update the saved value if the value set is a valid property\n                            findItemByValue(spec.items, data)\n                                .each((item) => {\n                                set$9(comp.element, dataAttribute, item.value);\n                                emitWith(comp, updateMenuText, { text: item.text });\n                            });\n                        })\n                    ]\n                }, 'tox-listbox', backstage.shared)\n            }\n        });\n        const listBoxWrap = {\n            dom: {\n                tag: 'div',\n                classes: ['tox-listboxfield']\n            },\n            components: [pField]\n        };\n        return FormField.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-form__group']\n            },\n            components: flatten([pLabel.toArray(), [listBoxWrap]]),\n            fieldBehaviours: derive$1([\n                Disabling.config({\n                    disabled: () => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable,\n                    onDisabled: (comp) => {\n                        FormField.getField(comp).each(Disabling.disable);\n                    },\n                    onEnabled: (comp) => {\n                        FormField.getField(comp).each(Disabling.enable);\n                    }\n                })\n            ])\n        });\n    };\n\n    const renderPanel = (spec, backstage) => ({\n        dom: {\n            tag: 'div',\n            classes: spec.classes\n        },\n        // All of the items passed through the form need to be put through the interpreter\n        // with their form part preserved.\n        components: map$2(spec.items, backstage.shared.interpreter)\n    });\n\n    const renderSelectBox = (spec, providersBackstage, initialData) => {\n        const translatedOptions = map$2(spec.items, (item) => ({\n            text: providersBackstage.translate(item.text),\n            value: item.value\n        }));\n        // DUPE with TextField.\n        const pLabel = spec.label.map((label) => renderLabel$3(label, providersBackstage));\n        const pField = FormField.parts.field({\n            // TODO: Alloy should not allow dom changing of an HTML select!\n            dom: {},\n            ...initialData.map((data) => ({ data })).getOr({}),\n            selectAttributes: {\n                size: spec.size\n            },\n            options: translatedOptions,\n            factory: HtmlSelect,\n            selectBehaviours: derive$1([\n                Disabling.config({\n                    disabled: () => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable\n                }),\n                Tabstopping.config({}),\n                config('selectbox-change', [\n                    run$1(change(), (component, _) => {\n                        emitWith(component, formChangeEvent, { name: spec.name });\n                    })\n                ])\n            ])\n        });\n        const chevron = spec.size > 1 ? Optional.none() :\n            Optional.some(render$4('chevron-down', { tag: 'div', classes: ['tox-selectfield__icon-js'] }, providersBackstage.icons));\n        const selectWrap = {\n            dom: {\n                tag: 'div',\n                classes: ['tox-selectfield']\n            },\n            components: flatten([[pField], chevron.toArray()])\n        };\n        return FormField.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-form__group']\n            },\n            components: flatten([pLabel.toArray(), [selectWrap]]),\n            fieldBehaviours: derive$1([\n                Disabling.config({\n                    disabled: () => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable,\n                    onDisabled: (comp) => {\n                        FormField.getField(comp).each(Disabling.disable);\n                    },\n                    onEnabled: (comp) => {\n                        FormField.getField(comp).each(Disabling.enable);\n                    }\n                }),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context))\n            ])\n        });\n    };\n\n    const formatSize = (size) => {\n        const unitDec = {\n            '': 0,\n            'px': 0,\n            'pt': 1,\n            'mm': 1,\n            'pc': 2,\n            'ex': 2,\n            'em': 2,\n            'ch': 2,\n            'rem': 2,\n            'cm': 3,\n            'in': 4,\n            '%': 4\n        };\n        const maxDecimal = (unit) => unit in unitDec ? unitDec[unit] : 1;\n        let numText = size.value.toFixed(maxDecimal(size.unit));\n        if (numText.indexOf('.') !== -1) {\n            numText = numText.replace(/\\.?0*$/, '');\n        }\n        return numText + size.unit;\n    };\n    const parseSize = (sizeText) => {\n        const numPattern = /^\\s*(\\d+(?:\\.\\d+)?)\\s*(|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)\\s*$/;\n        const match = numPattern.exec(sizeText);\n        if (match !== null) {\n            const value = parseFloat(match[1]);\n            const unit = match[2];\n            return Result.value({ value, unit });\n        }\n        else {\n            return Result.error(sizeText);\n        }\n    };\n    const convertUnit = (size, unit) => {\n        const inInch = {\n            '': 96,\n            'px': 96,\n            'pt': 72,\n            'cm': 2.54,\n            'pc': 12,\n            'mm': 25.4,\n            'in': 1\n        };\n        const supported = (u) => has$2(inInch, u);\n        if (size.unit === unit) {\n            return Optional.some(size.value);\n        }\n        else if (supported(size.unit) && supported(unit)) {\n            if (inInch[size.unit] === inInch[unit]) {\n                return Optional.some(size.value);\n            }\n            else {\n                return Optional.some(size.value / inInch[size.unit] * inInch[unit]);\n            }\n        }\n        else {\n            return Optional.none();\n        }\n    };\n    const noSizeConversion = (_input) => Optional.none();\n    const ratioSizeConversion = (scale, unit) => (size) => convertUnit(size, unit).map((value) => ({ value: value * scale, unit }));\n    const makeRatioConverter = (currentFieldText, otherFieldText) => {\n        const cValue = parseSize(currentFieldText).toOptional();\n        const oValue = parseSize(otherFieldText).toOptional();\n        return lift2(cValue, oValue, (cSize, oSize) => convertUnit(cSize, oSize.unit).map((val) => oSize.value / val).map((r) => ratioSizeConversion(r, oSize.unit)).getOr(noSizeConversion)).getOr(noSizeConversion);\n    };\n\n    const renderSizeInput = (spec, providersBackstage) => {\n        let converter = noSizeConversion;\n        const ratioEvent = generate$6('ratio-event');\n        const makeIcon = (iconName) => render$4(iconName, { tag: 'span', classes: ['tox-icon', 'tox-lock-icon__' + iconName] }, providersBackstage.icons);\n        const disabled = () => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable;\n        const toggleOnReceive$1 = toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context));\n        const label = spec.label.getOr('Constrain proportions');\n        const translatedLabel = providersBackstage.translate(label);\n        const pLock = FormCoupledInputs.parts.lock({\n            dom: {\n                tag: 'button',\n                classes: ['tox-lock', 'tox-button', 'tox-button--naked', 'tox-button--icon'],\n                attributes: {\n                    'aria-label': translatedLabel,\n                    'data-mce-name': label\n                }\n            },\n            components: [\n                makeIcon('lock'),\n                makeIcon('unlock')\n            ],\n            buttonBehaviours: derive$1([\n                Disabling.config({ disabled }),\n                toggleOnReceive$1,\n                Tabstopping.config({}),\n                Tooltipping.config(providersBackstage.tooltips.getConfig({\n                    tooltipText: translatedLabel\n                }))\n            ])\n        });\n        const formGroup = (components) => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-form__group']\n            },\n            components\n        });\n        const getFieldPart = (isField1) => FormField.parts.field({\n            factory: Input,\n            inputClasses: ['tox-textfield'],\n            inputBehaviours: derive$1([\n                Disabling.config({ disabled }),\n                toggleOnReceive$1,\n                Tabstopping.config({}),\n                config('size-input-events', [\n                    run$1(focusin(), (component, _simulatedEvent) => {\n                        emitWith(component, ratioEvent, { isField1 });\n                    }),\n                    run$1(change(), (component, _simulatedEvent) => {\n                        emitWith(component, formChangeEvent, { name: spec.name });\n                    })\n                ])\n            ]),\n            selectOnFocus: false\n        });\n        const getLabel = (label) => ({\n            dom: {\n                tag: 'label',\n                classes: ['tox-label']\n            },\n            components: [\n                text$2(providersBackstage.translate(label))\n            ]\n        });\n        const widthField = FormCoupledInputs.parts.field1(formGroup([FormField.parts.label(getLabel('Width')), getFieldPart(true)]));\n        const heightField = FormCoupledInputs.parts.field2(formGroup([FormField.parts.label(getLabel('Height')), getFieldPart(false)]));\n        return FormCoupledInputs.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-form__group']\n            },\n            components: [\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-form__controls-h-stack']\n                    },\n                    components: [\n                        // NOTE: Form coupled inputs to the FormField.sketch themselves.\n                        widthField,\n                        heightField,\n                        formGroup([\n                            getLabel(nbsp),\n                            pLock\n                        ])\n                    ]\n                }\n            ],\n            field1Name: 'width',\n            field2Name: 'height',\n            locked: true,\n            markers: {\n                lockClass: 'tox-locked'\n            },\n            onLockedChange: (current, other, _lock) => {\n                parseSize(Representing.getValue(current)).each((size) => {\n                    converter(size).each((newSize) => {\n                        Representing.setValue(other, formatSize(newSize));\n                    });\n                });\n            },\n            coupledFieldBehaviours: derive$1([\n                Disabling.config({\n                    disabled,\n                    onDisabled: (comp) => {\n                        FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.disable);\n                        FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.disable);\n                        FormCoupledInputs.getLock(comp).each(Disabling.disable);\n                    },\n                    onEnabled: (comp) => {\n                        FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.enable);\n                        FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.enable);\n                        FormCoupledInputs.getLock(comp).each(Disabling.enable);\n                    }\n                }),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext('mode:design')),\n                config('size-input-events2', [\n                    run$1(ratioEvent, (component, simulatedEvent) => {\n                        const isField1 = simulatedEvent.event.isField1;\n                        const optCurrent = isField1 ? FormCoupledInputs.getField1(component) : FormCoupledInputs.getField2(component);\n                        const optOther = isField1 ? FormCoupledInputs.getField2(component) : FormCoupledInputs.getField1(component);\n                        const value1 = optCurrent.map(Representing.getValue).getOr('');\n                        const value2 = optOther.map(Representing.getValue).getOr('');\n                        converter = makeRatioConverter(value1, value2);\n                    })\n                ])\n            ])\n        });\n    };\n\n    const renderSlider = (spec, providerBackstage, initialData) => {\n        const labelPart = Slider.parts.label({\n            dom: {\n                tag: 'label',\n                classes: ['tox-label']\n            },\n            components: [\n                text$2(providerBackstage.translate(spec.label))\n            ]\n        });\n        const spectrum = Slider.parts.spectrum({\n            dom: {\n                tag: 'div',\n                classes: ['tox-slider__rail'],\n                attributes: {\n                    role: 'presentation'\n                }\n            }\n        });\n        const thumb = Slider.parts.thumb({\n            dom: {\n                tag: 'div',\n                classes: ['tox-slider__handle'],\n                attributes: {\n                    role: 'presentation'\n                }\n            }\n        });\n        return Slider.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-slider'],\n                attributes: {\n                    role: 'presentation'\n                }\n            },\n            model: {\n                mode: 'x',\n                minX: spec.min,\n                maxX: spec.max,\n                getInitialValue: constant$1(initialData.getOrThunk(() => (Math.abs(spec.max) - Math.abs(spec.min)) / 2))\n            },\n            components: [\n                labelPart,\n                spectrum,\n                thumb\n            ],\n            sliderBehaviours: derive$1([\n                ComposingConfigs.self(),\n                Focusing.config({})\n            ]),\n            onChoose: (component, thumb, value) => {\n                emitWith(component, formChangeEvent, { name: spec.name, value });\n            },\n            onChange: (component, thumb, value) => {\n                emitWith(component, formChangeEvent, { name: spec.name, value });\n            },\n        });\n    };\n\n    const renderTable = (spec, providersBackstage) => {\n        const renderTh = (text) => ({\n            dom: {\n                tag: 'th',\n                innerHtml: providersBackstage.translate(text)\n            }\n        });\n        const renderHeader = (header) => ({\n            dom: {\n                tag: 'thead'\n            },\n            components: [\n                {\n                    dom: {\n                        tag: 'tr'\n                    },\n                    components: map$2(header, renderTh)\n                }\n            ]\n        });\n        const renderTd = (text) => ({ dom: { tag: 'td', innerHtml: providersBackstage.translate(text) } });\n        const renderTr = (row) => ({ dom: { tag: 'tr' }, components: map$2(row, renderTd) });\n        const renderRows = (rows) => ({ dom: { tag: 'tbody' }, components: map$2(rows, renderTr) });\n        return {\n            dom: {\n                tag: 'table',\n                classes: ['tox-dialog__table']\n            },\n            components: [\n                renderHeader(spec.header),\n                renderRows(spec.cells)\n            ],\n            behaviours: derive$1([\n                Tabstopping.config({}),\n                Focusing.config({})\n            ])\n        };\n    };\n\n    const renderTextField = (spec, providersBackstage) => {\n        const pLabel = spec.label.map((label) => renderLabel$3(label, providersBackstage));\n        const baseInputBehaviours = [\n            Disabling.config({\n                disabled: () => spec.disabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable\n            }),\n            toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context)),\n            Keying.config({\n                mode: 'execution',\n                useEnter: spec.multiline !== true,\n                useControlEnter: spec.multiline === true,\n                execute: (comp) => {\n                    emit(comp, formSubmitEvent);\n                    return Optional.some(true);\n                }\n            }),\n            config('textfield-change', [\n                run$1(input(), (component, _) => {\n                    emitWith(component, formChangeEvent, { name: spec.name });\n                }),\n                run$1(postPaste(), (component, _) => {\n                    emitWith(component, formChangeEvent, { name: spec.name });\n                })\n            ]),\n            Tabstopping.config({})\n        ];\n        const validatingBehaviours = spec.validation.map((vl) => Invalidating.config({\n            getRoot: (input) => {\n                return parentElement(input.element);\n            },\n            invalidClass: 'tox-invalid',\n            validator: {\n                validate: (input) => {\n                    const v = Representing.getValue(input);\n                    const result = vl.validator(v);\n                    return Future.pure(result === true ? Result.value(v) : Result.error(result));\n                },\n                validateOnLoad: vl.validateOnLoad\n            }\n        })).toArray();\n        const placeholder = spec.placeholder.fold(constant$1({}), (p) => ({ placeholder: providersBackstage.translate(p) }));\n        const inputMode = spec.inputMode.fold(constant$1({}), (mode) => ({ inputmode: mode }));\n        const inputAttributes = {\n            ...placeholder,\n            ...inputMode,\n            'data-mce-name': spec.name\n        };\n        const pField = FormField.parts.field({\n            tag: spec.multiline === true ? 'textarea' : 'input',\n            ...spec.data.map((data) => ({ data })).getOr({}),\n            inputAttributes,\n            inputClasses: [spec.classname],\n            inputBehaviours: derive$1(flatten([\n                baseInputBehaviours,\n                validatingBehaviours\n            ])),\n            selectOnFocus: false,\n            factory: Input\n        });\n        // TINY-9331: This wrapper is needed to avoid border-radius rendering issues when the textarea has a scrollbar\n        const pTextField = spec.multiline ? {\n            dom: {\n                tag: 'div',\n                classes: ['tox-textarea-wrap']\n            },\n            components: [pField]\n        } : pField;\n        const extraClasses = spec.flex ? ['tox-form__group--stretched'] : [];\n        const extraClasses2 = extraClasses.concat(spec.maximized ? ['tox-form-group--maximize'] : []);\n        const extraBehaviours = [\n            Disabling.config({\n                disabled: () => spec.disabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable,\n                onDisabled: (comp) => {\n                    FormField.getField(comp).each(Disabling.disable);\n                },\n                onEnabled: (comp) => {\n                    FormField.getField(comp).each(Disabling.enable);\n                }\n            }),\n            toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context)),\n        ];\n        return renderFormFieldWith(pLabel, pTextField, extraClasses2, extraBehaviours);\n    };\n    const renderInput = (spec, providersBackstage, initialData) => renderTextField({\n        name: spec.name,\n        multiline: false,\n        label: spec.label,\n        inputMode: spec.inputMode,\n        placeholder: spec.placeholder,\n        flex: false,\n        disabled: !spec.enabled,\n        classname: 'tox-textfield',\n        validation: Optional.none(),\n        maximized: spec.maximized,\n        data: initialData,\n        context: spec.context\n    }, providersBackstage);\n    const renderTextarea = (spec, providersBackstage, initialData) => renderTextField({\n        name: spec.name,\n        multiline: true,\n        label: spec.label,\n        inputMode: Optional.none(), // type attribute is not valid for textareas\n        placeholder: spec.placeholder,\n        flex: true,\n        disabled: !spec.enabled,\n        classname: 'tox-textarea',\n        validation: Optional.none(),\n        maximized: spec.maximized,\n        data: initialData,\n        context: spec.context\n    }, providersBackstage);\n\n    const getMenuButtonApi = (component) => ({\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: (state) => Disabling.set(component, !state),\n        setActive: (state) => {\n            // Note: We can't use the toggling behaviour here, as the dropdown for the menu also relies on it.\n            // As such, we'll need to do this manually\n            const elm = component.element;\n            if (state) {\n                add$2(elm, \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */);\n                set$9(elm, 'aria-pressed', true);\n            }\n            else {\n                remove$3(elm, \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */);\n                remove$8(elm, 'aria-pressed');\n            }\n        },\n        isActive: () => has(component.element, \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */),\n        setTooltip: (tooltip) => {\n            emitWith(component, updateTooltiptext, {\n                text: tooltip\n            });\n        },\n        setText: (text) => {\n            emitWith(component, updateMenuText, {\n                text\n            });\n        },\n        setIcon: (icon) => emitWith(component, updateMenuIcon, {\n            icon\n        })\n    });\n    const renderMenuButton = (spec, prefix, backstage, role, tabstopping = true, btnName) => {\n        const classes = spec.buttonType === 'bordered' ? ['bordered'] : [];\n        return renderCommonDropdown({\n            text: spec.text,\n            icon: spec.icon,\n            tooltip: spec.tooltip,\n            ariaLabel: spec.tooltip,\n            searchable: spec.search.isSome(),\n            // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-2/menubar-2.html\n            role,\n            fetch: (dropdownComp, callback) => {\n                const fetchContext = {\n                    pattern: spec.search.isSome() ? getSearchPattern(dropdownComp) : ''\n                };\n                spec.fetch((items) => {\n                    callback(build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n                        isHorizontalMenu: false,\n                        // MenuButtons are the only dropdowns that support searchable (2022-08-16)\n                        search: spec.search\n                    }));\n                }, fetchContext, getMenuButtonApi(dropdownComp));\n            },\n            onSetup: spec.onSetup,\n            getApi: (comp) => getMenuButtonApi(comp),\n            columns: 1,\n            presets: 'normal',\n            classes,\n            dropdownBehaviours: [\n                ...(tabstopping ? [Tabstopping.config({})] : []),\n            ],\n            context: spec.context\n        }, prefix, backstage.shared, btnName);\n    };\n    const getFetch = (items, getButton, backstage) => {\n        const getMenuItemAction = (item) => (api) => {\n            // Update the menu item state\n            const newValue = !api.isActive();\n            api.setActive(newValue);\n            item.storage.set(newValue);\n            // Fire the form action event\n            backstage.shared.getSink().each((sink) => {\n                getButton().getOpt(sink).each((orig) => {\n                    focus$4(orig.element);\n                    emitWith(orig, formActionEvent, {\n                        name: item.name,\n                        value: item.storage.get()\n                    });\n                });\n            });\n        };\n        const getMenuItemSetup = (item) => (api) => {\n            api.setActive(item.storage.get());\n        };\n        return (success) => {\n            success(map$2(items, (item) => {\n                const text = item.text.fold(() => ({}), (text) => ({\n                    text\n                }));\n                return {\n                    type: item.type,\n                    active: false,\n                    ...text,\n                    context: item.context,\n                    onAction: getMenuItemAction(item),\n                    onSetup: getMenuItemSetup(item)\n                };\n            }));\n        };\n    };\n\n    const renderLabel = (text) => ({\n        dom: {\n            tag: 'span',\n            classes: ['tox-tree__label'],\n            attributes: {\n                'aria-label': text,\n            }\n        },\n        components: [\n            text$2(text)\n        ],\n    });\n    const renderCustomStateIcon = (container, components, backstage) => {\n        container.customStateIcon.each((icon) => components.push(renderIcon(icon, backstage.shared.providers.icons, container.customStateIconTooltip.fold(() => [], (tooltip) => [\n            Tooltipping.config(backstage.shared.providers.tooltips.getConfig({\n                tooltipText: tooltip\n            }))\n        ]), ['tox-icon-custom-state'])));\n    };\n    const leafLabelEventsId = generate$6('leaf-label-event-id');\n    const renderLeafLabel = ({ leaf, onLeafAction, visible, treeId, selectedId, backstage }) => {\n        const internalMenuButton = leaf.menu.map((btn) => renderMenuButton(btn, 'tox-mbtn', backstage, Optional.none(), visible));\n        const components = [renderLabel(leaf.title)];\n        renderCustomStateIcon(leaf, components, backstage);\n        internalMenuButton.each((btn) => components.push(btn));\n        return Button.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-tree--leaf__label', 'tox-trbtn']\n                    .concat(visible ? ['tox-tree--leaf__label--visible'] : []),\n            },\n            components,\n            role: 'treeitem',\n            action: (button) => {\n                onLeafAction(leaf.id);\n                button.getSystem().broadcastOn([`update-active-item-${treeId}`], {\n                    value: leaf.id\n                });\n            },\n            eventOrder: {\n                [keydown()]: [\n                    leafLabelEventsId,\n                    'keying',\n                ]\n            },\n            buttonBehaviours: derive$1([\n                ...(visible ? [Tabstopping.config({})] : []),\n                Toggling.config({\n                    toggleClass: 'tox-trbtn--enabled',\n                    toggleOnExecute: false,\n                    aria: {\n                        mode: 'selected'\n                    }\n                }),\n                Receiving.config({\n                    channels: {\n                        [`update-active-item-${treeId}`]: {\n                            onReceive: (comp, message) => {\n                                (message.value === leaf.id ? Toggling.on : Toggling.off)(comp);\n                            }\n                        }\n                    }\n                }),\n                config(leafLabelEventsId, [\n                    runOnAttached((comp, _se) => {\n                        selectedId.each((id) => {\n                            const toggle = id === leaf.id ? Toggling.on : Toggling.off;\n                            toggle(comp);\n                        });\n                    }),\n                    run$1(keydown(), (comp, se) => {\n                        const isLeftArrowKey = se.event.raw.code === 'ArrowLeft';\n                        const isRightArrowKey = se.event.raw.code === 'ArrowRight';\n                        if (isLeftArrowKey) {\n                            ancestor$1(comp.element, '.tox-tree--directory').each((dirElement) => {\n                                comp.getSystem().getByDom(dirElement).each((dirComp) => {\n                                    child(dirElement, '.tox-tree--directory__label').each((dirLabelElement) => {\n                                        dirComp.getSystem().getByDom(dirLabelElement).each(Focusing.focus);\n                                    });\n                                });\n                            });\n                            se.stop();\n                        }\n                        else if (isRightArrowKey) {\n                            se.stop();\n                        }\n                    })\n                ])\n            ]),\n        });\n    };\n    const renderIcon = (iconName, iconsProvider, behaviours, extraClasses, extraAttributes) => render$4(iconName, {\n        tag: 'span',\n        classes: [\n            'tox-tree__icon-wrap',\n            'tox-icon',\n        ].concat(extraClasses || []),\n        behaviours,\n        attributes: extraAttributes\n    }, iconsProvider);\n    const renderIconFromPack = (iconName, iconsProvider) => renderIcon(iconName, iconsProvider, []);\n    const directoryLabelEventsId = generate$6('directory-label-event-id');\n    const renderDirectoryLabel = ({ directory, visible, noChildren, backstage }) => {\n        const internalMenuButton = directory.menu.map((btn) => renderMenuButton(btn, 'tox-mbtn', backstage, Optional.none()));\n        const components = [\n            {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-chevron'],\n                },\n                components: [\n                    renderIconFromPack('chevron-right', backstage.shared.providers.icons),\n                ]\n            },\n            renderLabel(directory.title)\n        ];\n        renderCustomStateIcon(directory, components, backstage);\n        internalMenuButton.each((btn) => {\n            components.push(btn);\n        });\n        const toggleExpandChildren = (button) => {\n            ancestor$1(button.element, '.tox-tree--directory').each((directoryEle) => {\n                button.getSystem().getByDom(directoryEle).each((directoryComp) => {\n                    const willExpand = !Toggling.isOn(directoryComp);\n                    Toggling.toggle(directoryComp);\n                    emitWith(button, 'expand-tree-node', { expanded: willExpand, node: directory.id });\n                });\n            });\n        };\n        return Button.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-tree--directory__label', 'tox-trbtn'].concat(visible ? ['tox-tree--directory__label--visible'] : []),\n            },\n            components,\n            action: toggleExpandChildren,\n            eventOrder: {\n                [keydown()]: [\n                    directoryLabelEventsId,\n                    'keying',\n                ]\n            },\n            buttonBehaviours: derive$1([\n                ...(visible ? [Tabstopping.config({})] : []),\n                config(directoryLabelEventsId, [\n                    run$1(keydown(), (comp, se) => {\n                        const isRightArrowKey = se.event.raw.code === 'ArrowRight';\n                        const isLeftArrowKey = se.event.raw.code === 'ArrowLeft';\n                        if (isRightArrowKey && noChildren) {\n                            se.stop();\n                        }\n                        if (isRightArrowKey || isLeftArrowKey) {\n                            ancestor$1(comp.element, '.tox-tree--directory').each((directoryEle) => {\n                                comp.getSystem().getByDom(directoryEle).each((directoryComp) => {\n                                    if (!Toggling.isOn(directoryComp) && isRightArrowKey || Toggling.isOn(directoryComp) && isLeftArrowKey) {\n                                        toggleExpandChildren(comp);\n                                        se.stop();\n                                    }\n                                    else if (isLeftArrowKey && !Toggling.isOn(directoryComp)) {\n                                        ancestor$1(directoryComp.element, '.tox-tree--directory').each((parentDirElement) => {\n                                            child(parentDirElement, '.tox-tree--directory__label').each((parentDirLabelElement) => {\n                                                directoryComp.getSystem().getByDom(parentDirLabelElement).each(Focusing.focus);\n                                            });\n                                        });\n                                        se.stop();\n                                    }\n                                });\n                            });\n                        }\n                    })\n                ])\n            ])\n        });\n    };\n    const renderDirectoryChildren = ({ children, onLeafAction, visible, treeId, expandedIds, selectedId, backstage }) => {\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-tree--directory__children'],\n            },\n            components: children.map((item) => {\n                return item.type === 'leaf' ?\n                    renderLeafLabel({ leaf: item, selectedId, onLeafAction, visible, treeId, backstage }) :\n                    renderDirectory({ directory: item, expandedIds, selectedId, onLeafAction, labelTabstopping: visible, treeId, backstage });\n            }),\n            behaviours: derive$1([\n                Sliding.config({\n                    dimension: {\n                        property: 'height'\n                    },\n                    closedClass: 'tox-tree--directory__children--closed',\n                    openClass: 'tox-tree--directory__children--open',\n                    growingClass: 'tox-tree--directory__children--growing',\n                    shrinkingClass: 'tox-tree--directory__children--shrinking',\n                    expanded: visible,\n                }),\n                Replacing.config({})\n            ])\n        };\n    };\n    const directoryEventsId = generate$6('directory-event-id');\n    const renderDirectory = ({ directory, onLeafAction, labelTabstopping, treeId, backstage, expandedIds, selectedId }) => {\n        const { children } = directory;\n        const expandedIdsCell = Cell(expandedIds);\n        const computedChildrenComponents = (visible) => children.map((item) => {\n            return item.type === 'leaf' ?\n                renderLeafLabel({ leaf: item, selectedId, onLeafAction, visible, treeId, backstage }) :\n                renderDirectory({ directory: item, expandedIds: expandedIdsCell.get(), selectedId, onLeafAction, labelTabstopping: visible, treeId, backstage });\n        });\n        const childrenVisible = expandedIds.includes(directory.id);\n        return ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-tree--directory'],\n                attributes: {\n                    role: 'treeitem'\n                }\n            },\n            components: [\n                renderDirectoryLabel({ directory, visible: labelTabstopping, noChildren: directory.children.length === 0, backstage }),\n                renderDirectoryChildren({ children, expandedIds, selectedId, onLeafAction, visible: childrenVisible, treeId, backstage })\n            ],\n            behaviours: derive$1([\n                config(directoryEventsId, [\n                    runOnAttached((comp, _se) => {\n                        Toggling.set(comp, childrenVisible);\n                    }),\n                    run$1('expand-tree-node', (_cmp, se) => {\n                        const { expanded, node } = se.event;\n                        expandedIdsCell.set(expanded ?\n                            [...expandedIdsCell.get(), node] :\n                            expandedIdsCell.get().filter((id) => id !== node));\n                    }),\n                ]),\n                Toggling.config({\n                    ...(directory.children.length > 0 ? {\n                        aria: {\n                            mode: 'expanded',\n                        },\n                    } : {}),\n                    toggleClass: 'tox-tree--directory--expanded',\n                    onToggled: (comp, childrenVisible) => {\n                        const childrenComp = comp.components()[1];\n                        const newChildren = computedChildrenComponents(childrenVisible);\n                        if (childrenVisible) {\n                            Sliding.grow(childrenComp);\n                        }\n                        else {\n                            Sliding.shrink(childrenComp);\n                        }\n                        Replacing.set(childrenComp, newChildren);\n                    },\n                }),\n            ])\n        });\n    };\n    const treeEventsId = generate$6('tree-event-id');\n    const renderTree = (spec, backstage) => {\n        const onLeafAction = spec.onLeafAction.getOr(noop);\n        const onToggleExpand = spec.onToggleExpand.getOr(noop);\n        const defaultExpandedIds = spec.defaultExpandedIds;\n        const expandedIds = Cell(defaultExpandedIds);\n        const selectedIdCell = Cell(spec.defaultSelectedId);\n        const treeId = generate$6('tree-id');\n        const children = (selectedId, expandedIds) => spec.items.map((item) => {\n            return item.type === 'leaf' ?\n                renderLeafLabel({ leaf: item, selectedId, onLeafAction, visible: true, treeId, backstage }) :\n                renderDirectory({ directory: item, selectedId, onLeafAction, expandedIds, labelTabstopping: true, treeId, backstage });\n        });\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-tree'],\n                attributes: {\n                    role: 'tree'\n                }\n            },\n            components: children(selectedIdCell.get(), expandedIds.get()),\n            behaviours: derive$1([\n                Keying.config({\n                    mode: 'flow',\n                    selector: '.tox-tree--leaf__label--visible, .tox-tree--directory__label--visible',\n                    cycles: false,\n                }),\n                config(treeEventsId, [\n                    run$1('expand-tree-node', (_cmp, se) => {\n                        const { expanded, node } = se.event;\n                        expandedIds.set(expanded ?\n                            [...expandedIds.get(), node] :\n                            expandedIds.get().filter((id) => id !== node));\n                        onToggleExpand(expandedIds.get(), { expanded, node });\n                    })\n                ]),\n                Receiving.config({\n                    channels: {\n                        [`update-active-item-${treeId}`]: {\n                            onReceive: (comp, message) => {\n                                selectedIdCell.set(Optional.some(message.value));\n                                Replacing.set(comp, children(Optional.some(message.value), expandedIds.get()));\n                            }\n                        }\n                    }\n                }),\n                Replacing.config({})\n            ])\n        };\n    };\n\n    const renderCommonSpec = (spec, actionOpt, extraBehaviours = [], dom, components, tooltip, providersBackstage) => {\n        const action = actionOpt.fold(() => ({}), (action) => ({\n            action\n        }));\n        const common = {\n            buttonBehaviours: derive$1([\n                DisablingConfigs.item(() => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context)),\n                Tabstopping.config({}),\n                ...tooltip.map((t) => Tooltipping.config(providersBackstage.tooltips.getConfig({\n                    tooltipText: providersBackstage.translate(t)\n                }))).toArray(),\n                config('button press', [\n                    preventDefault('click')\n                ])\n            ].concat(extraBehaviours)),\n            eventOrder: {\n                click: ['button press', 'alloy.base.behaviour'],\n                mousedown: ['button press', 'alloy.base.behaviour']\n            },\n            ...action\n        };\n        const domFinal = deepMerge(common, { dom });\n        return deepMerge(domFinal, { components });\n    };\n    // An IconButton just seems to be a button that *cannot* have text, but\n    // can have a tooltip. It's only used for the More Drawer button at the moment.\n    const renderIconButtonSpec = (spec, action, providersBackstage, extraBehaviours = [], btnName) => {\n        const tooltipAttributes = spec.tooltip.map((tooltip) => ({\n            'aria-label': providersBackstage.translate(tooltip),\n        })).getOr({});\n        const dom = {\n            tag: 'button',\n            classes: [\"tox-tbtn\" /* ToolbarButtonClasses.Button */],\n            attributes: { ...tooltipAttributes, 'data-mce-name': btnName }\n        };\n        const icon = spec.icon.map((iconName) => renderIconFromPack$1(iconName, providersBackstage.icons));\n        const components = componentRenderPipeline([\n            icon\n        ]);\n        return renderCommonSpec(spec, action, extraBehaviours, dom, components, spec.tooltip, providersBackstage);\n    };\n    const calculateClassesFromButtonType = (buttonType) => {\n        switch (buttonType) {\n            case 'primary':\n                return ['tox-button'];\n            case 'toolbar':\n                return ['tox-tbtn'];\n            case 'secondary':\n            default:\n                return ['tox-button', 'tox-button--secondary'];\n        }\n    };\n    // Maybe the list of extraBehaviours is better than doing a Merger.deepMerge that\n    // we do elsewhere? Not sure.\n    const renderButtonSpec = (spec, action, providersBackstage, extraBehaviours = [], extraClasses = []) => {\n        // It's a bit confusing that this is called text. It seems to be a tooltip. Although I can see\n        // that it's used if there is no icon\n        const translatedText = providersBackstage.translate(spec.text);\n        const icon = spec.icon.map((iconName) => renderIconFromPack$1(iconName, providersBackstage.icons));\n        const components = [icon.getOrThunk(() => text$2(translatedText))];\n        // The old default is based on the now-deprecated 'primary' property. `buttonType` takes precedence now.\n        const buttonType = spec.buttonType.getOr(!spec.primary && !spec.borderless ? 'secondary' : 'primary');\n        const baseClasses = calculateClassesFromButtonType(buttonType);\n        const classes = [\n            ...baseClasses,\n            ...icon.isSome() ? ['tox-button--icon'] : [],\n            ...spec.borderless ? ['tox-button--naked'] : [],\n            ...extraClasses\n        ];\n        const dom = {\n            tag: 'button',\n            classes,\n            attributes: {\n                'aria-label': translatedText,\n                'data-mce-name': spec.text\n            }\n        };\n        // Only provide a tooltip if we are using an icon. This is because above, a button is only an icon\n        // or text, and not both.\n        const optTooltip = spec.icon.map(constant$1(translatedText));\n        return renderCommonSpec(spec, action, extraBehaviours, dom, components, optTooltip, providersBackstage);\n    };\n    // This actually seems to be a button on the dialog for UrlInput only (browse). Interesting.\n    const renderButton$1 = (spec, action, providersBackstage, extraBehaviours = [], extraClasses = []) => {\n        const buttonSpec = renderButtonSpec(spec, Optional.some(action), providersBackstage, extraBehaviours, extraClasses);\n        return Button.sketch(buttonSpec);\n    };\n    const getAction = (name, buttonType) => (comp) => {\n        if (buttonType === 'custom') {\n            emitWith(comp, formActionEvent, {\n                name,\n                value: {}\n            });\n        }\n        else if (buttonType === 'submit') {\n            emit(comp, formSubmitEvent);\n        }\n        else if (buttonType === 'cancel') {\n            emit(comp, formCancelEvent);\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.error('Unknown button type: ', buttonType);\n        }\n    };\n    const isMenuFooterButtonSpec = (spec, buttonType) => buttonType === 'menu';\n    const isNormalFooterButtonSpec = (spec, buttonType) => buttonType === 'custom' || buttonType === 'cancel' || buttonType === 'submit';\n    const isToggleButtonSpec = (spec, buttonType) => buttonType === 'togglebutton';\n    const renderToggleButton = (spec, providers, btnName) => {\n        var _a, _b;\n        const optMemIcon = spec.icon\n            .map((memIcon) => renderReplaceableIconFromPack(memIcon, providers.icons))\n            .map(record);\n        const action = (comp) => {\n            emitWith(comp, formActionEvent, {\n                name: spec.name,\n                value: {\n                    setIcon: (newIcon) => {\n                        optMemIcon.map((memIcon) => memIcon.getOpt(comp).each((displayIcon) => {\n                            Replacing.set(displayIcon, [\n                                renderReplaceableIconFromPack(newIcon, providers.icons)\n                            ]);\n                        }));\n                    }\n                }\n            });\n        };\n        // The old default is based on the now-deprecated 'primary' property. `buttonType` takes precedence now.\n        const buttonType = spec.buttonType.getOr(!spec.primary ? 'secondary' : 'primary');\n        const buttonSpec = {\n            ...spec,\n            name: (_a = spec.name) !== null && _a !== void 0 ? _a : '',\n            primary: buttonType === 'primary',\n            tooltip: spec.tooltip,\n            enabled: (_b = spec.enabled) !== null && _b !== void 0 ? _b : false,\n            borderless: false\n        };\n        const tooltipAttributes = buttonSpec.tooltip.or(spec.text).map((tooltip) => ({\n            'aria-label': providers.translate(tooltip),\n        })).getOr({});\n        const buttonTypeClasses = calculateClassesFromButtonType(buttonType !== null && buttonType !== void 0 ? buttonType : 'secondary');\n        const showIconAndText = spec.icon.isSome() && spec.text.isSome();\n        const dom = {\n            tag: 'button',\n            classes: [\n                ...buttonTypeClasses.concat(spec.icon.isSome() ? ['tox-button--icon'] : []),\n                ...(spec.active ? [\"tox-button--enabled\" /* ViewButtonClasses.Ticked */] : []),\n                ...(showIconAndText ? ['tox-button--icon-and-text'] : [])\n            ],\n            attributes: {\n                ...tooltipAttributes,\n                ...(isNonNullable(btnName) ? { 'data-mce-name': btnName } : {})\n            }\n        };\n        const extraBehaviours = [];\n        const translatedText = providers.translate(spec.text.getOr(''));\n        const translatedTextComponed = text$2(translatedText);\n        const iconComp = componentRenderPipeline([optMemIcon.map((memIcon) => memIcon.asSpec())]);\n        const components = [\n            ...iconComp,\n            ...(spec.text.isSome() ? [translatedTextComponed] : [])\n        ];\n        const iconButtonSpec = renderCommonSpec(buttonSpec, Optional.some(action), extraBehaviours, dom, components, spec.tooltip, providers);\n        return Button.sketch(iconButtonSpec);\n    };\n    const renderFooterButton = (spec, buttonType, backstage) => {\n        if (isMenuFooterButtonSpec(spec, buttonType)) {\n            const getButton = () => memButton;\n            const menuButtonSpec = spec;\n            const fixedSpec = {\n                ...spec,\n                buttonType: 'default',\n                type: 'menubutton',\n                // Currently, dialog-based menu buttons cannot be searchable.\n                search: Optional.none(),\n                onSetup: (api) => {\n                    api.setEnabled(spec.enabled);\n                    return noop;\n                },\n                fetch: getFetch(menuButtonSpec.items, getButton, backstage)\n            };\n            const memButton = record(renderMenuButton(fixedSpec, \"tox-tbtn\" /* ToolbarButtonClasses.Button */, backstage, Optional.none(), true, spec.text.or(spec.tooltip).getOrUndefined()));\n            return memButton.asSpec();\n        }\n        else if (isNormalFooterButtonSpec(spec, buttonType)) {\n            const action = getAction(spec.name, buttonType);\n            const buttonSpec = {\n                ...spec,\n                context: buttonType === 'cancel' ? 'any' : spec.context,\n                borderless: false\n            };\n            return renderButton$1(buttonSpec, action, backstage.shared.providers, []);\n        }\n        else if (isToggleButtonSpec(spec, buttonType)) {\n            return renderToggleButton(spec, backstage.shared.providers, spec.text.or(spec.tooltip).getOrUndefined());\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.error('Unknown footer button type: ', buttonType);\n            throw new Error('Unknown footer button type');\n        }\n    };\n    const renderDialogButton = (spec, providersBackstage) => {\n        const action = getAction(spec.name, 'custom');\n        return renderFormField(Optional.none(), FormField.parts.field({\n            factory: Button,\n            ...renderButtonSpec(spec, Optional.some(action), providersBackstage, [\n                memory(''),\n                ComposingConfigs.self()\n            ])\n        }));\n    };\n\n    const separator$1 = {\n        type: 'separator'\n    };\n    const toMenuItem = (target) => ({\n        type: 'menuitem',\n        value: target.url,\n        text: target.title,\n        meta: {\n            attach: target.attach\n        },\n        onAction: noop\n    });\n    const staticMenuItem = (title, url) => ({\n        type: 'menuitem',\n        value: url,\n        text: title,\n        meta: {\n            attach: undefined\n        },\n        onAction: noop\n    });\n    const toMenuItems = (targets) => map$2(targets, toMenuItem);\n    const filterLinkTargets = (type, targets) => filter$2(targets, (target) => target.type === type);\n    const filteredTargets = (type, targets) => toMenuItems(filterLinkTargets(type, targets));\n    const headerTargets = (linkInfo) => filteredTargets('header', linkInfo.targets);\n    const anchorTargets = (linkInfo) => filteredTargets('anchor', linkInfo.targets);\n    const anchorTargetTop = (linkInfo) => Optional.from(linkInfo.anchorTop).map((url) => staticMenuItem('<top>', url)).toArray();\n    const anchorTargetBottom = (linkInfo) => Optional.from(linkInfo.anchorBottom).map((url) => staticMenuItem('<bottom>', url)).toArray();\n    const historyTargets = (history) => map$2(history, (url) => staticMenuItem(url, url));\n    const joinMenuLists = (items) => {\n        return foldl(items, (a, b) => {\n            const bothEmpty = a.length === 0 || b.length === 0;\n            return bothEmpty ? a.concat(b) : a.concat(separator$1, b);\n        }, []);\n    };\n    const filterByQuery = (term, menuItems) => {\n        const lowerCaseTerm = term.toLowerCase();\n        return filter$2(menuItems, (item) => {\n            var _a;\n            const text = item.meta !== undefined && item.meta.text !== undefined ? item.meta.text : item.text;\n            const value = (_a = item.value) !== null && _a !== void 0 ? _a : '';\n            return contains$1(text.toLowerCase(), lowerCaseTerm) || contains$1(value.toLowerCase(), lowerCaseTerm);\n        });\n    };\n\n    const getItems = (fileType, input, urlBackstage) => {\n        var _a, _b;\n        const urlInputValue = Representing.getValue(input);\n        const term = (_b = (_a = urlInputValue === null || urlInputValue === void 0 ? void 0 : urlInputValue.meta) === null || _a === void 0 ? void 0 : _a.text) !== null && _b !== void 0 ? _b : urlInputValue.value;\n        const info = urlBackstage.getLinkInformation();\n        return info.fold(() => [], (linkInfo) => {\n            const history = filterByQuery(term, historyTargets(urlBackstage.getHistory(fileType)));\n            return fileType === 'file' ? joinMenuLists([\n                history,\n                filterByQuery(term, headerTargets(linkInfo)),\n                filterByQuery(term, flatten([\n                    anchorTargetTop(linkInfo),\n                    anchorTargets(linkInfo),\n                    anchorTargetBottom(linkInfo)\n                ]))\n            ])\n                : history;\n        });\n    };\n    const errorId = generate$6('aria-invalid');\n    const renderUrlInput = (spec, backstage, urlBackstage, initialData) => {\n        const providersBackstage = backstage.shared.providers;\n        const updateHistory = (component) => {\n            const urlEntry = Representing.getValue(component);\n            urlBackstage.addToHistory(urlEntry.value, spec.filetype);\n        };\n        // TODO: Make alloy's typeahead only swallow enter and escape if menu is open\n        const typeaheadSpec = {\n            ...initialData.map((initialData) => ({ initialData })).getOr({}),\n            dismissOnBlur: true,\n            inputClasses: ['tox-textfield'],\n            sandboxClasses: ['tox-dialog__popups'],\n            inputAttributes: {\n                'aria-errormessage': errorId,\n                'type': 'url'\n            },\n            minChars: 0,\n            responseTime: 0,\n            fetch: (input) => {\n                const items = getItems(spec.filetype, input, urlBackstage);\n                const tdata = build(items, ItemResponse$1.BUBBLE_TO_SANDBOX, backstage, {\n                    isHorizontalMenu: false,\n                    search: Optional.none()\n                });\n                return Future.pure(tdata);\n            },\n            getHotspot: (comp) => memUrlBox.getOpt(comp),\n            onSetValue: (comp, _newValue) => {\n                if (comp.hasConfigured(Invalidating)) {\n                    Invalidating.run(comp).get(noop);\n                }\n            },\n            typeaheadBehaviours: derive$1([\n                ...urlBackstage.getValidationHandler().map((handler) => Invalidating.config({\n                    getRoot: (comp) => parentElement(comp.element),\n                    invalidClass: 'tox-control-wrap--status-invalid',\n                    notify: {\n                        onInvalid: (comp, err) => {\n                            memInvalidIcon.getOpt(comp).each((invalidComp) => {\n                                set$9(invalidComp.element, 'title', providersBackstage.translate(err));\n                            });\n                        }\n                    },\n                    validator: {\n                        validate: (input) => {\n                            const urlEntry = Representing.getValue(input);\n                            return FutureResult.nu((completer) => {\n                                handler({ type: spec.filetype, url: urlEntry.value }, (validation) => {\n                                    if (validation.status === 'invalid') {\n                                        const err = Result.error(validation.message);\n                                        completer(err);\n                                    }\n                                    else {\n                                        const val = Result.value(validation.message);\n                                        completer(val);\n                                    }\n                                });\n                            });\n                        },\n                        validateOnLoad: false\n                    }\n                })).toArray(),\n                Disabling.config({\n                    disabled: () => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable\n                }),\n                Tabstopping.config({}),\n                config('urlinput-events', \n                // We want to get fast feedback for the link dialog, but not sure about others\n                [\n                    run$1(input(), (comp) => {\n                        const currentValue = get$5(comp.element);\n                        const trimmedValue = currentValue.trim();\n                        if (trimmedValue !== currentValue) {\n                            set$4(comp.element, trimmedValue);\n                        }\n                        if (spec.filetype === 'file') {\n                            emitWith(comp, formChangeEvent, { name: spec.name });\n                        }\n                    }),\n                    run$1(change(), (comp) => {\n                        emitWith(comp, formChangeEvent, { name: spec.name });\n                        updateHistory(comp);\n                    }),\n                    run$1(postPaste(), (comp) => {\n                        emitWith(comp, formChangeEvent, { name: spec.name });\n                        updateHistory(comp);\n                    })\n                ])\n            ]),\n            eventOrder: {\n                [input()]: ['streaming', 'urlinput-events', 'invalidating']\n            },\n            model: {\n                getDisplayText: (itemData) => itemData.value,\n                selectsOver: false,\n                populateFromBrowse: false\n            },\n            markers: {\n                openClass: 'tox-textfield--popup-open'\n            },\n            lazySink: backstage.shared.getSink,\n            parts: {\n                menu: part(false, 1, 'normal')\n            },\n            onExecute: (_menu, component, _entry) => {\n                emitWith(component, formSubmitEvent, {});\n            },\n            onItemExecute: (typeahead, _sandbox, _item, _value) => {\n                updateHistory(typeahead);\n                emitWith(typeahead, formChangeEvent, { name: spec.name });\n            }\n        };\n        const pField = FormField.parts.field({\n            ...typeaheadSpec,\n            factory: Typeahead\n        });\n        const pLabel = spec.label.map((label) => renderLabel$3(label, providersBackstage));\n        // TODO: Consider a way of merging with Checkbox.\n        const makeIcon = (name, errId, icon = name, label = name) => render$4(icon, {\n            tag: 'div',\n            classes: ['tox-icon', 'tox-control-wrap__status-icon-' + name],\n            attributes: {\n                'title': providersBackstage.translate(label),\n                'aria-live': 'polite',\n                ...errId.fold(() => ({}), (id) => ({ id }))\n            }\n        }, providersBackstage.icons);\n        const memInvalidIcon = record(makeIcon('invalid', Optional.some(errorId), 'warning'));\n        const memStatus = record({\n            dom: {\n                tag: 'div',\n                classes: ['tox-control-wrap__status-icon-wrap']\n            },\n            components: [\n                // Include the 'valid' and 'unknown' icons here only if they are to be displayed\n                memInvalidIcon.asSpec()\n            ]\n        });\n        const optUrlPicker = urlBackstage.getUrlPicker(spec.filetype);\n        const browseUrlEvent = generate$6('browser.url.event');\n        const memUrlBox = record({\n            dom: {\n                tag: 'div',\n                classes: ['tox-control-wrap']\n            },\n            components: [pField, memStatus.asSpec()],\n            behaviours: derive$1([\n                Disabling.config({\n                    disabled: () => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable\n                })\n            ])\n        });\n        const memUrlPickerButton = record(renderButton$1({\n            context: spec.context,\n            name: spec.name,\n            icon: Optional.some('browse'),\n            text: spec.picker_text.or(spec.label).getOr(''),\n            enabled: spec.enabled,\n            primary: false,\n            buttonType: Optional.none(),\n            borderless: true\n        }, (component) => emit(component, browseUrlEvent), providersBackstage, [], ['tox-browse-url']));\n        const controlHWrapper = () => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-form__controls-h-stack']\n            },\n            components: flatten([\n                [memUrlBox.asSpec()],\n                optUrlPicker.map(() => memUrlPickerButton.asSpec()).toArray()\n            ])\n        });\n        const openUrlPicker = (comp) => {\n            Composing.getCurrent(comp).each((field) => {\n                const componentData = Representing.getValue(field);\n                const urlData = {\n                    fieldname: spec.name,\n                    ...componentData\n                };\n                optUrlPicker.each((picker) => {\n                    picker(urlData).get((chosenData) => {\n                        Representing.setValue(field, chosenData);\n                        emitWith(comp, formChangeEvent, { name: spec.name });\n                    });\n                });\n            });\n        };\n        return FormField.sketch({\n            dom: renderFormFieldDom(),\n            components: pLabel.toArray().concat([\n                controlHWrapper()\n            ]),\n            fieldBehaviours: derive$1([\n                Disabling.config({\n                    disabled: () => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable,\n                    onDisabled: (comp) => {\n                        FormField.getField(comp).each(Disabling.disable);\n                        memUrlPickerButton.getOpt(comp).each(Disabling.disable);\n                    },\n                    onEnabled: (comp) => {\n                        FormField.getField(comp).each(Disabling.enable);\n                        memUrlPickerButton.getOpt(comp).each(Disabling.enable);\n                    }\n                }),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context)),\n                config('url-input-events', [\n                    run$1(browseUrlEvent, openUrlPicker)\n                ])\n            ])\n        });\n    };\n\n    const renderAlertBanner = (spec, providersBackstage) => {\n        const icon = get(spec.icon, providersBackstage.icons);\n        // For using the alert banner inside a dialog\n        return Container.sketch({\n            dom: {\n                tag: 'div',\n                attributes: {\n                    role: 'alert'\n                },\n                classes: ['tox-notification', 'tox-notification--in', `tox-notification--${spec.level}`]\n            },\n            components: [\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-notification__icon'],\n                        innerHtml: !spec.url ? icon : undefined\n                    },\n                    components: spec.url ? [\n                        Button.sketch({\n                            dom: {\n                                tag: 'button',\n                                classes: ['tox-button', 'tox-button--naked', 'tox-button--icon'],\n                                innerHtml: icon,\n                                attributes: {\n                                    title: providersBackstage.translate(spec.iconTooltip)\n                                }\n                            },\n                            // TODO: aria label this button!\n                            action: (comp) => emitWith(comp, formActionEvent, { name: 'alert-banner', value: spec.url }),\n                            buttonBehaviours: derive$1([\n                                addFocusableBehaviour()\n                            ])\n                        })\n                    ] : undefined\n                },\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-notification__body'],\n                        // TODO: AP-247: Escape this text so that it can't contain script tags\n                        innerHtml: providersBackstage.translate(spec.text)\n                    }\n                }\n            ]\n        });\n    };\n\n    const renderCheckbox = (spec, providerBackstage, initialData) => {\n        const toggleCheckboxHandler = (comp) => {\n            comp.element.dom.click();\n            return Optional.some(true);\n        };\n        const pField = FormField.parts.field({\n            factory: { sketch: identity },\n            dom: {\n                tag: 'input',\n                classes: ['tox-checkbox__input'],\n                attributes: {\n                    type: 'checkbox'\n                }\n            },\n            behaviours: derive$1([\n                ComposingConfigs.self(),\n                Disabling.config({\n                    disabled: () => !spec.enabled || providerBackstage.checkUiComponentContext(spec.context).shouldDisable,\n                    onDisabled: (component) => {\n                        parentElement(component.element).each((element) => add$2(element, 'tox-checkbox--disabled'));\n                    },\n                    onEnabled: (component) => {\n                        parentElement(component.element).each((element) => remove$3(element, 'tox-checkbox--disabled'));\n                    }\n                }),\n                Tabstopping.config({}),\n                Focusing.config({}),\n                withElement(initialData, get$9, set$5),\n                Keying.config({\n                    mode: 'special',\n                    onEnter: toggleCheckboxHandler,\n                    onSpace: toggleCheckboxHandler,\n                    stopSpaceKeyup: true\n                }),\n                config('checkbox-events', [\n                    run$1(change(), (component, _) => {\n                        emitWith(component, formChangeEvent, { name: spec.name });\n                    })\n                ])\n            ])\n        });\n        const pLabel = FormField.parts.label({\n            dom: {\n                tag: 'span',\n                classes: ['tox-checkbox__label']\n            },\n            components: [\n                text$2(providerBackstage.translate(spec.label))\n            ],\n            behaviours: derive$1([\n                Unselecting.config({})\n            ])\n        });\n        const makeIcon = (className) => {\n            const iconName = className === 'checked' ? 'selected' : 'unselected';\n            return render$4(iconName, { tag: 'span', classes: ['tox-icon', 'tox-checkbox-icon__' + className] }, providerBackstage.icons);\n        };\n        const memIcons = record({\n            dom: {\n                tag: 'div',\n                classes: ['tox-checkbox__icons']\n            },\n            components: [\n                makeIcon('checked'),\n                makeIcon('unchecked')\n            ]\n        });\n        return FormField.sketch({\n            dom: {\n                tag: 'label',\n                classes: ['tox-checkbox']\n            },\n            components: [\n                pField,\n                memIcons.asSpec(),\n                pLabel\n            ],\n            fieldBehaviours: derive$1([\n                Disabling.config({\n                    disabled: () => !spec.enabled || providerBackstage.checkUiComponentContext(spec.context).shouldDisable,\n                }),\n                toggleOnReceive(() => providerBackstage.checkUiComponentContext(spec.context))\n            ])\n        });\n    };\n\n    const renderHtmlPanel = (spec, providersBackstage) => {\n        const classes = ['tox-form__group', ...(spec.stretched ? ['tox-form__group--stretched'] : [])];\n        const init = config('htmlpanel', [\n            runOnAttached((comp) => {\n                spec.onInit(comp.element.dom);\n            })\n        ]);\n        if (spec.presets === 'presentation') {\n            return Container.sketch({\n                dom: {\n                    tag: 'div',\n                    classes,\n                    innerHtml: spec.html\n                },\n                containerBehaviours: derive$1([\n                    Tooltipping.config({\n                        ...providersBackstage.tooltips.getConfig({\n                            tooltipText: '',\n                            onShow: (comp) => {\n                                descendant(comp.element, '[data-mce-tooltip]:hover').orThunk(() => search(comp.element))\n                                    .each((current) => {\n                                    getOpt(current, 'data-mce-tooltip').each((text) => {\n                                        Tooltipping.setComponents(comp, providersBackstage.tooltips.getComponents({ tooltipText: text }));\n                                    });\n                                });\n                            },\n                        }),\n                        mode: 'children-normal',\n                        anchor: (comp) => ({\n                            type: 'node',\n                            node: descendant(comp.element, '[data-mce-tooltip]:hover')\n                                .orThunk(() => search(comp.element).filter((current) => getOpt(current, 'data-mce-tooltip').isSome())),\n                            root: comp.element,\n                            layouts: {\n                                onLtr: constant$1([south$2, north$2, southeast$2, northeast$2, southwest$2, northwest$2]),\n                                onRtl: constant$1([south$2, north$2, southeast$2, northeast$2, southwest$2, northwest$2])\n                            },\n                            bubble: nu$6(0, -2, {}),\n                        })\n                    }),\n                    init\n                ])\n            });\n        }\n        else {\n            return Container.sketch({\n                dom: {\n                    tag: 'div',\n                    classes,\n                    innerHtml: spec.html,\n                    attributes: {\n                        role: 'document'\n                    }\n                },\n                containerBehaviours: derive$1([\n                    Tabstopping.config({}),\n                    Focusing.config({}),\n                    init\n                ])\n            });\n        }\n    };\n\n    const make$1 = (render) => {\n        return (parts, spec, dialogData, backstage, getCompByName) => get$h(spec, 'name').fold(() => render(spec, backstage, Optional.none(), getCompByName), (fieldName) => parts.field(fieldName, render(spec, backstage, get$h(dialogData, fieldName), getCompByName)));\n    };\n    const makeIframe = (render) => (parts, spec, dialogData, backstage, getCompByName) => {\n        const iframeSpec = deepMerge(spec, {\n            source: 'dynamic'\n        });\n        return make$1(render)(parts, iframeSpec, dialogData, backstage, getCompByName);\n    };\n    const factories = {\n        bar: make$1((spec, backstage) => renderBar(spec, backstage.shared)),\n        collection: make$1((spec, backstage, data) => renderCollection(spec, backstage.shared.providers, data)),\n        alertbanner: make$1((spec, backstage) => renderAlertBanner(spec, backstage.shared.providers)),\n        input: make$1((spec, backstage, data) => renderInput(spec, backstage.shared.providers, data)),\n        textarea: make$1((spec, backstage, data) => renderTextarea(spec, backstage.shared.providers, data)),\n        label: make$1((spec, backstage, _data, getCompByName) => renderLabel$2(spec, backstage.shared, getCompByName)),\n        iframe: makeIframe((spec, backstage, data) => renderIFrame(spec, backstage.shared.providers, data)),\n        button: make$1((spec, backstage) => renderDialogButton(spec, backstage.shared.providers)),\n        checkbox: make$1((spec, backstage, data) => renderCheckbox(spec, backstage.shared.providers, data)),\n        colorinput: make$1((spec, backstage, data) => renderColorInput(spec, backstage.shared, backstage.colorinput, data)),\n        colorpicker: make$1((spec, backstage, data) => renderColorPicker(spec, backstage.shared.providers, data)), // Not sure if this needs name.\n        dropzone: make$1((spec, backstage, data) => renderDropZone(spec, backstage.shared.providers, data)),\n        grid: make$1((spec, backstage) => renderGrid(spec, backstage.shared)),\n        listbox: make$1((spec, backstage, data) => renderListBox(spec, backstage, data)),\n        selectbox: make$1((spec, backstage, data) => renderSelectBox(spec, backstage.shared.providers, data)),\n        sizeinput: make$1((spec, backstage) => renderSizeInput(spec, backstage.shared.providers)),\n        slider: make$1((spec, backstage, data) => renderSlider(spec, backstage.shared.providers, data)),\n        urlinput: make$1((spec, backstage, data) => renderUrlInput(spec, backstage, backstage.urlinput, data)),\n        customeditor: make$1(renderCustomEditor),\n        htmlpanel: make$1((spec, backstage) => renderHtmlPanel(spec, backstage.shared.providers)),\n        imagepreview: make$1((spec, _, data) => renderImagePreview(spec, data)),\n        table: make$1((spec, backstage) => renderTable(spec, backstage.shared.providers)),\n        tree: make$1((spec, backstage) => renderTree(spec, backstage)),\n        panel: make$1((spec, backstage) => renderPanel(spec, backstage))\n    };\n    const noFormParts = {\n        // This is cast as we only actually want an alloy spec and don't need the actual part here\n        field: (_name, spec) => spec,\n        record: constant$1([])\n    };\n    const interpretInForm = (parts, spec, dialogData, oldBackstage, getCompByName) => {\n        // Now, we need to update the backstage to use the parts variant.\n        const newBackstage = deepMerge(oldBackstage, {\n            // Add the interpreter based on the form parts.\n            shared: {\n                interpreter: (childSpec) => interpretParts(parts, childSpec, dialogData, newBackstage, getCompByName)\n            }\n        });\n        return interpretParts(parts, spec, dialogData, newBackstage, getCompByName);\n    };\n    const interpretParts = (parts, spec, dialogData, backstage, getCompByName) => get$h(factories, spec.type).fold(() => {\n        console.error(`Unknown factory type \"${spec.type}\", defaulting to container: `, spec);\n        return spec;\n    }, (factory) => factory(parts, spec, dialogData, backstage, getCompByName));\n    const interpretWithoutForm = (spec, dialogData, backstage, getCompByName) => interpretParts(noFormParts, spec, dialogData, backstage, getCompByName);\n\n    const bubbleAlignments$2 = {\n        valignCentre: [],\n        alignCentre: [],\n        alignLeft: [],\n        alignRight: [],\n        right: [],\n        left: [],\n        bottom: [],\n        top: []\n    };\n    const getInlineDialogAnchor = (contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor) => {\n        const bubbleSize = 12;\n        const overrides = {\n            maxHeightFunction: expandable$1()\n        };\n        const editableAreaAnchor = () => ({\n            type: 'node',\n            root: getContentContainer(getRootNode(contentAreaElement())),\n            node: Optional.from(contentAreaElement()),\n            bubble: nu$6(bubbleSize, bubbleSize, bubbleAlignments$2),\n            layouts: {\n                onRtl: () => [northeast$1],\n                onLtr: () => [northwest$1]\n            },\n            overrides\n        });\n        const standardAnchor = () => ({\n            type: 'hotspot',\n            hotspot: lazyAnchorbar(),\n            bubble: nu$6(-bubbleSize, bubbleSize, bubbleAlignments$2),\n            layouts: {\n                onRtl: () => [southeast$2, southwest$2, south$2],\n                onLtr: () => [southwest$2, southeast$2, south$2]\n            },\n            overrides\n        });\n        return () => lazyUseEditableAreaAnchor() ? editableAreaAnchor() : standardAnchor();\n    };\n    const getInlineBottomDialogAnchor = (inline, contentAreaElement, lazyBottomAnchorBar, lazyUseEditableAreaAnchor) => {\n        const bubbleSize = 12;\n        const overrides = {\n            maxHeightFunction: expandable$1()\n        };\n        const editableAreaAnchor = () => ({\n            type: 'node',\n            root: getContentContainer(getRootNode(contentAreaElement())),\n            node: Optional.from(contentAreaElement()),\n            bubble: nu$6(bubbleSize, bubbleSize, bubbleAlignments$2),\n            layouts: {\n                onRtl: () => [north$1],\n                onLtr: () => [north$1]\n            },\n            overrides\n        });\n        const standardAnchor = () => inline ?\n            ({\n                type: 'node',\n                root: getContentContainer(getRootNode(contentAreaElement())),\n                node: Optional.from(contentAreaElement()),\n                bubble: nu$6(0, -getOuter$1(contentAreaElement()), bubbleAlignments$2),\n                layouts: {\n                    onRtl: () => [north$2],\n                    onLtr: () => [north$2]\n                },\n                overrides\n            })\n            : ({\n                type: 'hotspot',\n                hotspot: lazyBottomAnchorBar(),\n                bubble: nu$6(0, 0, bubbleAlignments$2),\n                layouts: {\n                    onRtl: () => [north$2],\n                    onLtr: () => [north$2]\n                },\n                overrides\n            });\n        return () => lazyUseEditableAreaAnchor() ? editableAreaAnchor() : standardAnchor();\n    };\n    const getBannerAnchor = (contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor) => {\n        const editableAreaAnchor = () => ({\n            type: 'node',\n            root: getContentContainer(getRootNode(contentAreaElement())),\n            node: Optional.from(contentAreaElement()),\n            layouts: {\n                onRtl: () => [north$1],\n                onLtr: () => [north$1]\n            }\n        });\n        const standardAnchor = () => ({\n            type: 'hotspot',\n            hotspot: lazyAnchorbar(),\n            layouts: {\n                onRtl: () => [south$2],\n                onLtr: () => [south$2]\n            }\n        });\n        return () => lazyUseEditableAreaAnchor() ? editableAreaAnchor() : standardAnchor();\n    };\n    const getCursorAnchor = (editor, bodyElement) => () => ({\n        type: 'selection',\n        root: bodyElement(),\n        getSelection: () => {\n            const rng = editor.selection.getRng();\n            // Only return a range if there is a selection of more than one cell.\n            const selectedCells = editor.model.table.getSelectedCells();\n            if (selectedCells.length > 1) {\n                const firstCell = selectedCells[0];\n                const lastCell = selectedCells[selectedCells.length - 1];\n                const selectionTableCellRange = {\n                    firstCell: SugarElement.fromDom(firstCell),\n                    lastCell: SugarElement.fromDom(lastCell)\n                };\n                return Optional.some(selectionTableCellRange);\n            }\n            return Optional.some(SimSelection.range(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset));\n        }\n    });\n    const getNodeAnchor$1 = (bodyElement) => (element) => ({\n        type: 'node',\n        root: bodyElement(),\n        node: element\n    });\n    const getAnchors = (editor, lazyAnchorbar, lazyBottomAnchorBar, isToolbarTop) => {\n        const useFixedToolbarContainer = useFixedContainer(editor);\n        const bodyElement = () => SugarElement.fromDom(editor.getBody());\n        const contentAreaElement = () => SugarElement.fromDom(editor.getContentAreaContainer());\n        // If using fixed_toolbar_container or if the toolbar is positioned at the bottom\n        // of the editor, some things should anchor to the top of the editable area.\n        const lazyUseEditableAreaAnchor = () => useFixedToolbarContainer || !isToolbarTop();\n        return {\n            inlineDialog: getInlineDialogAnchor(contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor),\n            inlineBottomDialog: getInlineBottomDialogAnchor(editor.inline, contentAreaElement, lazyBottomAnchorBar, lazyUseEditableAreaAnchor),\n            banner: getBannerAnchor(contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor),\n            cursor: getCursorAnchor(editor, bodyElement),\n            node: getNodeAnchor$1(bodyElement)\n        };\n    };\n\n    const colorPicker = (editor) => (callback, value) => {\n        const dialog = colorPickerDialog(editor);\n        dialog(callback, value);\n    };\n    const hasCustomColors = (editor) => () => hasCustomColors$1(editor);\n    const getColors = (editor) => (id) => getColors$2(editor, id);\n    const getColorCols = (editor) => (id) => getColorCols$1(editor, id);\n    const ColorInputBackstage = (editor) => ({\n        colorPicker: colorPicker(editor),\n        hasCustomColors: hasCustomColors(editor),\n        getColors: getColors(editor),\n        getColorCols: getColorCols(editor)\n    });\n\n    const isDraggableModal = (editor) => () => isDraggableModal$1(editor);\n    const DialogBackstage = (editor) => ({\n        isDraggableModal: isDraggableModal(editor)\n    });\n\n    const HeaderBackstage = (editor) => {\n        const mode = Cell(isToolbarLocationBottom(editor) ? 'bottom' : 'top');\n        return {\n            isPositionedAtTop: () => mode.get() === 'top',\n            getDockingMode: mode.get,\n            setDockingMode: mode.set\n        };\n    };\n\n    const isNestedFormat = (format) => hasNonNullableKey(format, 'items');\n    const isFormatReference = (format) => hasNonNullableKey(format, 'format');\n    const defaultStyleFormats = [\n        {\n            title: 'Headings', items: [\n                { title: 'Heading 1', format: 'h1' },\n                { title: 'Heading 2', format: 'h2' },\n                { title: 'Heading 3', format: 'h3' },\n                { title: 'Heading 4', format: 'h4' },\n                { title: 'Heading 5', format: 'h5' },\n                { title: 'Heading 6', format: 'h6' }\n            ]\n        },\n        {\n            title: 'Inline', items: [\n                { title: 'Bold', format: 'bold' },\n                { title: 'Italic', format: 'italic' },\n                { title: 'Underline', format: 'underline' },\n                { title: 'Strikethrough', format: 'strikethrough' },\n                { title: 'Superscript', format: 'superscript' },\n                { title: 'Subscript', format: 'subscript' },\n                { title: 'Code', format: 'code' }\n            ]\n        },\n        {\n            title: 'Blocks', items: [\n                { title: 'Paragraph', format: 'p' },\n                { title: 'Blockquote', format: 'blockquote' },\n                { title: 'Div', format: 'div' },\n                { title: 'Pre', format: 'pre' }\n            ]\n        },\n        {\n            title: 'Align', items: [\n                { title: 'Left', format: 'alignleft' },\n                { title: 'Center', format: 'aligncenter' },\n                { title: 'Right', format: 'alignright' },\n                { title: 'Justify', format: 'alignjustify' }\n            ]\n        }\n    ];\n    // Note: Need to cast format below to expected type, as Obj.has uses \"K keyof T\", which doesn't work with aliases\n    const isNestedFormats = (format) => has$2(format, 'items');\n    const isBlockFormat = (format) => has$2(format, 'block');\n    const isInlineFormat = (format) => has$2(format, 'inline');\n    const isSelectorFormat = (format) => has$2(format, 'selector');\n    const mapFormats = (userFormats) => foldl(userFormats, (acc, fmt) => {\n        if (isNestedFormats(fmt)) {\n            // Map the child formats\n            const result = mapFormats(fmt.items);\n            return {\n                customFormats: acc.customFormats.concat(result.customFormats),\n                formats: acc.formats.concat([{ title: fmt.title, items: result.formats }])\n            };\n        }\n        else if (isInlineFormat(fmt) || isBlockFormat(fmt) || isSelectorFormat(fmt)) {\n            // Convert the format to a reference and add the original to the custom formats to be registered\n            const formatName = isString(fmt.name) ? fmt.name : fmt.title.toLowerCase();\n            const formatNameWithPrefix = `custom-${formatName}`;\n            return {\n                customFormats: acc.customFormats.concat([{ name: formatNameWithPrefix, format: fmt }]),\n                formats: acc.formats.concat([{ title: fmt.title, format: formatNameWithPrefix, icon: fmt.icon }])\n            };\n        }\n        else {\n            return { ...acc, formats: acc.formats.concat(fmt) };\n        }\n    }, { customFormats: [], formats: [] });\n    const registerCustomFormats = (editor, userFormats) => {\n        const result = mapFormats(userFormats);\n        const registerFormats = (customFormats) => {\n            each$1(customFormats, (fmt) => {\n                // Only register the custom format with the editor, if it's not already registered\n                if (!editor.formatter.has(fmt.name)) {\n                    editor.formatter.register(fmt.name, fmt.format);\n                }\n            });\n        };\n        // The editor may not yet be initialized, so check for that\n        if (editor.formatter) {\n            registerFormats(result.customFormats);\n        }\n        else {\n            editor.on('init', () => {\n                registerFormats(result.customFormats);\n            });\n        }\n        return result.formats;\n    };\n    const getStyleFormats = (editor) => getUserStyleFormats(editor).map((userFormats) => {\n        // Ensure that any custom formats specified by the user are registered with the editor\n        const registeredUserFormats = registerCustomFormats(editor, userFormats);\n        // Merge the default formats with the custom formats if required\n        return shouldMergeStyleFormats(editor) ? defaultStyleFormats.concat(registeredUserFormats) : registeredUserFormats;\n    }).getOr(defaultStyleFormats);\n\n    const isSeparator$1 = (format) => {\n        const keys$1 = keys(format);\n        return keys$1.length === 1 && contains$2(keys$1, 'title');\n    };\n    const processBasic = (item, isSelectedFor, getPreviewFor) => ({\n        ...item,\n        type: 'formatter',\n        isSelected: isSelectedFor(item.format),\n        getStylePreview: getPreviewFor(item.format)\n    });\n    // TODO: This is adapted from StyleFormats in the mobile theme. Consolidate.\n    const register$b = (editor, formats, isSelectedFor, getPreviewFor) => {\n        const enrichSupported = (item) => processBasic(item, isSelectedFor, getPreviewFor);\n        // Item that triggers a submenu\n        const enrichMenu = (item) => {\n            const newItems = doEnrich(item.items);\n            return {\n                ...item,\n                type: 'submenu',\n                getStyleItems: constant$1(newItems)\n            };\n        };\n        const enrichCustom = (item) => {\n            const formatName = isString(item.name) ? item.name : generate$6(item.title);\n            const formatNameWithPrefix = `custom-${formatName}`;\n            const newItem = {\n                ...item,\n                type: 'formatter',\n                format: formatNameWithPrefix,\n                isSelected: isSelectedFor(formatNameWithPrefix),\n                getStylePreview: getPreviewFor(formatNameWithPrefix)\n            };\n            editor.formatter.register(formatName, newItem);\n            return newItem;\n        };\n        const doEnrich = (items) => map$2(items, (item) => {\n            // If it is a submenu, enrich all the subitems.\n            if (isNestedFormat(item)) {\n                return enrichMenu(item);\n            }\n            else if (isFormatReference(item)) {\n                return enrichSupported(item);\n                // NOTE: This branch is added from the original StyleFormats in mobile\n            }\n            else if (isSeparator$1(item)) {\n                return { ...item, type: 'separator' };\n            }\n            else {\n                return enrichCustom(item);\n            }\n        });\n        return doEnrich(formats);\n    };\n\n    const init$1 = (editor) => {\n        const isSelectedFor = (format) => () => editor.formatter.match(format);\n        const getPreviewFor = (format) => () => {\n            const fmt = editor.formatter.get(format);\n            return fmt !== undefined ? Optional.some({\n                tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n                styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n            }) : Optional.none();\n        };\n        const settingsFormats = Cell([]);\n        const eventsFormats = Cell([]);\n        const replaceSettings = Cell(false);\n        editor.on('PreInit', (_e) => {\n            const formats = getStyleFormats(editor);\n            const enriched = register$b(editor, formats, isSelectedFor, getPreviewFor);\n            settingsFormats.set(enriched);\n        });\n        editor.on('addStyleModifications', (e) => {\n            // Is there going to be an order issue here?\n            const modifications = register$b(editor, e.items, isSelectedFor, getPreviewFor);\n            eventsFormats.set(modifications);\n            replaceSettings.set(e.replace);\n        });\n        const getData = () => {\n            const fromSettings = replaceSettings.get() ? [] : settingsFormats.get();\n            const fromEvents = eventsFormats.get();\n            return fromSettings.concat(fromEvents);\n        };\n        return {\n            getData\n        };\n    };\n\n    const TooltipsBackstage = (getSink) => {\n        const tooltipDelay = 300;\n        const intervalDelay = tooltipDelay * 0.2; // Arbitrary value\n        let numActiveTooltips = 0;\n        const alreadyShowingTooltips = () => numActiveTooltips > 0;\n        const getComponents = (spec) => {\n            return [\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-tooltip__body']\n                    },\n                    components: [\n                        text$2(spec.tooltipText)\n                    ]\n                }\n            ];\n        };\n        const getConfig = (spec) => {\n            return {\n                delayForShow: () => alreadyShowingTooltips() ? intervalDelay : tooltipDelay,\n                delayForHide: constant$1(tooltipDelay),\n                exclusive: true,\n                lazySink: getSink,\n                tooltipDom: {\n                    tag: 'div',\n                    classes: ['tox-tooltip', 'tox-tooltip--up']\n                },\n                tooltipComponents: getComponents(spec),\n                onShow: (comp, tooltip) => {\n                    numActiveTooltips++;\n                    if (spec.onShow) {\n                        spec.onShow(comp, tooltip);\n                    }\n                },\n                onHide: (comp, tooltip) => {\n                    numActiveTooltips--;\n                    if (spec.onHide) {\n                        spec.onHide(comp, tooltip);\n                    }\n                },\n                onSetup: spec.onSetup,\n            };\n        };\n        return {\n            getConfig,\n            getComponents\n        };\n    };\n\n    const isElement = (node) => isNonNullable(node) && node.nodeType === 1;\n    const trim = global$2.trim;\n    const hasContentEditableState = (value) => {\n        return (node) => {\n            if (isElement(node)) {\n                if (node.contentEditable === value) {\n                    return true;\n                }\n                if (node.getAttribute('data-mce-contenteditable') === value) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    const isContentEditableTrue = hasContentEditableState('true');\n    const isContentEditableFalse = hasContentEditableState('false');\n    const create = (type, title, url, level, attach) => ({\n        type,\n        title,\n        url,\n        level,\n        attach\n    });\n    const isChildOfContentEditableTrue = (node) => {\n        let tempNode = node;\n        while ((tempNode = tempNode.parentNode)) {\n            const value = tempNode.contentEditable;\n            if (value && value !== 'inherit') {\n                return isContentEditableTrue(tempNode);\n            }\n        }\n        return false;\n    };\n    const select = (selector, root) => {\n        return map$2(descendants(SugarElement.fromDom(root), selector), (element) => {\n            return element.dom;\n        });\n    };\n    const getElementText = (elm) => {\n        return elm.innerText || elm.textContent;\n    };\n    const getOrGenerateId = (elm) => {\n        return elm.id ? elm.id : generate$6('h');\n    };\n    const isAnchor = (elm) => {\n        return elm && elm.nodeName === 'A' && (elm.id || elm.name) !== undefined;\n    };\n    const isValidAnchor = (elm) => {\n        return isAnchor(elm) && isEditable(elm);\n    };\n    const isHeader = (elm) => {\n        return elm && /^(H[1-6])$/.test(elm.nodeName);\n    };\n    const isEditable = (elm) => {\n        return isChildOfContentEditableTrue(elm) && !isContentEditableFalse(elm);\n    };\n    const isValidHeader = (elm) => {\n        return isHeader(elm) && isEditable(elm);\n    };\n    const getLevel = (elm) => {\n        return isHeader(elm) ? parseInt(elm.nodeName.substr(1), 10) : 0;\n    };\n    const headerTarget = (elm) => {\n        var _a;\n        const headerId = getOrGenerateId(elm);\n        const attach = () => {\n            elm.id = headerId;\n        };\n        return create('header', (_a = getElementText(elm)) !== null && _a !== void 0 ? _a : '', '#' + headerId, getLevel(elm), attach);\n    };\n    const anchorTarget = (elm) => {\n        const anchorId = elm.id || elm.name;\n        const anchorText = getElementText(elm);\n        return create('anchor', anchorText ? anchorText : '#' + anchorId, '#' + anchorId, 0, noop);\n    };\n    const getHeaderTargets = (elms) => {\n        return map$2(filter$2(elms, isValidHeader), headerTarget);\n    };\n    const getAnchorTargets = (elms) => {\n        return map$2(filter$2(elms, isValidAnchor), anchorTarget);\n    };\n    const getTargetElements = (elm) => {\n        const elms = select('h1,h2,h3,h4,h5,h6,a:not([href])', elm);\n        return elms;\n    };\n    const hasTitle = (target) => {\n        return trim(target.title).length > 0;\n    };\n    const find = (elm) => {\n        const elms = getTargetElements(elm);\n        return filter$2(getHeaderTargets(elms).concat(getAnchorTargets(elms)), hasTitle);\n    };\n    const LinkTargets = {\n        find\n    };\n\n    const STORAGE_KEY = 'tinymce-url-history';\n    const HISTORY_LENGTH = 5;\n    // validation functions\n    const isHttpUrl = (url) => isString(url) && /^https?/.test(url);\n    const isArrayOfUrl = (a) => isArray(a) && a.length <= HISTORY_LENGTH && forall(a, isHttpUrl);\n    const isRecordOfUrlArray = (r) => isObject(r) && find$4(r, (value) => !isArrayOfUrl(value)).isNone();\n    const getAllHistory = () => {\n        const unparsedHistory = global$5.getItem(STORAGE_KEY);\n        if (unparsedHistory === null) {\n            return {};\n        }\n        // parse history\n        let history;\n        try {\n            history = JSON.parse(unparsedHistory);\n        }\n        catch (e) {\n            if (e instanceof SyntaxError) {\n                // eslint-disable-next-line no-console\n                console.log('Local storage ' + STORAGE_KEY + ' was not valid JSON', e);\n                return {};\n            }\n            throw e;\n        }\n        // validate the parsed value\n        if (!isRecordOfUrlArray(history)) {\n            // eslint-disable-next-line no-console\n            console.log('Local storage ' + STORAGE_KEY + ' was not valid format', history);\n            return {};\n        }\n        return history;\n    };\n    const setAllHistory = (history) => {\n        if (!isRecordOfUrlArray(history)) {\n            throw new Error('Bad format for history:\\n' + JSON.stringify(history));\n        }\n        global$5.setItem(STORAGE_KEY, JSON.stringify(history));\n    };\n    const getHistory = (fileType) => {\n        const history = getAllHistory();\n        return get$h(history, fileType).getOr([]);\n    };\n    const addToHistory = (url, fileType) => {\n        if (!isHttpUrl(url)) {\n            return;\n        }\n        const history = getAllHistory();\n        const items = get$h(history, fileType).getOr([]);\n        const itemsWithoutUrl = filter$2(items, (item) => item !== url);\n        history[fileType] = [url].concat(itemsWithoutUrl).slice(0, HISTORY_LENGTH);\n        setAllHistory(history);\n    };\n\n    const isTruthy = (value) => !!value;\n    const makeMap = (value) => map$1(global$2.makeMap(value, /[, ]/), isTruthy);\n    const getPicker = (editor) => Optional.from(getFilePickerCallback(editor));\n    const getPickerTypes = (editor) => {\n        const optFileTypes = Optional.from(getFilePickerTypes(editor)).filter(isTruthy).map(makeMap);\n        return getPicker(editor).fold(never, (_picker) => optFileTypes.fold(always, (types) => keys(types).length > 0 ? types : false));\n    };\n    const getPickerSetting = (editor, filetype) => {\n        const pickerTypes = getPickerTypes(editor);\n        if (isBoolean(pickerTypes)) {\n            return pickerTypes ? getPicker(editor) : Optional.none();\n        }\n        else {\n            return pickerTypes[filetype] ? getPicker(editor) : Optional.none();\n        }\n    };\n    const getUrlPicker = (editor, filetype) => getPickerSetting(editor, filetype).map((picker) => (entry) => Future.nu((completer) => {\n        const handler = (value, meta) => {\n            if (!isString(value)) {\n                throw new Error('Expected value to be string');\n            }\n            if (meta !== undefined && !isObject(meta)) {\n                throw new Error('Expected meta to be a object');\n            }\n            const r = { value, meta };\n            completer(r);\n        };\n        const meta = {\n            filetype,\n            fieldname: entry.fieldname,\n            ...Optional.from(entry.meta).getOr({})\n        };\n        // file_picker_callback(callback, currentValue, metaData)\n        picker.call(editor, handler, entry.value, meta);\n    }));\n    const getTextSetting = (value) => Optional.from(value).filter(isString).getOrUndefined();\n    const getLinkInformation = (editor) => {\n        if (!useTypeaheadUrls(editor)) {\n            return Optional.none();\n        }\n        return Optional.some({\n            targets: LinkTargets.find(editor.getBody()),\n            anchorTop: getTextSetting(getAnchorTop(editor)),\n            anchorBottom: getTextSetting(getAnchorBottom(editor))\n        });\n    };\n    const getValidationHandler = (editor) => Optional.from(getFilePickerValidatorHandler(editor));\n    const UrlInputBackstage = (editor) => ({\n        getHistory,\n        addToHistory,\n        getLinkInformation: () => getLinkInformation(editor),\n        getValidationHandler: () => getValidationHandler(editor),\n        getUrlPicker: (filetype) => getUrlPicker(editor, filetype)\n    });\n\n    const init = (lazySinks, editor, lazyAnchorbar, lazyBottomAnchorBar) => {\n        const contextMenuState = Cell(false);\n        const toolbar = HeaderBackstage(editor);\n        const providers = {\n            icons: () => editor.ui.registry.getAll().icons,\n            menuItems: () => editor.ui.registry.getAll().menuItems,\n            translate: global$6.translate,\n            isDisabled: () => !editor.ui.isEnabled(),\n            getOption: editor.options.get,\n            tooltips: TooltipsBackstage(lazySinks.dialog),\n            checkUiComponentContext: (specContext) => {\n                if (isDisabled(editor)) {\n                    return {\n                        contextType: 'disabled',\n                        shouldDisable: true\n                    };\n                }\n                const [key, value = ''] = specContext.split(':');\n                const contexts = editor.ui.registry.getAll().contexts;\n                const enabledInContext = get$h(contexts, key)\n                    .fold(\n                // Fallback to 'mode:design' if key is not found\n                () => get$h(contexts, 'mode').map((pred) => pred('design')).getOr(false), (pred) => value.charAt(0) === '!' ? !pred(value.slice(1)) : pred(value));\n                return {\n                    contextType: key,\n                    shouldDisable: !enabledInContext\n                };\n            }\n        };\n        const urlinput = UrlInputBackstage(editor);\n        const styles = init$1(editor);\n        const colorinput = ColorInputBackstage(editor);\n        const dialogSettings = DialogBackstage(editor);\n        const isContextMenuOpen = () => contextMenuState.get();\n        const setContextMenuState = (state) => contextMenuState.set(state);\n        const commonBackstage = {\n            shared: {\n                providers,\n                anchors: getAnchors(editor, lazyAnchorbar, lazyBottomAnchorBar, toolbar.isPositionedAtTop),\n                header: toolbar,\n            },\n            urlinput,\n            styles,\n            colorinput,\n            dialog: dialogSettings,\n            isContextMenuOpen,\n            setContextMenuState\n        };\n        const getCompByName = (_name) => Optional.none();\n        const popupBackstage = {\n            ...commonBackstage,\n            shared: {\n                ...commonBackstage.shared,\n                interpreter: (s) => interpretWithoutForm(s, {}, popupBackstage, getCompByName),\n                getSink: lazySinks.popup\n            }\n        };\n        const dialogBackstage = {\n            ...commonBackstage,\n            shared: {\n                ...commonBackstage.shared,\n                interpreter: (s) => interpretWithoutForm(s, {}, dialogBackstage, getCompByName),\n                getSink: lazySinks.dialog\n            }\n        };\n        return {\n            popup: popupBackstage,\n            dialog: dialogBackstage\n        };\n    };\n\n    const setup$b = (editor, mothership, uiMotherships) => {\n        const broadcastEvent = (name, evt) => {\n            each$1([mothership, ...uiMotherships], (m) => {\n                m.broadcastEvent(name, evt);\n            });\n        };\n        const broadcastOn = (channel, message) => {\n            each$1([mothership, ...uiMotherships], (m) => {\n                m.broadcastOn([channel], message);\n            });\n        };\n        const fireDismissPopups = (evt) => broadcastOn(dismissPopups(), { target: evt.target });\n        // Document touch events\n        const doc = getDocument();\n        const onTouchstart = bind$1(doc, 'touchstart', fireDismissPopups);\n        const onTouchmove = bind$1(doc, 'touchmove', (evt) => broadcastEvent(documentTouchmove(), evt));\n        const onTouchend = bind$1(doc, 'touchend', (evt) => broadcastEvent(documentTouchend(), evt));\n        // Document mouse events\n        const onMousedown = bind$1(doc, 'mousedown', fireDismissPopups);\n        const onMouseup = bind$1(doc, 'mouseup', (evt) => {\n            if (evt.raw.button === 0) {\n                broadcastOn(mouseReleased(), { target: evt.target });\n            }\n        });\n        // Editor content events\n        const onContentClick = (raw) => broadcastOn(dismissPopups(), { target: SugarElement.fromDom(raw.target) });\n        const onContentMouseup = (raw) => {\n            if (raw.button === 0) {\n                broadcastOn(mouseReleased(), { target: SugarElement.fromDom(raw.target) });\n            }\n        };\n        const onContentMousedown = () => {\n            each$1(editor.editorManager.get(), (loopEditor) => {\n                if (editor !== loopEditor) {\n                    loopEditor.dispatch('DismissPopups', { relatedTarget: editor });\n                }\n            });\n        };\n        // Window events\n        const onWindowScroll = (evt) => broadcastEvent(windowScroll(), fromRawEvent(evt));\n        const onWindowResize = (evt) => {\n            broadcastOn(repositionPopups(), {});\n            broadcastEvent(windowResize(), fromRawEvent(evt));\n        };\n        // TINY-9425: At the moment, we are only supporting situations where the scrolling container\n        // is *inside* the shadow root - which is why we bind to the root node, instead of just the outer\n        // document. However, if we needed to support scrolling containers that *contained* the shadow root,\n        // we would need to listen to the outer document (or at the least, the root node of the scrolling div in\n        // the case of muliple layers of shadow roots).\n        const dos = getRootNode(SugarElement.fromDom(editor.getElement()));\n        const onElementScroll = capture(dos, 'scroll', (evt) => {\n            requestAnimationFrame(() => {\n                const c = editor.getContainer();\n                // Because this can fire before the editor is rendered, we need to stop that from happening.\n                // Some tests can create this situation, and then we get a Node name null or defined error.\n                if (c !== undefined && c !== null) {\n                    const optScrollingContext = detectWhenSplitUiMode(editor, mothership.element);\n                    const scrollers = optScrollingContext.map((sc) => [sc.element, ...sc.others]).getOr([]);\n                    if (exists(scrollers, (s) => eq(s, evt.target))) {\n                        editor.dispatch('ElementScroll', { target: evt.target.dom });\n                        broadcastEvent(externalElementScroll(), evt);\n                    }\n                }\n            });\n        });\n        const onEditorResize = () => broadcastOn(repositionPopups(), {});\n        const onEditorProgress = (evt) => {\n            if (evt.state) {\n                broadcastOn(dismissPopups(), { target: SugarElement.fromDom(editor.getContainer()) });\n            }\n        };\n        const onDismissPopups = (event) => {\n            broadcastOn(dismissPopups(), { target: SugarElement.fromDom(event.relatedTarget.getContainer()) });\n        };\n        const onFocusIn = (event) => editor.dispatch('focusin', event);\n        const onFocusOut = (event) => editor.dispatch('focusout', event);\n        // Don't start listening to events until the UI has rendered\n        editor.on('PostRender', () => {\n            editor.on('click', onContentClick);\n            editor.on('tap', onContentClick);\n            editor.on('mouseup', onContentMouseup);\n            editor.on('mousedown', onContentMousedown);\n            editor.on('ScrollWindow', onWindowScroll);\n            editor.on('ResizeWindow', onWindowResize);\n            editor.on('ResizeEditor', onEditorResize);\n            editor.on('AfterProgressState', onEditorProgress);\n            editor.on('DismissPopups', onDismissPopups);\n            each$1([mothership, ...uiMotherships], (gui) => {\n                gui.element.dom.addEventListener('focusin', onFocusIn);\n                gui.element.dom.addEventListener('focusout', onFocusOut);\n            });\n        });\n        editor.on('remove', () => {\n            // We probably don't need these unbinds, but it helps to have them if we move this code out.\n            editor.off('click', onContentClick);\n            editor.off('tap', onContentClick);\n            editor.off('mouseup', onContentMouseup);\n            editor.off('mousedown', onContentMousedown);\n            editor.off('ScrollWindow', onWindowScroll);\n            editor.off('ResizeWindow', onWindowResize);\n            editor.off('ResizeEditor', onEditorResize);\n            editor.off('AfterProgressState', onEditorProgress);\n            editor.off('DismissPopups', onDismissPopups);\n            each$1([mothership, ...uiMotherships], (gui) => {\n                gui.element.dom.removeEventListener('focusin', onFocusIn);\n                gui.element.dom.removeEventListener('focusout', onFocusOut);\n            });\n            onMousedown.unbind();\n            onTouchstart.unbind();\n            onTouchmove.unbind();\n            onTouchend.unbind();\n            onMouseup.unbind();\n            onElementScroll.unbind();\n        });\n        editor.on('detach', () => {\n            each$1([mothership, ...uiMotherships], detachSystem);\n            each$1([mothership, ...uiMotherships], (m) => m.destroy());\n        });\n    };\n\n    const setup$a = noop;\n    const isDocked$1 = never;\n    const getBehaviours$1 = constant$1([]);\n\n    var StaticHeader = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setup: setup$a,\n        isDocked: isDocked$1,\n        getBehaviours: getBehaviours$1\n    });\n\n    const toolbarHeightChange = constant$1(generate$6('toolbar-height-change'));\n\n    const visibility = {\n        fadeInClass: 'tox-editor-dock-fadein',\n        fadeOutClass: 'tox-editor-dock-fadeout',\n        transitionClass: 'tox-editor-dock-transition'\n    };\n    const editorStickyOnClass = 'tox-tinymce--toolbar-sticky-on';\n    const editorStickyOffClass = 'tox-tinymce--toolbar-sticky-off';\n    const scrollFromBehindHeader = (e, containerHeader) => {\n        const doc = owner$4(containerHeader);\n        const win = defaultView(containerHeader);\n        const viewHeight = win.dom.innerHeight;\n        const scrollPos = get$b(doc);\n        const markerElement = SugarElement.fromDom(e.elm);\n        const markerPos = absolute$2(markerElement);\n        const markerHeight = get$d(markerElement);\n        const markerTop = markerPos.y;\n        const markerBottom = markerTop + markerHeight;\n        const editorHeaderPos = absolute$3(containerHeader);\n        const editorHeaderHeight = get$d(containerHeader);\n        const editorHeaderTop = editorHeaderPos.top;\n        const editorHeaderBottom = editorHeaderTop + editorHeaderHeight;\n        // Check to see if the header is docked to the top/bottom of the page (eg is floating)\n        const editorHeaderDockedAtTop = Math.abs(editorHeaderTop - scrollPos.top) < 2;\n        const editorHeaderDockedAtBottom = Math.abs(editorHeaderBottom - (scrollPos.top + viewHeight)) < 2;\n        // If the element is behind the header at the top of the page, then\n        // scroll the element down by the header height\n        if (editorHeaderDockedAtTop && markerTop < editorHeaderBottom) {\n            to(scrollPos.left, markerTop - editorHeaderHeight, doc);\n            // If the element is behind the header at the bottom of the page, then\n            // scroll the element up by the header height\n        }\n        else if (editorHeaderDockedAtBottom && markerBottom > editorHeaderTop) {\n            const y = (markerTop - viewHeight) + markerHeight + editorHeaderHeight;\n            to(scrollPos.left, y, doc);\n        }\n    };\n    const isDockedMode = (header, mode) => contains$2(Docking.getModes(header), mode);\n    const updateIframeContentFlow = (header) => {\n        const getOccupiedHeight = (elm) => getOuter$1(elm) +\n            (parseInt(get$e(elm, 'margin-top'), 10) || 0) +\n            (parseInt(get$e(elm, 'margin-bottom'), 10) || 0);\n        const elm = header.element;\n        parentElement(elm).each((parentElem) => {\n            const padding = 'padding-' + Docking.getModes(header)[0];\n            if (Docking.isDocked(header)) {\n                const parentWidth = get$c(parentElem);\n                set$7(elm, 'width', parentWidth + 'px');\n                set$7(parentElem, padding, getOccupiedHeight(elm) + 'px');\n            }\n            else {\n                remove$6(elm, 'width');\n                remove$6(parentElem, padding);\n            }\n        });\n    };\n    const updateSinkVisibility = (sinkElem, visible) => {\n        if (visible) {\n            remove$3(sinkElem, visibility.fadeOutClass);\n            add$1(sinkElem, [visibility.transitionClass, visibility.fadeInClass]);\n        }\n        else {\n            remove$3(sinkElem, visibility.fadeInClass);\n            add$1(sinkElem, [visibility.fadeOutClass, visibility.transitionClass]);\n        }\n    };\n    const updateEditorClasses = (editor, docked) => {\n        const editorContainer = SugarElement.fromDom(editor.getContainer());\n        if (docked) {\n            add$2(editorContainer, editorStickyOnClass);\n            remove$3(editorContainer, editorStickyOffClass);\n        }\n        else {\n            add$2(editorContainer, editorStickyOffClass);\n            remove$3(editorContainer, editorStickyOnClass);\n        }\n    };\n    const restoreFocus = (headerElem, focusedElem) => {\n        // When the header is hidden, then the element that was focused will be lost\n        // so we need to restore it if nothing else has already been focused (eg anything other than the body)\n        const ownerDoc = owner$4(focusedElem);\n        active$1(ownerDoc).filter((activeElm) => \n        // Don't try to refocus the same element\n        !eq(focusedElem, activeElm)).filter((activeElm) => \n        // Only attempt to refocus if the current focus is the body or is in the header element\n        eq(activeElm, SugarElement.fromDom(ownerDoc.dom.body)) || contains(headerElem, activeElm)).each(() => focus$4(focusedElem));\n    };\n    const findFocusedElem = (rootElm, lazySink) => \n    // Check to see if an element is focused inside the header or inside the sink\n    // and if so store the element so we can restore it later\n    search(rootElm).orThunk(() => lazySink().toOptional().bind((sink) => search(sink.element)));\n    const setup$9 = (editor, sharedBackstage, lazyHeader) => {\n        if (!editor.inline) {\n            // If using bottom toolbar then when the editor resizes we need to reset docking\n            // otherwise it won't know the original toolbar position has moved\n            if (!sharedBackstage.header.isPositionedAtTop()) {\n                editor.on('ResizeEditor', () => {\n                    lazyHeader().each(Docking.reset);\n                });\n            }\n            // No need to update the content flow in inline mode as the header always floats\n            editor.on('ResizeWindow ResizeEditor', () => {\n                lazyHeader().each(updateIframeContentFlow);\n            });\n            // Need to reset the docking position on skin loaded as the original position will have\n            // changed due the skins styles being applied.\n            // Note: Inline handles it's own skin loading, as it needs to do other initial positioning\n            editor.on('SkinLoaded', () => {\n                lazyHeader().each((comp) => {\n                    Docking.isDocked(comp) ? Docking.reset(comp) : Docking.refresh(comp);\n                });\n            });\n            // Need to reset when we go fullscreen so that if the header is docked,\n            // then it'll undock and viceversa\n            editor.on('FullscreenStateChanged', () => {\n                lazyHeader().each(Docking.reset);\n            });\n        }\n        // If inline or sticky toolbars is enabled, then when scrolling into view we may still be\n        // behind the editor header so we need to adjust the scroll position to account for that\n        editor.on('AfterScrollIntoView', (e) => {\n            lazyHeader().each((header) => {\n                // We need to make sure the header docking has refreshed, otherwise if a large scroll occurred\n                // the header may have gone off page and need to be docked before doing calculations\n                Docking.refresh(header);\n                // If the header element is still visible, then adjust the scroll position if required\n                const headerElem = header.element;\n                if (isVisible(headerElem)) {\n                    scrollFromBehindHeader(e, headerElem);\n                }\n            });\n        });\n        // Update the editor classes once initial rendering has completed\n        editor.on('PostRender', () => {\n            updateEditorClasses(editor, false);\n        });\n    };\n    const isDocked = (lazyHeader) => lazyHeader().map(Docking.isDocked).getOr(false);\n    const getIframeBehaviours = () => [\n        Receiving.config({\n            channels: {\n                [toolbarHeightChange()]: {\n                    onReceive: updateIframeContentFlow\n                }\n            }\n        })\n    ];\n    const getBehaviours = (editor, sharedBackstage) => {\n        const focusedElm = value$2();\n        const lazySink = sharedBackstage.getSink;\n        const runOnSinkElement = (f) => {\n            lazySink().each((sink) => f(sink.element));\n        };\n        const onDockingSwitch = (comp) => {\n            if (!editor.inline) {\n                updateIframeContentFlow(comp);\n            }\n            updateEditorClasses(editor, Docking.isDocked(comp));\n            // TINY-9223: This will only reposition the popups in the same mothership as the StickyHeader\n            // and its sink. If we need to reposition the popups in all motherships (in the two sink\n            // model) then we'll need a reference to all motherships here.\n            comp.getSystem().broadcastOn([repositionPopups()], {});\n            lazySink().each((sink) => sink.getSystem().broadcastOn([repositionPopups()], {}));\n        };\n        const additionalBehaviours = editor.inline ? [] : getIframeBehaviours();\n        return [\n            Focusing.config({}),\n            Docking.config({\n                contextual: {\n                    lazyContext: (comp) => {\n                        const headerHeight = getOuter$1(comp.element);\n                        const container = editor.inline ? editor.getContentAreaContainer() : editor.getContainer();\n                        return Optional.from(container).map((c) => {\n                            const box = box$1(SugarElement.fromDom(c));\n                            const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n                            return optScrollingContext.fold(() => {\n                                // Force the header to hide before it overflows outside the container\n                                const boxHeight = box.height - headerHeight;\n                                const topBound = box.y + (isDockedMode(comp, 'top') ? 0 : headerHeight);\n                                return bounds(box.x, topBound, box.width, boxHeight);\n                            }, (scrollEnv) => {\n                                const constrainedBounds = constrain(box, getBoundsFrom(scrollEnv));\n                                // When the toolbar location is set to the top, y is the top of the container and height is the available container height minus the header height, as the toolbar will be placed at the top of the container\n                                // This is so that as you scroll the scrollable container/the page, it will dock at the top and when there's insufficient height/space (that's the reason of deducting the headerHeight for the available height), it will be hidden.\n                                // When the toolbar location is set to the bottom, y is the top of the container plus the header height, as the toolbar will be placed at the bottom of the container, beyond the container, so that's why we need to add the headerHeight\n                                // When there's insufficient height/space, it will be hidden, and when you scroll past the editor, it will be hidden\n                                const constrainedBoundsY = isDockedMode(comp, 'top')\n                                    ? constrainedBounds.y\n                                    : constrainedBounds.y + headerHeight;\n                                return bounds(constrainedBounds.x, \n                                // ASSUMPTION: The constrainedBounds removes the need for us to set this to 0px\n                                // for docked mode. Also, docking in a scrolling environment will often be\n                                // at the scroller top, not the window top\n                                constrainedBoundsY, constrainedBounds.width, constrainedBounds.height - headerHeight);\n                            });\n                        });\n                    },\n                    onShow: () => {\n                        runOnSinkElement((elem) => updateSinkVisibility(elem, true));\n                    },\n                    onShown: (comp) => {\n                        runOnSinkElement((elem) => remove$2(elem, [visibility.transitionClass, visibility.fadeInClass]));\n                        // Restore focus and reset the stored focused element\n                        focusedElm.get().each((elem) => {\n                            restoreFocus(comp.element, elem);\n                            focusedElm.clear();\n                        });\n                    },\n                    onHide: (comp) => {\n                        findFocusedElem(comp.element, lazySink).fold(focusedElm.clear, focusedElm.set);\n                        runOnSinkElement((elem) => updateSinkVisibility(elem, false));\n                    },\n                    onHidden: () => {\n                        runOnSinkElement((elem) => remove$2(elem, [visibility.transitionClass]));\n                    },\n                    ...visibility\n                },\n                lazyViewport: (comp) => {\n                    const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n                    return optScrollingContext.fold(() => {\n                        const boundsWithoutOffset = win();\n                        const offset = getStickyToolbarOffset(editor);\n                        const top = boundsWithoutOffset.y + (isDockedMode(comp, 'top') && !isFullscreen(editor) ? offset : 0);\n                        const height = boundsWithoutOffset.height - (isDockedMode(comp, 'bottom') ? offset : 0);\n                        // No scrolling context, so just window\n                        return {\n                            bounds: bounds(boundsWithoutOffset.x, top, boundsWithoutOffset.width, height),\n                            optScrollEnv: Optional.none()\n                        };\n                    }, (sc) => {\n                        // TINY-9411: Implement sticky toolbar offsets in scrollable containers\n                        const combinedBounds = getBoundsFrom(sc);\n                        return {\n                            bounds: combinedBounds,\n                            optScrollEnv: Optional.some({\n                                currentScrollTop: sc.element.dom.scrollTop,\n                                scrollElmTop: absolute$3(sc.element).top\n                            })\n                        };\n                    });\n                },\n                modes: [sharedBackstage.header.getDockingMode()],\n                onDocked: onDockingSwitch,\n                onUndocked: onDockingSwitch\n            }),\n            ...additionalBehaviours\n        ];\n    };\n\n    var StickyHeader = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setup: setup$9,\n        isDocked: isDocked,\n        getBehaviours: getBehaviours\n    });\n\n    const renderHeader = (spec) => {\n        const editor = spec.editor;\n        const getBehaviours$2 = spec.sticky ? getBehaviours : getBehaviours$1;\n        return {\n            uid: spec.uid,\n            dom: spec.dom,\n            components: spec.components,\n            behaviours: derive$1(getBehaviours$2(editor, spec.sharedBackstage))\n        };\n    };\n\n    const factory$3 = (detail, spec) => {\n        const setMenus = (comp, menus) => {\n            const newMenus = map$2(menus, (m) => {\n                const buttonSpec = {\n                    type: 'menubutton',\n                    text: m.text,\n                    fetch: (callback) => {\n                        callback(m.getItems());\n                    },\n                    context: 'any'\n                };\n                // Convert to an internal bridge spec\n                const internal = createMenuButton(buttonSpec).mapError((errInfo) => formatError(errInfo)).getOrDie();\n                return renderMenuButton(internal, \"tox-mbtn\" /* MenuButtonClasses.Button */, spec.backstage, \n                // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-2/menubar-2.html\n                Optional.some('menuitem'));\n            });\n            Replacing.set(comp, newMenus);\n        };\n        const apis = {\n            focus: Keying.focusIn,\n            setMenus\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components: [],\n            behaviours: derive$1([\n                Replacing.config({}),\n                config('menubar-events', [\n                    runOnAttached((component) => {\n                        detail.onSetup(component);\n                    }),\n                    run$1(mouseover(), (comp, se) => {\n                        // TODO: Use constants\n                        descendant(comp.element, '.' + \"tox-mbtn--active\" /* MenuButtonClasses.Active */).each((activeButton) => {\n                            closest$3(se.event.target, '.' + \"tox-mbtn\" /* MenuButtonClasses.Button */).each((hoveredButton) => {\n                                if (!eq(activeButton, hoveredButton)) {\n                                    // Now, find the components, and expand the hovered one, and close the active one\n                                    comp.getSystem().getByDom(activeButton).each((activeComp) => {\n                                        comp.getSystem().getByDom(hoveredButton).each((hoveredComp) => {\n                                            Dropdown.expand(hoveredComp);\n                                            Dropdown.close(activeComp);\n                                            Focusing.focus(hoveredComp);\n                                        });\n                                    });\n                                }\n                            });\n                        });\n                    }),\n                    run$1(focusShifted(), (comp, se) => {\n                        se.event.prevFocus.bind((prev) => comp.getSystem().getByDom(prev).toOptional()).each((prev) => {\n                            se.event.newFocus.bind((nu) => comp.getSystem().getByDom(nu).toOptional()).each((nu) => {\n                                if (Dropdown.isOpen(prev)) {\n                                    Dropdown.expand(nu);\n                                    Dropdown.close(prev);\n                                }\n                            });\n                        });\n                    })\n                ]),\n                Keying.config({\n                    mode: 'flow',\n                    selector: '.' + \"tox-mbtn\" /* MenuButtonClasses.Button */,\n                    onEscape: (comp) => {\n                        detail.onEscape(comp);\n                        return Optional.some(true);\n                    }\n                }),\n                Tabstopping.config({})\n            ]),\n            apis,\n            domModification: {\n                attributes: {\n                    role: 'menubar'\n                }\n            }\n        };\n    };\n    var SilverMenubar = single({\n        factory: factory$3,\n        name: 'silver.Menubar',\n        configFields: [\n            required$1('dom'),\n            required$1('uid'),\n            required$1('onEscape'),\n            required$1('backstage'),\n            defaulted('onSetup', noop)\n        ],\n        apis: {\n            focus: (apis, comp) => {\n                apis.focus(comp);\n            },\n            setMenus: (apis, comp, menus) => {\n                apis.setMenus(comp, menus);\n            }\n        }\n    });\n\n    const promotionMessage = '💝Get all features';\n    const promotionLink = 'https://www.tiny.cloud/tinymce-upgrade-to-cloud/?utm_campaign=self_hosted_upgrade_promo&utm_source=tiny&utm_medium=referral';\n    const renderPromotion = (spec) => {\n        const components = spec.promotionLink ? [\n            {\n                dom: {\n                    tag: 'a',\n                    attributes: {\n                        'href': promotionLink,\n                        'rel': 'noopener',\n                        'target': '_blank',\n                        'aria-hidden': 'true'\n                    },\n                    classes: ['tox-promotion-link'],\n                    innerHtml: promotionMessage\n                }\n            }\n        ] : [];\n        return {\n            uid: spec.uid,\n            dom: spec.dom,\n            components\n        };\n    };\n\n    const setup$8 = (editor) => {\n        const { sidebars } = editor.ui.registry.getAll();\n        // Setup each registered sidebar\n        each$1(keys(sidebars), (name) => {\n            const spec = sidebars[name];\n            const isActive = () => is$1(Optional.from(editor.queryCommandValue('ToggleSidebar')), name);\n            editor.ui.registry.addToggleButton(name, {\n                icon: spec.icon,\n                tooltip: spec.tooltip,\n                onAction: (buttonApi) => {\n                    editor.execCommand('ToggleSidebar', false, name);\n                    buttonApi.setActive(isActive());\n                },\n                onSetup: (buttonApi) => {\n                    buttonApi.setActive(isActive());\n                    const handleToggle = () => buttonApi.setActive(isActive());\n                    editor.on('ToggleSidebar', handleToggle);\n                    return () => {\n                        editor.off('ToggleSidebar', handleToggle);\n                    };\n                },\n                context: 'any'\n            });\n        });\n    };\n    const getApi = (comp) => ({\n        element: () => comp.element.dom\n    });\n    const makePanels = (parts, panelConfigs) => {\n        const specs = map$2(keys(panelConfigs), (name) => {\n            const spec = panelConfigs[name];\n            const bridged = getOrDie(createSidebar(spec));\n            return {\n                name,\n                getApi,\n                onSetup: bridged.onSetup,\n                onShow: bridged.onShow,\n                onHide: bridged.onHide\n            };\n        });\n        return map$2(specs, (spec) => {\n            const editorOffCell = Cell(noop);\n            return parts.slot(spec.name, {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-sidebar__pane']\n                },\n                behaviours: SimpleBehaviours.unnamedEvents([\n                    onControlAttached(spec, editorOffCell),\n                    onControlDetached(spec, editorOffCell),\n                    run$1(slotVisibility(), (sidepanel, se) => {\n                        const data = se.event;\n                        const optSidePanelSpec = find$5(specs, (config) => config.name === data.name);\n                        optSidePanelSpec.each((sidePanelSpec) => {\n                            const handler = data.visible ? sidePanelSpec.onShow : sidePanelSpec.onHide;\n                            handler(sidePanelSpec.getApi(sidepanel));\n                        });\n                    })\n                ])\n            });\n        });\n    };\n    const makeSidebar = (panelConfigs) => SlotContainer.sketch((parts) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-sidebar__pane-container']\n        },\n        components: makePanels(parts, panelConfigs),\n        slotBehaviours: SimpleBehaviours.unnamedEvents([\n            runOnAttached((slotContainer) => SlotContainer.hideAllSlots(slotContainer))\n        ])\n    }));\n    const setSidebar = (sidebar, panelConfigs, showSidebar) => {\n        const optSlider = Composing.getCurrent(sidebar);\n        optSlider.each((slider) => {\n            Replacing.set(slider, [makeSidebar(panelConfigs)]);\n            // Show the default sidebar\n            const configKey = showSidebar === null || showSidebar === void 0 ? void 0 : showSidebar.toLowerCase();\n            if (isString(configKey) && has$2(panelConfigs, configKey)) {\n                Composing.getCurrent(slider).each((slotContainer) => {\n                    SlotContainer.showSlot(slotContainer, configKey);\n                    Sliding.immediateGrow(slider);\n                    // TINY-8710: Remove the width as since the skins/styles won't have loaded yet, so it's going to be incorrect\n                    remove$6(slider.element, 'width');\n                    updateSidebarRoleOnToggle(sidebar.element, \"region\" /* SidebarStateRoleAttr.Grown */);\n                });\n            }\n        });\n    };\n    const updateSidebarRoleOnToggle = (sidebar, sidebarState) => {\n        set$9(sidebar, 'role', sidebarState);\n    };\n    const toggleSidebar = (sidebar, name) => {\n        const optSlider = Composing.getCurrent(sidebar);\n        optSlider.each((slider) => {\n            const optSlotContainer = Composing.getCurrent(slider);\n            optSlotContainer.each((slotContainer) => {\n                if (Sliding.hasGrown(slider)) {\n                    if (SlotContainer.isShowing(slotContainer, name)) {\n                        // close the slider and then hide the slot after the animation finishes\n                        Sliding.shrink(slider);\n                        updateSidebarRoleOnToggle(sidebar.element, \"presentation\" /* SidebarStateRoleAttr.Shrunk */);\n                    }\n                    else {\n                        SlotContainer.hideAllSlots(slotContainer);\n                        SlotContainer.showSlot(slotContainer, name);\n                        updateSidebarRoleOnToggle(sidebar.element, \"region\" /* SidebarStateRoleAttr.Grown */);\n                    }\n                }\n                else {\n                    // Should already be hidden if the animation has finished but if it has not we hide them\n                    SlotContainer.hideAllSlots(slotContainer);\n                    SlotContainer.showSlot(slotContainer, name);\n                    Sliding.grow(slider);\n                    updateSidebarRoleOnToggle(sidebar.element, \"region\" /* SidebarStateRoleAttr.Grown */);\n                }\n            });\n        });\n    };\n    const whichSidebar = (sidebar) => {\n        const optSlider = Composing.getCurrent(sidebar);\n        return optSlider.bind((slider) => {\n            const sidebarOpen = Sliding.isGrowing(slider) || Sliding.hasGrown(slider);\n            if (sidebarOpen) {\n                const optSlotContainer = Composing.getCurrent(slider);\n                return optSlotContainer.bind((slotContainer) => find$5(SlotContainer.getSlotNames(slotContainer), (name) => SlotContainer.isShowing(slotContainer, name)));\n            }\n            else {\n                return Optional.none();\n            }\n        });\n    };\n    const fixSize = generate$6('FixSizeEvent');\n    const autoSize = generate$6('AutoSizeEvent');\n    const renderSidebar = (spec) => ({\n        uid: spec.uid,\n        dom: {\n            tag: 'div',\n            classes: ['tox-sidebar'],\n            attributes: {\n                role: \"presentation\" /* SidebarStateRoleAttr.Shrunk */\n            }\n        },\n        components: [\n            {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-sidebar__slider']\n                },\n                components: [\n                // this will be replaced on setSidebar\n                ],\n                behaviours: derive$1([\n                    Tabstopping.config({}),\n                    Focusing.config({}), // TODO use Keying and use focusIn, but need to handle if sidebar contains nothing\n                    Sliding.config({\n                        dimension: {\n                            property: 'width'\n                        },\n                        closedClass: 'tox-sidebar--sliding-closed',\n                        openClass: 'tox-sidebar--sliding-open',\n                        shrinkingClass: 'tox-sidebar--sliding-shrinking',\n                        growingClass: 'tox-sidebar--sliding-growing',\n                        onShrunk: (slider) => {\n                            const optSlotContainer = Composing.getCurrent(slider);\n                            optSlotContainer.each(SlotContainer.hideAllSlots);\n                            emit(slider, autoSize);\n                        },\n                        onGrown: (slider) => {\n                            emit(slider, autoSize);\n                        },\n                        onStartGrow: (slider) => {\n                            emitWith(slider, fixSize, { width: getRaw(slider.element, 'width').getOr('') });\n                        },\n                        onStartShrink: (slider) => {\n                            emitWith(slider, fixSize, { width: get$c(slider.element) + 'px' });\n                        }\n                    }),\n                    Replacing.config({}),\n                    Composing.config({\n                        find: (comp) => {\n                            const children = Replacing.contents(comp);\n                            return head(children);\n                        }\n                    })\n                ])\n            }\n        ],\n        behaviours: derive$1([\n            ComposingConfigs.childAt(0),\n            config('sidebar-sliding-events', [\n                run$1(fixSize, (comp, se) => {\n                    set$7(comp.element, 'width', se.event.width);\n                }),\n                run$1(autoSize, (comp, _se) => {\n                    remove$6(comp.element, 'width');\n                })\n            ])\n        ])\n    });\n\n    const getBusySpec$1 = (providerBackstage) => (_root, _behaviours) => ({\n        dom: {\n            tag: 'div',\n            attributes: {\n                'aria-label': providerBackstage.translate('Loading...'),\n                'tabindex': '0'\n            },\n            classes: ['tox-throbber__busy-spinner']\n        },\n        components: [\n            {\n                dom: fromHtml('<div class=\"tox-spinner\"><div></div><div></div><div></div></div>')\n            }\n        ],\n    });\n    const focusBusyComponent = (throbber) => Composing.getCurrent(throbber).each((comp) => focus$4(comp.element, true));\n    // When the throbber is enabled, prevent the iframe from being part of the sequential keyboard navigation when Tabbing\n    // TODO: TINY-7500 Only works for iframe mode at this stage\n    const toggleEditorTabIndex = (editor, state) => {\n        const tabIndexAttr = 'tabindex';\n        const dataTabIndexAttr = `data-mce-${tabIndexAttr}`;\n        Optional.from(editor.iframeElement)\n            .map(SugarElement.fromDom)\n            .each((iframe) => {\n            if (state) {\n                getOpt(iframe, tabIndexAttr).each((tabIndex) => set$9(iframe, dataTabIndexAttr, tabIndex));\n                set$9(iframe, tabIndexAttr, -1);\n            }\n            else {\n                remove$8(iframe, tabIndexAttr);\n                getOpt(iframe, dataTabIndexAttr).each((tabIndex) => {\n                    set$9(iframe, tabIndexAttr, tabIndex);\n                    remove$8(iframe, dataTabIndexAttr);\n                });\n            }\n        });\n    };\n    /*\n    * If the throbber has been toggled on, only focus the throbber if the editor had focus as we don't to steal focus if it is on an input or dialog\n    * If the throbber has been toggled off, only put focus back on the editor if the throbber had focus.\n    * The next logical focus transition from the throbber is to put it back on the editor\n    */\n    const toggleThrobber = (editor, comp, state, providerBackstage) => {\n        const element = comp.element;\n        toggleEditorTabIndex(editor, state);\n        if (state) {\n            Blocking.block(comp, getBusySpec$1(providerBackstage));\n            remove$6(element, 'display');\n            remove$8(element, 'aria-hidden');\n            if (editor.hasFocus()) {\n                focusBusyComponent(comp);\n            }\n        }\n        else {\n            // Get the focus of the busy component before it is removed from the DOM\n            const throbberFocus = Composing.getCurrent(comp).exists((busyComp) => hasFocus(busyComp.element));\n            Blocking.unblock(comp);\n            set$7(element, 'display', 'none');\n            set$9(element, 'aria-hidden', 'true');\n            if (throbberFocus) {\n                editor.focus();\n            }\n        }\n    };\n    const renderThrobber = (spec) => ({\n        uid: spec.uid,\n        dom: {\n            tag: 'div',\n            attributes: {\n                'aria-hidden': 'true'\n            },\n            classes: ['tox-throbber'],\n            styles: {\n                display: 'none'\n            }\n        },\n        behaviours: derive$1([\n            Replacing.config({}),\n            Blocking.config({\n                focus: false\n            }),\n            Composing.config({\n                find: (comp) => head(comp.components())\n            })\n        ]),\n        components: []\n    });\n    const isFocusEvent = (event) => event.type === 'focusin';\n    const isPasteBinTarget = (event) => {\n        if (isFocusEvent(event)) {\n            const node = event.composed ? head(event.composedPath()) : Optional.from(event.target);\n            return node\n                .map(SugarElement.fromDom)\n                .filter(isElement$1)\n                .exists((targetElm) => has(targetElm, 'mce-pastebin'));\n        }\n        else {\n            return false;\n        }\n    };\n    const setup$7 = (editor, lazyThrobber, sharedBackstage) => {\n        const throbberState = Cell(false);\n        const timer = value$2();\n        const stealFocus = (e) => {\n            if (throbberState.get() && !isPasteBinTarget(e)) {\n                e.preventDefault();\n                focusBusyComponent(lazyThrobber());\n                editor.editorManager.setActive(editor);\n            }\n        };\n        // TODO: TINY-7500 Only worrying about iframe mode at this stage since inline mode has a number of other issues\n        if (!editor.inline) {\n            editor.on('PreInit', () => {\n                // Cover focus when the editor is focused natively\n                editor.dom.bind(editor.getWin(), 'focusin', stealFocus);\n                // Cover stealing focus when editor.focus() is called\n                editor.on('BeforeExecCommand', (e) => {\n                    // If skipFocus is specified as true in the command, don't focus the Throbber\n                    if (e.command.toLowerCase() === 'mcefocus' && e.value !== true) {\n                        stealFocus(e);\n                    }\n                });\n            });\n        }\n        const toggle = (state) => {\n            if (state !== throbberState.get()) {\n                throbberState.set(state);\n                toggleThrobber(editor, lazyThrobber(), state, sharedBackstage.providers);\n                fireAfterProgressState(editor, state);\n            }\n        };\n        editor.on('ProgressState', (e) => {\n            timer.on(clearTimeout);\n            if (isNumber(e.time)) {\n                const timerId = global$a.setEditorTimeout(editor, () => toggle(e.state), e.time);\n                timer.set(timerId);\n            }\n            else {\n                toggle(e.state);\n                timer.clear();\n            }\n        });\n    };\n\n    // eslint-disable-next-line max-len\n    const renderToolbarGroupCommon = (toolbarGroup) => {\n        const attributes = toolbarGroup.label.isNone() ?\n            toolbarGroup.title.fold(() => ({}), (title) => ({ attributes: { 'aria-label': title } }))\n            : toolbarGroup.label.fold(() => ({}), (label) => ({ attributes: { 'aria-label': label } }));\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-toolbar__group'].concat(toolbarGroup.label.isSome() ? ['tox-toolbar__group_with_label'] : []),\n                ...attributes\n            },\n            components: [\n                ...(toolbarGroup.label.map((label) => {\n                    return {\n                        dom: {\n                            tag: 'span',\n                            classes: ['tox-label', 'tox-label--context-toolbar'],\n                        },\n                        components: [text$2(label)]\n                    };\n                }).toArray()),\n                ToolbarGroup.parts.items({})\n            ],\n            items: toolbarGroup.items,\n            markers: {\n                // nav within a group breaks if disabled buttons are first in their group so skip them\n                itemSelector: '*:not(.tox-split-button) > .tox-tbtn:not([disabled]), ' +\n                    '.tox-split-button:not([disabled]), ' +\n                    '.tox-toolbar-nav-item:not([disabled]), ' +\n                    '.tox-number-input:not([disabled])'\n            },\n            tgroupBehaviours: derive$1([\n                Tabstopping.config({}),\n                Focusing.config({\n                    ignore: true\n                })\n            ])\n        };\n    };\n    const renderToolbarGroup = (toolbarGroup) => ToolbarGroup.sketch(renderToolbarGroupCommon(toolbarGroup));\n    const getToolbarBehaviours = (toolbarSpec, modeName) => {\n        const onAttached = runOnAttached((component) => {\n            const groups = map$2(toolbarSpec.initGroups, renderToolbarGroup);\n            Toolbar.setGroups(component, groups);\n        });\n        return derive$1([\n            DisablingConfigs.toolbarButton(() => toolbarSpec.providers.checkUiComponentContext('any').shouldDisable),\n            toggleOnReceive(() => toolbarSpec.providers.checkUiComponentContext('any')),\n            Keying.config({\n                // Tabs between groups\n                mode: modeName,\n                onEscape: toolbarSpec.onEscape,\n                visibilitySelector: '.tox-toolbar__overflow',\n                selector: '.tox-toolbar__group'\n            }),\n            config('toolbar-events', [onAttached])\n        ]);\n    };\n    const renderMoreToolbarCommon = (toolbarSpec) => {\n        const modeName = toolbarSpec.cyclicKeying ? 'cyclic' : 'acyclic';\n        return {\n            uid: toolbarSpec.uid,\n            dom: {\n                tag: 'div',\n                classes: ['tox-toolbar-overlord']\n            },\n            parts: {\n                // This already knows it is a toolbar group\n                'overflow-group': renderToolbarGroupCommon({\n                    title: Optional.none(),\n                    label: Optional.none(),\n                    items: []\n                }),\n                'overflow-button': renderIconButtonSpec({\n                    context: 'any',\n                    name: 'more',\n                    icon: Optional.some('more-drawer'),\n                    enabled: true,\n                    tooltip: Optional.some('Reveal or hide additional toolbar items'),\n                    primary: false,\n                    buttonType: Optional.none(),\n                    borderless: false\n                }, Optional.none(), toolbarSpec.providers, [], 'overflow-button')\n            },\n            splitToolbarBehaviours: getToolbarBehaviours(toolbarSpec, modeName)\n        };\n    };\n    const renderFloatingMoreToolbar = (toolbarSpec) => {\n        const baseSpec = renderMoreToolbarCommon(toolbarSpec);\n        const overflowXOffset = 4;\n        const primary = SplitFloatingToolbar.parts.primary({\n            dom: {\n                tag: 'div',\n                classes: ['tox-toolbar__primary']\n            }\n        });\n        return SplitFloatingToolbar.sketch({\n            ...baseSpec,\n            lazySink: toolbarSpec.getSink,\n            getOverflowBounds: () => {\n                // Restrict the left/right bounds to the editor header width, but don't restrict the top/bottom\n                const headerElem = toolbarSpec.moreDrawerData.lazyHeader().element;\n                const headerBounds = absolute$2(headerElem);\n                const docElem = documentElement(headerElem);\n                const docBounds = absolute$2(docElem);\n                const height = Math.max(docElem.dom.scrollHeight, docBounds.height);\n                return bounds(headerBounds.x + overflowXOffset, docBounds.y, headerBounds.width - overflowXOffset * 2, height);\n            },\n            parts: {\n                ...baseSpec.parts,\n                overflow: {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-toolbar__overflow'],\n                        attributes: toolbarSpec.attributes\n                    }\n                }\n            },\n            components: [primary],\n            markers: {\n                overflowToggledClass: \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */\n            },\n            onOpened: (comp) => toolbarSpec.onToggled(comp, true),\n            onClosed: (comp) => toolbarSpec.onToggled(comp, false)\n        });\n    };\n    const renderSlidingMoreToolbar = (toolbarSpec) => {\n        const primary = SplitSlidingToolbar.parts.primary({\n            dom: {\n                tag: 'div',\n                classes: ['tox-toolbar__primary']\n            }\n        });\n        const overflow = SplitSlidingToolbar.parts.overflow({\n            dom: {\n                tag: 'div',\n                classes: ['tox-toolbar__overflow']\n            }\n        });\n        const baseSpec = renderMoreToolbarCommon(toolbarSpec);\n        return SplitSlidingToolbar.sketch({\n            ...baseSpec,\n            components: [primary, overflow],\n            markers: {\n                openClass: 'tox-toolbar__overflow--open',\n                closedClass: 'tox-toolbar__overflow--closed',\n                growingClass: 'tox-toolbar__overflow--growing',\n                shrinkingClass: 'tox-toolbar__overflow--shrinking',\n                overflowToggledClass: \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */\n            },\n            onOpened: (comp) => {\n                // TINY-9223: This will only broadcast to the same mothership as the toolbar\n                comp.getSystem().broadcastOn([toolbarHeightChange()], { type: 'opened' });\n                toolbarSpec.onToggled(comp, true);\n            },\n            onClosed: (comp) => {\n                // TINY-9223: This will only broadcast to the same mothership as the toolbar\n                comp.getSystem().broadcastOn([toolbarHeightChange()], { type: 'closed' });\n                toolbarSpec.onToggled(comp, false);\n            }\n        });\n    };\n    const renderToolbar = (toolbarSpec) => {\n        const modeName = toolbarSpec.cyclicKeying ? 'cyclic' : 'acyclic';\n        return Toolbar.sketch({\n            uid: toolbarSpec.uid,\n            dom: {\n                tag: 'div',\n                classes: ['tox-toolbar'].concat(toolbarSpec.type === ToolbarMode$1.scrolling ? ['tox-toolbar--scrolling'] : [])\n            },\n            components: [\n                Toolbar.parts.groups({})\n            ],\n            toolbarBehaviours: getToolbarBehaviours(toolbarSpec, modeName)\n        });\n    };\n\n    const renderButton = (spec, providers) => {\n        var _a, _b;\n        const isToggleButton = spec.type === 'togglebutton';\n        const optMemIcon = spec.icon\n            .map((memIcon) => renderReplaceableIconFromPack(memIcon, providers.icons))\n            .map(record);\n        const getAction = () => (comp) => {\n            const setIcon = (newIcon) => {\n                optMemIcon.map((memIcon) => memIcon.getOpt(comp).each((displayIcon) => {\n                    Replacing.set(displayIcon, [\n                        renderReplaceableIconFromPack(newIcon, providers.icons)\n                    ]);\n                }));\n            };\n            const setActive = (state) => {\n                const elm = comp.element;\n                if (state) {\n                    add$2(elm, \"tox-button--enabled\" /* ViewButtonClasses.Ticked */);\n                    set$9(elm, 'aria-pressed', true);\n                }\n                else {\n                    remove$3(elm, \"tox-button--enabled\" /* ViewButtonClasses.Ticked */);\n                    remove$8(elm, 'aria-pressed');\n                }\n            };\n            const isActive = () => has(comp.element, \"tox-button--enabled\" /* ViewButtonClasses.Ticked */);\n            const focus = () => focus$4(comp.element);\n            if (isToggleButton) {\n                return spec.onAction({ setIcon, setActive, isActive, focus });\n            }\n            if (spec.type === 'button') {\n                return spec.onAction({ setIcon });\n            }\n        };\n        const action = getAction();\n        const buttonSpec = {\n            ...spec,\n            name: isToggleButton ? spec.text.getOr(spec.icon.getOr('')) : (_a = spec.text) !== null && _a !== void 0 ? _a : spec.icon.getOr(''),\n            primary: spec.buttonType === 'primary',\n            buttonType: Optional.from(spec.buttonType),\n            tooltip: spec.tooltip,\n            icon: spec.icon,\n            enabled: true,\n            borderless: spec.borderless\n        };\n        const buttonTypeClasses = calculateClassesFromButtonType((_b = spec.buttonType) !== null && _b !== void 0 ? _b : 'secondary');\n        const optTranslatedText = isToggleButton ? spec.text.map(providers.translate) : Optional.some(providers.translate(spec.text));\n        const optTranslatedTextComponed = optTranslatedText.map(text$2);\n        const ariaLabelAttributes = buttonSpec.tooltip.or(optTranslatedText).map((al) => ({\n            'aria-label': providers.translate(al),\n        })).getOr({});\n        const optIconSpec = optMemIcon.map((memIcon) => memIcon.asSpec());\n        const components = componentRenderPipeline([optIconSpec, optTranslatedTextComponed]);\n        const hasIconAndText = spec.icon.isSome() && optTranslatedTextComponed.isSome();\n        const dom = {\n            tag: 'button',\n            classes: buttonTypeClasses\n                .concat(...spec.icon.isSome() && !hasIconAndText ? ['tox-button--icon'] : [])\n                .concat(...hasIconAndText ? ['tox-button--icon-and-text'] : [])\n                .concat(...spec.borderless ? ['tox-button--naked'] : [])\n                .concat(...spec.type === 'togglebutton' && spec.active ? [\"tox-button--enabled\" /* ViewButtonClasses.Ticked */] : []),\n            attributes: ariaLabelAttributes\n        };\n        const extraBehaviours = [];\n        const iconButtonSpec = renderCommonSpec(buttonSpec, Optional.some(action), extraBehaviours, dom, components, spec.tooltip, providers);\n        return Button.sketch(iconButtonSpec);\n    };\n\n    const renderViewButton = (spec, providers) => renderButton(spec, providers);\n    const renderButtonsGroup = (spec, providers) => {\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-view__toolbar__group'],\n            },\n            components: map$2(spec.buttons, (button) => renderViewButton(button, providers))\n        };\n    };\n    const deviceDetection = detect$1().deviceType;\n    const isPhone = deviceDetection.isPhone();\n    const isTablet = deviceDetection.isTablet();\n    const renderViewHeader = (spec) => {\n        let hasGroups = false;\n        const endButtons = map$2(spec.buttons, (btnspec) => {\n            if (btnspec.type === 'group') {\n                hasGroups = true;\n                return renderButtonsGroup(btnspec, spec.providers);\n            }\n            else {\n                return renderViewButton(btnspec, spec.providers);\n            }\n        });\n        return {\n            uid: spec.uid,\n            dom: {\n                tag: 'div',\n                classes: [\n                    !hasGroups ? 'tox-view__header' : 'tox-view__toolbar',\n                    ...(isPhone || isTablet ? ['tox-view--mobile', 'tox-view--scrolling'] : [])\n                ]\n            },\n            behaviours: derive$1([\n                Focusing.config({}),\n                Keying.config({\n                    mode: 'flow',\n                    selector: 'button, .tox-button',\n                    focusInside: FocusInsideModes.OnEnterOrSpaceMode\n                })\n            ]),\n            components: hasGroups ?\n                endButtons\n                : [\n                    Container.sketch({\n                        dom: {\n                            tag: 'div',\n                            classes: ['tox-view__header-start']\n                        },\n                        components: []\n                    }),\n                    Container.sketch({\n                        dom: {\n                            tag: 'div',\n                            classes: ['tox-view__header-end']\n                        },\n                        components: endButtons\n                    })\n                ]\n        };\n    };\n    const renderViewPane = (spec) => {\n        return {\n            uid: spec.uid,\n            behaviours: derive$1([\n                Focusing.config({}),\n                Tabstopping.config({})\n            ]),\n            dom: {\n                tag: 'div',\n                classes: ['tox-view__pane']\n            }\n        };\n    };\n    const factory$2 = (detail, components, _spec, _externals) => {\n        const apis = {\n            getPane: (comp) => parts$h.getPart(comp, detail, 'pane'),\n            getOnShow: (_comp) => detail.viewConfig.onShow,\n            getOnHide: (_comp) => detail.viewConfig.onHide,\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            behaviours: derive$1([\n                Focusing.config({}),\n                Keying.config({\n                    mode: 'cyclic',\n                    focusInside: FocusInsideModes.OnEnterOrSpaceMode\n                })\n            ]),\n            apis\n        };\n    };\n    var View = composite({\n        name: 'silver.View',\n        configFields: [\n            required$1('viewConfig'),\n        ],\n        partFields: [\n            optional({\n                factory: {\n                    sketch: renderViewHeader\n                },\n                schema: [\n                    required$1('buttons'),\n                    required$1('providers')\n                ],\n                name: 'header'\n            }),\n            optional({\n                factory: {\n                    sketch: renderViewPane\n                },\n                schema: [],\n                name: 'pane'\n            })\n        ],\n        factory: factory$2,\n        apis: {\n            getPane: (apis, comp) => apis.getPane(comp),\n            getOnShow: (apis, comp) => apis.getOnShow(comp),\n            getOnHide: (apis, comp) => apis.getOnHide(comp)\n        }\n    });\n\n    const makeViews = (parts, viewConfigs, providers) => {\n        return mapToArray(viewConfigs, (config, name) => {\n            const internalViewConfig = getOrDie(createView(config));\n            return parts.slot(name, View.sketch({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-view']\n                },\n                viewConfig: internalViewConfig,\n                components: [\n                    ...internalViewConfig.buttons.length > 0 ? [\n                        View.parts.header({\n                            buttons: internalViewConfig.buttons,\n                            providers\n                        })\n                    ] : [],\n                    View.parts.pane({})\n                ]\n            }));\n        });\n    };\n    const makeSlotContainer = (viewConfigs, providers) => SlotContainer.sketch((parts) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-view-wrap__slot-container']\n        },\n        components: makeViews(parts, viewConfigs, providers),\n        slotBehaviours: SimpleBehaviours.unnamedEvents([\n            runOnAttached((slotContainer) => SlotContainer.hideAllSlots(slotContainer))\n        ])\n    }));\n    const getCurrentName = (slotContainer) => {\n        return find$5(SlotContainer.getSlotNames(slotContainer), (name) => SlotContainer.isShowing(slotContainer, name));\n    };\n    const hideContainer = (comp) => {\n        const element = comp.element;\n        set$7(element, 'display', 'none');\n        set$9(element, 'aria-hidden', 'true');\n    };\n    const showContainer = (comp) => {\n        const element = comp.element;\n        remove$6(element, 'display');\n        remove$8(element, 'aria-hidden');\n    };\n    const makeViewInstanceApi = (slot) => ({\n        getContainer: constant$1(slot)\n    });\n    const runOnPaneWithInstanceApi = (slotContainer, name, get) => {\n        SlotContainer.getSlot(slotContainer, name).each((view) => {\n            View.getPane(view).each((pane) => {\n                const onCallback = get(view);\n                onCallback(makeViewInstanceApi(pane.element.dom));\n            });\n        });\n    };\n    const runOnShow = (slotContainer, name) => runOnPaneWithInstanceApi(slotContainer, name, View.getOnShow);\n    const runOnHide = (slotContainer, name) => runOnPaneWithInstanceApi(slotContainer, name, View.getOnHide);\n    const factory$1 = (detail, spec) => {\n        const setViews = (comp, viewConfigs) => {\n            Replacing.set(comp, [makeSlotContainer(viewConfigs, spec.backstage.shared.providers)]);\n        };\n        const whichView = (comp) => {\n            return Composing.getCurrent(comp).bind(getCurrentName);\n        };\n        const toggleView = (comp, showMainView, hideMainView, name) => {\n            return Composing.getCurrent(comp).exists((slotContainer) => {\n                const optCurrentSlotName = getCurrentName(slotContainer);\n                const isTogglingCurrentView = optCurrentSlotName.exists((current) => name === current);\n                const exists = SlotContainer.getSlot(slotContainer, name).isSome();\n                if (exists) {\n                    SlotContainer.hideAllSlots(slotContainer);\n                    if (!isTogglingCurrentView) {\n                        hideMainView();\n                        showContainer(comp);\n                        SlotContainer.showSlot(slotContainer, name);\n                        runOnShow(slotContainer, name);\n                    }\n                    else {\n                        hideContainer(comp);\n                        showMainView();\n                    }\n                    optCurrentSlotName.each((prevName) => runOnHide(slotContainer, prevName));\n                }\n                return exists;\n            });\n        };\n        const apis = {\n            setViews,\n            whichView,\n            toggleView\n        };\n        return {\n            uid: detail.uid,\n            dom: {\n                tag: 'div',\n                classes: ['tox-view-wrap'],\n                attributes: { 'aria-hidden': 'true' },\n                styles: { display: 'none' }\n            },\n            components: [\n            // this will be replaced on setViews\n            ],\n            behaviours: derive$1([\n                Replacing.config({}),\n                Composing.config({\n                    find: (comp) => {\n                        const children = Replacing.contents(comp);\n                        return head(children);\n                    }\n                })\n            ]),\n            apis\n        };\n    };\n    var ViewWrapper = single({\n        factory: factory$1,\n        name: 'silver.ViewWrapper',\n        configFields: [\n            required$1('backstage')\n        ],\n        apis: {\n            setViews: (apis, comp, views) => apis.setViews(comp, views),\n            toggleView: (apis, comp, outerContainer, editorCont, name) => apis.toggleView(comp, outerContainer, editorCont, name),\n            whichView: (apis, comp) => apis.whichView(comp)\n        }\n    });\n\n    const factory = (detail, components, _spec) => {\n        let toolbarDrawerOpenState = false;\n        const toggleStatusbar = (editorContainer) => {\n            sibling(editorContainer, '.tox-statusbar').each((statusBar) => {\n                if (get$e(statusBar, 'display') === 'none' && get$g(statusBar, 'aria-hidden') === 'true') {\n                    remove$6(statusBar, 'display');\n                    remove$8(statusBar, 'aria-hidden');\n                }\n                else {\n                    set$7(statusBar, 'display', 'none');\n                    set$9(statusBar, 'aria-hidden', 'true');\n                }\n            });\n        };\n        const apis = {\n            getSocket: (comp) => {\n                return parts$h.getPart(comp, detail, 'socket');\n            },\n            setSidebar: (comp, panelConfigs, showSidebar) => {\n                parts$h.getPart(comp, detail, 'sidebar').each((sidebar) => setSidebar(sidebar, panelConfigs, showSidebar));\n            },\n            toggleSidebar: (comp, name) => {\n                parts$h.getPart(comp, detail, 'sidebar').each((sidebar) => toggleSidebar(sidebar, name));\n            },\n            whichSidebar: (comp) => {\n                return parts$h.getPart(comp, detail, 'sidebar').bind(whichSidebar).getOrNull();\n            },\n            getHeader: (comp) => {\n                return parts$h.getPart(comp, detail, 'header');\n            },\n            getToolbar: (comp) => {\n                return parts$h.getPart(comp, detail, 'toolbar');\n            },\n            setToolbar: (comp, groups) => {\n                parts$h.getPart(comp, detail, 'toolbar').each((toolbar) => {\n                    const renderedGroups = map$2(groups, renderToolbarGroup);\n                    toolbar.getApis().setGroups(toolbar, renderedGroups);\n                });\n            },\n            setToolbars: (comp, toolbars) => {\n                parts$h.getPart(comp, detail, 'multiple-toolbar').each((mToolbar) => {\n                    const renderedToolbars = map$2(toolbars, (g) => map$2(g, renderToolbarGroup));\n                    CustomList.setItems(mToolbar, renderedToolbars);\n                });\n            },\n            refreshToolbar: (comp) => {\n                const toolbar = parts$h.getPart(comp, detail, 'toolbar');\n                toolbar.each((toolbar) => toolbar.getApis().refresh(toolbar));\n            },\n            toggleToolbarDrawer: (comp) => {\n                parts$h.getPart(comp, detail, 'toolbar').each((toolbar) => {\n                    mapFrom(toolbar.getApis().toggle, (toggle) => toggle(toolbar));\n                });\n            },\n            toggleToolbarDrawerWithoutFocusing: (comp) => {\n                parts$h.getPart(comp, detail, 'toolbar').each((toolbar) => {\n                    mapFrom(toolbar.getApis().toggleWithoutFocusing, (toggleWithoutFocusing) => toggleWithoutFocusing(toolbar));\n                });\n            },\n            isToolbarDrawerToggled: (comp) => {\n                // isOpen may not be defined on all toolbars e.g. 'scrolling' and 'wrap'\n                return parts$h.getPart(comp, detail, 'toolbar')\n                    .bind((toolbar) => Optional.from(toolbar.getApis().isOpen).map((isOpen) => isOpen(toolbar)))\n                    .getOr(false);\n            },\n            getThrobber: (comp) => {\n                return parts$h.getPart(comp, detail, 'throbber');\n            },\n            focusToolbar: (comp) => {\n                const optToolbar = parts$h.getPart(comp, detail, 'toolbar').orThunk(() => parts$h.getPart(comp, detail, 'multiple-toolbar'));\n                optToolbar.each((toolbar) => {\n                    Keying.focusIn(toolbar);\n                });\n            },\n            setMenubar: (comp, menus) => {\n                parts$h.getPart(comp, detail, 'menubar').each((menubar) => {\n                    SilverMenubar.setMenus(menubar, menus);\n                });\n            },\n            focusMenubar: (comp) => {\n                parts$h.getPart(comp, detail, 'menubar').each((menubar) => {\n                    SilverMenubar.focus(menubar);\n                });\n            },\n            setViews: (comp, viewConfigs) => {\n                parts$h.getPart(comp, detail, 'viewWrapper').each((wrapper) => {\n                    ViewWrapper.setViews(wrapper, viewConfigs);\n                });\n            },\n            toggleView: (comp, name) => {\n                return parts$h.getPart(comp, detail, 'viewWrapper').exists((wrapper) => ViewWrapper.toggleView(wrapper, () => apis.showMainView(comp), () => apis.hideMainView(comp), name));\n            },\n            whichView: (comp) => {\n                return parts$h.getPart(comp, detail, 'viewWrapper').bind(ViewWrapper.whichView).getOrNull();\n            },\n            hideMainView: (comp) => {\n                toolbarDrawerOpenState = apis.isToolbarDrawerToggled(comp);\n                if (toolbarDrawerOpenState) {\n                    apis.toggleToolbarDrawer(comp);\n                }\n                parts$h.getPart(comp, detail, 'editorContainer').each((editorContainer) => {\n                    const element = editorContainer.element;\n                    toggleStatusbar(element);\n                    set$7(element, 'display', 'none');\n                    set$9(element, 'aria-hidden', 'true');\n                });\n            },\n            showMainView: (comp) => {\n                if (toolbarDrawerOpenState) {\n                    apis.toggleToolbarDrawer(comp);\n                }\n                parts$h.getPart(comp, detail, 'editorContainer').each((editorContainer) => {\n                    const element = editorContainer.element;\n                    toggleStatusbar(element);\n                    remove$6(element, 'display');\n                    remove$8(element, 'aria-hidden');\n                });\n            }\n        };\n        return {\n            uid: detail.uid,\n            dom: detail.dom,\n            components,\n            apis,\n            behaviours: detail.behaviours\n        };\n    };\n    const partMenubar = partType$1.optional({\n        factory: SilverMenubar,\n        name: 'menubar',\n        schema: [\n            required$1('backstage')\n        ]\n    });\n    const toolbarFactory = (spec) => {\n        if (spec.type === ToolbarMode$1.sliding) {\n            return renderSlidingMoreToolbar;\n        }\n        else if (spec.type === ToolbarMode$1.floating) {\n            return renderFloatingMoreToolbar;\n        }\n        else {\n            return renderToolbar;\n        }\n    };\n    const partMultipleToolbar = partType$1.optional({\n        factory: {\n            sketch: (spec) => CustomList.sketch({\n                uid: spec.uid,\n                dom: spec.dom,\n                listBehaviours: derive$1([\n                    Keying.config({\n                        mode: 'acyclic',\n                        selector: '.tox-toolbar'\n                    })\n                ]),\n                makeItem: () => renderToolbar({\n                    type: spec.type,\n                    uid: generate$6('multiple-toolbar-item'),\n                    cyclicKeying: false,\n                    initGroups: [],\n                    providers: spec.providers,\n                    onEscape: () => {\n                        spec.onEscape();\n                        return Optional.some(true);\n                    }\n                }),\n                setupItem: (_mToolbar, tc, data, _index) => {\n                    Toolbar.setGroups(tc, data);\n                },\n                shell: true\n            })\n        },\n        name: 'multiple-toolbar',\n        schema: [\n            required$1('dom'),\n            required$1('onEscape')\n        ]\n    });\n    const partToolbar = partType$1.optional({\n        factory: {\n            sketch: (spec) => {\n                const renderer = toolbarFactory(spec);\n                const toolbarSpec = {\n                    type: spec.type,\n                    uid: spec.uid,\n                    onEscape: () => {\n                        spec.onEscape();\n                        return Optional.some(true);\n                    },\n                    onToggled: (_comp, state) => spec.onToolbarToggled(state),\n                    cyclicKeying: false,\n                    initGroups: [],\n                    getSink: spec.getSink,\n                    providers: spec.providers,\n                    moreDrawerData: {\n                        lazyToolbar: spec.lazyToolbar,\n                        lazyMoreButton: spec.lazyMoreButton,\n                        lazyHeader: spec.lazyHeader\n                    },\n                    attributes: spec.attributes\n                };\n                return renderer(toolbarSpec);\n            }\n        },\n        name: 'toolbar',\n        schema: [\n            required$1('dom'),\n            required$1('onEscape'),\n            required$1('getSink')\n        ]\n    });\n    const partHeader = partType$1.optional({\n        factory: {\n            sketch: renderHeader\n        },\n        name: 'header',\n        schema: [\n            required$1('dom')\n        ]\n    });\n    const partPromotion = partType$1.optional({\n        factory: {\n            sketch: renderPromotion\n        },\n        name: 'promotion',\n        schema: [\n            required$1('dom'),\n            required$1('promotionLink')\n        ]\n    });\n    const partSocket = partType$1.optional({\n        // factory: Fun.identity,\n        name: 'socket',\n        schema: [\n            required$1('dom')\n        ]\n    });\n    const partSidebar = partType$1.optional({\n        factory: {\n            sketch: renderSidebar\n        },\n        name: 'sidebar',\n        schema: [\n            required$1('dom')\n        ]\n    });\n    const partThrobber = partType$1.optional({\n        factory: {\n            sketch: renderThrobber\n        },\n        name: 'throbber',\n        schema: [\n            required$1('dom')\n        ]\n    });\n    const partViewWrapper = partType$1.optional({\n        factory: ViewWrapper,\n        name: 'viewWrapper',\n        schema: [\n            required$1('backstage')\n        ]\n    });\n    const renderEditorContainer = (spec) => ({\n        uid: spec.uid,\n        dom: {\n            tag: 'div',\n            classes: ['tox-editor-container']\n        },\n        components: spec.components\n    });\n    const partEditorContainer = partType$1.optional({\n        factory: {\n            sketch: renderEditorContainer\n        },\n        name: 'editorContainer',\n        schema: []\n    });\n    var OuterContainer = composite({\n        name: 'OuterContainer',\n        factory,\n        configFields: [\n            required$1('dom'),\n            required$1('behaviours')\n        ],\n        partFields: [\n            partHeader,\n            partMenubar,\n            partToolbar,\n            partMultipleToolbar,\n            partSocket,\n            partSidebar,\n            partPromotion,\n            partThrobber,\n            partViewWrapper,\n            partEditorContainer\n        ],\n        apis: {\n            getSocket: (apis, comp) => {\n                return apis.getSocket(comp);\n            },\n            setSidebar: (apis, comp, panelConfigs, showSidebar) => {\n                apis.setSidebar(comp, panelConfigs, showSidebar);\n            },\n            toggleSidebar: (apis, comp, name) => {\n                apis.toggleSidebar(comp, name);\n            },\n            whichSidebar: (apis, comp) => {\n                return apis.whichSidebar(comp);\n            },\n            getHeader: (apis, comp) => {\n                return apis.getHeader(comp);\n            },\n            getToolbar: (apis, comp) => {\n                return apis.getToolbar(comp);\n            },\n            setToolbar: (apis, comp, groups) => {\n                apis.setToolbar(comp, groups);\n            },\n            setToolbars: (apis, comp, toolbars) => {\n                apis.setToolbars(comp, toolbars);\n            },\n            refreshToolbar: (apis, comp) => {\n                return apis.refreshToolbar(comp);\n            },\n            toggleToolbarDrawer: (apis, comp) => {\n                apis.toggleToolbarDrawer(comp);\n            },\n            toggleToolbarDrawerWithoutFocusing: (apis, comp) => {\n                apis.toggleToolbarDrawerWithoutFocusing(comp);\n            },\n            isToolbarDrawerToggled: (apis, comp) => {\n                return apis.isToolbarDrawerToggled(comp);\n            },\n            getThrobber: (apis, comp) => {\n                return apis.getThrobber(comp);\n            },\n            // FIX: Dupe\n            setMenubar: (apis, comp, menus) => {\n                apis.setMenubar(comp, menus);\n            },\n            focusMenubar: (apis, comp) => {\n                apis.focusMenubar(comp);\n            },\n            focusToolbar: (apis, comp) => {\n                apis.focusToolbar(comp);\n            },\n            setViews: (apis, comp, views) => {\n                apis.setViews(comp, views);\n            },\n            toggleView: (apis, comp, name) => {\n                return apis.toggleView(comp, name);\n            },\n            whichView: (apis, comp) => {\n                return apis.whichView(comp);\n            },\n        }\n    });\n\n    const defaultMenubar = 'file edit view insert format tools table help';\n    const defaultMenus = {\n        file: { title: 'File', items: 'newdocument restoredraft | preview | importword exportpdf exportword | export print | deleteallconversations' },\n        edit: { title: 'Edit', items: 'undo redo | cut copy paste pastetext | selectall | searchreplace' },\n        view: { title: 'View', items: 'code revisionhistory | visualaid visualchars visualblocks | spellchecker | preview fullscreen | showcomments' },\n        insert: { title: 'Insert', items: 'image link media addcomment pageembed inserttemplate codesample inserttable accordion math | charmap emoticons hr | pagebreak nonbreaking anchor tableofcontents footnotes | mergetags | insertdatetime' },\n        format: { title: 'Format', items: 'bold italic underline strikethrough superscript subscript codeformat | styles blocks fontfamily fontsize align lineheight | forecolor backcolor | language | removeformat' },\n        tools: { title: 'Tools', items: 'aidialog aishortcuts | spellchecker spellcheckerlanguage | autocorrect capitalization | a11ycheck code typography wordcount addtemplate' },\n        table: { title: 'Table', items: 'inserttable | cell row column | advtablesort | tableprops deletetable' },\n        help: { title: 'Help', items: 'help' }\n    };\n    const make = (menu, registry, editor) => {\n        const removedMenuItems = getRemovedMenuItems(editor).split(/[ ,]/);\n        return {\n            text: menu.title,\n            getItems: () => bind$3(menu.items, (i) => {\n                const itemName = i.toLowerCase();\n                if (itemName.trim().length === 0) {\n                    return [];\n                }\n                else if (exists(removedMenuItems, (removedMenuItem) => removedMenuItem === itemName)) {\n                    return [];\n                }\n                else if (itemName === 'separator' || itemName === '|') {\n                    return [{\n                            type: 'separator'\n                        }];\n                }\n                else if (registry.menuItems[itemName]) {\n                    return [registry.menuItems[itemName]];\n                }\n                else {\n                    return [];\n                }\n            })\n        };\n    };\n    const parseItemsString = (items) => {\n        return items.split(' ');\n    };\n    const identifyMenus = (editor, registry) => {\n        const rawMenuData = { ...defaultMenus, ...registry.menus };\n        const userDefinedMenus = keys(registry.menus).length > 0;\n        const menubar = registry.menubar === undefined || registry.menubar === true ? parseItemsString(defaultMenubar) : parseItemsString(registry.menubar === false ? '' : registry.menubar);\n        const validMenus = filter$2(menubar, (menuName) => {\n            const isDefaultMenu = has$2(defaultMenus, menuName);\n            if (userDefinedMenus) {\n                return isDefaultMenu || get$h(registry.menus, menuName).exists((menu) => has$2(menu, 'items'));\n            }\n            else {\n                return isDefaultMenu;\n            }\n        });\n        const menus = map$2(validMenus, (menuName) => {\n            const menuData = rawMenuData[menuName];\n            return make({ title: menuData.title, items: parseItemsString(menuData.items) }, registry, editor);\n        });\n        return filter$2(menus, (menu) => {\n            // Filter out menus that have no items, or only separators\n            const isNotSeparator = (item) => isString(item) || item.type !== 'separator';\n            return menu.getItems().length > 0 && exists(menu.getItems(), isNotSeparator);\n        });\n    };\n\n    const fireSkinLoaded = (editor) => {\n        const done = () => {\n            editor._skinLoaded = true;\n            fireSkinLoaded$1(editor);\n        };\n        return () => {\n            if (editor.initialized) {\n                done();\n            }\n            else {\n                editor.on('init', done);\n            }\n        };\n    };\n    const fireSkinLoadError = (editor, err) => () => fireSkinLoadError$1(editor, { message: err });\n\n    const getSkinResourceIdentifier = (editor) => {\n        const skin = getSkin(editor);\n        // Use falsy check to cover false, undefined/null and empty string\n        if (!skin) {\n            return Optional.none();\n        }\n        else {\n            return Optional.from(skin);\n        }\n    };\n    const loadStylesheet = (editor, stylesheetUrl, styleSheetLoader) => {\n        // Ensure the stylesheet is cleaned up when the editor is destroyed\n        editor.on('remove', () => styleSheetLoader.unload(stylesheetUrl));\n        return styleSheetLoader.load(stylesheetUrl);\n    };\n    const loadRawCss = (editor, key, css, styleSheetLoader) => {\n        // Ensure the stylesheet is cleaned up when the editor is destroyed\n        editor.on('remove', () => styleSheetLoader.unloadRawCss(key));\n        return styleSheetLoader.loadRawCss(key, css);\n    };\n    const skinIdentifierToResourceKey = (identifier, filename) => 'ui/' + identifier + '/' + filename;\n    const getResourceValue = (resourceKey) => Optional.from(tinymce.Resource.get(resourceKey)).filter(isString);\n    const determineCSSDecision = (editor, filenameBase, skinUrl = '') => {\n        const resourceKey = getSkinResourceIdentifier(editor)\n            .map((identifier) => skinIdentifierToResourceKey(identifier, `${filenameBase}.css`));\n        const resourceValue = resourceKey.bind(getResourceValue);\n        return lift2(resourceKey, resourceValue, (key, css) => {\n            return { _kind: 'load-raw', key, css };\n        }).getOrThunk(() => {\n            const suffix = editor.editorManager.suffix;\n            const skinUiCssUrl = skinUrl + `/${filenameBase}${suffix}.css`;\n            return { _kind: 'load-stylesheet', url: skinUiCssUrl };\n        });\n    };\n    const loadUiSkins = (editor, skinUrl) => {\n        const loader = editor.ui.styleSheetLoader;\n        const decision = determineCSSDecision(editor, 'skin', skinUrl);\n        switch (decision._kind) {\n            case 'load-raw':\n                const { key, css } = decision;\n                loadRawCss(editor, key, css, loader);\n                return Promise.resolve();\n            case 'load-stylesheet':\n                const { url } = decision;\n                return loadStylesheet(editor, url, loader);\n            default:\n                return Promise.resolve();\n        }\n    };\n    const loadShadowDomUiSkins = (editor, skinUrl) => {\n        const isInShadowRoot$1 = isInShadowRoot(SugarElement.fromDom(editor.getElement()));\n        if (!isInShadowRoot$1) {\n            return Promise.resolve();\n        }\n        else {\n            const loader = global$9.DOM.styleSheetLoader;\n            const decision = determineCSSDecision(editor, 'skin.shadowdom', skinUrl);\n            switch (decision._kind) {\n                case 'load-raw':\n                    const { key, css } = decision;\n                    loadRawCss(editor, key, css, loader);\n                    return Promise.resolve();\n                case 'load-stylesheet':\n                    const { url } = decision;\n                    return loadStylesheet(editor, url, loader);\n                default:\n                    return Promise.resolve();\n            }\n        }\n    };\n    const loadUiContentCSS = (editor, isInline, skinUrl) => {\n        const filenameBase = isInline ? 'content.inline' : 'content';\n        const decision = determineCSSDecision(editor, filenameBase, skinUrl);\n        switch (decision._kind) {\n            case 'load-raw':\n                const { key, css } = decision;\n                if (isInline) {\n                    loadRawCss(editor, key, css, editor.ui.styleSheetLoader);\n                }\n                else {\n                    // Need to wait until the iframe is in the DOM before trying to load\n                    // the style into the iframe document\n                    editor.on('PostRender', () => {\n                        loadRawCss(editor, key, css, editor.dom.styleSheetLoader);\n                    });\n                }\n                return Promise.resolve();\n            case 'load-stylesheet':\n                const { url } = decision;\n                if (skinUrl) {\n                    editor.contentCSS.push(url);\n                }\n                return Promise.resolve();\n            default:\n                return Promise.resolve();\n        }\n    };\n    const loadUrlSkin = async (isInline, editor) => {\n        const skinUrl = getSkinUrl(editor);\n        await loadUiContentCSS(editor, isInline, skinUrl);\n        // In Modern Inline, this is explicitly called in editor.on('focus', ...) as well as in render().\n        // Seems to work without, but adding a note in case things break later\n        if (!isSkinDisabled(editor) && isString(skinUrl)) {\n            return Promise.all([\n                loadUiSkins(editor, skinUrl),\n                loadShadowDomUiSkins(editor, skinUrl)\n            ]).then();\n        }\n    };\n    const loadSkin = (isInline, editor) => {\n        return loadUrlSkin(isInline, editor).then(fireSkinLoaded(editor), fireSkinLoadError(editor, 'Skin could not be loaded'));\n    };\n    const iframe = curry(loadSkin, false);\n    const inline = curry(loadSkin, true);\n\n    const getButtonApi = (component) => ({\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: (state) => Disabling.set(component, !state),\n        setText: (text) => emitWith(component, updateMenuText, {\n            text\n        }),\n        setIcon: (icon) => emitWith(component, updateMenuIcon, {\n            icon\n        })\n    });\n    const getToggleApi = (component) => ({\n        setActive: (state) => {\n            Toggling.set(component, state);\n        },\n        isActive: () => Toggling.isOn(component),\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: (state) => Disabling.set(component, !state),\n        setText: (text) => emitWith(component, updateMenuText, {\n            text\n        }),\n        setIcon: (icon) => emitWith(component, updateMenuIcon, {\n            icon\n        })\n    });\n    const getTooltipAttributes = (tooltip, providersBackstage) => tooltip.map((tooltip) => ({\n        'aria-label': providersBackstage.translate(tooltip),\n    })).getOr({});\n    const focusButtonEvent = generate$6('focus-button');\n    const renderCommonStructure = (optIcon, optText, tooltip, behaviours, providersBackstage, context, btnName) => {\n        const optMemDisplayText = optText.map((text) => record(renderLabel$1(text, \"tox-tbtn\" /* ToolbarButtonClasses.Button */, providersBackstage)));\n        const optMemDisplayIcon = optIcon.map((icon) => record(renderReplaceableIconFromPack(icon, providersBackstage.icons)));\n        return {\n            dom: {\n                tag: 'button',\n                classes: [\"tox-tbtn\" /* ToolbarButtonClasses.Button */].concat(optText.isSome() ? [\"tox-tbtn--select\" /* ToolbarButtonClasses.MatchWidth */] : []),\n                attributes: {\n                    ...getTooltipAttributes(tooltip, providersBackstage),\n                    ...(isNonNullable(btnName) ? { 'data-mce-name': btnName } : {})\n                }\n            },\n            components: componentRenderPipeline([\n                optMemDisplayIcon.map((mem) => mem.asSpec()),\n                optMemDisplayText.map((mem) => mem.asSpec()),\n            ]),\n            eventOrder: {\n                [mousedown()]: [\n                    'focusing',\n                    'alloy.base.behaviour',\n                    commonButtonDisplayEvent\n                ],\n                [attachedToDom()]: [commonButtonDisplayEvent, 'toolbar-group-button-events'],\n                [detachedFromDom()]: [commonButtonDisplayEvent, 'toolbar-group-button-events', 'tooltipping']\n            },\n            buttonBehaviours: derive$1([\n                DisablingConfigs.toolbarButton(() => providersBackstage.checkUiComponentContext(context).shouldDisable),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext(context)),\n                config(commonButtonDisplayEvent, [\n                    runOnAttached((comp, _se) => forceInitialSize(comp)),\n                    run$1(updateMenuText, (comp, se) => {\n                        optMemDisplayText.bind((mem) => mem.getOpt(comp)).each((displayText) => {\n                            Replacing.set(displayText, [text$2(providersBackstage.translate(se.event.text))]);\n                        });\n                    }),\n                    run$1(updateMenuIcon, (comp, se) => {\n                        optMemDisplayIcon.bind((mem) => mem.getOpt(comp)).each((displayIcon) => {\n                            Replacing.set(displayIcon, [renderReplaceableIconFromPack(se.event.icon, providersBackstage.icons)]);\n                        });\n                    }),\n                    run$1(mousedown(), (button, se) => {\n                        se.event.prevent();\n                        emit(button, focusButtonEvent);\n                    })\n                ])\n            ].concat(behaviours.getOr([])))\n        };\n    };\n    const renderFloatingToolbarButton = (spec, backstage, identifyButtons, attributes, btnName) => {\n        const sharedBackstage = backstage.shared;\n        const editorOffCell = Cell(noop);\n        const specialisation = {\n            toolbarButtonBehaviours: [],\n            getApi: getButtonApi,\n            onSetup: spec.onSetup\n        };\n        const behaviours = [\n            config('toolbar-group-button-events', [\n                onControlAttached(specialisation, editorOffCell),\n                onControlDetached(specialisation, editorOffCell)\n            ]),\n            ...(spec.tooltip.map((t) => Tooltipping.config(backstage.shared.providers.tooltips.getConfig({\n                tooltipText: backstage.shared.providers.translate(t),\n            })))).toArray()\n        ];\n        return FloatingToolbarButton.sketch({\n            lazySink: sharedBackstage.getSink,\n            fetch: () => Future.nu((resolve) => {\n                resolve(map$2(identifyButtons(spec.items), renderToolbarGroup));\n            }),\n            markers: {\n                toggledClass: \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */\n            },\n            parts: {\n                button: renderCommonStructure(spec.icon, spec.text, spec.tooltip, Optional.some(behaviours), sharedBackstage.providers, spec.context, btnName),\n                toolbar: {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-toolbar__overflow'],\n                        attributes\n                    }\n                }\n            }\n        });\n    };\n    const renderCommonToolbarButton = (spec, specialisation, providersBackstage, btnName) => {\n        var _d;\n        const editorOffCell = Cell(noop);\n        const structure = renderCommonStructure(spec.icon, spec.text, spec.tooltip, Optional.none(), providersBackstage, spec.context, btnName);\n        return Button.sketch({\n            dom: structure.dom,\n            components: structure.components,\n            eventOrder: toolbarButtonEventOrder,\n            buttonBehaviours: {\n                ...derive$1([\n                    config('toolbar-button-events', [\n                        onToolbarButtonExecute({\n                            onAction: spec.onAction,\n                            getApi: specialisation.getApi\n                        }),\n                        onControlAttached(specialisation, editorOffCell),\n                        onControlDetached(specialisation, editorOffCell)\n                    ]),\n                    ...(spec.tooltip.map((t) => Tooltipping.config(providersBackstage.tooltips.getConfig({\n                        tooltipText: providersBackstage.translate(t) + spec.shortcut.map((shortcut) => ` (${convertText(shortcut)})`).getOr(''),\n                    })))).toArray(),\n                    // Enable toolbar buttons by default\n                    DisablingConfigs.toolbarButton(() => !spec.enabled || providersBackstage.checkUiComponentContext(spec.context).shouldDisable),\n                    toggleOnReceive(() => providersBackstage.checkUiComponentContext(spec.context))\n                ].concat(specialisation.toolbarButtonBehaviours)),\n                // Here we add the commonButtonDisplayEvent behaviour from the structure so we can listen\n                // to updateMenuIcon and updateMenuText events and run the defined callbacks as they are\n                // defined in the renderCommonStructure function and fix the size of the button onAttached.\n                [commonButtonDisplayEvent]: (_d = structure.buttonBehaviours) === null || _d === void 0 ? void 0 : _d[commonButtonDisplayEvent],\n            }\n        });\n    };\n    const renderToolbarButton = (spec, providersBackstage, btnName) => renderToolbarButtonWith(spec, providersBackstage, [], btnName);\n    const renderToolbarButtonWith = (spec, providersBackstage, bonusEvents, btnName) => renderCommonToolbarButton(spec, {\n        toolbarButtonBehaviours: (bonusEvents.length > 0 ? [\n            // TODO: May have to pass through eventOrder if events start clashing\n            config('toolbarButtonWith', bonusEvents)\n        ] : []),\n        getApi: getButtonApi,\n        onSetup: spec.onSetup\n    }, providersBackstage, btnName);\n    const renderToolbarToggleButton = (spec, providersBackstage, btnName) => renderToolbarToggleButtonWith(spec, providersBackstage, [], btnName);\n    const renderToolbarToggleButtonWith = (spec, providersBackstage, bonusEvents, btnName) => renderCommonToolbarButton(spec, {\n        toolbarButtonBehaviours: [\n            Replacing.config({}),\n            Toggling.config({ toggleClass: \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */, aria: { mode: 'pressed' }, toggleOnExecute: false })\n        ].concat(bonusEvents.length > 0 ? [\n            // TODO: May have to pass through eventOrder if events start clashing\n            config('toolbarToggleButtonWith', bonusEvents)\n        ] : []),\n        getApi: getToggleApi,\n        onSetup: spec.onSetup\n    }, providersBackstage, btnName);\n    const fetchChoices = (getApi, spec, providersBackstage) => (comp) => Future.nu((callback) => spec.fetch(callback))\n        .map((items) => Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6('menu-value'), items, (value) => {\n        spec.onItemAction(getApi(comp), value);\n    }, spec.columns, spec.presets, ItemResponse$1.CLOSE_ON_EXECUTE, spec.select.getOr(never), providersBackstage), {\n        movement: deriveMenuMovement(spec.columns, spec.presets),\n        menuBehaviours: SimpleBehaviours.unnamedEvents(spec.columns !== 'auto' ? [] : [\n            runOnAttached((comp, _se) => {\n                detectSize(comp, 4, classForPreset(spec.presets)).each(({ numRows, numColumns }) => {\n                    Keying.setGridSize(comp, numRows, numColumns);\n                });\n            })\n        ])\n    }))));\n    // TODO: hookup onSetup and onDestroy\n    const renderSplitButton = (spec, sharedBackstage, btnName) => {\n        const tooltipString = Cell(spec.tooltip.getOr(''));\n        const getApi = (comp) => ({\n            isEnabled: () => !Disabling.isDisabled(comp),\n            setEnabled: (state) => Disabling.set(comp, !state),\n            setIconFill: (id, value) => {\n                descendant(comp.element, `svg path[class=\"${id}\"], rect[class=\"${id}\"]`).each((underlinePath) => {\n                    set$9(underlinePath, 'fill', value);\n                });\n            },\n            setActive: (state) => {\n                // Toggle the pressed aria state component\n                set$9(comp.element, 'aria-pressed', state);\n                // Toggle the inner button state, as that's the toggle component of the split button\n                descendant(comp.element, 'span').each((button) => {\n                    comp.getSystem().getByDom(button).each((buttonComp) => Toggling.set(buttonComp, state));\n                });\n            },\n            isActive: () => descendant(comp.element, 'span').exists((button) => comp.getSystem().getByDom(button).exists(Toggling.isOn)),\n            setText: (text) => descendant(comp.element, 'span').each((button) => comp.getSystem().getByDom(button).each((buttonComp) => emitWith(buttonComp, updateMenuText, {\n                text\n            }))),\n            setIcon: (icon) => descendant(comp.element, 'span').each((button) => comp.getSystem().getByDom(button).each((buttonComp) => emitWith(buttonComp, updateMenuIcon, {\n                icon\n            }))),\n            setTooltip: (tooltip) => {\n                const translatedTooltip = sharedBackstage.providers.translate(tooltip);\n                set$9(comp.element, 'aria-label', translatedTooltip);\n                tooltipString.set(tooltip);\n            }\n        });\n        const editorOffCell = Cell(noop);\n        const specialisation = {\n            getApi,\n            onSetup: spec.onSetup\n        };\n        return SplitDropdown.sketch({\n            dom: {\n                tag: 'div',\n                classes: [\"tox-split-button\" /* ToolbarButtonClasses.SplitButton */],\n                attributes: {\n                    'aria-pressed': false,\n                    ...getTooltipAttributes(spec.tooltip, sharedBackstage.providers),\n                    ...(isNonNullable(btnName) ? { 'data-mce-name': btnName } : {})\n                }\n            },\n            onExecute: (button) => {\n                const api = getApi(button);\n                if (api.isEnabled()) {\n                    spec.onAction(api);\n                }\n            },\n            onItemExecute: (_a, _b, _c) => { },\n            splitDropdownBehaviours: derive$1([\n                config('split-dropdown-events', [\n                    runOnAttached((comp, _se) => forceInitialSize(comp)),\n                    run$1(focusButtonEvent, Focusing.focus),\n                    onControlAttached(specialisation, editorOffCell),\n                    onControlDetached(specialisation, editorOffCell)\n                ]),\n                DisablingConfigs.splitButton(() => sharedBackstage.providers.isDisabled() || sharedBackstage.providers.checkUiComponentContext(spec.context).shouldDisable),\n                toggleOnReceive(() => sharedBackstage.providers.checkUiComponentContext(spec.context)),\n                Unselecting.config({}),\n                ...(spec.tooltip.map((tooltip) => {\n                    return Tooltipping.config({\n                        ...sharedBackstage.providers.tooltips.getConfig({\n                            tooltipText: sharedBackstage.providers.translate(tooltip),\n                            onShow: (comp) => {\n                                if (tooltipString.get() !== tooltip) {\n                                    const translatedTooltip = sharedBackstage.providers.translate(tooltipString.get());\n                                    Tooltipping.setComponents(comp, sharedBackstage.providers.tooltips.getComponents({ tooltipText: translatedTooltip }));\n                                }\n                            }\n                        }),\n                    });\n                }).toArray())\n            ]),\n            eventOrder: {\n                [attachedToDom()]: ['alloy.base.behaviour', 'split-dropdown-events', 'tooltipping'],\n                [detachedFromDom()]: ['split-dropdown-events', 'tooltipping']\n            },\n            toggleClass: \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */,\n            lazySink: sharedBackstage.getSink,\n            fetch: fetchChoices(getApi, spec, sharedBackstage.providers),\n            parts: {\n                // FIX: hasIcons\n                menu: part(false, spec.columns, spec.presets)\n            },\n            components: [\n                SplitDropdown.parts.button(renderCommonStructure(spec.icon, spec.text, Optional.none(), Optional.some([\n                    Toggling.config({ toggleClass: \"tox-tbtn--enabled\" /* ToolbarButtonClasses.Ticked */, toggleOnExecute: false }),\n                    DisablingConfigs.toolbarButton(never),\n                    toggleOnReceive(constant$1({ contextType: 'any', shouldDisable: false }))\n                ]), sharedBackstage.providers, spec.context)),\n                SplitDropdown.parts.arrow({\n                    dom: {\n                        tag: 'button',\n                        classes: [\"tox-tbtn\" /* ToolbarButtonClasses.Button */, 'tox-split-button__chevron'],\n                        innerHtml: get('chevron-down', sharedBackstage.providers.icons)\n                    },\n                    buttonBehaviours: derive$1([\n                        DisablingConfigs.splitButton(never),\n                        toggleOnReceive(constant$1({ contextType: 'any', shouldDisable: false }))\n                    ])\n                }),\n                SplitDropdown.parts['aria-descriptor']({\n                    text: sharedBackstage.providers.translate('To open the popup, press Shift+Enter')\n                })\n            ]\n        });\n    };\n\n    const contextFormInputSelector = '.tox-toolbar-slider__input,.tox-toolbar-textfield';\n    const focusIn = (contextbar) => {\n        InlineView.getContent(contextbar).each((comp) => {\n            descendant(comp.element, contextFormInputSelector).fold(() => Keying.focusIn(comp), focus$4);\n        });\n    };\n    // TODO: Is this really the best way to move focus out of the input when it gets disabled #TINY-11527\n    const focusParent = (comp) => search(comp.element).each((focus) => {\n        ancestor$1(focus, '[tabindex=\"-1\"]').each((parent) => {\n            focus$4(parent);\n        });\n    });\n\n    const forwardSlideEvent = generate$6('forward-slide');\n    const backSlideEvent = generate$6('backward-slide');\n    const changeSlideEvent = generate$6('change-slide-event');\n    const resizingClass = 'tox-pop--resizing';\n    const renderContextToolbar = (spec) => {\n        const stack = Cell([]);\n        const sketch = InlineView.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-pop']\n            },\n            fireDismissalEventInstead: {\n                event: 'doNotDismissYet'\n            },\n            onShow: (comp) => {\n                stack.set([]);\n                InlineView.getContent(comp).each((c) => {\n                    remove$6(c.element, 'visibility');\n                });\n                remove$3(comp.element, resizingClass);\n                remove$6(comp.element, 'width');\n            },\n            onHide: () => {\n                stack.set([]);\n                spec.onHide();\n            },\n            inlineBehaviours: derive$1([\n                config('context-toolbar-events', [\n                    runOnSource(transitionend(), (comp, se) => {\n                        if (se.event.raw.propertyName === 'width') {\n                            remove$3(comp.element, resizingClass);\n                            remove$6(comp.element, 'width');\n                        }\n                    }),\n                    run$1(changeSlideEvent, (comp, se) => {\n                        const elem = comp.element;\n                        // If it was partially through a slide, clear that and measure afresh\n                        remove$6(elem, 'width');\n                        const currentWidth = get$c(elem);\n                        const hadFocus = search(comp.element).isSome();\n                        // Remove these so that we can property measure the width of the context form content\n                        remove$6(elem, 'left');\n                        remove$6(elem, 'right');\n                        remove$6(elem, 'max-width');\n                        InlineView.setContent(comp, se.event.contents);\n                        add$2(elem, resizingClass);\n                        const newWidth = get$c(elem);\n                        // Reposition without transition to avoid it from being animated from previous position\n                        set$7(elem, 'transition', 'none');\n                        InlineView.reposition(comp);\n                        remove$6(elem, 'transition');\n                        set$7(elem, 'width', currentWidth + 'px');\n                        se.event.focus.fold(() => {\n                            if (hadFocus) {\n                                focusIn(comp);\n                            }\n                        }, (f) => {\n                            active$1(getRootNode(comp.element)).fold(() => focus$4(f), (active) => {\n                                // We need this extra check since if the focus is aleady on the iframe we don't want to call focus on it again since that closes the context toolbar\n                                if (!eq(active, f)) {\n                                    focus$4(f);\n                                }\n                            });\n                        });\n                        setTimeout(() => {\n                            set$7(comp.element, 'width', newWidth + 'px');\n                        }, 0);\n                    }),\n                    run$1(forwardSlideEvent, (comp, se) => {\n                        InlineView.getContent(comp).each((oldContents) => {\n                            stack.set(stack.get().concat([\n                                {\n                                    bar: oldContents,\n                                    focus: active$1(getRootNode(comp.element))\n                                }\n                            ]));\n                        });\n                        emitWith(comp, changeSlideEvent, {\n                            contents: se.event.forwardContents,\n                            focus: Optional.none()\n                        });\n                    }),\n                    run$1(backSlideEvent, (comp, _se) => {\n                        spec.onBack();\n                        last$1(stack.get()).each((last) => {\n                            stack.set(stack.get().slice(0, stack.get().length - 1));\n                            emitWith(comp, changeSlideEvent, {\n                                // Because we are using premade, we should have access to the same element\n                                // to give focus (although it isn't working)\n                                contents: premade(last.bar),\n                                focus: last.focus\n                            });\n                        });\n                    })\n                ]),\n                Keying.config({\n                    mode: 'special',\n                    onEscape: (comp) => last$1(stack.get()).fold(() => \n                    // Escape just focuses the content. It no longer closes the toolbar.\n                    spec.onEscape(), (_) => {\n                        emit(comp, backSlideEvent);\n                        return Optional.some(true);\n                    })\n                })\n            ]),\n            lazySink: () => Result.value(spec.sink)\n        });\n        return {\n            sketch,\n            inSubtoolbar: () => stack.get().length > 0\n        };\n    };\n\n    const createNavigateBackButton = (editor, backstage) => {\n        const bridged = getOrDie(createToolbarButton({\n            type: 'button',\n            icon: 'chevron-left',\n            tooltip: 'Back',\n            onAction: noop\n        }));\n        return renderToolbarButtonWith(bridged, backstage.shared.providers, [\n            run$1(internalToolbarButtonExecute, (comp) => {\n                emit(comp, backSlideEvent);\n            })\n        ]);\n    };\n\n    const makeTooltipText = (editor, labelWithPlaceholder, value) => isEmpty(value) ? editor.translate(labelWithPlaceholder) : editor.translate([labelWithPlaceholder, editor.translate(value)]);\n\n    const generateSelectItems = (backstage, spec) => {\n        const generateItem = (rawItem, response, invalid, value) => {\n            const translatedText = backstage.shared.providers.translate(rawItem.title);\n            if (rawItem.type === 'separator') {\n                return Optional.some({\n                    type: 'separator',\n                    text: translatedText\n                });\n            }\n            else if (rawItem.type === 'submenu') {\n                const items = bind$3(rawItem.getStyleItems(), (si) => validate(si, response, value));\n                if (response === 0 /* IrrelevantStyleItemResponse.Hide */ && items.length <= 0) {\n                    return Optional.none();\n                }\n                else {\n                    return Optional.some({\n                        type: 'nestedmenuitem',\n                        text: translatedText,\n                        enabled: items.length > 0,\n                        getSubmenuItems: () => bind$3(rawItem.getStyleItems(), (si) => validate(si, response, value))\n                    });\n                }\n            }\n            else {\n                return Optional.some({\n                    // ONLY TOGGLEMENUITEMS HANDLE STYLE META.\n                    // See ToggleMenuItem and ItemStructure for how it's handled.\n                    // If this type ever changes, we'll need to change that too\n                    type: 'togglemenuitem',\n                    text: translatedText,\n                    icon: rawItem.icon,\n                    active: rawItem.isSelected(value),\n                    enabled: !invalid,\n                    onAction: spec.onAction(rawItem),\n                    ...rawItem.getStylePreview().fold(() => ({}), (preview) => ({ meta: { style: preview } }))\n                });\n            }\n        };\n        const validate = (item, response, value) => {\n            const invalid = item.type === 'formatter' && spec.isInvalid(item);\n            // If we are making them disappear based on some setting\n            if (response === 0 /* IrrelevantStyleItemResponse.Hide */) {\n                return invalid ? [] : generateItem(item, response, false, value).toArray();\n            }\n            else {\n                return generateItem(item, response, invalid, value).toArray();\n            }\n        };\n        const validateItems = (preItems) => {\n            const value = spec.getCurrentValue();\n            const response = spec.shouldHide ? 0 /* IrrelevantStyleItemResponse.Hide */ : 1 /* IrrelevantStyleItemResponse.Disable */;\n            return bind$3(preItems, (item) => validate(item, response, value));\n        };\n        const getFetch = (backstage, getStyleItems) => (comp, callback) => {\n            const preItems = getStyleItems();\n            const items = validateItems(preItems);\n            const menu = build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n                isHorizontalMenu: false,\n                search: Optional.none()\n            });\n            callback(menu);\n        };\n        return {\n            validateItems,\n            getFetch\n        };\n    };\n    const createMenuItems = (backstage, spec) => {\n        const dataset = spec.dataset; // needs to be a var for tsc to understand the ternary\n        const getStyleItems = dataset.type === 'basic' ?\n            () => map$2(dataset.data, (d) => processBasic(d, spec.isSelectedFor, spec.getPreviewFor)) :\n            dataset.getData;\n        return {\n            items: generateSelectItems(backstage, spec),\n            getStyleItems\n        };\n    };\n    const createSelectButton = (editor, backstage, spec, getTooltip, textUpdateEventName, btnName) => {\n        const { items, getStyleItems } = createMenuItems(backstage, spec);\n        const tooltipString = Cell(spec.tooltip);\n        const getApi = (comp) => ({\n            getComponent: constant$1(comp),\n            setTooltip: (tooltip) => {\n                const translatedTooltip = backstage.shared.providers.translate(tooltip);\n                set$9(comp.element, 'aria-label', translatedTooltip);\n                tooltipString.set(tooltip);\n            }\n        });\n        // Set the initial text when the component is attached and then update on node changes\n        const onSetup = (api) => {\n            const handler = (e) => api.setTooltip(makeTooltipText(editor, getTooltip(e.value), e.value));\n            editor.on(textUpdateEventName, handler);\n            return composeUnbinders(onSetupEvent(editor, 'NodeChange', (api) => {\n                const comp = api.getComponent();\n                spec.updateText(comp);\n                Disabling.set(api.getComponent(), (!editor.selection.isEditable() || getStyleItems().length === 0));\n            })(api), () => editor.off(textUpdateEventName, handler));\n        };\n        return renderCommonDropdown({\n            context: 'mode:design',\n            text: spec.icon.isSome() ? Optional.none() : spec.text,\n            icon: spec.icon,\n            ariaLabel: Optional.some(spec.tooltip),\n            tooltip: Optional.none(), // TINY-10474 - Using own tooltip config\n            role: Optional.none(),\n            fetch: items.getFetch(backstage, getStyleItems),\n            onSetup,\n            getApi,\n            columns: 1,\n            presets: 'normal',\n            classes: spec.icon.isSome() ? [] : ['bespoke'],\n            dropdownBehaviours: [\n                Tooltipping.config({\n                    ...backstage.shared.providers.tooltips.getConfig({\n                        tooltipText: backstage.shared.providers.translate(spec.tooltip),\n                        onShow: (comp) => {\n                            if (spec.tooltip !== tooltipString.get()) {\n                                const translatedTooltip = backstage.shared.providers.translate(tooltipString.get());\n                                Tooltipping.setComponents(comp, backstage.shared.providers.tooltips.getComponents({ tooltipText: translatedTooltip }));\n                            }\n                        }\n                    }),\n                })\n            ]\n        }, \"tox-tbtn\" /* ToolbarButtonClasses.Button */, backstage.shared, btnName);\n    };\n\n    const process = (rawFormats) => map$2(rawFormats, (item) => {\n        let title = item, format = item;\n        // Allow text=value block formats\n        const values = item.split('=');\n        if (values.length > 1) {\n            title = values[0];\n            format = values[1];\n        }\n        return { title, format };\n    });\n    const buildBasicStaticDataset = (data) => ({\n        type: 'basic',\n        data\n    });\n    var Delimiter;\n    (function (Delimiter) {\n        Delimiter[Delimiter[\"SemiColon\"] = 0] = \"SemiColon\";\n        Delimiter[Delimiter[\"Space\"] = 1] = \"Space\";\n    })(Delimiter || (Delimiter = {}));\n    const split = (rawFormats, delimiter) => {\n        if (delimiter === Delimiter.SemiColon) {\n            return rawFormats.replace(/;$/, '').split(';');\n        }\n        else {\n            return rawFormats.split(' ');\n        }\n    };\n    const buildBasicSettingsDataset = (editor, settingName, delimiter) => {\n        // eslint-disable-next-line @tinymce/no-direct-editor-options\n        const rawFormats = editor.options.get(settingName);\n        const data = process(split(rawFormats, delimiter));\n        return {\n            type: 'basic',\n            data\n        };\n    };\n\n    const menuTitle$4 = 'Align';\n    const getTooltipPlaceholder$4 = constant$1('Alignment {0}');\n    const fallbackAlignment = 'left';\n    const alignMenuItems = [\n        { title: 'Left', icon: 'align-left', format: 'alignleft', command: 'JustifyLeft' },\n        { title: 'Center', icon: 'align-center', format: 'aligncenter', command: 'JustifyCenter' },\n        { title: 'Right', icon: 'align-right', format: 'alignright', command: 'JustifyRight' },\n        { title: 'Justify', icon: 'align-justify', format: 'alignjustify', command: 'JustifyFull' }\n    ];\n    const getSpec$4 = (editor) => {\n        const getMatchingValue = () => find$5(alignMenuItems, (item) => editor.formatter.match(item.format));\n        const isSelectedFor = (format) => () => editor.formatter.match(format);\n        const getPreviewFor = (_format) => Optional.none;\n        const updateSelectMenuIcon = (comp) => {\n            const match = getMatchingValue();\n            const alignment = match.fold(constant$1(fallbackAlignment), (item) => item.title.toLowerCase());\n            emitWith(comp, updateMenuIcon, {\n                icon: `align-${alignment}`\n            });\n            fireAlignTextUpdate(editor, { value: alignment });\n        };\n        const dataset = buildBasicStaticDataset(alignMenuItems);\n        const onAction = (rawItem) => () => find$5(alignMenuItems, (item) => item.format === rawItem.format)\n            .each((item) => editor.execCommand(item.command));\n        return {\n            tooltip: makeTooltipText(editor, getTooltipPlaceholder$4(), fallbackAlignment),\n            text: Optional.none(),\n            icon: Optional.some('align-left'),\n            isSelectedFor,\n            getCurrentValue: Optional.none,\n            getPreviewFor,\n            onAction,\n            updateText: updateSelectMenuIcon,\n            dataset,\n            shouldHide: false,\n            isInvalid: (item) => !editor.formatter.canApply(item.format)\n        };\n    };\n    const createAlignButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$4(editor), getTooltipPlaceholder$4, 'AlignTextUpdate', 'align');\n    const createAlignMenu = (editor, backstage) => {\n        const menuItems = createMenuItems(backstage, getSpec$4(editor));\n        editor.ui.registry.addNestedMenuItem('align', {\n            text: backstage.shared.providers.translate(menuTitle$4),\n            onSetup: onSetupEditableToggle(editor),\n            getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n        });\n    };\n\n    const findNearest = (editor, getStyles) => {\n        const styles = getStyles();\n        const formats = map$2(styles, (style) => style.format);\n        return Optional.from(editor.formatter.closest(formats)).bind((fmt) => find$5(styles, (data) => data.format === fmt));\n    };\n\n    const menuTitle$3 = 'Blocks';\n    const getTooltipPlaceholder$3 = constant$1('Block {0}');\n    const fallbackFormat = 'Paragraph';\n    const getSpec$3 = (editor) => {\n        const isSelectedFor = (format) => () => editor.formatter.match(format);\n        const getPreviewFor = (format) => () => {\n            const fmt = editor.formatter.get(format);\n            if (fmt) {\n                return Optional.some({\n                    tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n                    styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n                });\n            }\n            else {\n                return Optional.none();\n            }\n        };\n        const updateSelectMenuText = (comp) => {\n            const detectedFormat = findNearest(editor, () => dataset.data);\n            const text = detectedFormat.fold(constant$1(fallbackFormat), (fmt) => fmt.title);\n            emitWith(comp, updateMenuText, {\n                text\n            });\n            fireBlocksTextUpdate(editor, { value: text });\n        };\n        const dataset = buildBasicSettingsDataset(editor, 'block_formats', Delimiter.SemiColon);\n        return {\n            tooltip: makeTooltipText(editor, getTooltipPlaceholder$3(), fallbackFormat),\n            text: Optional.some(fallbackFormat),\n            icon: Optional.none(),\n            isSelectedFor,\n            getCurrentValue: Optional.none,\n            getPreviewFor,\n            onAction: onActionToggleFormat$1(editor),\n            updateText: updateSelectMenuText,\n            dataset,\n            shouldHide: false,\n            isInvalid: (item) => !editor.formatter.canApply(item.format)\n        };\n    };\n    const createBlocksButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$3(editor), getTooltipPlaceholder$3, 'BlocksTextUpdate', 'blocks');\n    // FIX: Test this!\n    const createBlocksMenu = (editor, backstage) => {\n        const menuItems = createMenuItems(backstage, getSpec$3(editor));\n        editor.ui.registry.addNestedMenuItem('blocks', {\n            text: menuTitle$3,\n            onSetup: onSetupEditableToggle(editor),\n            getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n        });\n    };\n\n    const menuTitle$2 = 'Fonts';\n    const getTooltipPlaceholder$2 = constant$1('Font {0}');\n    const systemFont = 'System Font';\n    // A list of fonts that must be in a font family for the font to be recognised as the system stack\n    // Note: Don't include 'BlinkMacSystemFont', as Chrome on Mac converts it to different names\n    // The system font stack will be similar to the following. (Note: each has minor variants)\n    // Oxide: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    // Bootstrap: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    // Wordpress: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n    const systemStackFonts = ['-apple-system', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'sans-serif'];\n    // Split the fonts into an array and strip away any start/end quotes\n    const splitFonts = (fontFamily) => {\n        const fonts = fontFamily.split(/\\s*,\\s*/);\n        return map$2(fonts, (font) => font.replace(/^['\"]+|['\"]+$/g, ''));\n    };\n    const matchesStack = (fonts, stack) => stack.length > 0 && forall(stack, (font) => fonts.indexOf(font.toLowerCase()) > -1);\n    const isSystemFontStack = (fontFamily, userStack) => {\n        if (fontFamily.indexOf('-apple-system') === 0 || userStack.length > 0) {\n            const fonts = splitFonts(fontFamily.toLowerCase());\n            return matchesStack(fonts, systemStackFonts) || matchesStack(fonts, userStack);\n        }\n        else {\n            return false;\n        }\n    };\n    const getSpec$2 = (editor) => {\n        const getMatchingValue = () => {\n            const getFirstFont = (fontFamily) => fontFamily ? splitFonts(fontFamily)[0] : '';\n            const fontFamily = editor.queryCommandValue('FontName');\n            const items = dataset.data;\n            const font = fontFamily ? fontFamily.toLowerCase() : '';\n            const userStack = getDefaultFontStack(editor);\n            const matchOpt = find$5(items, (item) => {\n                const format = item.format;\n                return (format.toLowerCase() === font) || (getFirstFont(format).toLowerCase() === getFirstFont(font).toLowerCase());\n            }).orThunk(() => {\n                return someIf(isSystemFontStack(font, userStack), {\n                    title: systemFont,\n                    format: font\n                });\n            });\n            return { matchOpt, font: fontFamily };\n        };\n        const isSelectedFor = (item) => (valueOpt) => valueOpt.exists((value) => value.format === item);\n        const getCurrentValue = () => {\n            const { matchOpt } = getMatchingValue();\n            return matchOpt;\n        };\n        const getPreviewFor = (item) => () => Optional.some({\n            tag: 'div',\n            styles: item.indexOf('dings') === -1 ? { 'font-family': item } : {}\n        });\n        const onAction = (rawItem) => () => {\n            editor.undoManager.transact(() => {\n                editor.focus();\n                editor.execCommand('FontName', false, rawItem.format);\n            });\n        };\n        const updateSelectMenuText = (comp) => {\n            const { matchOpt, font } = getMatchingValue();\n            const text = matchOpt.fold(constant$1(font), (item) => item.title);\n            emitWith(comp, updateMenuText, {\n                text\n            });\n            fireFontFamilyTextUpdate(editor, { value: text });\n        };\n        const dataset = buildBasicSettingsDataset(editor, 'font_family_formats', Delimiter.SemiColon);\n        return {\n            tooltip: makeTooltipText(editor, getTooltipPlaceholder$2(), systemFont),\n            text: Optional.some(systemFont),\n            icon: Optional.none(),\n            isSelectedFor,\n            getCurrentValue,\n            getPreviewFor,\n            onAction,\n            updateText: updateSelectMenuText,\n            dataset,\n            shouldHide: false,\n            isInvalid: never\n        };\n    };\n    const createFontFamilyButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$2(editor), getTooltipPlaceholder$2, 'FontFamilyTextUpdate', 'fontfamily');\n    // TODO: Test this!\n    const createFontFamilyMenu = (editor, backstage) => {\n        const menuItems = createMenuItems(backstage, getSpec$2(editor));\n        editor.ui.registry.addNestedMenuItem('fontfamily', {\n            text: backstage.shared.providers.translate(menuTitle$2),\n            onSetup: onSetupEditableToggle(editor),\n            getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n        });\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    const createBespokeNumberInput = (editor, backstage, spec, btnName) => {\n        let currentComp = Optional.none();\n        const getValueFromCurrentComp = (comp) => comp.map((alloyComp) => Representing.getValue(alloyComp)).getOr('');\n        const onSetup = onSetupEvent(editor, 'NodeChange SwitchMode DisabledStateChange', (api) => {\n            const comp = api.getComponent();\n            currentComp = Optional.some(comp);\n            spec.updateInputValue(comp);\n            Disabling.set(comp, !editor.selection.isEditable() || isDisabled(editor));\n        });\n        const getApi = (comp) => ({ getComponent: constant$1(comp) });\n        const editorOffCell = Cell(noop);\n        const customEvents = generate$6('custom-number-input-events');\n        const changeValue = (f, fromInput, focusBack) => {\n            const text = getValueFromCurrentComp(currentComp);\n            const newValue = spec.getNewValue(text, f);\n            const lenghtDelta = text.length - `${newValue}`.length;\n            const oldStart = currentComp.map((comp) => comp.element.dom.selectionStart - lenghtDelta);\n            const oldEnd = currentComp.map((comp) => comp.element.dom.selectionEnd - lenghtDelta);\n            spec.onAction(newValue, focusBack);\n            currentComp.each((comp) => {\n                Representing.setValue(comp, newValue);\n                if (fromInput) {\n                    oldStart.each((oldStart) => comp.element.dom.selectionStart = oldStart);\n                    oldEnd.each((oldEnd) => comp.element.dom.selectionEnd = oldEnd);\n                }\n            });\n        };\n        const decrease = (fromInput, focusBack) => changeValue((n, s) => n - s, fromInput, focusBack);\n        const increase = (fromInput, focusBack) => changeValue((n, s) => n + s, fromInput, focusBack);\n        const goToParent = (comp) => parentElement(comp.element).fold(Optional.none, (parent) => {\n            focus$4(parent);\n            return Optional.some(true);\n        });\n        const focusInput = (comp) => {\n            if (hasFocus(comp.element)) {\n                firstChild(comp.element).each((input) => focus$4(input));\n                return Optional.some(true);\n            }\n            else {\n                return Optional.none();\n            }\n        };\n        const makeStepperButton = (action, title, tooltip, classes) => {\n            const editorOffCellStepButton = Cell(noop);\n            const translatedTooltip = backstage.shared.providers.translate(tooltip);\n            const altExecuting = generate$6('altExecuting');\n            const onSetup = onSetupEvent(editor, 'NodeChange SwitchMode DisabledStateChange', (api) => {\n                Disabling.set(api.getComponent(), !editor.selection.isEditable() || isDisabled(editor));\n            });\n            const onClick = (comp) => {\n                if (!Disabling.isDisabled(comp)) {\n                    action(true);\n                }\n            };\n            return Button.sketch({\n                dom: {\n                    tag: 'button',\n                    attributes: {\n                        'aria-label': translatedTooltip,\n                        'data-mce-name': title\n                    },\n                    classes: classes.concat(title)\n                },\n                components: [\n                    renderIconFromPack$1(title, backstage.shared.providers.icons)\n                ],\n                buttonBehaviours: derive$1([\n                    Disabling.config({}),\n                    Tooltipping.config(backstage.shared.providers.tooltips.getConfig({\n                        tooltipText: translatedTooltip\n                    })),\n                    config(altExecuting, [\n                        onControlAttached({ onSetup, getApi }, editorOffCellStepButton),\n                        onControlDetached({ getApi }, editorOffCellStepButton),\n                        run$1(keydown(), (comp, se) => {\n                            if (se.event.raw.keyCode === global$1.SPACEBAR || se.event.raw.keyCode === global$1.ENTER) {\n                                if (!Disabling.isDisabled(comp)) {\n                                    action(false);\n                                }\n                            }\n                        }),\n                        run$1(click(), onClick),\n                        run$1(touchend(), onClick)\n                    ])\n                ]),\n                eventOrder: {\n                    [keydown()]: [altExecuting, 'keying'],\n                    [click()]: [altExecuting, 'alloy.base.behaviour'],\n                    [touchend()]: [altExecuting, 'alloy.base.behaviour'],\n                    [attachedToDom()]: ['alloy.base.behaviour', altExecuting, 'tooltipping'],\n                    [detachedFromDom()]: [altExecuting, 'tooltipping']\n                }\n            });\n        };\n        const memMinus = record(makeStepperButton((focusBack) => decrease(false, focusBack), 'minus', 'Decrease font size', []));\n        const memPlus = record(makeStepperButton((focusBack) => increase(false, focusBack), 'plus', 'Increase font size', []));\n        const memInput = record({\n            dom: {\n                tag: 'div',\n                classes: ['tox-input-wrapper']\n            },\n            components: [\n                Input.sketch({\n                    inputBehaviours: derive$1([\n                        Disabling.config({}),\n                        config(customEvents, [\n                            onControlAttached({ onSetup, getApi }, editorOffCell),\n                            onControlDetached({ getApi }, editorOffCell)\n                        ]),\n                        config('input-update-display-text', [\n                            run$1(updateMenuText, (comp, se) => {\n                                Representing.setValue(comp, se.event.text);\n                            }),\n                            run$1(focusout(), (comp) => {\n                                spec.onAction(Representing.getValue(comp));\n                            }),\n                            run$1(change(), (comp) => {\n                                spec.onAction(Representing.getValue(comp));\n                            })\n                        ]),\n                        Keying.config({\n                            mode: 'special',\n                            onEnter: (_comp) => {\n                                changeValue(identity, true, true);\n                                return Optional.some(true);\n                            },\n                            onEscape: goToParent,\n                            onUp: (_comp) => {\n                                increase(true, false);\n                                return Optional.some(true);\n                            },\n                            onDown: (_comp) => {\n                                decrease(true, false);\n                                return Optional.some(true);\n                            },\n                            onLeft: (_comp, se) => {\n                                se.cut();\n                                return Optional.none();\n                            },\n                            onRight: (_comp, se) => {\n                                se.cut();\n                                return Optional.none();\n                            }\n                        })\n                    ])\n                })\n            ],\n            behaviours: derive$1([\n                Focusing.config({}),\n                Keying.config({\n                    mode: 'special',\n                    onEnter: focusInput,\n                    onSpace: focusInput,\n                    onEscape: goToParent\n                }),\n                config('input-wrapper-events', [\n                    run$1(mouseover(), (comp) => {\n                        each$1([memMinus, memPlus], (button) => {\n                            const buttonNode = SugarElement.fromDom(button.get(comp).element.dom);\n                            if (hasFocus(buttonNode)) {\n                                blur$1(buttonNode);\n                            }\n                        });\n                    })\n                ])\n            ])\n        });\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-number-input'],\n                attributes: {\n                    ...(isNonNullable(btnName) ? { 'data-mce-name': btnName } : {})\n                }\n            },\n            components: [\n                memMinus.asSpec(),\n                memInput.asSpec(),\n                memPlus.asSpec()\n            ],\n            behaviours: derive$1([\n                Focusing.config({}),\n                Keying.config({\n                    mode: 'flow',\n                    focusInside: FocusInsideModes.OnEnterOrSpaceMode,\n                    cycles: false,\n                    selector: 'button, .tox-input-wrapper',\n                    onEscape: (wrapperComp) => {\n                        if (hasFocus(wrapperComp.element)) {\n                            return Optional.none();\n                        }\n                        else {\n                            focus$4(wrapperComp.element);\n                            return Optional.some(true);\n                        }\n                    },\n                })\n            ])\n        };\n    };\n\n    const menuTitle$1 = 'Font sizes';\n    const getTooltipPlaceholder$1 = constant$1('Font size {0}');\n    const fallbackFontSize = '12pt';\n    // See https://websemantics.uk/articles/font-size-conversion/ for conversions\n    const legacyFontSizes = {\n        '8pt': '1',\n        '10pt': '2',\n        '12pt': '3',\n        '14pt': '4',\n        '18pt': '5',\n        '24pt': '6',\n        '36pt': '7'\n    };\n    // Note: 'xx-small', 'x-small' and 'large' are rounded up to nearest whole pt\n    const keywordFontSizes = {\n        'xx-small': '7pt',\n        'x-small': '8pt',\n        'small': '10pt',\n        'medium': '12pt',\n        'large': '14pt',\n        'x-large': '18pt',\n        'xx-large': '24pt'\n    };\n    const round = (number, precision) => {\n        const factor = Math.pow(10, precision);\n        return Math.round(number * factor) / factor;\n    };\n    const toPt = (fontSize, precision) => {\n        if (/[0-9.]+px$/.test(fontSize)) {\n            // Round to the nearest 0.5\n            return round(parseInt(fontSize, 10) * 72 / 96, precision || 0) + 'pt';\n        }\n        else {\n            return get$h(keywordFontSizes, fontSize).getOr(fontSize);\n        }\n    };\n    const toLegacy = (fontSize) => get$h(legacyFontSizes, fontSize).getOr('');\n    const getSpec$1 = (editor) => {\n        const getMatchingValue = () => {\n            let matchOpt = Optional.none();\n            const items = dataset.data;\n            const fontSize = editor.queryCommandValue('FontSize');\n            if (fontSize) {\n                // checking for three digits after decimal point, should be precise enough\n                for (let precision = 3; matchOpt.isNone() && precision >= 0; precision--) {\n                    const pt = toPt(fontSize, precision);\n                    const legacy = toLegacy(pt);\n                    matchOpt = find$5(items, (item) => item.format === fontSize || item.format === pt || item.format === legacy);\n                }\n            }\n            return { matchOpt, size: fontSize };\n        };\n        const isSelectedFor = (item) => (valueOpt) => valueOpt.exists((value) => value.format === item);\n        const getCurrentValue = () => {\n            const { matchOpt } = getMatchingValue();\n            return matchOpt;\n        };\n        const getPreviewFor = constant$1(Optional.none);\n        const onAction = (rawItem) => () => {\n            editor.undoManager.transact(() => {\n                editor.focus();\n                editor.execCommand('FontSize', false, rawItem.format);\n            });\n        };\n        const updateSelectMenuText = (comp) => {\n            const { matchOpt, size } = getMatchingValue();\n            const text = matchOpt.fold(constant$1(size), (match) => match.title);\n            emitWith(comp, updateMenuText, {\n                text\n            });\n            fireFontSizeTextUpdate(editor, { value: text });\n        };\n        const dataset = buildBasicSettingsDataset(editor, 'font_size_formats', Delimiter.Space);\n        return {\n            tooltip: makeTooltipText(editor, getTooltipPlaceholder$1(), fallbackFontSize),\n            text: Optional.some(fallbackFontSize),\n            icon: Optional.none(),\n            isSelectedFor,\n            getPreviewFor,\n            getCurrentValue,\n            onAction,\n            updateText: updateSelectMenuText,\n            dataset,\n            shouldHide: false,\n            isInvalid: never\n        };\n    };\n    const createFontSizeButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$1(editor), getTooltipPlaceholder$1, 'FontSizeTextUpdate', 'fontsize');\n    const getConfigFromUnit = (unit) => {\n        var _a;\n        const baseConfig = { step: 1 };\n        const configs = {\n            em: { step: 0.1 },\n            cm: { step: 0.1 },\n            in: { step: 0.1 },\n            pc: { step: 0.1 },\n            ch: { step: 0.1 },\n            rem: { step: 0.1 }\n        };\n        return (_a = configs[unit]) !== null && _a !== void 0 ? _a : baseConfig;\n    };\n    const defaultValue = 16;\n    const isValidValue = (value) => value >= 0;\n    const getNumberInputSpec = (editor) => {\n        const getCurrentValue = () => editor.queryCommandValue('FontSize');\n        const updateInputValue = (comp) => emitWith(comp, updateMenuText, {\n            text: getCurrentValue()\n        });\n        return {\n            updateInputValue,\n            onAction: (format, focusBack) => editor.execCommand('FontSize', false, format, { skip_focus: !focusBack }),\n            getNewValue: (text, updateFunction) => {\n                parse(text, ['unsupportedLength', 'empty']);\n                const currentValue = getCurrentValue();\n                const parsedText = parse(text, ['unsupportedLength', 'empty']).or(parse(currentValue, ['unsupportedLength', 'empty']));\n                const value = parsedText.map((res) => res.value).getOr(defaultValue);\n                const defaultUnit = getFontSizeInputDefaultUnit(editor);\n                const unit = parsedText.map((res) => res.unit).filter((u) => u !== '').getOr(defaultUnit);\n                const newValue = updateFunction(value, getConfigFromUnit(unit).step);\n                const res = `${isValidValue(newValue) ? newValue : value}${unit}`;\n                if (res !== currentValue) {\n                    fireFontSizeInputTextUpdate(editor, { value: res });\n                }\n                return res;\n            }\n        };\n    };\n    const createFontSizeInputButton = (editor, backstage) => createBespokeNumberInput(editor, backstage, getNumberInputSpec(editor), 'fontsizeinput');\n    // TODO: Test this!\n    const createFontSizeMenu = (editor, backstage) => {\n        const menuItems = createMenuItems(backstage, getSpec$1(editor));\n        editor.ui.registry.addNestedMenuItem('fontsize', {\n            text: menuTitle$1,\n            onSetup: onSetupEditableToggle(editor),\n            getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n        });\n    };\n\n    const menuTitle = 'Formats';\n    const getTooltipPlaceholder = (value) => isEmpty(value) ? 'Formats' : 'Format {0}';\n    const getSpec = (editor, dataset) => {\n        const fallbackFormat = 'Formats';\n        const isSelectedFor = (format) => () => editor.formatter.match(format);\n        const getPreviewFor = (format) => () => {\n            const fmt = editor.formatter.get(format);\n            return fmt !== undefined ? Optional.some({\n                tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n                styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n            }) : Optional.none();\n        };\n        const updateSelectMenuText = (comp) => {\n            const getFormatItems = (fmt) => {\n                if (isNestedFormat(fmt)) {\n                    return bind$3(fmt.items, getFormatItems);\n                }\n                else if (isFormatReference(fmt)) {\n                    return [{ title: fmt.title, format: fmt.format }];\n                }\n                else {\n                    return [];\n                }\n            };\n            const flattenedItems = bind$3(getStyleFormats(editor), getFormatItems);\n            const detectedFormat = findNearest(editor, constant$1(flattenedItems));\n            const text = detectedFormat.fold(constant$1({\n                title: fallbackFormat,\n                tooltipLabel: ''\n            }), (fmt) => ({\n                title: fmt.title,\n                tooltipLabel: fmt.title\n            }));\n            emitWith(comp, updateMenuText, {\n                text: text.title\n            });\n            fireStylesTextUpdate(editor, { value: text.tooltipLabel });\n        };\n        return {\n            tooltip: makeTooltipText(editor, getTooltipPlaceholder(''), ''),\n            text: Optional.some(fallbackFormat),\n            icon: Optional.none(),\n            isSelectedFor,\n            getCurrentValue: Optional.none,\n            getPreviewFor,\n            onAction: onActionToggleFormat$1(editor),\n            updateText: updateSelectMenuText,\n            shouldHide: shouldAutoHideStyleFormats(editor),\n            isInvalid: (item) => !editor.formatter.canApply(item.format),\n            dataset\n        };\n    };\n    const createStylesButton = (editor, backstage) => {\n        const dataset = { type: 'advanced', ...backstage.styles };\n        return createSelectButton(editor, backstage, getSpec(editor, dataset), getTooltipPlaceholder, 'StylesTextUpdate', 'styles');\n    };\n    const createStylesMenu = (editor, backstage) => {\n        const dataset = { type: 'advanced', ...backstage.styles };\n        const menuItems = createMenuItems(backstage, getSpec(editor, dataset));\n        editor.ui.registry.addNestedMenuItem('styles', {\n            text: menuTitle,\n            onSetup: onSetupEditableToggle(editor, () => menuItems.getStyleItems().length > 0),\n            getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n        });\n    };\n\n    const defaultToolbar = [\n        {\n            name: 'history', items: ['undo', 'redo']\n        },\n        {\n            name: 'ai', items: ['aidialog', 'aishortcuts']\n        },\n        {\n            name: 'styles', items: ['styles']\n        },\n        {\n            name: 'formatting', items: ['bold', 'italic']\n        },\n        {\n            name: 'alignment', items: ['alignleft', 'aligncenter', 'alignright', 'alignjustify']\n        },\n        {\n            name: 'indentation', items: ['outdent', 'indent']\n        },\n        {\n            name: 'permanent pen', items: ['permanentpen']\n        },\n        {\n            name: 'comments', items: ['addcomment']\n        }\n    ];\n    const renderFromBridge = (bridgeBuilder, render) => (spec, backstage, editor, btnName) => {\n        const internal = bridgeBuilder(spec).mapError((errInfo) => formatError(errInfo)).getOrDie();\n        return render(internal, backstage, editor, btnName);\n    };\n    const types = {\n        button: renderFromBridge(createToolbarButton, (s, backstage, _, btnName) => renderToolbarButton(s, backstage.shared.providers, btnName)),\n        togglebutton: renderFromBridge(createToggleButton, (s, backstage, _, btnName) => renderToolbarToggleButton(s, backstage.shared.providers, btnName)),\n        menubutton: renderFromBridge(createMenuButton, (s, backstage, _, btnName) => renderMenuButton(s, \"tox-tbtn\" /* ToolbarButtonClasses.Button */, backstage, Optional.none(), false, btnName)),\n        splitbutton: renderFromBridge(createSplitButton, (s, backstage, _, btnName) => renderSplitButton(s, backstage.shared, btnName)),\n        grouptoolbarbutton: renderFromBridge(createGroupToolbarButton, (s, backstage, editor, btnName) => {\n            const buttons = editor.ui.registry.getAll().buttons;\n            const identify = (toolbar) => identifyButtons(editor, { buttons, toolbar, allowToolbarGroups: false }, backstage, Optional.none());\n            const attributes = {\n                [Attribute]: backstage.shared.header.isPositionedAtTop() ? AttributeValue.TopToBottom : AttributeValue.BottomToTop\n            };\n            switch (getToolbarMode(editor)) {\n                case ToolbarMode$1.floating:\n                    return renderFloatingToolbarButton(s, backstage, identify, attributes, btnName);\n                default:\n                    // TODO change this message and add a case when sliding is available\n                    throw new Error('Toolbar groups are only supported when using floating toolbar mode');\n            }\n        })\n    };\n    const extractFrom = (spec, backstage, editor, btnName) => get$h(types, spec.type).fold(() => {\n        // eslint-disable-next-line no-console\n        console.error('skipping button defined by', spec);\n        return Optional.none();\n    }, (render) => Optional.some(render(spec, backstage, editor, btnName)));\n    const bespokeButtons = {\n        styles: createStylesButton,\n        fontsize: createFontSizeButton,\n        fontsizeinput: createFontSizeInputButton,\n        fontfamily: createFontFamilyButton,\n        blocks: createBlocksButton,\n        align: createAlignButton,\n        navigateback: createNavigateBackButton\n    };\n    const removeUnusedDefaults = (buttons) => {\n        const filteredItemGroups = map$2(defaultToolbar, (group) => {\n            const items = filter$2(group.items, (subItem) => has$2(buttons, subItem) || has$2(bespokeButtons, subItem));\n            return {\n                name: group.name,\n                items\n            };\n        });\n        return filter$2(filteredItemGroups, (group) => group.items.length > 0);\n    };\n    const convertStringToolbar = (strToolbar) => {\n        const groupsStrings = strToolbar.split('|');\n        return map$2(groupsStrings, (g) => ({\n            items: g.trim().split(' ')\n        }));\n    };\n    const isToolbarGroupSettingArray = (toolbar) => isArrayOf(toolbar, (t) => (has$2(t, 'name') || has$2(t, 'label')) && has$2(t, 'items'));\n    // Toolbar settings\n    // false = disabled\n    // undefined or true = default\n    // string = enabled with specified buttons and groups\n    // string array = enabled with specified buttons and groups\n    // object array = enabled with specified buttons, groups and group titles\n    const createToolbar = (toolbarConfig) => {\n        const toolbar = toolbarConfig.toolbar;\n        const buttons = toolbarConfig.buttons;\n        if (toolbar === false) {\n            return [];\n        }\n        else if (toolbar === undefined || toolbar === true) {\n            return removeUnusedDefaults(buttons);\n        }\n        else if (isString(toolbar)) {\n            return convertStringToolbar(toolbar);\n        }\n        else if (isToolbarGroupSettingArray(toolbar)) {\n            return toolbar;\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.error('Toolbar type should be string, string[], boolean or ToolbarGroup[]');\n            return [];\n        }\n    };\n    const lookupButton = (editor, buttons, toolbarItem, allowToolbarGroups, backstage, prefixes) => get$h(buttons, toolbarItem.toLowerCase())\n        .orThunk(() => prefixes.bind((ps) => findMap(ps, (prefix) => get$h(buttons, prefix + toolbarItem.toLowerCase()))))\n        .fold(() => get$h(bespokeButtons, toolbarItem.toLowerCase()).map((r) => r(editor, backstage)), \n    // TODO: Add back after TINY-3232 is implemented\n    // .orThunk(() => {\n    //   console.error('No representation for toolbarItem: ' + toolbarItem);\n    //   return Optional.none();\n    // ),\n    (spec) => {\n        if (spec.type === 'grouptoolbarbutton' && !allowToolbarGroups) {\n            // TODO change this message when sliding is available\n            // eslint-disable-next-line no-console\n            console.warn(`Ignoring the '${toolbarItem}' toolbar button. Group toolbar buttons are only supported when using floating toolbar mode and cannot be nested.`);\n            return Optional.none();\n        }\n        else {\n            return extractFrom(spec, backstage, editor, toolbarItem.toLowerCase());\n        }\n    });\n    const identifyButtons = (editor, toolbarConfig, backstage, prefixes) => {\n        const toolbarGroups = createToolbar(toolbarConfig);\n        const groups = map$2(toolbarGroups, (group) => {\n            const items = bind$3(group.items, (toolbarItem) => {\n                return toolbarItem.trim().length === 0 ? [] :\n                    lookupButton(editor, toolbarConfig.buttons, toolbarItem, toolbarConfig.allowToolbarGroups, backstage, prefixes).toArray();\n            });\n            return {\n                title: Optional.from(editor.translate(group.name)),\n                label: someIf(group.label !== undefined, editor.translate(group.label)),\n                items\n            };\n        });\n        return filter$2(groups, (group) => group.items.length > 0);\n    };\n\n    // Set toolbar(s) depending on if multiple toolbars is configured or not\n    const setToolbar = (editor, uiRefs, rawUiConfig, backstage) => {\n        const outerContainer = uiRefs.mainUi.outerContainer;\n        const toolbarConfig = rawUiConfig.toolbar;\n        const toolbarButtonsConfig = rawUiConfig.buttons;\n        // Check if toolbar type is a non-empty string array\n        if (isArrayOf(toolbarConfig, isString)) {\n            const toolbars = toolbarConfig.map((t) => {\n                const config = { toolbar: t, buttons: toolbarButtonsConfig, allowToolbarGroups: rawUiConfig.allowToolbarGroups };\n                return identifyButtons(editor, config, backstage, Optional.none());\n            });\n            OuterContainer.setToolbars(outerContainer, toolbars);\n        }\n        else {\n            OuterContainer.setToolbar(outerContainer, identifyButtons(editor, rawUiConfig, backstage, Optional.none()));\n        }\n    };\n\n    const detection = detect$1();\n    const isiOS12 = detection.os.isiOS() && detection.os.version.major <= 12;\n    const setupEvents$1 = (editor, uiRefs) => {\n        const { uiMotherships } = uiRefs;\n        const dom = editor.dom;\n        let contentWindow = editor.getWin();\n        const initialDocEle = editor.getDoc().documentElement;\n        const lastWindowDimensions = Cell(SugarPosition(contentWindow.innerWidth, contentWindow.innerHeight));\n        const lastDocumentDimensions = Cell(SugarPosition(initialDocEle.offsetWidth, initialDocEle.offsetHeight));\n        const resizeWindow = () => {\n            // Check if the window dimensions have changed and if so then trigger a content resize event\n            const outer = lastWindowDimensions.get();\n            if (outer.left !== contentWindow.innerWidth || outer.top !== contentWindow.innerHeight) {\n                lastWindowDimensions.set(SugarPosition(contentWindow.innerWidth, contentWindow.innerHeight));\n                fireResizeContent(editor);\n            }\n        };\n        const resizeDocument = () => {\n            // Don't use the initial doc ele, as there's a small chance it may have changed\n            const docEle = editor.getDoc().documentElement;\n            // Check if the document dimensions have changed and if so then trigger a content resize event\n            const inner = lastDocumentDimensions.get();\n            if (inner.left !== docEle.offsetWidth || inner.top !== docEle.offsetHeight) {\n                lastDocumentDimensions.set(SugarPosition(docEle.offsetWidth, docEle.offsetHeight));\n                fireResizeContent(editor);\n            }\n        };\n        const scroll = (e) => {\n            fireScrollContent(editor, e);\n        };\n        dom.bind(contentWindow, 'resize', resizeWindow);\n        dom.bind(contentWindow, 'scroll', scroll);\n        // Bind to async load events and trigger a content resize event if the size has changed\n        const elementLoad = capture(SugarElement.fromDom(editor.getBody()), 'load', resizeDocument);\n        // We want to hide ALL UI motherships here.\n        editor.on('hide', () => {\n            each$1(uiMotherships, (m) => {\n                set$7(m.element, 'display', 'none');\n            });\n        });\n        editor.on('show', () => {\n            each$1(uiMotherships, (m) => {\n                remove$6(m.element, 'display');\n            });\n        });\n        editor.on('NodeChange', resizeDocument);\n        editor.on('remove', () => {\n            elementLoad.unbind();\n            dom.unbind(contentWindow, 'resize', resizeWindow);\n            dom.unbind(contentWindow, 'scroll', scroll);\n            // Clean memory for IE\n            contentWindow = null;\n        });\n    };\n    // TINY-9226: When set, the `ui_mode: split` option will create two different sinks (one for popups and one for sinks)\n    // and the popup sink will be placed adjacent to the editor. This will make it having the same scrolling ancestry.\n    const attachUiMotherships = (editor, uiRoot, uiRefs) => {\n        if (isSplitUiMode(editor)) {\n            attachSystemAfter(uiRefs.mainUi.mothership.element, uiRefs.popupUi.mothership);\n        }\n        // In UiRefs, dialogUi and popupUi refer to the same thing if ui_mode: combined\n        attachSystem(uiRoot, uiRefs.dialogUi.mothership);\n    };\n    const render$1 = (editor, uiRefs, rawUiConfig, backstage, args) => {\n        const { mainUi, uiMotherships } = uiRefs;\n        const lastToolbarWidth = Cell(0);\n        const outerContainer = mainUi.outerContainer;\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        iframe(editor);\n        const eTargetNode = SugarElement.fromDom(args.targetNode);\n        const uiRoot = getContentContainer(getRootNode(eTargetNode));\n        attachSystemAfter(eTargetNode, mainUi.mothership);\n        attachUiMotherships(editor, uiRoot, uiRefs);\n        editor.on('PostRender', () => {\n            OuterContainer.setSidebar(outerContainer, rawUiConfig.sidebar, getSidebarShow(editor));\n        });\n        // TINY-10343: Using `SkinLoaded` instead of `PostRender` because if the skin loading takes too long you run in to rendering problems since things are measured before the CSS is being applied\n        editor.on('SkinLoaded', () => {\n            // Set the sidebar before the toolbar and menubar\n            // - each sidebar has an associated toggle toolbar button that needs to check the\n            //   sidebar that is set to determine its active state on setup\n            setToolbar(editor, uiRefs, rawUiConfig, backstage);\n            lastToolbarWidth.set(editor.getWin().innerWidth);\n            OuterContainer.setMenubar(outerContainer, identifyMenus(editor, rawUiConfig));\n            OuterContainer.setViews(outerContainer, rawUiConfig.views);\n            setupEvents$1(editor, uiRefs);\n        });\n        const socket = OuterContainer.getSocket(outerContainer).getOrDie('Could not find expected socket element');\n        if (isiOS12) {\n            setAll(socket.element, {\n                'overflow': 'scroll',\n                '-webkit-overflow-scrolling': 'touch' // required for ios < 13 content scrolling\n            });\n            const limit = first$1(() => {\n                editor.dispatch('ScrollContent');\n            }, 20);\n            const unbinder = bind$1(socket.element, 'scroll', limit.throttle);\n            editor.on('remove', unbinder.unbind);\n        }\n        setupEventsForUi(editor, uiRefs);\n        editor.addCommand('ToggleSidebar', (_ui, value) => {\n            OuterContainer.toggleSidebar(outerContainer, value);\n            fireToggleSidebar(editor);\n        });\n        editor.addQueryValueHandler('ToggleSidebar', () => { var _a; return (_a = OuterContainer.whichSidebar(outerContainer)) !== null && _a !== void 0 ? _a : ''; });\n        editor.addCommand('ToggleView', (_ui, value) => {\n            if (OuterContainer.toggleView(outerContainer, value)) {\n                const target = outerContainer.element;\n                mainUi.mothership.broadcastOn([dismissPopups()], { target });\n                each$1(uiMotherships, (m) => {\n                    m.broadcastOn([dismissPopups()], { target });\n                });\n                // Switching back to main view should focus the editor and update any UIs\n                if (isNull(OuterContainer.whichView(outerContainer))) {\n                    editor.focus();\n                    editor.nodeChanged();\n                    OuterContainer.refreshToolbar(outerContainer);\n                }\n                fireToggleView(editor);\n            }\n        });\n        editor.addQueryValueHandler('ToggleView', () => { var _a; return (_a = OuterContainer.whichView(outerContainer)) !== null && _a !== void 0 ? _a : ''; });\n        const toolbarMode = getToolbarMode(editor);\n        const refreshDrawer = () => {\n            OuterContainer.refreshToolbar(uiRefs.mainUi.outerContainer);\n        };\n        if (toolbarMode === ToolbarMode$1.sliding || toolbarMode === ToolbarMode$1.floating) {\n            editor.on('ResizeWindow ResizeEditor ResizeContent', () => {\n                // Check if the width has changed, if so then refresh the toolbar drawer. We don't care if height changes.\n                const width = editor.getWin().innerWidth;\n                if (width !== lastToolbarWidth.get()) {\n                    refreshDrawer();\n                    lastToolbarWidth.set(width);\n                }\n            });\n        }\n        const api = {\n            setEnabled: (state) => {\n                const eventType = state ? 'setEnabled' : 'setDisabled';\n                broadcastEvents(uiRefs, eventType);\n            },\n            isEnabled: () => !Disabling.isDisabled(outerContainer)\n        };\n        return {\n            iframeContainer: socket.element.dom,\n            editorContainer: outerContainer.element.dom,\n            api\n        };\n    };\n\n    var Iframe = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        render: render$1\n    });\n\n    const parseToInt = (val) => {\n        // if size is a number or '_px', will return the number\n        const re = /^[0-9\\.]+(|px)$/i;\n        if (re.test('' + val)) {\n            return Optional.some(parseInt('' + val, 10));\n        }\n        return Optional.none();\n    };\n    const numToPx = (val) => isNumber(val) ? val + 'px' : val;\n    const calcCappedSize = (size, minSize, maxSize) => {\n        const minOverride = minSize.filter((min) => size < min);\n        const maxOverride = maxSize.filter((max) => size > max);\n        return minOverride.or(maxOverride).getOr(size);\n    };\n    const convertValueToPx = (element, value) => {\n        if (typeof value === 'number') {\n            return Optional.from(value);\n        }\n        const splitValue = /^([0-9.]+)(pt|em|px)$/.exec(value.trim());\n        if (splitValue) {\n            const type = splitValue[2];\n            const parsed = Number.parseFloat(splitValue[1]);\n            if (Number.isNaN(parsed) || parsed < 0) {\n                return Optional.none();\n            }\n            else if (type === 'em') {\n                return Optional.from(parsed * Number.parseFloat(window.getComputedStyle(element.dom).fontSize));\n            }\n            else if (type === 'pt') {\n                return Optional.from(parsed * (72 / 96));\n            }\n            else if (type === 'px') {\n                return Optional.from(parsed);\n            }\n        }\n        return Optional.none();\n    };\n\n    const getHeight = (editor) => {\n        const baseHeight = convertValueToPx(SugarElement.fromDom(editor.targetElm), getHeightOption(editor));\n        const minHeight = getMinHeightOption(editor);\n        const maxHeight = getMaxHeightOption(editor);\n        return baseHeight.map((height) => calcCappedSize(height, minHeight, maxHeight));\n    };\n    const getHeightWithFallback = (editor) => {\n        return getHeight(editor).getOr(getHeightOption(editor)); // If we can't parse, set the height while ignoring min/max values.\n    };\n    const getWidth = (editor) => {\n        const baseWidth = getWidthOption(editor);\n        const minWidth = getMinWidthOption(editor);\n        const maxWidth = getMaxWidthOption(editor);\n        return parseToInt(baseWidth).map((width) => calcCappedSize(width, minWidth, maxWidth));\n    };\n    const getWidthWithFallback = (editor) => {\n        const width = getWidth(editor);\n        return width.getOr(getWidthOption(editor));\n    };\n\n    const { ToolbarLocation, ToolbarMode } = Options;\n    const maximumDistanceToEdge = 40;\n    const InlineHeader = (editor, targetElm, uiRefs, backstage, floatContainer) => {\n        const { mainUi, uiMotherships } = uiRefs;\n        const DOM = global$9.DOM;\n        const useFixedToolbarContainer = useFixedContainer(editor);\n        const isSticky = isStickyToolbar(editor);\n        const editorMaxWidthOpt = getMaxWidthOption(editor).or(getWidth(editor));\n        const headerBackstage = backstage.shared.header;\n        const isPositionedAtTop = headerBackstage.isPositionedAtTop;\n        const minimumToolbarWidth = 150; // Value is arbitrary.\n        const toolbarMode = getToolbarMode(editor);\n        const isSplitToolbar = toolbarMode === ToolbarMode.sliding || toolbarMode === ToolbarMode.floating;\n        const visible = Cell(false);\n        const isVisible = () => visible.get() && !editor.removed;\n        // Calculate the toolbar offset when using a split toolbar drawer\n        const calcToolbarOffset = (toolbar) => isSplitToolbar ?\n            toolbar.fold(constant$1(0), (tbar) => \n            // If we have an overflow toolbar, we need to offset the positioning by the height of the overflow toolbar\n            tbar.components().length > 1 ? get$d(tbar.components()[1].element) : 0) : 0;\n        const calcMode = (container) => {\n            switch (getToolbarLocation(editor)) {\n                case ToolbarLocation.auto:\n                    const toolbar = OuterContainer.getToolbar(mainUi.outerContainer);\n                    const offset = calcToolbarOffset(toolbar);\n                    const toolbarHeight = get$d(container.element) - offset;\n                    const targetBounds = box$1(targetElm);\n                    // Determine if the toolbar has room to render at the top/bottom of the document\n                    const roomAtTop = targetBounds.y > toolbarHeight;\n                    if (roomAtTop) {\n                        return 'top';\n                    }\n                    else {\n                        const doc = documentElement(targetElm);\n                        const docHeight = Math.max(doc.dom.scrollHeight, get$d(doc));\n                        const roomAtBottom = targetBounds.bottom < docHeight - toolbarHeight;\n                        // If there isn't ever room to add the toolbar above the target element, then place the toolbar at the bottom.\n                        // Likewise if there's no room at the bottom, then we should show at the top. If there's no room at the bottom\n                        // or top, then prefer the bottom except when it'll prevent accessing the content at the bottom.\n                        // Make sure to exclude scroll position, as we want to still show at the top if the user can scroll up to undock\n                        if (roomAtBottom) {\n                            return 'bottom';\n                        }\n                        else {\n                            const winBounds = win();\n                            const isRoomAtBottomViewport = winBounds.bottom < targetBounds.bottom - toolbarHeight;\n                            return isRoomAtBottomViewport ? 'bottom' : 'top';\n                        }\n                    }\n                case ToolbarLocation.bottom:\n                    return 'bottom';\n                case ToolbarLocation.top:\n                default:\n                    return 'top';\n            }\n        };\n        const setupMode = (mode) => {\n            // Update the docking mode\n            floatContainer.on((container) => {\n                Docking.setModes(container, [mode]);\n                headerBackstage.setDockingMode(mode);\n                // Update the vertical menu direction\n                const verticalDir = isPositionedAtTop() ? AttributeValue.TopToBottom : AttributeValue.BottomToTop;\n                set$9(container.element, Attribute, verticalDir);\n            });\n        };\n        const updateChromeWidth = () => {\n            floatContainer.on((container) => {\n                // Update the max width of the inline toolbar\n                const maxWidth = editorMaxWidthOpt.getOrThunk(() => {\n                    // Adding 10px of margin so that the toolbar won't try to wrap\n                    return getBounds$1().width - viewport$1(targetElm).left - 10;\n                });\n                set$7(container.element, 'max-width', maxWidth + 'px');\n            });\n        };\n        const updateChromePosition = (isOuterContainerWidthRestored, prevScroll) => {\n            floatContainer.on((container) => {\n                const toolbar = OuterContainer.getToolbar(mainUi.outerContainer);\n                const offset = calcToolbarOffset(toolbar);\n                // The float container/editor may not have been rendered yet, which will cause it to have a non integer based positions\n                // so we need to round this to account for that.\n                const targetBounds = box$1(targetElm);\n                const offsetParent = getOffsetParent$1(editor, mainUi.outerContainer.element);\n                const getLeft = () => offsetParent.fold(() => targetBounds.x, (offsetParent) => {\n                    // Because for ui_mode: split, the main mothership (which includes the toolbar) is moved and added as a sibling\n                    // If there's any relative position div set as the parent and the offsetParent is no longer the body,\n                    // the absolute top/left positions would no longer be correct\n                    // When there's a relative div and the position is the same as the toolbar container\n                    // then it would produce a negative top as it needs to be positioned on top of the offsetParent\n                    const offsetBox = box$1(offsetParent);\n                    const isOffsetParentBody = eq(offsetParent, body());\n                    return isOffsetParentBody\n                        ? targetBounds.x\n                        : targetBounds.x - offsetBox.x;\n                });\n                const getTop = () => offsetParent.fold(() => isPositionedAtTop()\n                    ? Math.max(targetBounds.y - get$d(container.element) + offset, 0)\n                    : targetBounds.bottom, (offsetParent) => {\n                    var _a;\n                    // Because for ui_mode: split, the main mothership (which includes the toolbar) is moved and added as a sibling\n                    // If there's any relative position div set as the parent and the offsetParent is no longer the body,\n                    // the absolute top/left positions would no longer be correct\n                    // When there's a relative div and the position is the same as the toolbar container\n                    // then it would produce a negative top as it needs to be positioned on top of the offsetParent\n                    const offsetBox = box$1(offsetParent);\n                    const scrollDelta = (_a = offsetParent.dom.scrollTop) !== null && _a !== void 0 ? _a : 0;\n                    const isOffsetParentBody = eq(offsetParent, body());\n                    const topValue = isOffsetParentBody\n                        ? Math.max(targetBounds.y - get$d(container.element) + offset, 0)\n                        : targetBounds.y - offsetBox.y + scrollDelta - get$d(container.element) + offset;\n                    return isPositionedAtTop()\n                        ? topValue\n                        : targetBounds.bottom;\n                });\n                const left = getLeft();\n                const widthProperties = someIf(isOuterContainerWidthRestored, \n                // This width can be used for calculating the \"width\" when resolving issues with flex-wrapping being triggered at the window width, despite scroll space being available to the right.\n                Math.ceil(mainUi.outerContainer.element.dom.getBoundingClientRect().width))\n                    // this check is needed because if the toolbar is rendered outside of the `outerContainer` because the toolbar have `position: \"fixed\"`\n                    // the calculate width isn't correct\n                    .filter((w) => w > minimumToolbarWidth).map((toolbarWidth) => {\n                    const scroll = prevScroll.getOr(get$b());\n                    /*\n                  As the editor container can wrap its elements (due to flex-wrap), the width of the container impacts also its height. Adding a minimum width works around two problems:\n        \n                  a) The docking behaviour (e.g. lazyContext) does not handle the situation of a very thin component near the edge of the screen very well, and actually has no concept of horizontal scroll - it only checks y values.\n        \n                  b) A very small toolbar is essentially unusable. On scrolling of X, we keep updating the width of the toolbar so that it can grow to fit the available space.\n        \n                  Note: this is entirely determined on the number of items in the menu and the toolbar, because when they wrap, that's what causes the height. Also, having multiple toolbars can also make it higher.\n                  */\n                    const availableWidth = window.innerWidth - (left - scroll.left);\n                    const width = Math.max(Math.min(toolbarWidth, availableWidth), minimumToolbarWidth);\n                    if (availableWidth < toolbarWidth) {\n                        set$7(mainUi.outerContainer.element, 'width', width + 'px');\n                    }\n                    return {\n                        width: width + 'px'\n                    };\n                }).getOr({ width: 'max-content' });\n                const baseProperties = {\n                    position: 'absolute',\n                    left: Math.round(left) + 'px',\n                    top: getTop() + 'px'\n                };\n                setAll(mainUi.outerContainer.element, {\n                    ...baseProperties,\n                    ...widthProperties\n                });\n            });\n        };\n        // This would return Optional.none, for ui_mode: combined, which will fallback to the default code block\n        // For ui_mode: split, the offsetParent would be the body if there were no relative div set as parent\n        const getOffsetParent$1 = (editor, element) => isSplitUiMode(editor) ? getOffsetParent(element) : Optional.none();\n        const repositionPopups$1 = () => {\n            each$1(uiMotherships, (m) => {\n                m.broadcastOn([repositionPopups()], {});\n            });\n        };\n        const restoreOuterContainerWidth = () => {\n            /*\n            Editors can be placed so far to the right that their left position is beyond the window width. This causes problems with flex-wrap. To solve this, set a width style on the container.\n            Natural width of the container needs to be calculated first.\n            */\n            if (!useFixedToolbarContainer) {\n                const toolbarCurrentRightsidePosition = absolute$3(mainUi.outerContainer.element).left + getOuter(mainUi.outerContainer.element);\n                /*\n                Check the width if we are within X number of pixels to the edge ( or above ). Also check if we have the width-value set.\n                This helps handling the issue where it goes from having a width set ( because it's too wide ) to going so far from the edge it no longer triggers the problem. Common when the width is changed by test.\n                */\n                if (toolbarCurrentRightsidePosition >= window.innerWidth - maximumDistanceToEdge || getRaw(mainUi.outerContainer.element, 'width').isSome()) {\n                    set$7(mainUi.outerContainer.element, 'position', 'absolute');\n                    set$7(mainUi.outerContainer.element, 'left', '0px');\n                    remove$6(mainUi.outerContainer.element, 'width');\n                    return true;\n                }\n            }\n            return false;\n        };\n        const update = (stickyAction) => {\n            // Skip updating the ui if it's hidden\n            if (!isVisible()) {\n                return;\n            }\n            // Handles positioning, docking and SplitToolbar (more drawer) behaviour. Modes:\n            // 1. Basic inline: does positioning and docking\n            // 2. Inline + more drawer: does positioning, docking and SplitToolbar\n            // 3. Inline + fixed_toolbar_container: does nothing\n            // 4. Inline + fixed_toolbar_container + more drawer: does SplitToolbar\n            // Update the max width, as the body width may have changed\n            if (!useFixedToolbarContainer) {\n                updateChromeWidth();\n            }\n            const prevScroll = get$b();\n            const isOuterContainerWidthRestored = useFixedToolbarContainer ? false : restoreOuterContainerWidth();\n            /*\n              Refresh split toolbar. Before calling refresh, we need to make sure that we have the full width (through restoreOuterContainerWidth above), otherwise too much will be put in the overflow drawer.\n              A split toolbar requires a calculation to see what ends up in the \"more drawer\". When we don't have a split toolbar, then there is no reason to refresh the toolbar when the size changes.\n            */\n            if (isSplitToolbar) {\n                OuterContainer.refreshToolbar(mainUi.outerContainer);\n            }\n            // Positioning\n            if (!useFixedToolbarContainer) {\n                // Getting the current scroll as the previous step may have reset the scroll,\n                // We also want calculation based on the previous scroll, then restoring the scroll when everything is set.\n                const currentScroll = get$b();\n                const optScroll = someIf(prevScroll.left !== currentScroll.left, prevScroll);\n                // This will position the container in the right spot.\n                updateChromePosition(isOuterContainerWidthRestored, optScroll);\n                // Restore scroll left position only if they are different, keeping the current scroll top, that shouldn't be changed\n                optScroll.each((scroll) => {\n                    to(scroll.left, currentScroll.top);\n                });\n            }\n            // Docking\n            if (isSticky) {\n                floatContainer.on(stickyAction);\n            }\n            // Floating toolbar\n            repositionPopups$1();\n        };\n        const doUpdateMode = () => {\n            // Skip updating the mode if the toolbar is hidden, is\n            // using a fixed container or has sticky toolbars disabled\n            if (useFixedToolbarContainer || !isSticky || !isVisible()) {\n                return false;\n            }\n            return floatContainer.get().exists((fc) => {\n                const currentMode = headerBackstage.getDockingMode();\n                const newMode = calcMode(fc);\n                // Note: the docking mode will only be able to change when the `toolbar_location`\n                // is set to \"auto\".\n                if (newMode !== currentMode) {\n                    setupMode(newMode);\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        };\n        const show = () => {\n            visible.set(true);\n            set$7(mainUi.outerContainer.element, 'display', 'flex');\n            DOM.addClass(editor.getBody(), 'mce-edit-focus');\n            each$1(uiMotherships, (m) => {\n                // We remove the display style when showing, because when hiding, we set it to \"none\"\n                remove$6(m.element, 'display');\n            });\n            doUpdateMode();\n            if (isSplitUiMode(editor)) {\n                // When the toolbar is shown, then hidden and when the page is then scrolled,\n                // the toolbar is set to docked, which shouldn't be as it should be static position\n                // calling reset here, to reset the state.\n                // Another case would be when the toolbar is shown initially (with location_bottom)\n                // we don't want to dock the toolbar, calling Docking.refresh\n                update((elem) => Docking.isDocked(elem) ? Docking.reset(elem) : Docking.refresh(elem));\n            }\n            else {\n                // Even if we aren't updating the docking mode, we still want to reposition\n                // the Ui. NOTE: We are using Docking.refresh here, rather than Docking.reset. This\n                // means it should keep whatever its \"previous\" coordinates were, and will just\n                // behave like the window was scrolled again, and Docking needs to work out if it\n                // is going to dock / undock\n                update(Docking.refresh);\n            }\n        };\n        const hide = () => {\n            visible.set(false);\n            set$7(mainUi.outerContainer.element, 'display', 'none');\n            DOM.removeClass(editor.getBody(), 'mce-edit-focus');\n            each$1(uiMotherships, (m) => {\n                set$7(m.element, 'display', 'none');\n            });\n        };\n        const updateMode = () => {\n            const changedMode = doUpdateMode();\n            // If the docking mode has changed due to the update, we want to reset\n            // docking. This will clear any prior stored positions\n            if (changedMode) {\n                update(Docking.reset);\n            }\n        };\n        return {\n            isVisible,\n            isPositionedAtTop,\n            show,\n            hide,\n            update,\n            updateMode,\n            repositionPopups: repositionPopups$1\n        };\n    };\n\n    const getTargetPosAndBounds = (targetElm, isToolbarTop) => {\n        const bounds = box$1(targetElm);\n        return {\n            pos: isToolbarTop ? bounds.y : bounds.bottom,\n            bounds\n        };\n    };\n    const setupEvents = (editor, targetElm, ui, toolbarPersist) => {\n        const prevPosAndBounds = Cell(getTargetPosAndBounds(targetElm, ui.isPositionedAtTop()));\n        const resizeContent = (e) => {\n            const { pos, bounds } = getTargetPosAndBounds(targetElm, ui.isPositionedAtTop());\n            const { pos: prevPos, bounds: prevBounds } = prevPosAndBounds.get();\n            const hasResized = bounds.height !== prevBounds.height || bounds.width !== prevBounds.width;\n            prevPosAndBounds.set({ pos, bounds });\n            if (hasResized) {\n                fireResizeContent(editor, e);\n            }\n            if (ui.isVisible()) {\n                if (prevPos !== pos) {\n                    // The proposed toolbar location has moved, so we need to reposition the Ui. This might\n                    // include things like refreshing any Docking / stickiness for the toolbars\n                    ui.update(Docking.reset);\n                }\n                else if (hasResized) {\n                    // The proposed toolbar location hasn't moved, but the dimensions of the editor have changed.\n                    // We use \"updateMode\" here instead of \"update\". The primary reason is that \"updateMode\"\n                    // only repositions the Ui if it has detected that the docking mode needs to change, which\n                    // will only happen with `toolbar_location` is set to `auto`.\n                    ui.updateMode();\n                    // NOTE: This repositionPopups call is going to be a duplicate if \"updateMode\" identifies\n                    // that the mode has changed. We probably need to make it a bit more granular .. so\n                    // that we can just query if the mode has changed. Otherwise, we're going to end up with\n                    // situations like this where we are doing a potentially expensive operation\n                    // (repositionPopups) more than once.\n                    ui.repositionPopups();\n                }\n            }\n        };\n        if (!toolbarPersist) {\n            editor.on('activate', ui.show);\n            editor.on('deactivate', ui.hide);\n        }\n        // For both the initial load (SkinLoaded) and any resizes (ResizeWindow), we want to\n        // update the positions of the Ui elements (and reset Docking / stickiness)\n        editor.on('SkinLoaded ResizeWindow', () => ui.update(Docking.reset));\n        editor.on('NodeChange keydown', (e) => {\n            requestAnimationFrame(() => resizeContent(e));\n        });\n        // When the page has been scrolled, we need to update any docking positions. We also\n        // want to reposition all the Ui elements if required.\n        let lastScrollX = 0;\n        const updateUi = last(() => ui.update(Docking.refresh), 33);\n        editor.on('ScrollWindow', () => {\n            const newScrollX = get$b().left;\n            if (newScrollX !== lastScrollX) {\n                lastScrollX = newScrollX;\n                updateUi.throttle();\n            }\n            ui.updateMode();\n        });\n        if (isSplitUiMode(editor)) {\n            editor.on('ElementScroll', (_args) => {\n                // When the scroller containing the editor scrolls, update the Ui positions\n                ui.update(Docking.refresh);\n            });\n        }\n        // Bind to async load events and trigger a content resize event if the size has changed\n        // This is handling resizing based on anything loading inside the content (e.g. img tags)\n        const elementLoad = unbindable();\n        elementLoad.set(capture(SugarElement.fromDom(editor.getBody()), 'load', (e) => resizeContent(e.raw)));\n        editor.on('remove', () => {\n            elementLoad.clear();\n        });\n    };\n    const render = (editor, uiRefs, rawUiConfig, backstage, args) => {\n        const { mainUi } = uiRefs;\n        // This is used to store the reference to the header part of OuterContainer, which is\n        // *not* created by this module. This reference is used to make sure that we only bind\n        // events for an inline container *once* ... because our show function is just the\n        // InlineHeader's show function if this reference is already set. We pass it through to\n        // InlineHeader because InlineHeader will depend on it.\n        const floatContainer = value$2();\n        const targetElm = SugarElement.fromDom(args.targetNode);\n        const ui = InlineHeader(editor, targetElm, uiRefs, backstage, floatContainer);\n        const toolbarPersist = isToolbarPersist(editor);\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        inline(editor);\n        const render = () => {\n            // Because we set the floatContainer immediately afterwards, this is just telling us\n            // if we have already called this code (e.g. show, hide, show) - then don't do anything\n            // more than show. It's a pretty messy way of ensuring that all the code that follows\n            // this `if` block is only executed once (setting up events etc.). So the first call\n            // to `render` will execute it, but the second call won't. This `render` function is\n            // used for most of the \"show\" handlers here, so the function can be invoked either\n            // for the first time, or or just because something is being show again, after being\n            // toggled to hidden earlier.\n            if (floatContainer.isSet()) {\n                ui.show();\n                return;\n            }\n            // Set up the header part of OuterContainer. Once configured, the `InlineHeader` code\n            // will use it when setting up and updating the Ui. This module uses it mainly just to\n            // allow us to call `render` multiple times, but only have it execute the setup code once.\n            floatContainer.set(OuterContainer.getHeader(mainUi.outerContainer).getOrDie());\n            // `uiContainer` handles *where* the motherhips get added by default. Currently, uiContainer\n            // will mostly be the <body> of the document (unless it's a ShadowRoot). When using ui_mode: split,\n            // the main mothership (which includes the toolbar) and popup sinks will be added as siblings of\n            // the target element, so that they have the same scrolling context / environment\n            const uiContainer = getUiContainer(editor);\n            // Position the motherships based on the editor Ui options.\n            if (isSplitUiMode(editor)) {\n                attachSystemAfter(targetElm, mainUi.mothership);\n                // Only in ui_mode: split, do we have a separate popup sink\n                attachSystemAfter(targetElm, uiRefs.popupUi.mothership);\n            }\n            else {\n                attachSystem(uiContainer, mainUi.mothership);\n            }\n            // NOTE: In UiRefs, dialogUi and popupUi refer to the same thing if ui_mode: combined\n            attachSystem(uiContainer, uiRefs.dialogUi.mothership);\n            const setup = () => {\n                // Unlike menubar below which uses OuterContainer directly, this level of abstraction is\n                // required because of the different types of toolbars available (e.g. multiple vs single)\n                setToolbar(editor, uiRefs, rawUiConfig, backstage);\n                OuterContainer.setMenubar(mainUi.outerContainer, identifyMenus(editor, rawUiConfig));\n                // Initialise the toolbar - set initial positioning then show\n                ui.show();\n                setupEvents(editor, targetElm, ui, toolbarPersist);\n                editor.nodeChanged();\n            };\n            if (toolbarPersist) {\n                // TINY-10482: for `toolbar_persist: true` we need to wait for the skin to be loaded before showing the toolbar/menubar.\n                // Without this, there's the occasional chance that the toolbar/menubar could be set/shown before the skin has finished\n                // loading, which causes CSS issues.\n                editor.once('SkinLoaded', setup);\n            }\n            else {\n                setup();\n            }\n        };\n        editor.on('show', render);\n        editor.on('hide', ui.hide);\n        if (!toolbarPersist) {\n            editor.on('focus', render);\n            editor.on('blur', ui.hide);\n        }\n        editor.on('init', () => {\n            if (editor.hasFocus() || toolbarPersist) {\n                render();\n            }\n        });\n        setupEventsForUi(editor, uiRefs);\n        const api = {\n            show: render,\n            hide: ui.hide,\n            setEnabled: (state) => {\n                const eventType = state ? 'setEnabled' : 'setDisabled';\n                broadcastEvents(uiRefs, eventType);\n            },\n            isEnabled: () => !Disabling.isDisabled(mainUi.outerContainer)\n        };\n        return {\n            editorContainer: mainUi.outerContainer.element.dom,\n            api\n        };\n    };\n\n    var Inline = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        render: render\n    });\n\n    const LazyUiReferences = () => {\n        const dialogUi = value$2();\n        const popupUi = value$2();\n        const mainUi = value$2();\n        const lazyGetInOuterOrDie = (label, f) => () => mainUi.get().bind((oc) => f(oc.outerContainer)).getOrDie(`Could not find ${label} element in OuterContainer`);\n        // TINY-9226: If the motherships are the same, return just the dialog Ui of them (ui_mode: combined mode)\n        const getUiMotherships = () => {\n            const optDialogMothership = dialogUi.get().map((ui) => ui.mothership);\n            const optPopupMothership = popupUi.get().map((ui) => ui.mothership);\n            return optDialogMothership.fold(() => optPopupMothership.toArray(), (dm) => optPopupMothership.fold(() => [dm], (pm) => eq(dm.element, pm.element) ? [dm] : [dm, pm]));\n        };\n        return {\n            dialogUi,\n            popupUi,\n            mainUi,\n            getUiMotherships,\n            lazyGetInOuterOrDie\n        };\n    };\n\n    // TODO: Find a better way of doing this. We probably don't want to just listen to\n    // editor events. Having an API available like WindowManager would be the best option\n    const showContextToolbarEvent = 'contexttoolbar-show';\n    const hideContextToolbarEvent = 'contexttoolbar-hide';\n\n    const getFormApi = (input, valueState, focusfallbackElement) => {\n        return ({\n            setInputEnabled: (state) => {\n                if (!state && focusfallbackElement) {\n                    focus$4(focusfallbackElement);\n                }\n                Disabling.set(input, !state);\n            },\n            isInputEnabled: () => !Disabling.isDisabled(input),\n            hide: () => {\n                emit(input, sandboxClose());\n            },\n            back: () => {\n                emit(input, backSlideEvent);\n            },\n            getValue: () => {\n                return valueState.get().getOrThunk(() => Representing.getValue(input));\n            },\n            setValue: (value) => {\n                if (input.getSystem().isConnected()) {\n                    Representing.setValue(input, value);\n                }\n                else {\n                    valueState.set(value);\n                }\n            }\n        });\n    };\n\n    const runOnExecute = (memInput, original, valueState) => run$1(internalToolbarButtonExecute, (comp, se) => {\n        const input = memInput.get(comp);\n        const formApi = getFormApi(input, valueState, comp.element);\n        original.onAction(formApi, se.event.buttonApi);\n    });\n    const renderContextButton = (memInput, button, providers, valueState) => {\n        const { primary, ...rest } = button.original;\n        const bridged = getOrDie(createToolbarButton({\n            ...rest,\n            type: 'button',\n            onAction: noop\n        }));\n        return renderToolbarButtonWith(bridged, providers, [\n            runOnExecute(memInput, button, valueState)\n        ]);\n    };\n    const renderContextToggleButton = (memInput, button, providers, valueState) => {\n        const { primary, ...rest } = button.original;\n        const bridged = getOrDie(createToggleButton({\n            ...rest,\n            type: 'togglebutton',\n            onAction: noop\n        }));\n        return renderToolbarToggleButtonWith(bridged, providers, [\n            runOnExecute(memInput, button, valueState)\n        ]);\n    };\n    const isToggleButton = (button) => button.type === 'contextformtogglebutton';\n    const generateOne = (memInput, button, providersBackstage, valueState) => {\n        if (isToggleButton(button)) {\n            return renderContextToggleButton(memInput, button, providersBackstage, valueState);\n        }\n        else {\n            return renderContextButton(memInput, button, providersBackstage, valueState);\n        }\n    };\n    const generate = (memInput, buttons, providersBackstage, valueState) => {\n        const mementos = map$2(buttons, (button) => record(generateOne(memInput, button, providersBackstage, valueState)));\n        const asSpecs = () => map$2(mementos, (mem) => mem.asSpec());\n        const findPrimary = (compInSystem) => findMap(buttons, (button, i) => {\n            if (button.primary) {\n                return Optional.from(mementos[i]).bind((mem) => mem.getOpt(compInSystem)).filter(not(Disabling.isDisabled));\n            }\n            else {\n                return Optional.none();\n            }\n        });\n        return {\n            asSpecs,\n            findPrimary\n        };\n    };\n\n    const renderContextFormSizeInput = (ctx, providersBackstage, onEnter, valueState) => {\n        const { width, height } = ctx.initValue();\n        let converter = noSizeConversion;\n        const enabled = true;\n        const ratioEvent = generate$6('ratio-event');\n        const getApi = (comp) => getFormApi(comp, valueState);\n        const makeIcon = (iconName) => render$4(iconName, { tag: 'span', classes: ['tox-icon', 'tox-lock-icon__' + iconName] }, providersBackstage.icons);\n        const disabled = () => !enabled;\n        const label = ctx.label.getOr('Constrain proportions');\n        const translatedLabel = providersBackstage.translate(label);\n        const pLock = FormCoupledInputs.parts.lock({\n            dom: {\n                tag: 'button',\n                classes: ['tox-lock', 'tox-lock-context-form-size-input', 'tox-button', 'tox-button--naked', 'tox-button--icon'],\n                attributes: {\n                    'aria-label': translatedLabel,\n                    'data-mce-name': label\n                }\n            },\n            components: [\n                makeIcon('lock'),\n                makeIcon('unlock')\n            ],\n            buttonBehaviours: derive$1([\n                Disabling.config({ disabled }),\n                Tabstopping.config({}),\n                Tooltipping.config(providersBackstage.tooltips.getConfig({\n                    tooltipText: translatedLabel\n                }))\n            ])\n        });\n        const formGroup = (components) => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-context-form__group']\n            },\n            components\n        });\n        const goToParent = (comp) => {\n            const focussableWrapperOpt = ancestor$1(comp.element, 'div.tox-focusable-wrapper');\n            return focussableWrapperOpt.fold(Optional.none, (focussableWrapper) => {\n                focus$4(focussableWrapper);\n                return Optional.some(true);\n            });\n        };\n        const getFieldPart = (isField1) => FormField.parts.field({\n            factory: Input,\n            inputClasses: ['tox-textfield', 'tox-toolbar-textfield', 'tox-textfield-size'],\n            data: isField1 ? width : height,\n            inputBehaviours: derive$1([\n                Disabling.config({ disabled }),\n                Tabstopping.config({}),\n                config('size-input-toolbar-events', [\n                    run$1(focusin(), (component, _simulatedEvent) => {\n                        emitWith(component, ratioEvent, { isField1 });\n                    })\n                ]),\n                Keying.config({ mode: 'special', onEnter, onEscape: goToParent })\n            ]),\n            selectOnFocus: false\n        });\n        const getLabel = (label) => ({\n            dom: {\n                tag: 'label',\n                classes: ['tox-label']\n            },\n            components: [\n                text$2(providersBackstage.translate(label))\n            ]\n        });\n        const focusableWrapper = (field) => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-focusable-wrapper', 'tox-toolbar-nav-item'],\n            },\n            components: [field],\n            behaviours: derive$1([\n                Tabstopping.config({}),\n                Focusing.config({}),\n                Keying.config({\n                    mode: 'special',\n                    onEnter: (comp) => {\n                        const focussableInputOpt = descendant(comp.element, 'input');\n                        return focussableInputOpt.fold(Optional.none, (focussableInput) => {\n                            focus$4(focussableInput);\n                            return Optional.some(true);\n                        });\n                    }\n                })\n            ])\n        });\n        const widthField = focusableWrapper(FormCoupledInputs.parts.field1(formGroup([FormField.parts.label(getLabel('Width:')), getFieldPart(true)])));\n        const heightField = focusableWrapper(FormCoupledInputs.parts.field2(formGroup([FormField.parts.label(getLabel('Height:')), getFieldPart(false)])));\n        const editorOffCell = Cell(noop);\n        const controlLifecycleHandlers = [\n            onControlAttached({\n                onBeforeSetup: (comp) => descendant(comp.element, 'input').each(focus$4),\n                onSetup: ctx.onSetup,\n                getApi\n            }, editorOffCell),\n            onContextFormControlDetached({ getApi }, editorOffCell, valueState),\n        ];\n        return FormCoupledInputs.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-context-form__group']\n            },\n            components: [\n                // NOTE: Form coupled inputs to the FormField.sketch themselves.\n                widthField,\n                formGroup([\n                    pLock\n                ]),\n                heightField\n            ],\n            field1Name: 'width',\n            field2Name: 'height',\n            locked: true,\n            markers: {\n                lockClass: 'tox-locked'\n            },\n            onLockedChange: (current, other, _lock) => {\n                parseSize(Representing.getValue(current)).each((size) => {\n                    converter(size).each((newSize) => {\n                        Representing.setValue(other, formatSize(newSize));\n                    });\n                });\n            },\n            onInput: (current) => emit(current, formInputEvent),\n            coupledFieldBehaviours: derive$1([\n                Focusing.config({}),\n                Keying.config({\n                    mode: 'flow',\n                    focusInside: FocusInsideModes.OnEnterOrSpaceMode,\n                    cycles: false,\n                    selector: 'button, .tox-focusable-wrapper',\n                }),\n                Disabling.config({\n                    disabled,\n                    onDisabled: (comp) => {\n                        FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.disable);\n                        FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.disable);\n                        FormCoupledInputs.getLock(comp).each(Disabling.disable);\n                    },\n                    onEnabled: (comp) => {\n                        FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.enable);\n                        FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.enable);\n                        FormCoupledInputs.getLock(comp).each(Disabling.enable);\n                    }\n                }),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext('mode:design')),\n                config('size-input-toolbar-events2', [\n                    run$1(ratioEvent, (component, simulatedEvent) => {\n                        const isField1 = simulatedEvent.event.isField1;\n                        const optCurrent = isField1 ? FormCoupledInputs.getField1(component) : FormCoupledInputs.getField2(component);\n                        const optOther = isField1 ? FormCoupledInputs.getField2(component) : FormCoupledInputs.getField1(component);\n                        const value1 = optCurrent.map(Representing.getValue).getOr('');\n                        const value2 = optOther.map(Representing.getValue).getOr('');\n                        converter = makeRatioConverter(value1, value2);\n                    }),\n                    run$1(formInputEvent, (input) => ctx.onInput(getApi(input))),\n                    ...controlLifecycleHandlers,\n                ])\n            ])\n        });\n    };\n\n    const createContextFormFieldFromParts = (pLabel, pField, providers) => FormField.sketch({\n        dom: {\n            tag: 'div',\n            classes: ['tox-context-form__group']\n        },\n        components: [...pLabel.toArray(), pField],\n        fieldBehaviours: derive$1([\n            Disabling.config({\n                disabled: () => providers.checkUiComponentContext('mode:design').shouldDisable,\n                onDisabled: (comp) => {\n                    focusParent(comp);\n                    FormField.getField(comp).each(Disabling.disable);\n                },\n                onEnabled: (comp) => {\n                    FormField.getField(comp).each(Disabling.enable);\n                }\n            }),\n        ])\n    });\n\n    const renderContextFormSliderInput = (ctx, providers, onEnter, valueState) => {\n        const editorOffCell = Cell(noop);\n        const getApi = (comp) => getFormApi(comp, valueState);\n        const pLabel = ctx.label.map((label) => FormField.parts.label({\n            dom: { tag: 'label', classes: ['tox-label'] },\n            components: [text$2(providers.translate(label))]\n        }));\n        const pField = FormField.parts.field({\n            factory: Input,\n            type: 'range',\n            inputClasses: ['tox-toolbar-slider__input', 'tox-toolbar-nav-item'],\n            inputAttributes: {\n                min: String(ctx.min()),\n                max: String(ctx.max())\n            },\n            data: ctx.initValue().toString(),\n            fromInputValue: (value) => toFloat(value).getOr(ctx.min()),\n            toInputValue: (value) => String(value),\n            inputBehaviours: derive$1([\n                Disabling.config({\n                    disabled: () => providers.checkUiComponentContext('mode:design').shouldDisable\n                }),\n                toggleOnReceive(() => providers.checkUiComponentContext('mode:design')),\n                Keying.config({\n                    mode: 'special',\n                    onEnter,\n                    // These two lines need to be tested. They are about left and right bypassing\n                    // any keyboard handling, and allowing left and right to be processed by the input\n                    // Maybe this should go in an alloy sketch for Input?\n                    onLeft: (comp, se) => {\n                        se.cut();\n                        return Optional.none();\n                    },\n                    onRight: (comp, se) => {\n                        se.cut();\n                        return Optional.none();\n                    }\n                }),\n                config('slider-events', [\n                    onControlAttached({\n                        onSetup: ctx.onSetup,\n                        getApi,\n                        onBeforeSetup: Keying.focusIn\n                    }, editorOffCell),\n                    onContextFormControlDetached({ getApi }, editorOffCell, valueState),\n                    run$1(input(), (comp) => {\n                        ctx.onInput(getApi(comp));\n                    })\n                ])\n            ])\n        });\n        return createContextFormFieldFromParts(pLabel, pField, providers);\n    };\n\n    const renderContextFormTextInput = (ctx, providers, onEnter, valueState) => {\n        const editorOffCell = Cell(noop);\n        const getFormApi$1 = (comp) => getFormApi(comp, valueState);\n        const pLabel = ctx.label.map((label) => FormField.parts.label({\n            dom: { tag: 'label', classes: ['tox-label'] },\n            components: [text$2(providers.translate(label))]\n        }));\n        const placeholder = ctx.placeholder.map((p) => ({ placeholder: providers.translate(p) })).getOr({});\n        const inputAttributes = {\n            ...placeholder,\n        };\n        const pField = FormField.parts.field({\n            factory: Input,\n            inputClasses: ['tox-toolbar-textfield', 'tox-toolbar-nav-item'],\n            inputAttributes,\n            data: ctx.initValue(),\n            selectOnFocus: true,\n            inputBehaviours: derive$1([\n                Disabling.config({\n                    disabled: () => providers.checkUiComponentContext('mode:design').shouldDisable\n                }),\n                toggleOnReceive(() => providers.checkUiComponentContext('mode:design')),\n                Keying.config({\n                    mode: 'special',\n                    onEnter,\n                    // These two lines need to be tested. They are about left and right bypassing\n                    // any keyboard handling, and allowing left and right to be processed by the input\n                    // Maybe this should go in an alloy sketch for Input?\n                    onLeft: (comp, se) => {\n                        se.cut();\n                        return Optional.none();\n                    },\n                    onRight: (comp, se) => {\n                        se.cut();\n                        return Optional.none();\n                    }\n                }),\n                config('input-events', [\n                    onControlAttached({\n                        onSetup: ctx.onSetup,\n                        getApi: (comp) => {\n                            const closestFocussableOpt = ancestor$1(comp.element, '.tox-toolbar').bind((toolbar) => descendant(toolbar, 'button:enabled'));\n                            return closestFocussableOpt.fold(() => getFormApi(comp, valueState), (closestFocussable) => getFormApi(comp, valueState, closestFocussable));\n                        },\n                        onBeforeSetup: Keying.focusIn\n                    }, editorOffCell),\n                    onContextFormControlDetached({ getApi: getFormApi$1 }, editorOffCell, valueState),\n                    run$1(input(), (comp) => {\n                        ctx.onInput(getFormApi$1(comp));\n                    })\n                ])\n            ])\n        });\n        return createContextFormFieldFromParts(pLabel, pField, providers);\n    };\n\n    const buildInitGroup = (f, ctx, providers) => {\n        const valueState = value$2();\n        const onEnter = (input) => {\n            return startCommands.findPrimary(input).orThunk(() => endCommands.findPrimary(input)).map((primary) => {\n                emitExecute(primary);\n                return true;\n            });\n        };\n        const memInput = record(f(providers, onEnter, valueState));\n        const commandParts = partition$3(ctx.commands, (command) => command.align === 'start');\n        const startCommands = generate(memInput, commandParts.pass, providers, valueState);\n        const endCommands = generate(memInput, commandParts.fail, providers, valueState);\n        return filter$2([\n            {\n                title: Optional.none(),\n                label: Optional.none(),\n                items: startCommands.asSpecs()\n            },\n            {\n                title: Optional.none(),\n                label: Optional.none(),\n                items: [memInput.asSpec()]\n            },\n            {\n                title: Optional.none(),\n                label: Optional.none(),\n                items: endCommands.asSpecs()\n            }\n        ], (group) => group.items.length > 0);\n    };\n    const buildInitGroups = (ctx, providers) => {\n        switch (ctx.type) {\n            case 'contextform': return buildInitGroup(curry(renderContextFormTextInput, ctx), ctx, providers);\n            case 'contextsliderform': return buildInitGroup(curry(renderContextFormSliderInput, ctx), ctx, providers);\n            case 'contextsizeinputform': return buildInitGroup(curry(renderContextFormSizeInput, ctx), ctx, providers);\n        }\n    };\n    const renderContextForm = (toolbarType, ctx, providers) => renderToolbar({\n        type: toolbarType,\n        uid: generate$6('context-toolbar'),\n        initGroups: buildInitGroups(ctx, providers),\n        onEscape: Optional.none,\n        cyclicKeying: true,\n        providers\n    });\n    const ContextForm = {\n        renderContextForm,\n        buildInitGroups\n    };\n\n    // The \"threshold\" here is the amount of overlap. To make the overlap check\n    // be more permissive (return true for 'almost' an overlap), use a negative\n    // threshold value\n    const isVerticalOverlap = (a, b, threshold) => b.bottom - a.y >= threshold && a.bottom - b.y >= threshold;\n    const getRangeRect = (rng) => {\n        const rect = rng.getBoundingClientRect();\n        // Some ranges (eg <td><br></td>) will return a 0x0 rect, so we'll need to calculate it from the leaf instead\n        if (rect.height <= 0 && rect.width <= 0) {\n            const leaf$1 = leaf(SugarElement.fromDom(rng.startContainer), rng.startOffset).element;\n            const elm = isText(leaf$1) ? parent(leaf$1) : Optional.some(leaf$1);\n            return elm.filter(isElement$1)\n                .map((e) => e.dom.getBoundingClientRect())\n                // We have nothing valid, so just fallback to the original rect\n                .getOr(rect);\n        }\n        else {\n            return rect;\n        }\n    };\n    const getSelectionBounds = (editor) => {\n        const rng = editor.selection.getRng();\n        const rect = getRangeRect(rng);\n        if (editor.inline) {\n            const scroll = get$b();\n            return bounds(scroll.left + rect.left, scroll.top + rect.top, rect.width, rect.height);\n        }\n        else {\n            // Translate to the top level document, as rect is relative to the iframe viewport\n            const bodyPos = absolute$2(SugarElement.fromDom(editor.getBody()));\n            return bounds(bodyPos.x + rect.left, bodyPos.y + rect.top, rect.width, rect.height);\n        }\n    };\n    const getAnchorElementBounds = (editor, lastElement) => lastElement\n        .filter((elem) => inBody(elem) && isHTMLElement(elem))\n        .map(absolute$2)\n        .getOrThunk(() => getSelectionBounds(editor));\n    const getHorizontalBounds = (contentAreaBox, viewportBounds, margin) => {\n        const x = Math.max(contentAreaBox.x + margin, viewportBounds.x);\n        const right = Math.min(contentAreaBox.right - margin, viewportBounds.right);\n        return { x, width: right - x };\n    };\n    const getVerticalBounds = (editor, contentAreaBox, viewportBounds, isToolbarLocationTop, toolbarType, margin) => {\n        const container = SugarElement.fromDom(editor.getContainer());\n        const header = descendant(container, '.tox-editor-header').getOr(container);\n        const headerBox = box$1(header);\n        const isToolbarBelowContentArea = headerBox.y >= contentAreaBox.bottom;\n        const isToolbarAbove = isToolbarLocationTop && !isToolbarBelowContentArea;\n        // Scenario toolbar top & inline: Bottom of the header -> Bottom of the viewport\n        if (editor.inline && isToolbarAbove) {\n            return {\n                y: Math.max(headerBox.bottom + margin, viewportBounds.y),\n                bottom: viewportBounds.bottom\n            };\n        }\n        // Scenario toolbar top & inline: Top of the viewport -> Top of the header\n        if (editor.inline && !isToolbarAbove) {\n            return {\n                y: viewportBounds.y,\n                bottom: Math.min(headerBox.y - margin, viewportBounds.bottom)\n            };\n        }\n        // Allow line based context toolbar to overlap the statusbar\n        const containerBounds = toolbarType === 'line' ? box$1(container) : contentAreaBox;\n        // Scenario toolbar bottom & Iframe: Bottom of the header -> Bottom of the editor container\n        if (isToolbarAbove) {\n            return {\n                y: Math.max(headerBox.bottom + margin, viewportBounds.y),\n                bottom: Math.min(containerBounds.bottom - margin, viewportBounds.bottom)\n            };\n        }\n        // Scenario toolbar bottom & Iframe: Top of the editor container -> Top of the header\n        return {\n            y: Math.max(containerBounds.y + margin, viewportBounds.y),\n            bottom: Math.min(headerBox.y - margin, viewportBounds.bottom)\n        };\n    };\n    const getContextToolbarBounds = (editor, sharedBackstage, toolbarType, margin = 0) => {\n        const viewportBounds = getBounds$1(window);\n        const contentAreaBox = box$1(SugarElement.fromDom(editor.getContentAreaContainer()));\n        const toolbarOrMenubarEnabled = isMenubarEnabled(editor) || isToolbarEnabled(editor) || isMultipleToolbars(editor);\n        const { x, width } = getHorizontalBounds(contentAreaBox, viewportBounds, margin);\n        // Create bounds that lets the context toolbar overflow outside the content area, but remains in the viewport\n        if (editor.inline && !toolbarOrMenubarEnabled) {\n            return bounds(x, viewportBounds.y, width, viewportBounds.height);\n        }\n        else {\n            const isToolbarTop = sharedBackstage.header.isPositionedAtTop();\n            const { y, bottom } = getVerticalBounds(editor, contentAreaBox, viewportBounds, isToolbarTop, toolbarType, margin);\n            return bounds(x, y, width, bottom - y);\n        }\n    };\n\n    const bubbleSize$1 = 12;\n    const bubbleAlignments$1 = {\n        valignCentre: [],\n        alignCentre: [],\n        alignLeft: ['tox-pop--align-left'],\n        alignRight: ['tox-pop--align-right'],\n        right: ['tox-pop--right'],\n        left: ['tox-pop--left'],\n        bottom: ['tox-pop--bottom'],\n        top: ['tox-pop--top'],\n        inset: ['tox-pop--inset']\n    };\n    const anchorOverrides = {\n        maxHeightFunction: expandable$1(),\n        maxWidthFunction: expandable()\n    };\n    const isEntireElementSelected = (editor, elem) => {\n        const rng = editor.selection.getRng();\n        const leaf$1 = leaf(SugarElement.fromDom(rng.startContainer), rng.startOffset);\n        return rng.startContainer === rng.endContainer && rng.startOffset === rng.endOffset - 1 && eq(leaf$1.element, elem);\n    };\n    const preservePosition = (elem, position, f) => {\n        const currentPosition = getRaw(elem, 'position');\n        set$7(elem, 'position', position);\n        const result = f(elem);\n        currentPosition.each((pos) => set$7(elem, 'position', pos));\n        return result;\n    };\n    // Don't use an inset layout when using a selection/line based anchors as it'll cover the content and can't be moved out the way\n    const shouldUseInsetLayouts = (position) => position === 'node';\n    /**\n     * This function is designed to attempt to intelligently detect where the contextbar should be anchored when using an inside\n     * layout. It will attempt to preserve the previous outside placement when anchoring to the same element. However, when the\n     * placement is re-triggered (e.g. not triggered by a reposition) and the current editor selection overlaps with the contextbar,\n     * then the anchoring should flip from the previous position to avoid conflicting with the selection.\n     */\n    const determineInsetLayout = (editor, contextbar, elem, data, bounds) => {\n        const selectionBounds = getSelectionBounds(editor);\n        const isSameAnchorElement = data.lastElement().exists((prev) => eq(elem, prev));\n        if (isEntireElementSelected(editor, elem)) {\n            // The entire anchor element is selected so it'll always overlap with the selection, in which case just\n            // preserve or show at the top for a new anchor element.\n            return isSameAnchorElement ? preserve$1 : north$1;\n        }\n        else if (isSameAnchorElement) {\n            // Preserve the position, get the bounds and then see if we have an overlap.\n            // If overlapping and this wasn't triggered by a reposition then flip the placement\n            return preservePosition(contextbar, data.getMode(), () => {\n                // TINY-8890: The negative 20px threshold here was arrived at by considering the use\n                // case of a table with default heights for the rows. The threshold had to be\n                // large enough so that the context toolbar would not prevent the user selecting\n                // in the row containing the context toolbar.\n                const isOverlapping = isVerticalOverlap(selectionBounds, box$1(contextbar), -20);\n                return isOverlapping && !data.isReposition() ? flip : preserve$1;\n            });\n        }\n        else {\n            // Attempt to find the best layout to use that won't cause an overlap for the new anchor element\n            // Note: In fixed positioning mode we need to translate by adding the scroll pos to get the absolute position\n            const yBounds = data.getMode() === 'fixed' ? bounds.y + get$b().top : bounds.y;\n            const contextbarHeight = get$d(contextbar) + bubbleSize$1;\n            return yBounds + contextbarHeight <= selectionBounds.y ? north$1 : south$1;\n        }\n    };\n    const getAnchorSpec$2 = (editor, mobile, data, position) => {\n        // IMPORTANT: We lazily determine the layout here so that we only do the calculations if absolutely necessary\n        const smartInsetLayout = (elem) => (anchor, element, bubbles, placee, bounds) => {\n            const layout = determineInsetLayout(editor, placee, elem, data, bounds);\n            // Adjust the anchor box to use the passed y bound coords so that we simulate a \"docking\" type of behaviour\n            const newAnchor = {\n                ...anchor,\n                y: bounds.y,\n                height: bounds.height\n            };\n            return {\n                ...layout(newAnchor, element, bubbles, placee, bounds),\n                // Ensure this is always the preferred option if no outside layouts fit\n                alwaysFit: true\n            };\n        };\n        const getInsetLayouts = (elem) => shouldUseInsetLayouts(position) ? [smartInsetLayout(elem)] : [];\n        // On desktop we prioritise north-then-south because it's cleaner, but on mobile we prioritise south to try to avoid overlapping with native context toolbars\n        const desktopAnchorSpecLayouts = {\n            onLtr: (elem) => [north$2, south$2, northeast$2, southeast$2, northwest$2, southwest$2].concat(getInsetLayouts(elem)),\n            onRtl: (elem) => [north$2, south$2, northwest$2, southwest$2, northeast$2, southeast$2].concat(getInsetLayouts(elem))\n        };\n        const mobileAnchorSpecLayouts = {\n            onLtr: (elem) => [south$2, southeast$2, southwest$2, northeast$2, northwest$2, north$2].concat(getInsetLayouts(elem)),\n            onRtl: (elem) => [south$2, southwest$2, southeast$2, northwest$2, northeast$2, north$2].concat(getInsetLayouts(elem))\n        };\n        return mobile ? mobileAnchorSpecLayouts : desktopAnchorSpecLayouts;\n    };\n    const getAnchorLayout = (editor, position, isTouch, data) => {\n        if (position === 'line') {\n            return {\n                bubble: nu$6(bubbleSize$1, 0, bubbleAlignments$1),\n                layouts: {\n                    onLtr: () => [east$2],\n                    onRtl: () => [west$2]\n                },\n                overrides: anchorOverrides\n            };\n        }\n        else {\n            return {\n                // Ensure that inset layouts use a 1px bubble since we're hiding the bubble arrow\n                bubble: nu$6(0, bubbleSize$1, bubbleAlignments$1, 1 / bubbleSize$1),\n                layouts: getAnchorSpec$2(editor, isTouch, data, position),\n                overrides: anchorOverrides\n            };\n        }\n    };\n\n    const matchTargetWith = (elem, candidates) => {\n        const ctxs = filter$2(candidates, (toolbarApi) => toolbarApi.predicate(elem.dom));\n        // TODO: somehow type this properly (Arr.partition can't)\n        // e.g. here pass is Toolbar.ContextToolbar and fail is Toolbar.ContextForm\n        const { pass, fail } = partition$3(ctxs, (t) => t.type === 'contexttoolbar');\n        return {\n            contextToolbars: pass,\n            contextForms: fail\n        };\n    };\n    const filterByPositionForStartNode = (toolbars) => {\n        if (toolbars.length <= 1) {\n            return toolbars;\n        }\n        else {\n            const doesPositionExist = (value) => exists(toolbars, (t) => t.position === value);\n            const filterToolbarsByPosition = (value) => filter$2(toolbars, (t) => t.position === value);\n            const hasSelectionToolbars = doesPositionExist('selection');\n            const hasNodeToolbars = doesPositionExist('node');\n            if (hasSelectionToolbars || hasNodeToolbars) {\n                if (hasNodeToolbars && hasSelectionToolbars) {\n                    // if there's a mix, change the 'selection' toolbars to 'node' so there's no positioning confusion\n                    const nodeToolbars = filterToolbarsByPosition('node');\n                    const selectionToolbars = map$2(filterToolbarsByPosition('selection'), (t) => ({ ...t, position: 'node' }));\n                    return nodeToolbars.concat(selectionToolbars);\n                }\n                else {\n                    return hasSelectionToolbars ? filterToolbarsByPosition('selection') : filterToolbarsByPosition('node');\n                }\n            }\n            else {\n                return filterToolbarsByPosition('line');\n            }\n        }\n    };\n    const filterByPositionForAncestorNode = (toolbars) => {\n        if (toolbars.length <= 1) {\n            return toolbars;\n        }\n        else {\n            const findPosition = (value) => find$5(toolbars, (t) => t.position === value);\n            // prioritise position by 'selection' -> 'node' -> 'line'\n            const basePosition = findPosition('selection')\n                .orThunk(() => findPosition('node'))\n                .orThunk(() => findPosition('line'))\n                .map((t) => t.position);\n            return basePosition.fold(() => [], (pos) => filter$2(toolbars, (t) => t.position === pos));\n        }\n    };\n    const matchStartNode = (elem, nodeCandidates, editorCandidates) => {\n        // requirements:\n        // 1. prioritise context forms over context menus\n        // 2. prioritise node scoped over editor scoped context forms\n        // 3. only show max 1 context form\n        // 4. concatenate all available context toolbars if no context form\n        const nodeMatches = matchTargetWith(elem, nodeCandidates);\n        if (nodeMatches.contextForms.length > 0) {\n            return Optional.some({ elem, toolbars: [nodeMatches.contextForms[0]] });\n        }\n        else {\n            const editorMatches = matchTargetWith(elem, editorCandidates);\n            if (editorMatches.contextForms.length > 0) {\n                return Optional.some({ elem, toolbars: [editorMatches.contextForms[0]] });\n            }\n            else if (nodeMatches.contextToolbars.length > 0 || editorMatches.contextToolbars.length > 0) {\n                const toolbars = filterByPositionForStartNode(nodeMatches.contextToolbars.concat(editorMatches.contextToolbars));\n                return Optional.some({ elem, toolbars });\n            }\n            else {\n                return Optional.none();\n            }\n        }\n    };\n    const matchAncestor = (isRoot, startNode, scopes) => {\n        // Don't continue to traverse if the start node is the root node\n        if (isRoot(startNode)) {\n            return Optional.none();\n        }\n        else {\n            return ancestor(startNode, (ancestorElem) => {\n                if (isElement$1(ancestorElem)) {\n                    const { contextToolbars, contextForms } = matchTargetWith(ancestorElem, scopes.inNodeScope);\n                    const toolbars = contextForms.length > 0 ? contextForms : filterByPositionForAncestorNode(contextToolbars);\n                    return toolbars.length > 0 ? Optional.some({ elem: ancestorElem, toolbars }) : Optional.none();\n                }\n                else {\n                    return Optional.none();\n                }\n            }, isRoot);\n        }\n    };\n    const lookup$1 = (scopes, editor) => {\n        const rootElem = SugarElement.fromDom(editor.getBody());\n        const isRoot = (elem) => eq(elem, rootElem);\n        const isOutsideRoot = (startNode) => !isRoot(startNode) && !contains(rootElem, startNode);\n        const startNode = SugarElement.fromDom(editor.selection.getNode());\n        // Ensure the lookup doesn't start on a parent or sibling element of the root node\n        if (isOutsideRoot(startNode)) {\n            return Optional.none();\n        }\n        return matchStartNode(startNode, scopes.inNodeScope, scopes.inEditorScope).orThunk(() => matchAncestor(isRoot, startNode, scopes));\n    };\n\n    const categorise = (contextToolbars, navigate) => {\n        // TODO: Use foldl/foldr and avoid as much mutation.\n        const forms = {};\n        const inNodeScope = [];\n        const inEditorScope = [];\n        const formNavigators = {};\n        const lookupTable = {};\n        const registerForm = (key, toolbarSpec) => {\n            const contextForm = getOrDie(createContextForm(toolbarSpec));\n            forms[key] = contextForm;\n            contextForm.launch.map((launch) => {\n                // Use the original here (pre-boulder), because using as a the spec for toolbar buttons\n                formNavigators['form:' + key + ''] = {\n                    ...toolbarSpec.launch,\n                    type: (launch.type === 'contextformtogglebutton' ? 'togglebutton' : 'button'),\n                    onAction: () => {\n                        navigate(contextForm);\n                    }\n                };\n            });\n            if (contextForm.scope === 'editor') {\n                inEditorScope.push(contextForm);\n            }\n            else {\n                inNodeScope.push(contextForm);\n            }\n            lookupTable[key] = contextForm;\n        };\n        const registerToolbar = (key, toolbarSpec) => {\n            createContextToolbar(toolbarSpec).each((contextToolbar) => {\n                if (contextToolbar.launch.isSome()) {\n                    formNavigators['toolbar:' + key + ''] = {\n                        ...toolbarSpec.launch,\n                        type: 'button',\n                        onAction: () => {\n                            navigate(contextToolbar);\n                        }\n                    };\n                }\n                if (toolbarSpec.scope === 'editor') {\n                    inEditorScope.push(contextToolbar);\n                }\n                else {\n                    inNodeScope.push(contextToolbar);\n                }\n                lookupTable[key] = contextToolbar;\n            });\n        };\n        const keys$1 = keys(contextToolbars);\n        each$1(keys$1, (key) => {\n            const toolbarApi = contextToolbars[key];\n            if (toolbarApi.type === 'contextform' || toolbarApi.type === 'contextsliderform' || toolbarApi.type === 'contextsizeinputform') {\n                registerForm(key, toolbarApi);\n            }\n            else if (toolbarApi.type === 'contexttoolbar') {\n                registerToolbar(key, toolbarApi);\n            }\n        });\n        return {\n            forms,\n            inNodeScope,\n            inEditorScope,\n            lookupTable,\n            formNavigators\n        };\n    };\n\n    const transitionClass = 'tox-pop--transition';\n    const isToolbarActionKey = (keyCode) => keyCode === global$1.ENTER || keyCode === global$1.SPACEBAR;\n    const register$a = (editor, registryContextToolbars, sink, extras) => {\n        const backstage = extras.backstage;\n        const sharedBackstage = backstage.shared;\n        const isTouch = detect$1().deviceType.isTouch;\n        const lastElement = value$2();\n        const lastTrigger = value$2();\n        const lastContextPosition = value$2();\n        const contextToolbarResult = renderContextToolbar({\n            sink,\n            onEscape: () => {\n                editor.focus();\n                fireContextToolbarClose(editor);\n                return Optional.some(true);\n            },\n            onHide: () => {\n                fireContextToolbarClose(editor);\n            },\n            onBack: () => {\n                fireContextFormSlideBack(editor);\n            }\n        });\n        const contextbar = build$1(contextToolbarResult.sketch);\n        const getBounds = () => {\n            const position = lastContextPosition.get().getOr('node');\n            // Use a 1px margin for the bounds to keep the context toolbar from butting directly against\n            // the header, etc... when switching to inset layouts\n            const margin = shouldUseInsetLayouts(position) ? 1 : 0;\n            return getContextToolbarBounds(editor, sharedBackstage, position, margin);\n        };\n        const canLaunchToolbar = () => {\n            // If a mobile context menu is open, don't launch else they'll probably overlap. For android, specifically.\n            return !editor.removed && !(isTouch() && backstage.isContextMenuOpen());\n        };\n        const isSameLaunchElement = (elem) => is$1(lift2(elem, lastElement.get(), eq), true);\n        const shouldContextToolbarHide = () => {\n            if (!canLaunchToolbar()) {\n                return true;\n            }\n            else {\n                const contextToolbarBounds = getBounds();\n                // Get the anchor bounds. For node anchors we should always try to use the last element bounds\n                const anchorBounds = is$1(lastContextPosition.get(), 'node') ?\n                    getAnchorElementBounds(editor, lastElement.get()) :\n                    getSelectionBounds(editor);\n                // If the anchor bounds aren't overlapping with the context toolbar bounds, then the context toolbar\n                // should hide. We want the threshold to require some overlap here (+.01), so that as soon as the\n                // anchor is off-screen, the context toolbar disappers.\n                return contextToolbarBounds.height <= 0 || !isVerticalOverlap(anchorBounds, contextToolbarBounds, 0.01);\n            }\n        };\n        const close = () => {\n            lastElement.clear();\n            lastTrigger.clear();\n            lastContextPosition.clear();\n            InlineView.hide(contextbar);\n        };\n        const hideOrRepositionIfNecessary = () => {\n            if (InlineView.isOpen(contextbar)) {\n                const contextBarEle = contextbar.element;\n                remove$6(contextBarEle, 'display');\n                if (shouldContextToolbarHide()) {\n                    set$7(contextBarEle, 'display', 'none');\n                }\n                else {\n                    lastTrigger.set(0 /* TriggerCause.Reposition */);\n                    InlineView.reposition(contextbar);\n                }\n            }\n        };\n        const wrapInPopDialog = (toolbarSpec) => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-pop__dialog']\n            },\n            components: [toolbarSpec],\n            behaviours: derive$1([\n                Keying.config({\n                    mode: 'acyclic'\n                }),\n                config('pop-dialog-wrap-events', [\n                    runOnAttached((comp) => {\n                        editor.shortcuts.add('ctrl+F9', 'focus statusbar', () => Keying.focusIn(comp));\n                    }),\n                    runOnDetached((_comp) => {\n                        editor.shortcuts.remove('ctrl+F9');\n                    })\n                ])\n            ])\n        });\n        const navigate = (toolbarApi) => {\n            // ASSUMPTION: This should only ever show one context toolbar since it's used for context forms hence [toolbarApi]\n            const alloySpec = buildToolbar([toolbarApi]);\n            emitWith(contextbar, forwardSlideEvent, {\n                forwardContents: wrapInPopDialog(alloySpec)\n            });\n        };\n        const getScopes = cached(() => categorise(registryContextToolbars, navigate));\n        const buildContextToolbarGroups = (allButtons, ctx) => {\n            return identifyButtons(editor, { buttons: allButtons, toolbar: ctx.items, allowToolbarGroups: false }, extras.backstage, Optional.some(['form:', 'toolbar:']));\n        };\n        const buildContextFormGroups = (ctx, providers) => ContextForm.buildInitGroups(ctx, providers);\n        const buildToolbar = (toolbars) => {\n            const { buttons } = editor.ui.registry.getAll();\n            const scopes = getScopes();\n            const allButtons = { ...buttons, ...scopes.formNavigators };\n            // For context toolbars we don't want to use floating or sliding, so just restrict this\n            // to scrolling or wrapping (default)\n            const toolbarType = getToolbarMode(editor) === ToolbarMode$1.scrolling ? ToolbarMode$1.scrolling : ToolbarMode$1.default;\n            const initGroups = flatten(map$2(toolbars, (ctx) => ctx.type === 'contexttoolbar' ? buildContextToolbarGroups(allButtons, contextToolbarToSpec(ctx)) : buildContextFormGroups(ctx, sharedBackstage.providers)));\n            return renderToolbar({\n                type: toolbarType,\n                uid: generate$6('context-toolbar'),\n                initGroups,\n                onEscape: Optional.none,\n                cyclicKeying: true,\n                providers: sharedBackstage.providers\n            });\n        };\n        const getAnchor = (position, element) => {\n            const anchorage = position === 'node' ? sharedBackstage.anchors.node(element) : sharedBackstage.anchors.cursor();\n            const anchorLayout = getAnchorLayout(editor, position, isTouch(), {\n                lastElement: lastElement.get,\n                isReposition: () => is$1(lastTrigger.get(), 0 /* TriggerCause.Reposition */),\n                getMode: () => Positioning.getMode(sink)\n            });\n            return deepMerge(anchorage, anchorLayout);\n        };\n        const launchContext = (toolbarApi, elem) => {\n            launchContextToolbar.cancel();\n            // Don't launch if the editor has something else open that would conflict\n            if (!canLaunchToolbar()) {\n                return;\n            }\n            const toolbarSpec = buildToolbar(toolbarApi);\n            // TINY-4495 ASSUMPTION: Can only do toolbarApi[0].position because ContextToolbarLookup.filterToolbarsByPosition\n            // ensures all toolbars returned by ContextToolbarLookup have the same position.\n            // And everything else that gets toolbars from elsewhere only returns maximum 1 toolbar\n            const position = toolbarApi[0].position;\n            const anchor = getAnchor(position, elem);\n            lastContextPosition.set(position);\n            lastTrigger.set(1 /* TriggerCause.NewAnchor */);\n            const contextBarEle = contextbar.element;\n            remove$6(contextBarEle, 'display');\n            // Reset placement and transitions when moving to different elements\n            if (!isSameLaunchElement(elem)) {\n                remove$3(contextBarEle, transitionClass);\n                Positioning.reset(sink, contextbar);\n            }\n            // Place the element\n            InlineView.showWithinBounds(contextbar, wrapInPopDialog(toolbarSpec), {\n                anchor,\n                transition: {\n                    classes: [transitionClass],\n                    mode: 'placement'\n                }\n            }, () => Optional.some(getBounds()));\n            // IMPORTANT: This must be stored after the initial render, otherwise the lookup of the last element in the\n            // anchor placement will be incorrect as it'll reuse the new element as the anchor point.\n            elem.fold(lastElement.clear, lastElement.set);\n            // It's possible we may have launched offscreen, if so then hide\n            if (shouldContextToolbarHide()) {\n                set$7(contextBarEle, 'display', 'none');\n            }\n        };\n        const instantReposition = () => {\n            // Sometimes when we reposition the toolbar it might be in a transitioning state and\n            // if we try to reposition while that happens the computed position/width will be incorrect.\n            set$7(contextbar.element, 'transition', 'none');\n            hideOrRepositionIfNecessary();\n            remove$6(contextbar.element, 'transition');\n        };\n        let isDragging = false;\n        const launchContextToolbar = last(() => {\n            // Don't launch if the editor doesn't have focus or has been destroyed\n            if (!editor.hasFocus() || editor.removed || isDragging) {\n                return;\n            }\n            // If currently transitioning then throttle again so we don't interrupt the transition\n            if (has(contextbar.element, transitionClass)) {\n                launchContextToolbar.throttle();\n            }\n            else {\n                const scopes = getScopes();\n                lookup$1(scopes, editor).fold(close, (info) => {\n                    launchContext(info.toolbars, Optional.some(info.elem));\n                });\n            }\n        }, 17); // 17ms is used as that's about 1 frame at 60fps\n        editor.on('init', () => {\n            editor.on('remove', close);\n            editor.on('ScrollContent ScrollWindow ObjectResized ResizeEditor longpress', hideOrRepositionIfNecessary);\n            // FIX: Make it go away when the action makes it go away. E.g. deleting a column deletes the table.\n            editor.on('click focus SetContent', launchContextToolbar.throttle);\n            editor.on('keyup', (e) => {\n                // If you use keyboard to press a button in a subtoolbar then the keyup will happen inside the editor and that should not re-render the toolbar\n                if (!isToolbarActionKey(e.keyCode) || !contextToolbarResult.inSubtoolbar()) {\n                    launchContextToolbar.throttle();\n                }\n            });\n            editor.on(hideContextToolbarEvent, close);\n            editor.on(showContextToolbarEvent, (e) => {\n                const scopes = getScopes();\n                // TODO: Have this stored in a better structure\n                get$h(scopes.lookupTable, e.toolbarKey).each((ctx) => {\n                    // ASSUMPTION: this is only used to open one specific toolbar at a time, hence [ctx]\n                    launchContext([ctx], someIf(e.target !== editor, e.target));\n                    focusIn(contextbar);\n                });\n            });\n            editor.on('focusout', (_e) => {\n                global$a.setEditorTimeout(editor, () => {\n                    if (search(sink.element).isNone() && search(contextbar.element).isNone() && !editor.hasFocus()) {\n                        close();\n                    }\n                }, 0);\n            });\n            editor.on('SwitchMode', () => {\n                if (editor.mode.isReadOnly()) {\n                    close();\n                }\n            });\n            editor.on('DisabledStateChange', (e) => {\n                if (e.state) {\n                    close();\n                }\n            });\n            // TINY-10640: Firefox was flaking in tests and was not properly dismissing the toolbar could not reproduce it manually but adding this seems to resolve it.\n            editor.on('ExecCommand', ({ command }) => {\n                if (command.toLowerCase() === 'toggleview') {\n                    close();\n                }\n            });\n            editor.on('AfterProgressState', (event) => {\n                if (event.state) {\n                    close();\n                }\n                else if (editor.hasFocus()) {\n                    launchContextToolbar.throttle();\n                }\n            });\n            editor.on('dragstart', () => {\n                isDragging = true;\n            });\n            editor.on('dragend drop', () => {\n                isDragging = false;\n            });\n            editor.on('NodeChange', (_e) => {\n                if (!contextToolbarResult.inSubtoolbar()) {\n                    search(contextbar.element).fold(launchContextToolbar.throttle, noop);\n                }\n                else {\n                    instantReposition();\n                }\n            });\n        });\n    };\n\n    const register$9 = (editor) => {\n        const alignToolbarButtons = [\n            { name: 'alignleft', text: 'Align left', cmd: 'JustifyLeft', icon: 'align-left' },\n            { name: 'aligncenter', text: 'Align center', cmd: 'JustifyCenter', icon: 'align-center' },\n            { name: 'alignright', text: 'Align right', cmd: 'JustifyRight', icon: 'align-right' },\n            { name: 'alignjustify', text: 'Justify', cmd: 'JustifyFull', icon: 'align-justify' }\n        ];\n        each$1(alignToolbarButtons, (item) => {\n            editor.ui.registry.addToggleButton(item.name, {\n                tooltip: item.text,\n                icon: item.icon,\n                onAction: onActionExecCommand(editor, item.cmd),\n                onSetup: onSetupStateToggle(editor, item.name)\n            });\n        });\n        editor.ui.registry.addButton('alignnone', {\n            tooltip: 'No alignment',\n            icon: 'align-none',\n            onSetup: onSetupEditableToggle(editor),\n            onAction: onActionExecCommand(editor, 'JustifyNone')\n        });\n    };\n\n    const registerController = (editor, spec) => {\n        const getMenuItems = () => {\n            const options = spec.getOptions(editor);\n            const initial = spec.getCurrent(editor).map(spec.hash);\n            const current = value$2();\n            return map$2(options, (value) => ({\n                type: 'togglemenuitem',\n                text: spec.display(value),\n                onSetup: (api) => {\n                    const setActive = (active) => {\n                        if (active) {\n                            current.on((oldApi) => oldApi.setActive(false));\n                            current.set(api);\n                        }\n                        api.setActive(active);\n                    };\n                    setActive(is$1(initial, spec.hash(value)));\n                    const unbindWatcher = spec.watcher(editor, value, setActive);\n                    return () => {\n                        current.clear();\n                        unbindWatcher();\n                    };\n                },\n                onAction: () => spec.setCurrent(editor, value)\n            }));\n        };\n        editor.ui.registry.addMenuButton(spec.name, {\n            tooltip: spec.text,\n            icon: spec.icon,\n            fetch: (callback) => callback(getMenuItems()),\n            onSetup: spec.onToolbarSetup\n        });\n        editor.ui.registry.addNestedMenuItem(spec.name, {\n            type: 'nestedmenuitem',\n            text: spec.text,\n            getSubmenuItems: getMenuItems,\n            onSetup: spec.onMenuSetup\n        });\n    };\n    const lineHeightSpec = (editor) => ({\n        name: 'lineheight',\n        text: 'Line height',\n        icon: 'line-height',\n        getOptions: getLineHeightFormats,\n        hash: (input) => normalise(input, ['fixed', 'relative', 'empty']).getOr(input),\n        display: identity,\n        watcher: (editor, value, callback) => editor.formatter.formatChanged('lineheight', callback, false, { value }).unbind,\n        getCurrent: (editor) => Optional.from(editor.queryCommandValue('LineHeight')),\n        setCurrent: (editor, value) => editor.execCommand('LineHeight', false, value),\n        onToolbarSetup: onSetupEditableToggle(editor),\n        onMenuSetup: onSetupEditableToggle(editor)\n    });\n    const languageSpec = (editor) => {\n        const settingsOpt = Optional.from(getContentLanguages(editor));\n        return settingsOpt.map((settings) => ({\n            name: 'language',\n            text: 'Language',\n            icon: 'language',\n            getOptions: constant$1(settings),\n            hash: (input) => isUndefined(input.customCode) ? input.code : `${input.code}/${input.customCode}`,\n            display: (input) => input.title,\n            watcher: (editor, value, callback) => { var _a; return editor.formatter.formatChanged('lang', callback, false, { value: value.code, customValue: (_a = value.customCode) !== null && _a !== void 0 ? _a : null }).unbind; },\n            getCurrent: (editor) => {\n                const node = SugarElement.fromDom(editor.selection.getNode());\n                return closest(node, (n) => Optional.some(n)\n                    .filter(isElement$1)\n                    .bind((ele) => {\n                    const codeOpt = getOpt(ele, 'lang');\n                    return codeOpt.map((code) => {\n                        const customCode = getOpt(ele, 'data-mce-lang').getOrUndefined();\n                        return { code, customCode, title: '' };\n                    });\n                }));\n            },\n            setCurrent: (editor, lang) => editor.execCommand('Lang', false, lang),\n            onToolbarSetup: (api) => {\n                const unbinder = unbindable();\n                api.setActive(editor.formatter.match('lang', {}, undefined, true));\n                unbinder.set(editor.formatter.formatChanged('lang', api.setActive, true));\n                return composeUnbinders(unbinder.clear, onSetupEditableToggle(editor)(api));\n            },\n            onMenuSetup: onSetupEditableToggle(editor)\n        }));\n    };\n    const register$8 = (editor) => {\n        registerController(editor, lineHeightSpec(editor));\n        languageSpec(editor).each((spec) => registerController(editor, spec));\n    };\n\n    const register$7 = (editor, backstage) => {\n        createAlignMenu(editor, backstage);\n        createFontFamilyMenu(editor, backstage);\n        createStylesMenu(editor, backstage);\n        createBlocksMenu(editor, backstage);\n        createFontSizeMenu(editor, backstage);\n    };\n\n    const register$6 = (editor) => {\n        editor.ui.registry.addContext('editable', () => {\n            return editor.selection.isEditable();\n        });\n        editor.ui.registry.addContext('mode', (mode) => {\n            return editor.mode.get() === mode;\n        });\n        editor.ui.registry.addContext('any', always);\n        editor.ui.registry.addContext('formatting', (format) => {\n            return editor.formatter.canApply(format);\n        });\n        editor.ui.registry.addContext('insert', (child) => {\n            return editor.schema.isValidChild(editor.selection.getNode().tagName, child);\n        });\n    };\n\n    const onSetupOutdentState = (editor) => onSetupEvent(editor, 'NodeChange', (api) => {\n        api.setEnabled(editor.queryCommandState('outdent') && editor.selection.isEditable());\n    });\n    const registerButtons$2 = (editor) => {\n        editor.ui.registry.addButton('outdent', {\n            tooltip: 'Decrease indent',\n            icon: 'outdent',\n            onSetup: onSetupOutdentState(editor),\n            onAction: onActionExecCommand(editor, 'outdent')\n        });\n        editor.ui.registry.addButton('indent', {\n            tooltip: 'Increase indent',\n            icon: 'indent',\n            onSetup: onSetupEditableToggle(editor),\n            onAction: onActionExecCommand(editor, 'indent')\n        });\n    };\n    const register$5 = (editor) => {\n        registerButtons$2(editor);\n    };\n\n    const makeSetupHandler = (editor, pasteAsText) => (api) => {\n        api.setActive(pasteAsText.get());\n        const pastePlainTextToggleHandler = (e) => {\n            pasteAsText.set(e.state);\n            api.setActive(e.state);\n        };\n        editor.on('PastePlainTextToggle', pastePlainTextToggleHandler);\n        return composeUnbinders(() => editor.off('PastePlainTextToggle', pastePlainTextToggleHandler), onSetupEditableToggle(editor)(api));\n    };\n    const register$4 = (editor) => {\n        const pasteAsText = Cell(getPasteAsText(editor));\n        const onAction = () => editor.execCommand('mceTogglePlainTextPaste');\n        editor.ui.registry.addToggleButton('pastetext', {\n            active: false,\n            icon: 'paste-text',\n            tooltip: 'Paste as text',\n            onAction,\n            onSetup: makeSetupHandler(editor, pasteAsText)\n        });\n        editor.ui.registry.addToggleMenuItem('pastetext', {\n            text: 'Paste as text',\n            icon: 'paste-text',\n            onAction,\n            onSetup: makeSetupHandler(editor, pasteAsText)\n        });\n    };\n\n    const onActionToggleFormat = (editor, fmt) => () => {\n        editor.execCommand('mceToggleFormat', false, fmt);\n    };\n    const registerFormatButtons = (editor) => {\n        global$2.each([\n            { name: 'bold', text: 'Bold', icon: 'bold', shortcut: 'Meta+B' },\n            { name: 'italic', text: 'Italic', icon: 'italic', shortcut: 'Meta+I' },\n            { name: 'underline', text: 'Underline', icon: 'underline', shortcut: 'Meta+U' },\n            { name: 'strikethrough', text: 'Strikethrough', icon: 'strike-through' },\n            { name: 'subscript', text: 'Subscript', icon: 'subscript' },\n            { name: 'superscript', text: 'Superscript', icon: 'superscript' }\n        ], (btn, _idx) => {\n            editor.ui.registry.addToggleButton(btn.name, {\n                tooltip: btn.text,\n                icon: btn.icon,\n                onSetup: onSetupStateToggle(editor, btn.name),\n                onAction: onActionToggleFormat(editor, btn.name),\n                shortcut: btn.shortcut\n            });\n        });\n        for (let i = 1; i <= 6; i++) {\n            const name = 'h' + i;\n            const shortcut = `Access+${i}`;\n            editor.ui.registry.addToggleButton(name, {\n                text: name.toUpperCase(),\n                tooltip: 'Heading ' + i,\n                onSetup: onSetupStateToggle(editor, name),\n                onAction: onActionToggleFormat(editor, name),\n                shortcut\n            });\n        }\n    };\n    const registerCommandButtons = (editor) => {\n        global$2.each([\n            { name: 'copy', text: 'Copy', action: 'Copy', icon: 'copy', context: 'any' },\n            { name: 'help', text: 'Help', action: 'mceHelp', icon: 'help', shortcut: 'Alt+0', context: 'any' },\n            { name: 'selectall', text: 'Select all', action: 'SelectAll', icon: 'select-all', shortcut: 'Meta+A', context: 'any' },\n            { name: 'newdocument', text: 'New document', action: 'mceNewDocument', icon: 'new-document' },\n            { name: 'print', text: 'Print', action: 'mcePrint', icon: 'print', shortcut: 'Meta+P', context: 'any' },\n        ], (btn) => {\n            editor.ui.registry.addButton(btn.name, {\n                tooltip: btn.text,\n                icon: btn.icon,\n                onAction: onActionExecCommand(editor, btn.action),\n                shortcut: btn.shortcut,\n                context: btn.context\n            });\n        });\n        global$2.each([\n            { name: 'cut', text: 'Cut', action: 'Cut', icon: 'cut' },\n            { name: 'paste', text: 'Paste', action: 'Paste', icon: 'paste' },\n            // visualaid was here but also exists in VisualAid.ts?\n            { name: 'removeformat', text: 'Clear formatting', action: 'RemoveFormat', icon: 'remove-formatting' },\n            { name: 'remove', text: 'Remove', action: 'Delete', icon: 'remove' },\n            { name: 'hr', text: 'Horizontal line', action: 'InsertHorizontalRule', icon: 'horizontal-rule' }\n        ], (btn) => {\n            editor.ui.registry.addButton(btn.name, {\n                tooltip: btn.text,\n                icon: btn.icon,\n                onSetup: onSetupEditableToggle(editor),\n                onAction: onActionExecCommand(editor, btn.action)\n            });\n        });\n    };\n    const registerCommandToggleButtons = (editor) => {\n        global$2.each([\n            { name: 'blockquote', text: 'Blockquote', action: 'mceBlockQuote', icon: 'quote' }\n        ], (btn) => {\n            editor.ui.registry.addToggleButton(btn.name, {\n                tooltip: btn.text,\n                icon: btn.icon,\n                onAction: onActionExecCommand(editor, btn.action),\n                onSetup: onSetupStateToggle(editor, btn.name)\n            });\n        });\n    };\n    const registerButtons$1 = (editor) => {\n        registerFormatButtons(editor);\n        registerCommandButtons(editor);\n        registerCommandToggleButtons(editor);\n    };\n    const registerMenuItems$2 = (editor) => {\n        global$2.each([\n            { name: 'newdocument', text: 'New document', action: 'mceNewDocument', icon: 'new-document' },\n            { name: 'copy', text: 'Copy', action: 'Copy', icon: 'copy', shortcut: 'Meta+C', context: 'any' },\n            { name: 'selectall', text: 'Select all', action: 'SelectAll', icon: 'select-all', shortcut: 'Meta+A', context: 'any' },\n            { name: 'print', text: 'Print...', action: 'mcePrint', icon: 'print', shortcut: 'Meta+P', context: 'any' }\n        ], (menuitem) => {\n            editor.ui.registry.addMenuItem(menuitem.name, {\n                text: menuitem.text,\n                icon: menuitem.icon,\n                shortcut: menuitem.shortcut,\n                onAction: onActionExecCommand(editor, menuitem.action),\n                context: menuitem.context\n            });\n        });\n        global$2.each([\n            { name: 'bold', text: 'Bold', action: 'Bold', icon: 'bold', shortcut: 'Meta+B' },\n            { name: 'italic', text: 'Italic', action: 'Italic', icon: 'italic', shortcut: 'Meta+I' },\n            { name: 'underline', text: 'Underline', action: 'Underline', icon: 'underline', shortcut: 'Meta+U' },\n            { name: 'strikethrough', text: 'Strikethrough', action: 'Strikethrough', icon: 'strike-through' },\n            { name: 'subscript', text: 'Subscript', action: 'Subscript', icon: 'subscript' },\n            { name: 'superscript', text: 'Superscript', action: 'Superscript', icon: 'superscript' },\n            { name: 'removeformat', text: 'Clear formatting', action: 'RemoveFormat', icon: 'remove-formatting' },\n            { name: 'cut', text: 'Cut', action: 'Cut', icon: 'cut', shortcut: 'Meta+X' },\n            { name: 'paste', text: 'Paste', action: 'Paste', icon: 'paste', shortcut: 'Meta+V' },\n            { name: 'hr', text: 'Horizontal line', action: 'InsertHorizontalRule', icon: 'horizontal-rule' }\n        ], (menuitem) => {\n            editor.ui.registry.addMenuItem(menuitem.name, {\n                text: menuitem.text,\n                icon: menuitem.icon,\n                shortcut: menuitem.shortcut,\n                onSetup: onSetupEditableToggle(editor),\n                onAction: onActionExecCommand(editor, menuitem.action)\n            });\n        });\n        editor.ui.registry.addMenuItem('codeformat', {\n            text: 'Code',\n            icon: 'sourcecode',\n            onSetup: onSetupEditableToggle(editor),\n            onAction: onActionToggleFormat(editor, 'code')\n        });\n    };\n    const register$3 = (editor) => {\n        registerButtons$1(editor);\n        registerMenuItems$2(editor);\n    };\n\n    const onSetupUndoRedoState = (editor, type) => onSetupEvent(editor, 'Undo Redo AddUndo TypingUndo ClearUndos SwitchMode', (api) => {\n        api.setEnabled(!editor.mode.isReadOnly() && editor.undoManager[type]());\n    });\n    const registerMenuItems$1 = (editor) => {\n        editor.ui.registry.addMenuItem('undo', {\n            text: 'Undo',\n            icon: 'undo',\n            shortcut: 'Meta+Z',\n            onSetup: onSetupUndoRedoState(editor, 'hasUndo'),\n            onAction: onActionExecCommand(editor, 'undo')\n        });\n        editor.ui.registry.addMenuItem('redo', {\n            text: 'Redo',\n            icon: 'redo',\n            shortcut: 'Meta+Y',\n            onSetup: onSetupUndoRedoState(editor, 'hasRedo'),\n            onAction: onActionExecCommand(editor, 'redo')\n        });\n    };\n    // Note: The undo/redo buttons are disabled by default here, as they'll be rendered\n    // on init generally and it won't have any undo levels at that stage.\n    const registerButtons = (editor) => {\n        editor.ui.registry.addButton('undo', {\n            tooltip: 'Undo',\n            icon: 'undo',\n            enabled: false,\n            onSetup: onSetupUndoRedoState(editor, 'hasUndo'),\n            onAction: onActionExecCommand(editor, 'undo'),\n            shortcut: 'Meta+Z'\n        });\n        editor.ui.registry.addButton('redo', {\n            tooltip: 'Redo',\n            icon: 'redo',\n            enabled: false,\n            onSetup: onSetupUndoRedoState(editor, 'hasRedo'),\n            onAction: onActionExecCommand(editor, 'redo'),\n            shortcut: 'Meta+Y'\n        });\n    };\n    const register$2 = (editor) => {\n        registerMenuItems$1(editor);\n        registerButtons(editor);\n    };\n\n    const onSetupVisualAidState = (editor) => onSetupEvent(editor, 'VisualAid', (api) => {\n        api.setActive(editor.hasVisual);\n    });\n    const registerMenuItems = (editor) => {\n        editor.ui.registry.addToggleMenuItem('visualaid', {\n            text: 'Visual aids',\n            onSetup: onSetupVisualAidState(editor),\n            onAction: onActionExecCommand(editor, 'mceToggleVisualAid'),\n            context: 'any'\n        });\n    };\n    const registerToolbarButton = (editor) => {\n        editor.ui.registry.addButton('visualaid', {\n            tooltip: 'Visual aids',\n            text: 'Visual aids',\n            onAction: onActionExecCommand(editor, 'mceToggleVisualAid'),\n            context: 'any'\n        });\n    };\n    const register$1 = (editor) => {\n        registerToolbarButton(editor);\n        registerMenuItems(editor);\n    };\n\n    const setup$6 = (editor, backstage) => {\n        register$9(editor);\n        register$3(editor);\n        register$7(editor, backstage);\n        register$2(editor);\n        register$d(editor);\n        register$1(editor);\n        register$5(editor);\n        register$8(editor);\n        register$4(editor);\n        register$6(editor);\n    };\n\n    const patchPipeConfig = (config) => isString(config) ? config.split(/[ ,]/) : config;\n    const option = (name) => (editor) => editor.options.get(name);\n    const register = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('contextmenu_avoid_overlap', {\n            processor: 'string',\n            default: ''\n        });\n        registerOption('contextmenu_never_use_native', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('contextmenu', {\n            processor: (value) => {\n                if (value === false) {\n                    return { value: [], valid: true };\n                }\n                else if (isString(value) || isArrayOf(value, isString)) {\n                    return { value: patchPipeConfig(value), valid: true };\n                }\n                else {\n                    return { valid: false, message: 'Must be false or a string.' };\n                }\n            },\n            default: 'link linkchecker image editimage table spellchecker configurepermanentpen'\n        });\n    };\n    const shouldNeverUseNative = option('contextmenu_never_use_native');\n    const getAvoidOverlapSelector = option('contextmenu_avoid_overlap');\n    const isContextMenuDisabled = (editor) => getContextMenu(editor).length === 0;\n    const getContextMenu = (editor) => {\n        const contextMenus = editor.ui.registry.getAll().contextMenus;\n        const contextMenu = editor.options.get('contextmenu');\n        if (editor.options.isSet('contextmenu')) {\n            return contextMenu;\n        }\n        else {\n            // Filter default context menu items when they are not in the registry (e.g. when the plugin is not loaded)\n            return filter$2(contextMenu, (item) => has$2(contextMenus, item));\n        }\n    };\n\n    const nu = (x, y) => ({\n        type: 'makeshift',\n        x,\n        y\n    });\n    const transpose = (pos, dx, dy) => {\n        return nu(pos.x + dx, pos.y + dy);\n    };\n    const isTouchEvent$1 = (e) => e.type === 'longpress' || e.type.indexOf('touch') === 0;\n    const fromPageXY = (e) => {\n        if (isTouchEvent$1(e)) {\n            const touch = e.touches[0];\n            return nu(touch.pageX, touch.pageY);\n        }\n        else {\n            return nu(e.pageX, e.pageY);\n        }\n    };\n    const fromClientXY = (e) => {\n        if (isTouchEvent$1(e)) {\n            const touch = e.touches[0];\n            return nu(touch.clientX, touch.clientY);\n        }\n        else {\n            return nu(e.clientX, e.clientY);\n        }\n    };\n    const transposeContentAreaContainer = (element, pos) => {\n        const containerPos = global$9.DOM.getPos(element);\n        return transpose(pos, containerPos.x, containerPos.y);\n    };\n    const getPointAnchor = (editor, e) => {\n        // If the contextmenu event is fired via the editor.dispatch() API or some other means, fall back to selection anchor\n        if (e.type === 'contextmenu' || e.type === 'longpress') {\n            if (editor.inline) {\n                return fromPageXY(e);\n            }\n            else {\n                return transposeContentAreaContainer(editor.getContentAreaContainer(), fromClientXY(e));\n            }\n        }\n        else {\n            return getSelectionAnchor(editor);\n        }\n    };\n    const getSelectionAnchor = (editor) => {\n        return {\n            type: 'selection',\n            root: SugarElement.fromDom(editor.selection.getNode())\n        };\n    };\n    const getNodeAnchor = (editor) => ({\n        type: 'node',\n        node: Optional.some(SugarElement.fromDom(editor.selection.getNode())),\n        root: SugarElement.fromDom(editor.getBody())\n    });\n    const getAnchorSpec$1 = (editor, e, anchorType) => {\n        switch (anchorType) {\n            case 'node':\n                return getNodeAnchor(editor);\n            case 'point':\n                return getPointAnchor(editor, e);\n            case 'selection':\n                return getSelectionAnchor(editor);\n        }\n    };\n\n    const initAndShow$1 = (editor, e, buildMenu, backstage, contextmenu, anchorType) => {\n        const items = buildMenu();\n        const anchorSpec = getAnchorSpec$1(editor, e, anchorType);\n        build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n            isHorizontalMenu: false,\n            search: Optional.none()\n        }).map((menuData) => {\n            e.preventDefault();\n            // show the context menu, with items set to close on click\n            InlineView.showMenuAt(contextmenu, { anchor: anchorSpec }, {\n                menu: {\n                    markers: markers('normal')\n                },\n                data: menuData\n            });\n        });\n    };\n\n    const layouts = {\n        onLtr: () => [south$2, southeast$2, southwest$2, northeast$2, northwest$2, north$2,\n            north$1, south$1, northeast$1, southeast$1, northwest$1, southwest$1],\n        onRtl: () => [south$2, southwest$2, southeast$2, northwest$2, northeast$2, north$2,\n            north$1, south$1, northwest$1, southwest$1, northeast$1, southeast$1]\n    };\n    const bubbleSize = 12;\n    const bubbleAlignments = {\n        valignCentre: [],\n        alignCentre: [],\n        alignLeft: ['tox-pop--align-left'],\n        alignRight: ['tox-pop--align-right'],\n        right: ['tox-pop--right'],\n        left: ['tox-pop--left'],\n        bottom: ['tox-pop--bottom'],\n        top: ['tox-pop--top']\n    };\n    const isTouchWithinSelection = (editor, e) => {\n        const selection = editor.selection;\n        if (selection.isCollapsed() || e.touches.length < 1) {\n            return false;\n        }\n        else {\n            const touch = e.touches[0];\n            const rng = selection.getRng();\n            const rngRectOpt = getFirstRect(editor.getWin(), SimSelection.domRange(rng));\n            return rngRectOpt.exists((rngRect) => rngRect.left <= touch.clientX &&\n                rngRect.right >= touch.clientX &&\n                rngRect.top <= touch.clientY &&\n                rngRect.bottom >= touch.clientY);\n        }\n    };\n    const setupiOSOverrides = (editor) => {\n        // iOS will change the selection due to longpress also being a range selection gesture. As such we\n        // need to reset the selection back to the original selection after the touchend event has fired\n        const originalSelection = editor.selection.getRng();\n        const selectionReset = () => {\n            global$a.setEditorTimeout(editor, () => {\n                editor.selection.setRng(originalSelection);\n            }, 10);\n            unbindEventListeners();\n        };\n        editor.once('touchend', selectionReset);\n        // iPadOS will trigger a mousedown after the longpress which will close open context menus\n        // so we want to prevent that from running\n        const preventMousedown = (e) => {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        };\n        editor.on('mousedown', preventMousedown, true);\n        // If a longpresscancel is fired, then a touchmove has occurred so we shouldn't do any overrides\n        const clearSelectionReset = () => unbindEventListeners();\n        editor.once('longpresscancel', clearSelectionReset);\n        const unbindEventListeners = () => {\n            editor.off('touchend', selectionReset);\n            editor.off('longpresscancel', clearSelectionReset);\n            editor.off('mousedown', preventMousedown);\n        };\n    };\n    const getAnchorSpec = (editor, e, anchorType) => {\n        const anchorSpec = getAnchorSpec$1(editor, e, anchorType);\n        const bubbleYOffset = anchorType === 'point' ? bubbleSize : 0;\n        return {\n            bubble: nu$6(0, bubbleYOffset, bubbleAlignments),\n            layouts,\n            overrides: {\n                maxWidthFunction: expandable(),\n                maxHeightFunction: expandable$1()\n            },\n            ...anchorSpec\n        };\n    };\n    const show = (editor, e, items, backstage, contextmenu, anchorType, highlightImmediately) => {\n        const anchorSpec = getAnchorSpec(editor, e, anchorType);\n        build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n            // MobileContextMenus are the *only* horizontal menus currently (2022-08-16)\n            isHorizontalMenu: true,\n            search: Optional.none()\n        }).map((menuData) => {\n            e.preventDefault();\n            // If we are highlighting immediately, then we want to highlight the menu\n            // and the item. Otherwise, we don't want to highlight anything.\n            const highlightOnOpen = highlightImmediately\n                ? HighlightOnOpen.HighlightMenuAndItem\n                : HighlightOnOpen.HighlightNone;\n            // Show the context menu, with items set to close on click\n            InlineView.showMenuWithinBounds(contextmenu, { anchor: anchorSpec }, {\n                menu: {\n                    markers: markers('normal'),\n                    highlightOnOpen\n                },\n                data: menuData,\n                type: 'horizontal'\n            }, () => Optional.some(getContextToolbarBounds(editor, backstage.shared, anchorType === 'node' ? 'node' : 'selection')));\n            // Ensure the context toolbar is hidden\n            editor.dispatch(hideContextToolbarEvent);\n        });\n    };\n    const initAndShow = (editor, e, buildMenu, backstage, contextmenu, anchorType) => {\n        const detection = detect$1();\n        const isiOS = detection.os.isiOS();\n        const isMacOS = detection.os.isMacOS();\n        const isAndroid = detection.os.isAndroid();\n        const isTouch = detection.deviceType.isTouch();\n        const shouldHighlightImmediately = () => !(isAndroid || isiOS || (isMacOS && isTouch));\n        const open = () => {\n            const items = buildMenu();\n            show(editor, e, items, backstage, contextmenu, anchorType, shouldHighlightImmediately());\n        };\n        // On iOS/iPadOS if we've long pressed on a ranged selection then we've already selected the content\n        // and just need to open the menu. Otherwise we need to wait for a selection change to occur as long\n        // press triggers a ranged selection on iOS.\n        if ((isMacOS || isiOS) && anchorType !== 'node') {\n            const openiOS = () => {\n                setupiOSOverrides(editor);\n                open();\n            };\n            if (isTouchWithinSelection(editor, e)) {\n                openiOS();\n            }\n            else {\n                editor.once('selectionchange', openiOS);\n                editor.once('touchend', () => editor.off('selectionchange', openiOS));\n            }\n        }\n        else {\n            open();\n        }\n    };\n\n    const isSeparator = (item) => isString(item) ? item === '|' : item.type === 'separator';\n    const separator = {\n        type: 'separator'\n    };\n    const makeContextItem = (item) => {\n        const commonMenuItem = (item) => ({\n            text: item.text,\n            icon: item.icon,\n            enabled: item.enabled,\n            shortcut: item.shortcut,\n        });\n        if (isString(item)) {\n            return item;\n        }\n        else {\n            switch (item.type) {\n                case 'separator':\n                    return separator;\n                case 'submenu':\n                    return {\n                        type: 'nestedmenuitem',\n                        ...commonMenuItem(item),\n                        getSubmenuItems: () => {\n                            const items = item.getSubmenuItems();\n                            if (isString(items)) {\n                                return items;\n                            }\n                            else {\n                                return map$2(items, makeContextItem);\n                            }\n                        }\n                    };\n                default:\n                    // case 'item', or anything else really\n                    const commonItem = item;\n                    return {\n                        type: 'menuitem',\n                        ...commonMenuItem(commonItem),\n                        // disconnect the function from the menu item API bridge defines\n                        onAction: noarg(commonItem.onAction)\n                    };\n            }\n        }\n    };\n    const addContextMenuGroup = (xs, groupItems) => {\n        // Skip if there are no items\n        if (groupItems.length === 0) {\n            return xs;\n        }\n        // Only add a separator at the beginning if the last item isn't a separator\n        const lastMenuItem = last$1(xs).filter((item) => !isSeparator(item));\n        const before = lastMenuItem.fold(() => [], (_) => [separator]);\n        return xs.concat(before).concat(groupItems).concat([separator]);\n    };\n    const generateContextMenu = (contextMenus, menuConfig, selectedElement) => {\n        const sections = foldl(menuConfig, (acc, name) => {\n            // Either read and convert the list of items out of the plugin, or assume it's a standard menu item reference\n            return get$h(contextMenus, name.toLowerCase()).map((menu) => {\n                const items = menu.update(selectedElement);\n                if (isString(items) && isNotEmpty(trim$1(items))) {\n                    return addContextMenuGroup(acc, items.split(' '));\n                }\n                else if (isArray(items) && items.length > 0) {\n                    // TODO: Should we add a StructureSchema check here?\n                    const allItems = map$2(items, makeContextItem);\n                    return addContextMenuGroup(acc, allItems);\n                }\n                else {\n                    return acc;\n                }\n            }).getOrThunk(() => acc.concat([name]));\n        }, []);\n        // Strip off any trailing separator\n        if (sections.length > 0 && isSeparator(sections[sections.length - 1])) {\n            sections.pop();\n        }\n        return sections;\n    };\n    const isNativeOverrideKeyEvent = (editor, e) => e.ctrlKey && !shouldNeverUseNative(editor);\n    const isTouchEvent = (e) => e.type === 'longpress' || has$2(e, 'touches');\n    const isTriggeredByKeyboard = (editor, e) => \n    // Different browsers trigger the context menu from keyboards differently, so need to check various different things here.\n    // If a longpress touch event, always treat it as a pointer event\n    // Chrome: button = 0, pointerType = undefined & target = the selection range node\n    // Firefox: button = 0, pointerType = undefined & target = body\n    // Safari: N/A (Mac's don't expose a contextmenu keyboard shortcut)\n    !isTouchEvent(e) && (e.button !== 2 || e.target === editor.getBody() && e.pointerType === '');\n    const getSelectedElement = (editor, e) => isTriggeredByKeyboard(editor, e) ? editor.selection.getStart(true) : e.target;\n    const getAnchorType = (editor, e) => {\n        const selector = getAvoidOverlapSelector(editor);\n        const anchorType = isTriggeredByKeyboard(editor, e) ? 'selection' : 'point';\n        if (isNotEmpty(selector)) {\n            const target = getSelectedElement(editor, e);\n            const selectorExists = closest$1(SugarElement.fromDom(target), selector);\n            return selectorExists ? 'node' : anchorType;\n        }\n        else {\n            return anchorType;\n        }\n    };\n    const setup$5 = (editor, lazySink, backstage) => {\n        const detection = detect$1();\n        const isTouch = detection.deviceType.isTouch;\n        const contextmenu = build$1(InlineView.sketch({\n            dom: {\n                tag: 'div'\n            },\n            lazySink,\n            onEscape: () => editor.focus(),\n            onShow: () => backstage.setContextMenuState(true),\n            onHide: () => backstage.setContextMenuState(false),\n            fireDismissalEventInstead: {},\n            inlineBehaviours: derive$1([\n                config('dismissContextMenu', [\n                    run$1(dismissRequested(), (comp, _se) => {\n                        Sandboxing.close(comp);\n                        editor.focus();\n                    })\n                ])\n            ])\n        }));\n        const hideContextMenu = () => InlineView.hide(contextmenu);\n        const showContextMenu = (e) => {\n            // Prevent the default if we should never use native\n            if (shouldNeverUseNative(editor)) {\n                e.preventDefault();\n            }\n            if (isNativeOverrideKeyEvent(editor, e) || isContextMenuDisabled(editor)) {\n                return;\n            }\n            const anchorType = getAnchorType(editor, e);\n            const buildMenu = () => {\n                // Use the event target element for touch events, otherwise fallback to the current selection\n                const selectedElement = getSelectedElement(editor, e);\n                const registry = editor.ui.registry.getAll();\n                const menuConfig = getContextMenu(editor);\n                return generateContextMenu(registry.contextMenus, menuConfig, selectedElement);\n            };\n            const initAndShow$2 = isTouch() ? initAndShow : initAndShow$1;\n            initAndShow$2(editor, e, buildMenu, backstage, contextmenu, anchorType);\n        };\n        editor.on('init', () => {\n            // Hide the context menu when scrolling or resizing\n            // Except ResizeWindow on mobile which fires when the keyboard appears/disappears\n            const hideEvents = 'ResizeEditor ScrollContent ScrollWindow longpresscancel' + (isTouch() ? '' : ' ResizeWindow');\n            editor.on(hideEvents, hideContextMenu);\n            editor.on('longpress contextmenu', showContextMenu);\n        });\n    };\n\n    const snapWidth = 40;\n    const snapOffset = snapWidth / 2;\n    // const insertDebugDiv = (left, top, width, height, color, clazz) => {\n    //   const debugArea = SugarElement.fromHtml(`<div class=\"${clazz}\"></div>`);\n    //   Css.setAll(debugArea, {\n    //     'left': left.toString() + 'px',\n    //     'top': top.toString() + 'px',\n    //     'background-color': color,\n    //     'position': 'absolute',\n    //     'width': width.toString() + 'px',\n    //     'height': height.toString() + 'px',\n    //     'opacity': '0.2'\n    //   });\n    //   Insert.append(SugarBody.body(), debugArea);\n    // };\n    const calcSnap = (selectorOpt, td, x, y, width, height) => selectorOpt.fold(() => Dragging.snap({\n        sensor: absolute$1(x - snapOffset, y - snapOffset),\n        range: SugarPosition(width, height),\n        output: absolute$1(Optional.some(x), Optional.some(y)),\n        extra: {\n            td\n        }\n    }), (selectorHandle) => {\n        const sensorLeft = x - snapOffset;\n        const sensorTop = y - snapOffset;\n        const sensorWidth = snapWidth; // box.width();\n        const sensorHeight = snapWidth; // box.height();\n        const rect = selectorHandle.element.dom.getBoundingClientRect();\n        // insertDebugDiv(sensorLeft, sensorTop, sensorWidth, sensorHeight, 'green', 'top-left-snap-debug');\n        return Dragging.snap({\n            sensor: absolute$1(sensorLeft, sensorTop),\n            range: SugarPosition(sensorWidth, sensorHeight),\n            output: absolute$1(Optional.some(x - (rect.width / 2)), Optional.some(y - (rect.height / 2))),\n            extra: {\n                td\n            }\n        });\n    });\n    const getSnapsConfig = (getSnapPoints, cell, onChange) => {\n        // Can't use Optional.is() here since we need to do a dom compare, not an equality compare\n        const isSameCell = (cellOpt, td) => cellOpt.exists((currentTd) => eq(currentTd, td));\n        return {\n            getSnapPoints,\n            leftAttr: 'data-drag-left',\n            topAttr: 'data-drag-top',\n            onSensor: (component, extra) => {\n                const td = extra.td;\n                if (!isSameCell(cell.get(), td)) {\n                    cell.set(td);\n                    onChange(td);\n                }\n            },\n            mustSnap: true\n        };\n    };\n    const createSelector = (snaps) => record(Button.sketch({\n        dom: {\n            tag: 'div',\n            classes: ['tox-selector']\n        },\n        buttonBehaviours: derive$1([\n            Dragging.config({\n                mode: 'mouseOrTouch',\n                blockerClass: 'blocker',\n                snaps\n            }),\n            Unselecting.config({})\n        ]),\n        eventOrder: {\n            // Because this is a button, allow dragging. It will stop clicking.\n            mousedown: ['dragging', 'alloy.base.behaviour'],\n            touchstart: ['dragging', 'alloy.base.behaviour']\n        }\n    }));\n    const setup$4 = (editor, sink) => {\n        const tlTds = Cell([]);\n        const brTds = Cell([]);\n        const isVisible = Cell(false);\n        const startCell = value$2();\n        const finishCell = value$2();\n        const getTopLeftSnap = (td) => {\n            const box = absolute$2(td);\n            return calcSnap(memTopLeft.getOpt(sink), td, box.x, box.y, box.width, box.height);\n        };\n        const getTopLeftSnaps = () => \n        // const body = SugarBody.body();\n        // const debugs = SelectorFilter.descendants(body, '.top-left-snap-debug');\n        // Arr.each(debugs, (debugArea) => {\n        //   Remove.remove(debugArea);\n        // });\n        map$2(tlTds.get(), (td) => getTopLeftSnap(td));\n        const getBottomRightSnap = (td) => {\n            const box = absolute$2(td);\n            return calcSnap(memBottomRight.getOpt(sink), td, box.right, box.bottom, box.width, box.height);\n        };\n        const getBottomRightSnaps = () => \n        // const body = SugarBody.body();\n        // const debugs = SelectorFilter.descendants(body, '.bottom-right-snap-debug');\n        // Arr.each(debugs, (debugArea) => {\n        //   Remove.remove(debugArea);\n        // });\n        map$2(brTds.get(), (td) => getBottomRightSnap(td));\n        const topLeftSnaps = getSnapsConfig(getTopLeftSnaps, startCell, (start) => {\n            finishCell.get().each((finish) => {\n                editor.dispatch('TableSelectorChange', { start, finish });\n            });\n        });\n        const bottomRightSnaps = getSnapsConfig(getBottomRightSnaps, finishCell, (finish) => {\n            startCell.get().each((start) => {\n                editor.dispatch('TableSelectorChange', { start, finish });\n            });\n        });\n        const memTopLeft = createSelector(topLeftSnaps);\n        const memBottomRight = createSelector(bottomRightSnaps);\n        const topLeft = build$1(memTopLeft.asSpec());\n        const bottomRight = build$1(memBottomRight.asSpec());\n        const showOrHideHandle = (selector, cell, isAbove, isBelow) => {\n            const cellRect = cell.dom.getBoundingClientRect();\n            remove$6(selector.element, 'display');\n            const viewportHeight = defaultView(SugarElement.fromDom(editor.getBody())).dom.innerHeight;\n            const aboveViewport = isAbove(cellRect);\n            const belowViewport = isBelow(cellRect, viewportHeight);\n            if (aboveViewport || belowViewport) {\n                set$7(selector.element, 'display', 'none');\n            }\n        };\n        const snapTo = (selector, cell, getSnapConfig, pos) => {\n            const snap = getSnapConfig(cell);\n            Dragging.snapTo(selector, snap);\n            const isAbove = (rect) => rect[pos] < 0;\n            const isBelow = (rect, viewportHeight) => rect[pos] > viewportHeight;\n            showOrHideHandle(selector, cell, isAbove, isBelow);\n        };\n        const snapTopLeft = (cell) => snapTo(topLeft, cell, getTopLeftSnap, 'top');\n        const snapLastTopLeft = () => startCell.get().each(snapTopLeft);\n        const snapBottomRight = (cell) => snapTo(bottomRight, cell, getBottomRightSnap, 'bottom');\n        const snapLastBottomRight = () => finishCell.get().each(snapBottomRight);\n        // TODO: Make this work for desktop maybe?\n        if (detect$1().deviceType.isTouch()) {\n            const domToSugar = (arr) => map$2(arr, SugarElement.fromDom);\n            editor.on('TableSelectionChange', (e) => {\n                if (!isVisible.get()) {\n                    attach(sink, topLeft);\n                    attach(sink, bottomRight);\n                    isVisible.set(true);\n                }\n                const start = SugarElement.fromDom(e.start);\n                const finish = SugarElement.fromDom(e.finish);\n                startCell.set(start);\n                finishCell.set(finish);\n                Optional.from(e.otherCells).each((otherCells) => {\n                    tlTds.set(domToSugar(otherCells.upOrLeftCells));\n                    brTds.set(domToSugar(otherCells.downOrRightCells));\n                    snapTopLeft(start);\n                    snapBottomRight(finish);\n                });\n            });\n            editor.on('ResizeEditor ResizeWindow ScrollContent', () => {\n                snapLastTopLeft();\n                snapLastBottomRight();\n            });\n            editor.on('TableSelectionClear', () => {\n                if (isVisible.get()) {\n                    detach(topLeft);\n                    detach(bottomRight);\n                    isVisible.set(false);\n                }\n                startCell.clear();\n                finishCell.clear();\n            });\n        }\n    };\n\n    var Logo = \"<svg height=\\\"16\\\" viewBox=\\\"0 0 80 16\\\" width=\\\"80\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g opacity=\\\".8\\\"><path d=\\\"m80 3.537v-2.202h-7.976v11.585h7.976v-2.25h-5.474v-2.621h4.812v-2.069h-4.812v-2.443zm-10.647 6.929c-.493.217-1.13.337-1.864.337s-1.276-.156-1.805-.47a3.732 3.732 0 0 1 -1.3-1.298c-.324-.554-.48-1.191-.48-1.877s.156-1.335.48-1.877a3.635 3.635 0 0 1 1.3-1.299 3.466 3.466 0 0 1 1.805-.481c.65 0 .914.06 1.263.18.36.12.698.277.986.47.289.192.578.384.842.6l.12.085v-2.586l-.023-.024c-.385-.35-.855-.614-1.384-.818-.53-.205-1.155-.313-1.877-.313-.721 0-1.6.144-2.333.445a5.773 5.773 0 0 0 -1.937 1.251 5.929 5.929 0 0 0 -1.324 1.9c-.324.735-.48 1.565-.48 2.455s.156 1.72.48 2.454c.325.734.758 1.383 1.324 1.913.553.53 1.215.938 1.937 1.25a6.286 6.286 0 0 0 2.333.434c.819 0 1.384-.108 1.961-.313.59-.216 1.083-.505 1.468-.866l.024-.024v-2.49l-.12.096c-.41.337-.878.626-1.396.866zm-14.869-4.15-4.8-5.04-.024-.025h-.902v11.67h2.502v-6.847l2.827 3.08.385.409.397-.41 2.791-3.067v6.845h2.502v-11.679h-.902l-4.788 5.052z\\\"/><path clip-rule=\\\"evenodd\\\" d=\\\"m15.543 5.137c0-3.032-2.466-5.113-4.957-5.137-.36 0-.745.024-1.094.096-.157.024-3.85.758-3.85.758-3.032.602-4.62 2.466-4.704 4.788-.024.89-.024 4.27-.024 4.27.036 3.165 2.406 5.138 5.017 5.126.337 0 1.119-.109 1.287-.145.144-.024.385-.084.746-.144.661-.12 1.684-.325 3.067-.602 2.37-.409 4.103-2.009 4.44-4.33.156-1.023.084-4.692.084-4.692zm-3.213 3.308-2.346.457v2.31l-5.859 1.143v-5.75l2.346-.458v3.441l3.513-.686v-3.44l-3.513.685v-2.297l5.859-1.143v5.75zm20.09-3.296-.083-1.023h-2.13v8.794h2.346v-4.884c0-1.107.95-1.985 2.057-1.997 1.095 0 1.901.89 1.901 1.997v4.884h2.346v-5.245c-.012-2.105-1.588-3.777-3.67-3.765a3.764 3.764 0 0 0 -2.778 1.25l.012-.011zm-6.014-4.102 2.346-.458v2.298l-2.346.457z\\\" fill-rule=\\\"evenodd\\\"/><path d=\\\"m28.752 4.126h-2.346v8.794h2.346z\\\"/><path clip-rule=\\\"evenodd\\\" d=\\\"m43.777 15.483 4.043-11.357h-2.418l-1.54 4.355-.445 1.324-.36-1.324-1.54-4.355h-2.418l3.151 8.794-1.083 3.08zm-21.028-5.51c0 .722.541 1.034.878 1.034s.638-.048.95-.144l.518 1.708c-.217.145-.879.518-2.13.518a2.565 2.565 0 0 1 -2.562-2.587c-.024-1.082-.024-2.49 0-4.21h-1.54v-2.142h1.54v-1.912l2.346-.458v2.37h2.201v2.142h-2.2v3.693-.012z\\\" fill-rule=\\\"evenodd\\\"/></g></svg>\\n\";\n\n    const isHidden = (elm) => elm.nodeName === 'BR' || !!elm.getAttribute('data-mce-bogus') || elm.getAttribute('data-mce-type') === 'bookmark';\n    const renderElementPath = (editor, settings, providersBackstage) => {\n        var _a;\n        const delimiter = (_a = settings.delimiter) !== null && _a !== void 0 ? _a : '\\u203A';\n        const renderElement = (name, element, index) => Button.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-statusbar__path-item'],\n                attributes: {\n                    'data-index': index,\n                }\n            },\n            components: [\n                text$2(name)\n            ],\n            action: (_btn) => {\n                editor.focus();\n                editor.selection.select(element);\n                editor.nodeChanged();\n            },\n            buttonBehaviours: derive$1([\n                Tooltipping.config({\n                    ...providersBackstage.tooltips.getConfig({\n                        tooltipText: providersBackstage.translate(['Select the {0} element', element.nodeName.toLowerCase()]),\n                        onShow: (comp, tooltip) => {\n                            describedBy(comp.element, tooltip.element);\n                        },\n                        onHide: (comp) => {\n                            remove$1(comp.element);\n                        }\n                    }),\n                }),\n                DisablingConfigs.button(providersBackstage.isDisabled),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext('any'))\n            ])\n        });\n        const renderDivider = () => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-statusbar__path-divider'],\n                attributes: {\n                    'aria-hidden': true\n                }\n            },\n            components: [\n                text$2(` ${delimiter} `)\n            ]\n        });\n        const renderPathData = (data) => foldl(data, (acc, path, index) => {\n            const element = renderElement(path.name, path.element, index);\n            if (index === 0) {\n                return acc.concat([element]);\n            }\n            else {\n                return acc.concat([renderDivider(), element]);\n            }\n        }, []);\n        const updatePath = (parents) => {\n            const newPath = [];\n            let i = parents.length;\n            while (i-- > 0) {\n                const parent = parents[i];\n                if (parent.nodeType === 1 && !isHidden(parent)) {\n                    const args = fireResolveName(editor, parent);\n                    if (!args.isDefaultPrevented()) {\n                        newPath.push({ name: args.name, element: parent });\n                    }\n                    if (args.isPropagationStopped()) {\n                        break;\n                    }\n                }\n            }\n            return newPath;\n        };\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-statusbar__path'],\n                attributes: {\n                    role: 'navigation'\n                }\n            },\n            behaviours: derive$1([\n                Keying.config({\n                    mode: 'flow',\n                    selector: 'div[role=button]'\n                }),\n                Disabling.config({\n                    disabled: providersBackstage.isDisabled\n                }),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext('any')),\n                Tabstopping.config({}),\n                Replacing.config({}),\n                config('elementPathEvents', [\n                    runOnAttached((comp, _e) => {\n                        // NOTE: If statusbar ever gets re-rendered, we will need to free this.\n                        editor.shortcuts.add('alt+F11', 'focus statusbar elementpath', () => Keying.focusIn(comp));\n                        editor.on('NodeChange', (e) => {\n                            const newPath = updatePath(e.parents);\n                            const newChildren = newPath.length > 0 ? renderPathData(newPath) : [];\n                            Replacing.set(comp, newChildren);\n                        });\n                    })\n                ])\n            ]),\n            components: []\n        };\n    };\n\n    var ResizeTypes;\n    (function (ResizeTypes) {\n        ResizeTypes[ResizeTypes[\"None\"] = 0] = \"None\";\n        ResizeTypes[ResizeTypes[\"Both\"] = 1] = \"Both\";\n        ResizeTypes[ResizeTypes[\"Vertical\"] = 2] = \"Vertical\";\n    })(ResizeTypes || (ResizeTypes = {}));\n    const getDimensions = (editor, deltas, resizeType, originalHeight, originalWidth) => {\n        const dimensions = {\n            height: calcCappedSize(originalHeight + deltas.top, getMinHeightOption(editor), getMaxHeightOption(editor))\n        };\n        if (resizeType === ResizeTypes.Both) {\n            dimensions.width = calcCappedSize(originalWidth + deltas.left, getMinWidthOption(editor), getMaxWidthOption(editor));\n        }\n        return dimensions;\n    };\n    const resize = (editor, deltas, resizeType) => {\n        const container = SugarElement.fromDom(editor.getContainer());\n        const dimensions = getDimensions(editor, deltas, resizeType, get$d(container), get$c(container));\n        each(dimensions, (val, dim) => {\n            if (isNumber(val)) {\n                set$7(container, dim, numToPx(val));\n            }\n        });\n        fireResizeEditor(editor);\n    };\n\n    const getResizeType = (editor) => {\n        const resize = getResize(editor);\n        if (resize === false) {\n            return ResizeTypes.None;\n        }\n        else if (resize === 'both') {\n            return ResizeTypes.Both;\n        }\n        else {\n            return ResizeTypes.Vertical;\n        }\n    };\n    const keyboardHandler = (editor, resizeType, x, y) => {\n        const scale = 20;\n        const delta = SugarPosition(x * scale, y * scale);\n        resize(editor, delta, resizeType);\n        return Optional.some(true);\n    };\n    const renderResizeHandler = (editor, providersBackstage) => {\n        const resizeType = getResizeType(editor);\n        if (resizeType === ResizeTypes.None) {\n            return Optional.none();\n        }\n        const resizeLabel = resizeType === ResizeTypes.Both\n            ? 'Press the arrow keys to resize the editor.'\n            : 'Press the Up and Down arrow keys to resize the editor.';\n        const cursorClass = resizeType === ResizeTypes.Both\n            ? 'tox-statusbar__resize-cursor-both'\n            : 'tox-statusbar__resize-cursor-default';\n        return Optional.some(render$4('resize-handle', {\n            tag: 'div',\n            classes: ['tox-statusbar__resize-handle', cursorClass],\n            attributes: {\n                'aria-label': providersBackstage.translate(resizeLabel),\n                'data-mce-name': 'resize-handle'\n            },\n            behaviours: [\n                Dragging.config({\n                    mode: 'mouse',\n                    repositionTarget: false,\n                    onDrag: (_comp, _target, delta) => resize(editor, delta, resizeType),\n                    blockerClass: 'tox-blocker'\n                }),\n                Keying.config({\n                    mode: 'special',\n                    onLeft: () => keyboardHandler(editor, resizeType, -1, 0),\n                    onRight: () => keyboardHandler(editor, resizeType, 1, 0),\n                    onUp: () => keyboardHandler(editor, resizeType, 0, -1),\n                    onDown: () => keyboardHandler(editor, resizeType, 0, 1),\n                }),\n                Tabstopping.config({}),\n                Focusing.config({}),\n                Tooltipping.config(providersBackstage.tooltips.getConfig({\n                    tooltipText: providersBackstage.translate('Resize')\n                }))\n            ]\n        }, providersBackstage.icons));\n    };\n\n    const renderWordCount = (editor, providersBackstage) => {\n        const replaceCountText = (comp, count, mode) => Replacing.set(comp, [text$2(providersBackstage.translate(['{0} ' + mode, count[mode]]))]);\n        return Button.sketch({\n            dom: {\n                // The tag for word count was changed to 'button' as Jaws does not read out spans.\n                // Word count is just a toggle and changes modes between words and characters.\n                tag: 'button',\n                classes: ['tox-statusbar__wordcount']\n            },\n            components: [],\n            buttonBehaviours: derive$1([\n                DisablingConfigs.button(providersBackstage.isDisabled),\n                toggleOnReceive(() => providersBackstage.checkUiComponentContext('any')),\n                Tabstopping.config({}),\n                Replacing.config({}),\n                Representing.config({\n                    store: {\n                        mode: 'memory',\n                        initialValue: {\n                            mode: \"words\" /* WordCountMode.Words */,\n                            count: { words: 0, characters: 0 }\n                        }\n                    }\n                }),\n                config('wordcount-events', [\n                    runOnExecute$1((comp) => {\n                        const currentVal = Representing.getValue(comp);\n                        const newMode = currentVal.mode === \"words\" /* WordCountMode.Words */ ? \"characters\" /* WordCountMode.Characters */ : \"words\" /* WordCountMode.Words */;\n                        Representing.setValue(comp, { mode: newMode, count: currentVal.count });\n                        replaceCountText(comp, currentVal.count, newMode);\n                    }),\n                    runOnAttached((comp) => {\n                        editor.on('wordCountUpdate', (e) => {\n                            const { mode } = Representing.getValue(comp);\n                            Representing.setValue(comp, { mode, count: e.wordCount });\n                            replaceCountText(comp, e.wordCount, mode);\n                        });\n                    })\n                ])\n            ]),\n            eventOrder: {\n                [execute$5()]: ['disabling', 'alloy.base.behaviour', 'wordcount-events']\n            }\n        });\n    };\n\n    const renderStatusbar = (editor, providersBackstage) => {\n        const renderBranding = () => {\n            return {\n                dom: {\n                    tag: 'span',\n                    classes: ['tox-statusbar__branding'],\n                },\n                components: [\n                    {\n                        dom: {\n                            tag: 'a',\n                            attributes: {\n                                'href': 'https://www.tiny.cloud/powered-by-tiny?utm_campaign=poweredby&utm_source=tiny&utm_medium=referral&utm_content=v7',\n                                'rel': 'noopener',\n                                'target': '_blank',\n                                'aria-label': editor.translate(['Build with {0}', 'TinyMCE'])\n                            },\n                            innerHtml: editor.translate(['Build with {0}', Logo.trim()])\n                        },\n                        behaviours: derive$1([\n                            Focusing.config({})\n                        ])\n                    }\n                ]\n            };\n        };\n        const renderHelpAccessibility = () => {\n            const shortcutText = convertText('Alt+0');\n            const text = `Press {0} for help`;\n            return {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-statusbar__help-text'],\n                },\n                components: [\n                    text$2(global$6.translate([text, shortcutText]))\n                ]\n            };\n        };\n        const renderRightContainer = () => {\n            const components = [];\n            if (editor.hasPlugin('wordcount')) {\n                components.push(renderWordCount(editor, providersBackstage));\n            }\n            if (useBranding(editor)) {\n                components.push(renderBranding());\n            }\n            return {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-statusbar__right-container']\n                },\n                components\n            };\n        };\n        const getTextComponents = () => {\n            const components = [];\n            const shouldRenderHelp = useHelpAccessibility(editor);\n            const shouldRenderElementPath = useElementPath(editor);\n            const shouldRenderRightContainer = useBranding(editor) || editor.hasPlugin('wordcount');\n            const getTextComponentClasses = () => {\n                const flexStart = 'tox-statusbar__text-container--flex-start';\n                const flexEnd = 'tox-statusbar__text-container--flex-end';\n                const spaceAround = 'tox-statusbar__text-container--space-around';\n                if (shouldRenderHelp) {\n                    const container3Columns = 'tox-statusbar__text-container-3-cols';\n                    if (!shouldRenderRightContainer && !shouldRenderElementPath) {\n                        return [container3Columns, spaceAround];\n                    }\n                    if (shouldRenderRightContainer && !shouldRenderElementPath) {\n                        return [container3Columns, flexEnd];\n                    }\n                    return [container3Columns, flexStart];\n                }\n                return [shouldRenderRightContainer && !shouldRenderElementPath ? flexEnd : flexStart];\n            };\n            if (shouldRenderElementPath) {\n                components.push(renderElementPath(editor, {}, providersBackstage));\n            }\n            if (shouldRenderHelp) {\n                components.push(renderHelpAccessibility());\n            }\n            if (shouldRenderRightContainer) {\n                components.push(renderRightContainer());\n            }\n            if (components.length > 0) {\n                return [{\n                        dom: {\n                            tag: 'div',\n                            classes: ['tox-statusbar__text-container', ...getTextComponentClasses()]\n                        },\n                        components\n                    }];\n            }\n            return [];\n        };\n        const getComponents = () => {\n            const components = getTextComponents();\n            const resizeHandler = renderResizeHandler(editor, providersBackstage);\n            return components.concat(resizeHandler.toArray());\n        };\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-statusbar']\n            },\n            components: getComponents()\n        };\n    };\n\n    const getLazyMothership = (label, singleton) => singleton.get().getOrDie(`UI for ${label} has not been rendered`);\n    const setup$3 = (editor, setupForTheme) => {\n        const isInline = editor.inline;\n        const mode = isInline ? Inline : Iframe;\n        // We use a different component for creating the sticky toolbar behaviour. The\n        // most important difference is it needs \"Docking\" configured and all of the\n        // ripple effects that creates.\n        const header = isStickyToolbar(editor) ? StickyHeader : StaticHeader;\n        const lazyUiRefs = LazyUiReferences();\n        // Importantly, this is outside the setup function.\n        const lazyMothership = value$2();\n        const lazyDialogMothership = value$2();\n        const lazyPopupMothership = value$2();\n        const platform = detect$1();\n        const isTouch = platform.deviceType.isTouch();\n        const touchPlatformClass = 'tox-platform-touch';\n        const deviceClasses = isTouch ? [touchPlatformClass] : [];\n        const isToolbarBottom = isToolbarLocationBottom(editor);\n        const toolbarMode = getToolbarMode(editor);\n        const memAnchorBar = record({\n            dom: {\n                tag: 'div',\n                classes: ['tox-anchorbar']\n            }\n        });\n        const memBottomAnchorBar = record({\n            dom: {\n                tag: 'div',\n                classes: ['tox-bottom-anchorbar']\n            }\n        });\n        const lazyHeader = () => lazyUiRefs.mainUi.get()\n            .map((ui) => ui.outerContainer)\n            .bind(OuterContainer.getHeader);\n        const lazyDialogSinkResult = () => Result.fromOption(lazyUiRefs.dialogUi.get().map((ui) => ui.sink), 'UI has not been rendered');\n        const lazyPopupSinkResult = () => Result.fromOption(lazyUiRefs.popupUi.get().map((ui) => ui.sink), '(popup) UI has not been rendered');\n        const lazyAnchorBar = lazyUiRefs.lazyGetInOuterOrDie('anchor bar', memAnchorBar.getOpt);\n        const lazyBottomAnchorBar = lazyUiRefs.lazyGetInOuterOrDie('bottom anchor bar', memBottomAnchorBar.getOpt);\n        const lazyToolbar = lazyUiRefs.lazyGetInOuterOrDie('toolbar', OuterContainer.getToolbar);\n        const lazyThrobber = lazyUiRefs.lazyGetInOuterOrDie('throbber', OuterContainer.getThrobber);\n        // Here, we build the backstage. The backstage is going to use different sinks for dialog\n        // vs popup.\n        const backstages = init({\n            popup: lazyPopupSinkResult,\n            dialog: lazyDialogSinkResult\n        }, editor, lazyAnchorBar, lazyBottomAnchorBar);\n        const makeHeaderPart = () => {\n            const verticalDirAttributes = {\n                attributes: {\n                    [Attribute]: isToolbarBottom ?\n                        AttributeValue.BottomToTop :\n                        AttributeValue.TopToBottom\n                }\n            };\n            const partMenubar = OuterContainer.parts.menubar({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-menubar']\n                },\n                // TINY-9223: The menu bar should scroll with the editor.\n                backstage: backstages.popup,\n                onEscape: () => {\n                    editor.focus();\n                }\n            });\n            const partToolbar = OuterContainer.parts.toolbar({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-toolbar']\n                },\n                getSink: backstages.popup.shared.getSink,\n                providers: backstages.popup.shared.providers,\n                onEscape: () => {\n                    editor.focus();\n                },\n                onToolbarToggled: (state) => {\n                    fireToggleToolbarDrawer(editor, state);\n                },\n                type: toolbarMode,\n                lazyToolbar,\n                lazyHeader: () => lazyHeader().getOrDie('Could not find header element'),\n                ...verticalDirAttributes\n            });\n            const partMultipleToolbar = OuterContainer.parts['multiple-toolbar']({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-toolbar-overlord']\n                },\n                providers: backstages.popup.shared.providers,\n                onEscape: () => {\n                    editor.focus();\n                },\n                type: toolbarMode\n            });\n            // False should stop the menubar and toolbar rendering altogether\n            const hasMultipleToolbar = isMultipleToolbars(editor);\n            const hasToolbar = isToolbarEnabled(editor);\n            const hasMenubar = isMenubarEnabled(editor);\n            const shouldHavePromotionLink = promotionEnabled(editor);\n            const partPromotion = makePromotion(shouldHavePromotionLink);\n            const hasAnyContents = hasMultipleToolbar || hasToolbar || hasMenubar;\n            const getPartToolbar = () => {\n                if (hasMultipleToolbar) {\n                    return [partMultipleToolbar];\n                }\n                else if (hasToolbar) {\n                    return [partToolbar];\n                }\n                else {\n                    return [];\n                }\n            };\n            const menubarCollection = [partPromotion, partMenubar];\n            return OuterContainer.parts.header({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-editor-header']\n                        .concat(hasAnyContents ? [] : ['tox-editor-header--empty']),\n                    ...verticalDirAttributes\n                },\n                components: flatten([\n                    hasMenubar ? menubarCollection : [],\n                    getPartToolbar(),\n                    // fixed_toolbar_container anchors to the editable area, else add an anchor bar\n                    useFixedContainer(editor) ? [] : [memAnchorBar.asSpec()]\n                ]),\n                sticky: isStickyToolbar(editor),\n                editor,\n                // TINY-9223: If using a sticky toolbar, which sink should it really go in?\n                sharedBackstage: backstages.popup.shared\n            });\n        };\n        const makePromotion = (promotionLink) => {\n            return OuterContainer.parts.promotion({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-promotion'],\n                },\n                promotionLink\n            });\n        };\n        const makeSidebarDefinition = () => {\n            const partSocket = OuterContainer.parts.socket({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-edit-area']\n                }\n            });\n            const partSidebar = OuterContainer.parts.sidebar({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-sidebar']\n                }\n            });\n            return {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-sidebar-wrap']\n                },\n                components: [\n                    partSocket,\n                    partSidebar\n                ]\n            };\n        };\n        const renderDialogUi = () => {\n            const uiContainer = getUiContainer(editor);\n            // TINY-3321: When the body is using a grid layout, we need to ensure the sink width is manually set\n            const isGridUiContainer = eq(body(), uiContainer) && get$e(uiContainer, 'display') === 'grid';\n            const sinkSpec = {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox', 'tox-silver-sink', 'tox-tinymce-aux'].concat(deviceClasses),\n                    attributes: {\n                        ...global$6.isRtl() ? { dir: 'rtl' } : {}\n                    }\n                },\n                behaviours: derive$1([\n                    Positioning.config({\n                        useFixed: () => header.isDocked(lazyHeader)\n                    })\n                ])\n            };\n            const reactiveWidthSpec = {\n                dom: {\n                    styles: { width: document.body.clientWidth + 'px' }\n                },\n                events: derive$2([\n                    run$1(windowResize(), (comp) => {\n                        set$7(comp.element, 'width', document.body.clientWidth + 'px');\n                    })\n                ])\n            };\n            const sink = build$1(deepMerge(sinkSpec, isGridUiContainer ? reactiveWidthSpec : {}));\n            const uiMothership = takeover(sink);\n            lazyDialogMothership.set(uiMothership);\n            return { sink, mothership: uiMothership };\n        };\n        const renderPopupUi = () => {\n            // TINY-9226: Because the popupUi is going to be placed adjacent to the editor, we aren't currently\n            // implementing the behaviour to reset widths based on window sizing. It is a workaround that\n            // is mainly targeted at Ui containers in the root. However, we may need to revisit this\n            // if the ui_mode: split setting is commonly used when the editor is at the root level, and the\n            // page has size-unfriendly CSS for sinks (like CSS grid)\n            const sinkSpec = {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox', 'tox-silver-sink', 'tox-silver-popup-sink', 'tox-tinymce-aux'].concat(deviceClasses),\n                    attributes: {\n                        ...global$6.isRtl() ? { dir: 'rtl' } : {}\n                    }\n                },\n                behaviours: derive$1([\n                    Positioning.config({\n                        useFixed: () => header.isDocked(lazyHeader),\n                        // TINY-9226: We want to limit the popup sink's bounds based on its scrolling environment. We don't\n                        // want it to try to position things outside of its scrolling viewport, because they will\n                        // just appear offscreen (hidden by the current scroll values)\n                        getBounds: () => setupForTheme.getPopupSinkBounds()\n                    })\n                ])\n            };\n            const sink = build$1(sinkSpec);\n            const uiMothership = takeover(sink);\n            lazyPopupMothership.set(uiMothership);\n            return { sink, mothership: uiMothership };\n        };\n        const renderMainUi = () => {\n            const partHeader = makeHeaderPart();\n            const sidebarContainer = makeSidebarDefinition();\n            const partThrobber = OuterContainer.parts.throbber({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-throbber']\n                },\n                backstage: backstages.popup\n            });\n            const partViewWrapper = OuterContainer.parts.viewWrapper({\n                backstage: backstages.popup\n            });\n            const statusbar = useStatusBar(editor) && !isInline ? Optional.some(renderStatusbar(editor, backstages.popup.shared.providers)) : Optional.none();\n            // We need the statusbar to be separate to everything else so resizing works properly\n            const editorComponents = flatten([\n                isToolbarBottom ? [] : [partHeader],\n                // Inline mode does not have a socket/sidebar\n                isInline ? [] : [sidebarContainer],\n                isToolbarBottom ? [partHeader] : []\n            ]);\n            const editorContainer = OuterContainer.parts.editorContainer({\n                components: flatten([\n                    editorComponents,\n                    isInline ? [] : [memBottomAnchorBar.asSpec()]\n                ])\n            });\n            // Hide the outer container if using inline mode and there's no menubar or toolbar\n            const isHidden = isDistractionFree(editor);\n            const attributes = {\n                role: 'application',\n                ...global$6.isRtl() ? { dir: 'rtl' } : {},\n                ...isHidden ? { 'aria-hidden': 'true' } : {}\n            };\n            const outerContainer = build$1(OuterContainer.sketch({\n                dom: {\n                    tag: 'div',\n                    classes: ['tox', 'tox-tinymce']\n                        .concat(isInline ? ['tox-tinymce-inline'] : [])\n                        .concat(isToolbarBottom ? ['tox-tinymce--toolbar-bottom'] : [])\n                        .concat(deviceClasses),\n                    styles: {\n                        // This is overridden by the skin, it helps avoid FOUC\n                        visibility: 'hidden',\n                        // Hide the container if needed, but don't use \"display: none\" so that it still has a position\n                        ...isHidden ? { opacity: '0', border: '0' } : {}\n                    },\n                    attributes\n                },\n                components: [\n                    editorContainer,\n                    // Inline mode does not have a status bar\n                    ...isInline ? [] : [partViewWrapper, ...statusbar.toArray()],\n                    partThrobber,\n                ],\n                behaviours: derive$1([\n                    toggleOnReceive(() => backstages.popup.shared.providers.checkUiComponentContext('any')),\n                    Disabling.config({\n                        disableClass: 'tox-tinymce--disabled'\n                    }),\n                    Keying.config({\n                        mode: 'cyclic',\n                        selector: '.tox-menubar, .tox-toolbar, .tox-toolbar__primary, .tox-toolbar__overflow--open, .tox-sidebar__overflow--open, .tox-statusbar__path, .tox-statusbar__wordcount, .tox-statusbar__branding a, .tox-statusbar__resize-handle'\n                    })\n                ])\n            }));\n            const mothership = takeover(outerContainer);\n            lazyMothership.set(mothership);\n            return { mothership, outerContainer };\n        };\n        const setEditorSize = (outerContainer) => {\n            // Set height and width if they were given, though height only applies to iframe mode\n            const parsedHeight = numToPx(getHeightWithFallback(editor));\n            const parsedWidth = numToPx(getWidthWithFallback(editor));\n            if (!editor.inline) {\n                // Update the width\n                if (isValidValue$1('div', 'width', parsedWidth)) {\n                    set$7(outerContainer.element, 'width', parsedWidth);\n                }\n                // Update the height\n                if (isValidValue$1('div', 'height', parsedHeight)) {\n                    set$7(outerContainer.element, 'height', parsedHeight);\n                }\n                else {\n                    set$7(outerContainer.element, 'height', '400px');\n                }\n            }\n            return parsedHeight;\n        };\n        const setupShortcutsAndCommands = (outerContainer) => {\n            editor.addShortcut('alt+F9', 'focus menubar', () => {\n                OuterContainer.focusMenubar(outerContainer);\n            });\n            editor.addShortcut('alt+F10', 'focus toolbar', () => {\n                OuterContainer.focusToolbar(outerContainer);\n            });\n            editor.addCommand('ToggleToolbarDrawer', (_ui, options) => {\n                if (options === null || options === void 0 ? void 0 : options.skipFocus) {\n                    OuterContainer.toggleToolbarDrawerWithoutFocusing(outerContainer);\n                }\n                else {\n                    OuterContainer.toggleToolbarDrawer(outerContainer);\n                }\n            });\n            editor.addQueryStateHandler('ToggleToolbarDrawer', () => OuterContainer.isToolbarDrawerToggled(outerContainer));\n        };\n        const renderUIWithRefs = (uiRefs) => {\n            const { mainUi, popupUi, uiMotherships } = uiRefs;\n            map$1(getToolbarGroups(editor), (toolbarGroupButtonConfig, name) => {\n                editor.ui.registry.addGroupToolbarButton(name, toolbarGroupButtonConfig);\n            });\n            // Apply Bridge types\n            const { buttons, menuItems, contextToolbars, sidebars, views } = editor.ui.registry.getAll();\n            const toolbarOpt = getMultipleToolbarsOption(editor);\n            const rawUiConfig = {\n                menuItems,\n                menus: getMenus(editor),\n                menubar: getMenubar(editor),\n                toolbar: toolbarOpt.getOrThunk(() => getToolbar(editor)),\n                allowToolbarGroups: toolbarMode === ToolbarMode$1.floating,\n                buttons,\n                sidebar: sidebars,\n                views\n            };\n            setupShortcutsAndCommands(mainUi.outerContainer);\n            setup$b(editor, mainUi.mothership, uiMotherships);\n            // This backstage needs to kept in sync with the one passed to the Header part.\n            header.setup(editor, backstages.popup.shared, lazyHeader);\n            // This backstage is probably needed for just the bespoke dropdowns\n            setup$6(editor, backstages.popup);\n            setup$5(editor, backstages.popup.shared.getSink, backstages.popup);\n            setup$8(editor);\n            setup$7(editor, lazyThrobber, backstages.popup.shared);\n            register$a(editor, contextToolbars, popupUi.sink, { backstage: backstages.popup });\n            setup$4(editor, popupUi.sink);\n            const elm = editor.getElement();\n            const height = setEditorSize(mainUi.outerContainer);\n            const args = { targetNode: elm, height };\n            // The only components that use backstages.dialog currently are the Modal dialogs.\n            return mode.render(editor, uiRefs, rawUiConfig, backstages.popup, args);\n        };\n        const reuseDialogUiForPopuUi = (dialogUi) => {\n            lazyPopupMothership.set(dialogUi.mothership);\n            return dialogUi;\n        };\n        const renderUI = () => {\n            const mainUi = renderMainUi();\n            const dialogUi = renderDialogUi();\n            // If dialogUi and popupUi are the same, LazyUiReferences should handle deduplicating then\n            // get calling getUiMotherships\n            const popupUi = isSplitUiMode(editor) ? renderPopupUi() : reuseDialogUiForPopuUi(dialogUi);\n            lazyUiRefs.dialogUi.set(dialogUi);\n            lazyUiRefs.popupUi.set(popupUi);\n            lazyUiRefs.mainUi.set(mainUi);\n            // From this point on, we shouldn't use LazyReferences any more.\n            const uiRefs = {\n                popupUi,\n                dialogUi,\n                mainUi,\n                uiMotherships: lazyUiRefs.getUiMotherships()\n            };\n            return renderUIWithRefs(uiRefs);\n        };\n        // We don't have uiRefs here, so we have to rely on cells that are set by renderUI unfortunately.\n        return {\n            popups: {\n                backstage: backstages.popup,\n                getMothership: () => getLazyMothership('popups', lazyPopupMothership)\n            },\n            dialogs: {\n                backstage: backstages.dialog,\n                getMothership: () => getLazyMothership('dialogs', lazyDialogMothership)\n            },\n            renderUI\n        };\n    };\n\n    const toValidValues = (values) => {\n        const errors = [];\n        const result = {};\n        each(values, (value, name) => {\n            value.fold(() => {\n                errors.push(name);\n            }, (v) => {\n                result[name] = v;\n            });\n        });\n        return errors.length > 0 ? Result.error(errors) :\n            Result.value(result);\n    };\n\n    const renderBodyPanel = (spec, dialogData, backstage, getCompByName) => {\n        const memForm = record(Form.sketch((parts) => ({\n            dom: {\n                tag: 'div',\n                classes: ['tox-form'].concat(spec.classes)\n            },\n            // All of the items passed through the form need to be put through the interpreter\n            // with their form part preserved.\n            components: map$2(spec.items, (item) => interpretInForm(parts, item, dialogData, backstage, getCompByName))\n        })));\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-dialog__body']\n            },\n            components: [\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-dialog__body-content']\n                    },\n                    components: [\n                        memForm.asSpec()\n                    ]\n                }\n            ],\n            behaviours: derive$1([\n                Keying.config({\n                    mode: 'acyclic',\n                    useTabstopAt: not(isPseudoStop)\n                }),\n                ComposingConfigs.memento(memForm),\n                memento(memForm, {\n                    postprocess: (formValue) => toValidValues(formValue).fold((err) => {\n                        // eslint-disable-next-line no-console\n                        console.error(err);\n                        return {};\n                    }, identity)\n                }),\n                config('dialog-body-panel', [\n                    // TINY-10101: This is to cater for the case where clicks are made into the dialog instead using keyboard navigation, as FocusShifted would not be triggered in that case.\n                    run$1(focusin(), (comp, se) => {\n                        comp.getSystem().broadcastOn([dialogFocusShiftedChannel], {\n                            newFocus: Optional.some(se.event.target)\n                        });\n                    }),\n                ])\n            ])\n        };\n    };\n\n    const measureHeights = (allTabs, tabview, tabviewComp) => map$2(allTabs, (_tab, i) => {\n        Replacing.set(tabviewComp, allTabs[i].view());\n        const rect = tabview.dom.getBoundingClientRect();\n        Replacing.set(tabviewComp, []);\n        return rect.height;\n    });\n    const getMaxHeight = (heights) => head(sort(heights, (a, b) => {\n        if (a > b) {\n            return -1;\n        }\n        else if (a < b) {\n            return +1;\n        }\n        else {\n            return 0;\n        }\n    }));\n    const getMaxTabviewHeight = (dialog, tabview, tablist) => {\n        const documentElement$1 = documentElement(dialog).dom;\n        const rootElm = ancestor$1(dialog, '.tox-dialog-wrap').getOr(dialog);\n        const isFixed = get$e(rootElm, 'position') === 'fixed';\n        // Get the document or window/viewport height\n        let maxHeight;\n        if (isFixed) {\n            maxHeight = Math.max(documentElement$1.clientHeight, window.innerHeight);\n        }\n        else {\n            maxHeight = Math.max(documentElement$1.offsetHeight, documentElement$1.scrollHeight);\n        }\n        // Determine the current height taken up by the tabview panel\n        const tabviewHeight = get$d(tabview);\n        const isTabListBeside = tabview.dom.offsetLeft >= tablist.dom.offsetLeft + get$c(tablist);\n        const currentTabHeight = isTabListBeside ? Math.max(get$d(tablist), tabviewHeight) : tabviewHeight;\n        // Get the dialog height, making sure to account for any margins on the dialog\n        const dialogTopMargin = parseInt(get$e(dialog, 'margin-top'), 10) || 0;\n        const dialogBottomMargin = parseInt(get$e(dialog, 'margin-bottom'), 10) || 0;\n        const dialogHeight = get$d(dialog) + dialogTopMargin + dialogBottomMargin;\n        const chromeHeight = dialogHeight - currentTabHeight;\n        return maxHeight - chromeHeight;\n    };\n    const showTab = (allTabs, comp) => {\n        head(allTabs).each((tab) => TabSection.showTab(comp, tab.value));\n    };\n    const setTabviewHeight = (tabview, height) => {\n        // Set both height and flex-basis as some browsers don't support flex-basis.\n        set$7(tabview, 'height', height + 'px');\n        set$7(tabview, 'flex-basis', height + 'px');\n    };\n    const updateTabviewHeight = (dialogBody, tabview, maxTabHeight) => {\n        ancestor$1(dialogBody, '[role=\"dialog\"]').each((dialog) => {\n            descendant(dialog, '[role=\"tablist\"]').each((tablist) => {\n                maxTabHeight.get().map((height) => {\n                    // Set the tab view height to 0, so we can calculate the max tabview height, without worrying about overflows\n                    set$7(tabview, 'height', '0');\n                    set$7(tabview, 'flex-basis', '0');\n                    return Math.min(height, getMaxTabviewHeight(dialog, tabview, tablist));\n                }).each((height) => {\n                    setTabviewHeight(tabview, height);\n                });\n            });\n        });\n    };\n    const getTabview = (dialog) => descendant(dialog, '[role=\"tabpanel\"]');\n    const smartMode = (allTabs) => {\n        const maxTabHeight = value$2();\n        const extraEvents = [\n            runOnAttached((comp) => {\n                const dialog = comp.element;\n                getTabview(dialog).each((tabview) => {\n                    set$7(tabview, 'visibility', 'hidden');\n                    // Determine the maximum heights of each tab\n                    comp.getSystem().getByDom(tabview).toOptional().each((tabviewComp) => {\n                        const heights = measureHeights(allTabs, tabview, tabviewComp);\n                        // Calculate the maximum tab height and store it\n                        const maxTabHeightOpt = getMaxHeight(heights);\n                        maxTabHeightOpt.fold(maxTabHeight.clear, maxTabHeight.set);\n                    });\n                    // Set an initial height, based on the current size\n                    updateTabviewHeight(dialog, tabview, maxTabHeight);\n                    // Show the tabs\n                    remove$6(tabview, 'visibility');\n                    showTab(allTabs, comp);\n                    // Use a delay here and recalculate the height, as we need all the components attached\n                    // to be able to properly calculate the max height\n                    requestAnimationFrame(() => {\n                        updateTabviewHeight(dialog, tabview, maxTabHeight);\n                    });\n                });\n            }),\n            run$1(windowResize(), (comp) => {\n                const dialog = comp.element;\n                getTabview(dialog).each((tabview) => {\n                    updateTabviewHeight(dialog, tabview, maxTabHeight);\n                });\n            }),\n            run$1(formResizeEvent, (comp, _se) => {\n                const dialog = comp.element;\n                getTabview(dialog).each((tabview) => {\n                    const oldFocus = active$1(getRootNode(tabview));\n                    set$7(tabview, 'visibility', 'hidden');\n                    const oldHeight = getRaw(tabview, 'height').map((h) => parseInt(h, 10));\n                    remove$6(tabview, 'height');\n                    remove$6(tabview, 'flex-basis');\n                    const newHeight = tabview.dom.getBoundingClientRect().height;\n                    const hasGrown = oldHeight.forall((h) => newHeight > h);\n                    if (hasGrown) {\n                        maxTabHeight.set(newHeight);\n                        updateTabviewHeight(dialog, tabview, maxTabHeight);\n                    }\n                    else {\n                        oldHeight.each((h) => {\n                            setTabviewHeight(tabview, h);\n                        });\n                    }\n                    remove$6(tabview, 'visibility');\n                    oldFocus.each(focus$4);\n                });\n            })\n        ];\n        const selectFirst = false;\n        return {\n            extraEvents,\n            selectFirst\n        };\n    };\n\n    const SendDataToSectionChannel = 'send-data-to-section';\n    const SendDataToViewChannel = 'send-data-to-view';\n    const renderTabPanel = (spec, dialogData, backstage, getCompByName) => {\n        const storedValue = Cell({});\n        const updateDataWithForm = (form) => {\n            const formData = Representing.getValue(form);\n            const validData = toValidValues(formData).getOr({});\n            const currentData = storedValue.get();\n            const newData = deepMerge(currentData, validData);\n            storedValue.set(newData);\n        };\n        const setDataOnForm = (form) => {\n            const tabData = storedValue.get();\n            Representing.setValue(form, tabData);\n        };\n        const oldTab = Cell(null);\n        const allTabs = map$2(spec.tabs, (tab) => {\n            return {\n                value: tab.name,\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-dialog__body-nav-item']\n                },\n                components: [\n                    text$2(backstage.shared.providers.translate(tab.title))\n                ],\n                view: () => {\n                    return [\n                        // Dupe with SilverDialog\n                        Form.sketch((parts) => ({\n                            dom: {\n                                tag: 'div',\n                                classes: ['tox-form']\n                            },\n                            components: map$2(tab.items, (item) => interpretInForm(parts, item, dialogData, backstage, getCompByName)),\n                            formBehaviours: derive$1([\n                                Keying.config({\n                                    mode: 'acyclic',\n                                    useTabstopAt: not(isPseudoStop)\n                                }),\n                                config('TabView.form.events', [\n                                    runOnAttached(setDataOnForm),\n                                    runOnDetached(updateDataWithForm)\n                                ]),\n                                Receiving.config({\n                                    channels: wrapAll([\n                                        {\n                                            key: SendDataToSectionChannel,\n                                            value: {\n                                                onReceive: updateDataWithForm\n                                            }\n                                        },\n                                        {\n                                            key: SendDataToViewChannel,\n                                            value: {\n                                                onReceive: setDataOnForm\n                                            }\n                                        }\n                                    ])\n                                })\n                            ])\n                        }))\n                    ];\n                }\n            };\n        });\n        // Assign fixed height or variable height to the tabs\n        const tabMode = smartMode(allTabs);\n        return TabSection.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-dialog__body']\n            },\n            onChangeTab: (section, button, _viewItems) => {\n                const name = Representing.getValue(button);\n                emitWith(section, formTabChangeEvent, {\n                    name,\n                    oldName: oldTab.get()\n                });\n                oldTab.set(name);\n            },\n            tabs: allTabs,\n            components: [\n                TabSection.parts.tabbar({\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-dialog__body-nav']\n                    },\n                    components: [\n                        Tabbar.parts.tabs({})\n                    ],\n                    markers: {\n                        tabClass: 'tox-tab',\n                        selectedClass: 'tox-dialog__body-nav-item--active'\n                    },\n                    tabbarBehaviours: derive$1([\n                        Tabstopping.config({})\n                    ])\n                }),\n                TabSection.parts.tabview({\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-dialog__body-content']\n                    }\n                })\n            ],\n            selectFirst: tabMode.selectFirst,\n            tabSectionBehaviours: derive$1([\n                config('tabpanel', tabMode.extraEvents),\n                Keying.config({\n                    mode: 'acyclic'\n                }),\n                // INVESTIGATE: Is this necessary? Probably used by getCompByName.\n                Composing.config({\n                    // TODO: Think about this\n                    find: (comp) => head(TabSection.getViewItems(comp))\n                }),\n                withComp(Optional.none(), (tsection) => {\n                    // NOTE: Assumes synchronous updating of store.\n                    tsection.getSystem().broadcastOn([SendDataToSectionChannel], {});\n                    return storedValue.get();\n                }, (tsection, value) => {\n                    storedValue.set(value);\n                    tsection.getSystem().broadcastOn([SendDataToViewChannel], {});\n                })\n            ])\n        });\n    };\n\n    // ariaAttrs is being passed through to silver inline dialog\n    // from the WindowManager as a property of 'params'\n    const renderBody = (spec, dialogId, contentId, backstage, ariaAttrs, getCompByName) => {\n        const renderComponents = (incoming) => {\n            const body = incoming.body;\n            switch (body.type) {\n                case 'tabpanel': {\n                    return [\n                        renderTabPanel(body, incoming.initialData, backstage, getCompByName)\n                    ];\n                }\n                default: {\n                    return [\n                        renderBodyPanel(body, incoming.initialData, backstage, getCompByName)\n                    ];\n                }\n            }\n        };\n        const updateState = (_comp, incoming) => Optional.some({\n            isTabPanel: () => incoming.body.type === 'tabpanel'\n        });\n        const ariaAttributes = {\n            'aria-live': 'polite'\n        };\n        return {\n            dom: {\n                tag: 'div',\n                classes: ['tox-dialog__content-js'],\n                attributes: {\n                    ...contentId.map((x) => ({ id: x })).getOr({}),\n                    ...ariaAttrs ? ariaAttributes : {}\n                }\n            },\n            components: [],\n            behaviours: derive$1([\n                ComposingConfigs.childAt(0),\n                Reflecting.config({\n                    channel: `${bodyChannel}-${dialogId}`,\n                    updateState,\n                    renderComponents,\n                    initialData: spec\n                })\n            ])\n        };\n    };\n    const renderInlineBody = (spec, dialogId, contentId, backstage, ariaAttrs, getCompByName) => renderBody(spec, dialogId, Optional.some(contentId), backstage, ariaAttrs, getCompByName);\n    const renderModalBody = (spec, dialogId, backstage, getCompByName) => {\n        const bodySpec = renderBody(spec, dialogId, Optional.none(), backstage, false, getCompByName);\n        return ModalDialog.parts.body(bodySpec);\n    };\n    const renderIframeBody = (spec) => {\n        const bodySpec = {\n            dom: {\n                tag: 'div',\n                classes: ['tox-dialog__content-js']\n            },\n            components: [\n                {\n                    dom: {\n                        tag: 'div',\n                        classes: ['tox-dialog__body-iframe']\n                    },\n                    components: [\n                        craft(Optional.none(), {\n                            dom: {\n                                tag: 'iframe',\n                                attributes: {\n                                    src: spec.url\n                                }\n                            },\n                            behaviours: derive$1([\n                                Tabstopping.config({}),\n                                Focusing.config({})\n                            ])\n                        })\n                    ]\n                }\n            ],\n            behaviours: derive$1([\n                Keying.config({\n                    mode: 'acyclic',\n                    useTabstopAt: not(isPseudoStop)\n                })\n            ])\n        };\n        return ModalDialog.parts.body(bodySpec);\n    };\n\n    const isTouch = global$7.deviceType.isTouch();\n    const hiddenHeader = (title, close) => ({\n        dom: {\n            tag: 'div',\n            styles: { display: 'none' },\n            classes: ['tox-dialog__header']\n        },\n        components: [\n            title,\n            close\n        ]\n    });\n    const pClose = (onClose, providersBackstage) => ModalDialog.parts.close(\n    // Need to find a way to make it clear in the docs whether parts can be sketches\n    Button.sketch({\n        dom: {\n            tag: 'button',\n            classes: ['tox-button', 'tox-button--icon', 'tox-button--naked'],\n            attributes: {\n                'type': 'button',\n                'aria-label': providersBackstage.translate('Close')\n            }\n        },\n        action: onClose,\n        buttonBehaviours: derive$1([\n            Tabstopping.config({})\n        ])\n    }));\n    const pUntitled = () => ModalDialog.parts.title({\n        dom: {\n            tag: 'div',\n            classes: ['tox-dialog__title'],\n            innerHtml: '',\n            styles: {\n                display: 'none'\n            }\n        }\n    });\n    const pBodyMessage = (message, providersBackstage) => ModalDialog.parts.body({\n        dom: {\n            tag: 'div',\n            classes: ['tox-dialog__body']\n        },\n        components: [\n            {\n                dom: {\n                    tag: 'div',\n                    classes: ['tox-dialog__body-content']\n                },\n                components: [\n                    {\n                        dom: fromHtml(`<p>${sanitizeHtmlString(providersBackstage.translate(message))}</p>`)\n                    }\n                ]\n            }\n        ]\n    });\n    const pFooter = (buttons) => ModalDialog.parts.footer({\n        dom: {\n            tag: 'div',\n            classes: ['tox-dialog__footer']\n        },\n        components: buttons\n    });\n    const pFooterGroup = (startButtons, endButtons) => [\n        Container.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-dialog__footer-start']\n            },\n            components: startButtons\n        }),\n        Container.sketch({\n            dom: {\n                tag: 'div',\n                classes: ['tox-dialog__footer-end']\n            },\n            components: endButtons\n        })\n    ];\n    const renderDialog$1 = (spec) => {\n        const dialogClass = 'tox-dialog';\n        const blockerClass = dialogClass + '-wrap';\n        const blockerBackdropClass = blockerClass + '__backdrop';\n        const scrollLockClass = dialogClass + '__disable-scroll';\n        return ModalDialog.sketch({\n            lazySink: spec.lazySink,\n            onEscape: (comp) => {\n                spec.onEscape(comp);\n                // TODO: Make a strong type for Handled KeyEvent\n                return Optional.some(true);\n            },\n            useTabstopAt: (elem) => !isPseudoStop(elem),\n            firstTabstop: spec.firstTabstop,\n            dom: {\n                tag: 'div',\n                classes: [dialogClass].concat(spec.extraClasses),\n                styles: {\n                    position: 'relative',\n                    ...spec.extraStyles\n                }\n            },\n            components: [\n                spec.header,\n                spec.body,\n                ...spec.footer.toArray()\n            ],\n            parts: {\n                blocker: {\n                    dom: fromHtml(`<div class=\"${blockerClass}\"></div>`),\n                    components: [\n                        {\n                            dom: {\n                                tag: 'div',\n                                classes: (isTouch ? [blockerBackdropClass, blockerBackdropClass + '--opaque'] : [blockerBackdropClass])\n                            }\n                        }\n                    ]\n                }\n            },\n            dragBlockClass: blockerClass,\n            modalBehaviours: derive$1([\n                Focusing.config({}),\n                config('dialog-events', spec.dialogEvents.concat([\n                    // Note: `runOnSource` here will only listen to the event at the outer component level.\n                    // Using just `run` instead will cause an infinite loop as `focusIn` would fire a `focusin` which would then get responded to and so forth.\n                    runOnSource(focusin(), (comp, _se) => {\n                        Blocking.isBlocked(comp) ? noop() : Keying.focusIn(comp);\n                    }),\n                    run$1(focusShifted(), (comp, se) => {\n                        comp.getSystem().broadcastOn([dialogFocusShiftedChannel], {\n                            newFocus: se.event.newFocus\n                        });\n                    })\n                ])),\n                config('scroll-lock', [\n                    runOnAttached(() => {\n                        add$2(body(), scrollLockClass);\n                    }),\n                    runOnDetached(() => {\n                        remove$3(body(), scrollLockClass);\n                    })\n                ]),\n                ...spec.extraBehaviours\n            ]),\n            eventOrder: {\n                [execute$5()]: ['dialog-events'],\n                [attachedToDom()]: ['scroll-lock', 'dialog-events', 'alloy.base.behaviour'],\n                [detachedFromDom()]: ['alloy.base.behaviour', 'dialog-events', 'scroll-lock'],\n                ...spec.eventOrder\n            }\n        });\n    };\n\n    const renderClose = (providersBackstage) => Button.sketch({\n        dom: {\n            tag: 'button',\n            classes: ['tox-button', 'tox-button--icon', 'tox-button--naked'],\n            attributes: {\n                'type': 'button',\n                'aria-label': providersBackstage.translate('Close'),\n                'data-mce-name': 'close'\n            }\n        },\n        buttonBehaviours: derive$1([\n            Tabstopping.config({}),\n            Tooltipping.config(providersBackstage.tooltips.getConfig({\n                tooltipText: providersBackstage.translate('Close')\n            }))\n        ]),\n        components: [\n            render$4('close', { tag: 'span', classes: ['tox-icon'] }, providersBackstage.icons)\n        ],\n        action: (comp) => {\n            emit(comp, formCancelEvent);\n        },\n    });\n    const renderTitle = (spec, dialogId, titleId, providersBackstage) => {\n        const renderComponents = (data) => [text$2(providersBackstage.translate(data.title))];\n        return {\n            dom: {\n                tag: 'h1',\n                classes: ['tox-dialog__title'],\n                attributes: {\n                    ...titleId.map((x) => ({ id: x })).getOr({})\n                }\n            },\n            components: [],\n            behaviours: derive$1([\n                Reflecting.config({\n                    channel: `${titleChannel}-${dialogId}`,\n                    initialData: spec,\n                    renderComponents\n                })\n            ])\n        };\n    };\n    const renderDragHandle = () => ({\n        dom: fromHtml('<div class=\"tox-dialog__draghandle\"></div>')\n    });\n    const renderInlineHeader = (spec, dialogId, titleId, providersBackstage) => Container.sketch({\n        dom: fromHtml('<div class=\"tox-dialog__header\"></div>'),\n        components: [\n            renderTitle(spec, dialogId, Optional.some(titleId), providersBackstage),\n            renderDragHandle(),\n            renderClose(providersBackstage)\n        ],\n        containerBehaviours: derive$1([\n            Dragging.config({\n                mode: 'mouse',\n                blockerClass: 'blocker',\n                getTarget: (handle) => {\n                    return closest$3(handle, '[role=\"dialog\"]').getOrDie();\n                },\n                snaps: {\n                    getSnapPoints: () => [],\n                    leftAttr: 'data-drag-left',\n                    topAttr: 'data-drag-top'\n                },\n                onDrag: (comp, target) => {\n                    comp.getSystem().broadcastOn([repositionPopups()], { target });\n                }\n            })\n        ])\n    });\n    const renderModalHeader = (spec, dialogId, providersBackstage) => {\n        const pTitle = ModalDialog.parts.title(renderTitle(spec, dialogId, Optional.none(), providersBackstage));\n        const pHandle = ModalDialog.parts.draghandle(renderDragHandle());\n        const pClose = ModalDialog.parts.close(renderClose(providersBackstage));\n        const components = [pTitle].concat(spec.draggable ? [pHandle] : []).concat([pClose]);\n        return Container.sketch({\n            dom: fromHtml('<div class=\"tox-dialog__header\"></div>'),\n            components\n        });\n    };\n\n    const getHeader = (title, dialogId, backstage) => renderModalHeader({\n        title: backstage.shared.providers.translate(title),\n        draggable: backstage.dialog.isDraggableModal()\n    }, dialogId, backstage.shared.providers);\n    const getBusySpec = (message, bs, providers, headerHeight) => ({\n        dom: {\n            tag: 'div',\n            classes: ['tox-dialog__busy-spinner'],\n            attributes: {\n                'aria-label': providers.translate(message)\n            },\n            styles: {\n                left: '0px',\n                right: '0px',\n                bottom: '0px',\n                top: `${headerHeight.getOr(0)}px`,\n                position: 'absolute'\n            }\n        },\n        behaviours: bs,\n        components: [{\n                dom: fromHtml('<div class=\"tox-spinner\"><div></div><div></div><div></div></div>')\n            }]\n    });\n    const getEventExtras = (lazyDialog, providers, extra) => ({\n        onClose: () => extra.closeWindow(),\n        onBlock: (blockEvent) => {\n            const headerHeight = descendant(lazyDialog().element, '.tox-dialog__header').map((header) => get$d(header));\n            ModalDialog.setBusy(lazyDialog(), (_comp, bs) => getBusySpec(blockEvent.message, bs, providers, headerHeight));\n        },\n        onUnblock: () => {\n            ModalDialog.setIdle(lazyDialog());\n        }\n    });\n    const fullscreenClass = 'tox-dialog--fullscreen';\n    const largeDialogClass = 'tox-dialog--width-lg';\n    const mediumDialogClass = 'tox-dialog--width-md';\n    const getDialogSizeClass = (size) => {\n        switch (size) {\n            case 'large':\n                return Optional.some(largeDialogClass);\n            case 'medium':\n                return Optional.some(mediumDialogClass);\n            default:\n                return Optional.none();\n        }\n    };\n    const updateDialogSizeClass = (size, component) => {\n        const dialogBody = SugarElement.fromDom(component.element.dom);\n        if (!has(dialogBody, fullscreenClass)) {\n            remove$2(dialogBody, [largeDialogClass, mediumDialogClass]);\n            getDialogSizeClass(size).each((dialogSizeClass) => add$2(dialogBody, dialogSizeClass));\n        }\n    };\n    const toggleFullscreen = (comp, currentSize) => {\n        const dialogBody = SugarElement.fromDom(comp.element.dom);\n        const classes = get$7(dialogBody);\n        const currentSizeClass = find$5(classes, (c) => c === largeDialogClass || c === mediumDialogClass).or(getDialogSizeClass(currentSize));\n        toggle$3(dialogBody, [fullscreenClass, ...currentSizeClass.toArray()]);\n    };\n    const renderModalDialog = (spec, dialogEvents, backstage) => build$1(renderDialog$1({\n        ...spec,\n        firstTabstop: 1,\n        lazySink: backstage.shared.getSink,\n        extraBehaviours: [\n            memory({}),\n            ...spec.extraBehaviours\n        ],\n        onEscape: (comp) => {\n            emit(comp, formCancelEvent);\n        },\n        dialogEvents,\n        eventOrder: {\n            [receive()]: [Reflecting.name(), Receiving.name()],\n            [attachedToDom()]: ['scroll-lock', Reflecting.name(), 'messages', 'dialog-events', 'alloy.base.behaviour'],\n            [detachedFromDom()]: ['alloy.base.behaviour', 'dialog-events', 'messages', Reflecting.name(), 'scroll-lock']\n        }\n    }));\n    const mapMenuButtons = (buttons, menuItemStates = {}) => {\n        const mapItems = (button) => {\n            const items = map$2(button.items, (item) => {\n                const cell = get$h(menuItemStates, item.name).getOr(Cell(false));\n                return {\n                    ...item,\n                    storage: cell\n                };\n            });\n            return {\n                ...button,\n                items\n            };\n        };\n        return map$2(buttons, (button) => {\n            return button.type === 'menu' ? mapItems(button) : button;\n        });\n    };\n    const extractCellsToObject = (buttons) => foldl(buttons, (acc, button) => {\n        if (button.type === 'menu') {\n            const menuButton = button;\n            return foldl(menuButton.items, (innerAcc, item) => {\n                innerAcc[item.name] = item.storage;\n                return innerAcc;\n            }, acc);\n        }\n        return acc;\n    }, {});\n\n    const initCommonEvents = (fireApiEvent, extras) => [\n        // When focus moves onto a tab-placeholder, skip to the next thing in the tab sequence\n        runWithTarget(focusin(), onFocus),\n        // TODO: Test if disabled first.\n        fireApiEvent(formCloseEvent, (_api, spec, _event, self) => {\n            // TINY-9148: Safari scrolls down to the sink if the dialog is selected before removing,\n            // so we should blur the currently active element beforehand.\n            if (hasFocus(self.element)) {\n                active$1(getRootNode(self.element)).each(blur$1);\n            }\n            extras.onClose();\n            spec.onClose();\n        }),\n        // TODO: Test if disabled first.\n        fireApiEvent(formCancelEvent, (api, spec, _event, self) => {\n            spec.onCancel(api);\n            emit(self, formCloseEvent);\n        }),\n        run$1(formUnblockEvent, (_c, _se) => extras.onUnblock()),\n        run$1(formBlockEvent, (_c, se) => extras.onBlock(se.event))\n    ];\n    const initUrlDialog = (getInstanceApi, extras) => {\n        const fireApiEvent = (eventName, f) => run$1(eventName, (c, se) => {\n            withSpec(c, (spec, _c) => {\n                f(getInstanceApi(), spec, se.event, c);\n            });\n        });\n        const withSpec = (c, f) => {\n            Reflecting.getState(c).get().each((currentDialog) => {\n                f(currentDialog, c);\n            });\n        };\n        return [\n            ...initCommonEvents(fireApiEvent, extras),\n            fireApiEvent(formActionEvent, (api, spec, event) => {\n                spec.onAction(api, { name: event.name });\n            })\n        ];\n    };\n    const initDialog = (getInstanceApi, extras, getSink) => {\n        const fireApiEvent = (eventName, f) => run$1(eventName, (c, se) => {\n            withSpec(c, (spec, _c) => {\n                f(getInstanceApi(), spec, se.event, c);\n            });\n        });\n        const withSpec = (c, f) => {\n            Reflecting.getState(c).get().each((currentDialogInit) => {\n                f(currentDialogInit.internalDialog, c);\n            });\n        };\n        return [\n            ...initCommonEvents(fireApiEvent, extras),\n            fireApiEvent(formSubmitEvent, (api, spec) => spec.onSubmit(api)),\n            fireApiEvent(formChangeEvent, (api, spec, event) => {\n                spec.onChange(api, { name: event.name });\n            }),\n            fireApiEvent(formActionEvent, (api, spec, event, component) => {\n                // TODO: add a test for focusIn (TINY-10125)\n                const focusIn = () => component.getSystem().isConnected() ? Keying.focusIn(component) : undefined;\n                const isDisabled = (focused) => has$1(focused, 'disabled') || getOpt(focused, 'aria-disabled').exists((val) => val === 'true');\n                const rootNode = getRootNode(component.element);\n                const current = active$1(rootNode);\n                spec.onAction(api, { name: event.name, value: event.value });\n                active$1(rootNode).fold(focusIn, (focused) => {\n                    // We need to check if the focused element is disabled because apparently firefox likes to leave focus on disabled elements.\n                    if (isDisabled(focused)) {\n                        focusIn();\n                        // And we need the below check for IE, which likes to leave focus on the parent of disabled elements\n                    }\n                    else if (current.exists((cur) => contains(focused, cur) && isDisabled(cur))) {\n                        focusIn();\n                        // Lastly if something outside the sink has focus then return the focus back to the dialog\n                    }\n                    else {\n                        getSink().toOptional()\n                            .filter((sink) => !contains(sink.element, focused))\n                            .each(focusIn);\n                    }\n                });\n            }),\n            fireApiEvent(formTabChangeEvent, (api, spec, event) => {\n                spec.onTabChange(api, { newTabName: event.name, oldTabName: event.oldName });\n            }),\n            // When the dialog is being closed, store the current state of the form\n            runOnDetached((component) => {\n                const api = getInstanceApi();\n                Representing.setValue(component, api.getData());\n            })\n        ];\n    };\n\n    const makeButton = (button, backstage) => renderFooterButton(button, button.type, backstage);\n    const lookup = (compInSystem, footerButtons, buttonName) => find$5(footerButtons, (button) => button.name === buttonName)\n        .bind((memButton) => memButton.memento.getOpt(compInSystem));\n    const renderComponents = (_data, state) => {\n        // default group is 'end'\n        const footerButtons = state.map((s) => s.footerButtons).getOr([]);\n        const buttonGroups = partition$3(footerButtons, (button) => button.align === 'start');\n        const makeGroup = (edge, buttons) => Container.sketch({\n            dom: {\n                tag: 'div',\n                classes: [`tox-dialog__footer-${edge}`]\n            },\n            components: map$2(buttons, (button) => button.memento.asSpec())\n        });\n        const startButtons = makeGroup('start', buttonGroups.pass);\n        const endButtons = makeGroup('end', buttonGroups.fail);\n        return [startButtons, endButtons];\n    };\n    const renderFooter = (initSpec, dialogId, backstage) => {\n        const updateState = (comp, data) => {\n            const footerButtons = map$2(data.buttons, (button) => {\n                const memButton = record(makeButton(button, backstage));\n                return {\n                    name: button.name,\n                    align: button.align,\n                    memento: memButton\n                };\n            });\n            const lookupByName = (buttonName) => lookup(comp, footerButtons, buttonName);\n            return Optional.some({\n                lookupByName,\n                footerButtons\n            });\n        };\n        return {\n            dom: fromHtml('<div class=\"tox-dialog__footer\"></div>'),\n            components: [],\n            behaviours: derive$1([\n                Reflecting.config({\n                    channel: `${footerChannel}-${dialogId}`,\n                    initialData: initSpec,\n                    updateState,\n                    renderComponents\n                })\n            ])\n        };\n    };\n    const renderInlineFooter = (initSpec, dialogId, backstage) => renderFooter(initSpec, dialogId, backstage);\n    const renderModalFooter = (initSpec, dialogId, backstage) => ModalDialog.parts.footer(renderFooter(initSpec, dialogId, backstage));\n\n    const getCompByName = (access, name) => {\n        // TODO: Add API to alloy to find the inner most component of a Composing chain.\n        const root = access.getRoot();\n        // This is just to avoid throwing errors if the dialog closes before this. We should take it out\n        // while developing (probably), and put it back in for the real thing.\n        if (root.getSystem().isConnected()) {\n            const form = Composing.getCurrent(access.getFormWrapper()).getOr(access.getFormWrapper());\n            return Form.getField(form, name).orThunk(() => {\n                const footer = access.getFooter();\n                const footerState = footer.bind((f) => Reflecting.getState(f).get());\n                return footerState.bind((f) => f.lookupByName(name));\n            });\n        }\n        else {\n            return Optional.none();\n        }\n    };\n    const validateData$1 = (access, data) => {\n        const root = access.getRoot();\n        return Reflecting.getState(root).get().map((dialogState) => getOrDie(asRaw('data', dialogState.dataValidator, data))).getOr(data);\n    };\n    const getDialogApi = (access, doRedial, menuItemStates) => {\n        const withRoot = (f) => {\n            const root = access.getRoot();\n            if (root.getSystem().isConnected()) {\n                f(root);\n            }\n        };\n        const getData = () => {\n            const root = access.getRoot();\n            const valueComp = root.getSystem().isConnected() ? access.getFormWrapper() : root;\n            const representedValues = Representing.getValue(valueComp);\n            const menuItemCurrentState = map$1(menuItemStates, (cell) => cell.get());\n            return {\n                ...representedValues,\n                ...menuItemCurrentState\n            };\n        };\n        const setData = (newData) => {\n            // Currently, the decision is to ignore setData calls that fire after the dialog is closed\n            withRoot((_) => {\n                const prevData = instanceApi.getData();\n                const mergedData = deepMerge(prevData, newData);\n                const newInternalData = validateData$1(access, mergedData);\n                const form = access.getFormWrapper();\n                Representing.setValue(form, newInternalData);\n                each(menuItemStates, (v, k) => {\n                    if (has$2(mergedData, k)) {\n                        v.set(mergedData[k]);\n                    }\n                });\n            });\n        };\n        const setEnabled = (name, state) => {\n            getCompByName(access, name).each(state ? Disabling.enable : Disabling.disable);\n        };\n        const focus = (name) => {\n            getCompByName(access, name).each(Focusing.focus);\n        };\n        const block = (message) => {\n            if (!isString(message)) {\n                throw new Error('The dialogInstanceAPI.block function should be passed a blocking message of type string as an argument');\n            }\n            withRoot((root) => {\n                emitWith(root, formBlockEvent, { message });\n            });\n        };\n        const unblock = () => {\n            withRoot((root) => {\n                emit(root, formUnblockEvent);\n            });\n        };\n        const showTab = (name) => {\n            withRoot((_) => {\n                const body = access.getBody();\n                const bodyState = Reflecting.getState(body);\n                if (bodyState.get().exists((b) => b.isTabPanel())) {\n                    Composing.getCurrent(body).each((tabSection) => {\n                        TabSection.showTab(tabSection, name);\n                    });\n                }\n            });\n        };\n        const redial = (d) => {\n            withRoot((root) => {\n                const id = access.getId();\n                const dialogInit = doRedial(d);\n                const storedMenuButtons = mapMenuButtons(dialogInit.internalDialog.buttons, menuItemStates);\n                // TINY-9223: We only need to broadcast to the mothership containing the dialog\n                root.getSystem().broadcastOn([`${dialogChannel}-${id}`], dialogInit);\n                // NOTE: Reflecting does not have any smart handling of nested reflecting components,\n                // and the order of receiving a broadcast is non-deterministic. Here we use separate\n                // channels for each section (title, body, footer), and make those broadcasts *after*\n                // we've already sent the overall dialog broadcast. The overall dialog broadcast\n                // doesn't actually change the components ... its Reflecting config just stores state,\n                // but these Reflecting configs (title, body, footer) do change the components based on\n                // the received broadcasts.\n                root.getSystem().broadcastOn([`${titleChannel}-${id}`], dialogInit.internalDialog);\n                root.getSystem().broadcastOn([`${bodyChannel}-${id}`], dialogInit.internalDialog);\n                root.getSystem().broadcastOn([`${footerChannel}-${id}`], {\n                    ...dialogInit.internalDialog,\n                    buttons: storedMenuButtons\n                });\n                instanceApi.setData(dialogInit.initialData);\n            });\n        };\n        const close = () => {\n            withRoot((root) => {\n                emit(root, formCloseEvent);\n            });\n        };\n        const instanceApi = {\n            getData,\n            setData,\n            setEnabled,\n            focus,\n            block,\n            unblock,\n            showTab,\n            redial,\n            close,\n            toggleFullscreen: access.toggleFullscreen\n        };\n        return instanceApi;\n    };\n\n    const renderDialog = (dialogInit, extra, backstage) => {\n        const dialogId = generate$6('dialog');\n        const internalDialog = dialogInit.internalDialog;\n        const header = getHeader(internalDialog.title, dialogId, backstage);\n        const dialogSize = Cell(internalDialog.size);\n        const getCompByName$1 = (name) => getCompByName(modalAccess, name);\n        const dialogSizeClasses = getDialogSizeClass(dialogSize.get()).toArray();\n        const updateState = (comp, incoming) => {\n            dialogSize.set(incoming.internalDialog.size);\n            updateDialogSizeClass(incoming.internalDialog.size, comp);\n            return Optional.some(incoming);\n        };\n        const body = renderModalBody({\n            body: internalDialog.body,\n            initialData: internalDialog.initialData\n        }, dialogId, backstage, getCompByName$1);\n        const storedMenuButtons = mapMenuButtons(internalDialog.buttons);\n        const objOfCells = extractCellsToObject(storedMenuButtons);\n        const footer = someIf(storedMenuButtons.length !== 0, renderModalFooter({ buttons: storedMenuButtons }, dialogId, backstage));\n        const dialogEvents = initDialog(() => instanceApi, getEventExtras(() => dialog, backstage.shared.providers, extra), backstage.shared.getSink);\n        const spec = {\n            id: dialogId,\n            header,\n            body,\n            footer,\n            extraClasses: dialogSizeClasses,\n            extraBehaviours: [\n                Reflecting.config({\n                    channel: `${dialogChannel}-${dialogId}`,\n                    updateState,\n                    initialData: dialogInit\n                }),\n            ],\n            extraStyles: {}\n        };\n        const dialog = renderModalDialog(spec, dialogEvents, backstage);\n        const modalAccess = (() => {\n            const getForm = () => {\n                const outerForm = ModalDialog.getBody(dialog);\n                return Composing.getCurrent(outerForm).getOr(outerForm);\n            };\n            const toggleFullscreen$1 = () => {\n                toggleFullscreen(dialog, dialogSize.get());\n            };\n            return {\n                getId: constant$1(dialogId),\n                getRoot: constant$1(dialog),\n                getBody: () => ModalDialog.getBody(dialog),\n                getFooter: () => ModalDialog.getFooter(dialog),\n                getFormWrapper: getForm,\n                toggleFullscreen: toggleFullscreen$1\n            };\n        })();\n        // TODO: Get the validator from the dialog state.\n        const instanceApi = getDialogApi(modalAccess, extra.redial, objOfCells);\n        return {\n            dialog,\n            instanceApi\n        };\n    };\n\n    // DUPE with SilverDialog. Cleaning up.\n    const renderInlineDialog = (dialogInit, extra, backstage, ariaAttrs = false, refreshDocking) => {\n        const dialogId = generate$6('dialog');\n        const dialogLabelId = generate$6('dialog-label');\n        const dialogContentId = generate$6('dialog-content');\n        const internalDialog = dialogInit.internalDialog;\n        const getCompByName$1 = (name) => getCompByName(modalAccess, name);\n        const dialogSize = Cell(internalDialog.size);\n        const dialogSizeClass = getDialogSizeClass(dialogSize.get()).toArray();\n        // Reflecting behaviour broadcasts on dialog channel only on redial.\n        const updateState = (comp, incoming) => {\n            // Update dialog size and position upon redial.\n            dialogSize.set(incoming.internalDialog.size);\n            updateDialogSizeClass(incoming.internalDialog.size, comp);\n            refreshDocking();\n            return Optional.some(incoming);\n        };\n        const memHeader = record(renderInlineHeader({\n            title: internalDialog.title,\n            draggable: true\n        }, dialogId, dialogLabelId, backstage.shared.providers));\n        const memBody = record(renderInlineBody({\n            body: internalDialog.body,\n            initialData: internalDialog.initialData,\n        }, dialogId, dialogContentId, backstage, ariaAttrs, getCompByName$1));\n        const storagedMenuButtons = mapMenuButtons(internalDialog.buttons);\n        const objOfCells = extractCellsToObject(storagedMenuButtons);\n        const optMemFooter = someIf(storagedMenuButtons.length !== 0, record(renderInlineFooter({\n            buttons: storagedMenuButtons\n        }, dialogId, backstage)));\n        const dialogEvents = initDialog(() => instanceApi, {\n            onBlock: (event) => {\n                Blocking.block(dialog, (_comp, bs) => {\n                    const headerHeight = memHeader.getOpt(dialog).map((dialog) => get$d(dialog.element));\n                    return getBusySpec(event.message, bs, backstage.shared.providers, headerHeight);\n                });\n            },\n            onUnblock: () => {\n                Blocking.unblock(dialog);\n            },\n            onClose: () => extra.closeWindow()\n        }, backstage.shared.getSink);\n        const inlineClass = 'tox-dialog-inline';\n        const os = detect$1().os;\n        // TODO: Disable while validating?\n        const dialog = build$1({\n            dom: {\n                tag: 'div',\n                classes: ['tox-dialog', inlineClass, ...dialogSizeClass],\n                attributes: {\n                    role: 'dialog',\n                    // TINY-10808 - Workaround to address the dialog header not being announced on VoiceOver with aria-labelledby, ideally we should use the aria-labelledby\n                    ...os.isMacOS() ? { 'aria-label': internalDialog.title } : { 'aria-labelledby': dialogLabelId }\n                }\n            },\n            eventOrder: {\n                [receive()]: [Reflecting.name(), Receiving.name()],\n                [execute$5()]: ['execute-on-form'],\n                [attachedToDom()]: ['reflecting', 'execute-on-form']\n            },\n            // Dupe with SilverDialog.\n            behaviours: derive$1([\n                Keying.config({\n                    mode: 'cyclic',\n                    onEscape: (c) => {\n                        emit(c, formCloseEvent);\n                        return Optional.some(true);\n                    },\n                    useTabstopAt: (elem) => !isPseudoStop(elem) && (name$3(elem) !== 'button' || get$g(elem, 'disabled') !== 'disabled'),\n                    firstTabstop: 1\n                }),\n                Reflecting.config({\n                    channel: `${dialogChannel}-${dialogId}`,\n                    updateState,\n                    initialData: dialogInit\n                }),\n                Focusing.config({}),\n                config('execute-on-form', dialogEvents.concat([\n                    // Note: `runOnSource` here will only listen to the event at the outer component level.\n                    // Using just `run` instead will cause an infinite loop as `focusIn` would fire a `focusin` which would then get responded to and so forth.\n                    runOnSource(focusin(), (comp, _se) => {\n                        Keying.focusIn(comp);\n                    }),\n                    run$1(focusShifted(), (comp, se) => {\n                        comp.getSystem().broadcastOn([dialogFocusShiftedChannel], {\n                            newFocus: se.event.newFocus\n                        });\n                    })\n                ])),\n                Blocking.config({ getRoot: () => Optional.some(dialog) }),\n                Replacing.config({}),\n                memory({})\n            ]),\n            components: [\n                memHeader.asSpec(),\n                memBody.asSpec(),\n                ...optMemFooter.map((memFooter) => memFooter.asSpec()).toArray()\n            ]\n        });\n        const toggleFullscreen$1 = () => {\n            toggleFullscreen(dialog, dialogSize.get());\n        };\n        // TODO: Clean up the dupe between this (InlineDialog) and SilverDialog\n        const modalAccess = {\n            getId: constant$1(dialogId),\n            getRoot: constant$1(dialog),\n            getFooter: () => optMemFooter.map((memFooter) => memFooter.get(dialog)),\n            getBody: () => memBody.get(dialog),\n            getFormWrapper: () => {\n                const body = memBody.get(dialog);\n                return Composing.getCurrent(body).getOr(body);\n            },\n            toggleFullscreen: toggleFullscreen$1\n        };\n        const instanceApi = getDialogApi(modalAccess, extra.redial, objOfCells);\n        return {\n            dialog,\n            instanceApi\n        };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    const getUrlDialogApi = (root) => {\n        const withRoot = (f) => {\n            if (root.getSystem().isConnected()) {\n                f(root);\n            }\n        };\n        const block = (message) => {\n            if (!isString(message)) {\n                throw new Error('The urlDialogInstanceAPI.block function should be passed a blocking message of type string as an argument');\n            }\n            withRoot((root) => {\n                emitWith(root, formBlockEvent, { message });\n            });\n        };\n        const unblock = () => {\n            withRoot((root) => {\n                emit(root, formUnblockEvent);\n            });\n        };\n        const close = () => {\n            withRoot((root) => {\n                emit(root, formCloseEvent);\n            });\n        };\n        const sendMessage = (data) => {\n            withRoot((root) => {\n                root.getSystem().broadcastOn([bodySendMessageChannel], data);\n            });\n        };\n        return {\n            block,\n            unblock,\n            close,\n            sendMessage\n        };\n    };\n\n    // A list of supported message actions\n    const SUPPORTED_MESSAGE_ACTIONS = ['insertContent', 'setContent', 'execCommand', 'close', 'block', 'unblock'];\n    const isSupportedMessage = (data) => isObject(data) && SUPPORTED_MESSAGE_ACTIONS.indexOf(data.mceAction) !== -1;\n    const isCustomMessage = (data) => !isSupportedMessage(data) && isObject(data) && has$2(data, 'mceAction');\n    const handleMessage = (editor, api, data) => {\n        switch (data.mceAction) {\n            case 'insertContent':\n                editor.insertContent(data.content);\n                break;\n            case 'setContent':\n                editor.setContent(data.content);\n                break;\n            case 'execCommand':\n                const ui = isBoolean(data.ui) ? data.ui : false;\n                editor.execCommand(data.cmd, ui, data.value);\n                break;\n            case 'close':\n                api.close();\n                break;\n            case 'block':\n                api.block(data.message);\n                break;\n            case 'unblock':\n                api.unblock();\n                break;\n        }\n    };\n    const renderUrlDialog = (internalDialog, extra, editor, backstage) => {\n        const dialogId = generate$6('dialog');\n        const header = getHeader(internalDialog.title, dialogId, backstage);\n        const body = renderIframeBody(internalDialog);\n        const footer = internalDialog.buttons.bind((buttons) => {\n            // Don't render a footer if no buttons are specified\n            if (buttons.length === 0) {\n                return Optional.none();\n            }\n            else {\n                return Optional.some(renderModalFooter({ buttons }, dialogId, backstage));\n            }\n        });\n        const dialogEvents = initUrlDialog(() => instanceApi, getEventExtras(() => dialog, backstage.shared.providers, extra));\n        // Add the styles for the modal width/height\n        const styles = {\n            ...internalDialog.height.fold(() => ({}), (height) => ({ 'height': height + 'px', 'max-height': height + 'px' })),\n            ...internalDialog.width.fold(() => ({}), (width) => ({ 'width': width + 'px', 'max-width': width + 'px' }))\n        };\n        // Default back to using a large sized dialog, if no dimensions are specified\n        const classes = internalDialog.width.isNone() && internalDialog.height.isNone() ? ['tox-dialog--width-lg'] : [];\n        // Determine the iframe urls domain, so we can target that specifically when sending messages\n        const iframeUri = new global(internalDialog.url, { base_uri: new global(window.location.href) });\n        const iframeDomain = `${iframeUri.protocol}://${iframeUri.host}${iframeUri.port ? ':' + iframeUri.port : ''}`;\n        const messageHandlerUnbinder = unbindable();\n        const updateState = (_comp, incoming) => Optional.some(incoming);\n        // Setup the behaviours for dealing with messages between the iframe and current window\n        const extraBehaviours = [\n            // Because this doesn't define `renderComponents`, all this does is update the state.\n            // We use the state for the initialData. The other parts (body etc.) render the\n            // components based on what reflecting receives.\n            Reflecting.config({\n                channel: `${dialogChannel}-${dialogId}`,\n                updateState,\n                initialData: internalDialog\n            }),\n            config('messages', [\n                // When the dialog is opened, bind a window message listener for the spec url\n                runOnAttached(() => {\n                    const unbind = bind$1(SugarElement.fromDom(window), 'message', (e) => {\n                        // Validate that the request came from the correct domain\n                        if (iframeUri.isSameOrigin(new global(e.raw.origin))) {\n                            const data = e.raw.data;\n                            // Handle the message if it has the 'mceAction' key, otherwise just ignore it\n                            if (isSupportedMessage(data)) {\n                                handleMessage(editor, instanceApi, data);\n                            }\n                            else if (isCustomMessage(data)) {\n                                internalDialog.onMessage(instanceApi, data);\n                            }\n                        }\n                    });\n                    messageHandlerUnbinder.set(unbind);\n                }),\n                // When the dialog is closed, unbind the window message listener\n                runOnDetached(messageHandlerUnbinder.clear)\n            ]),\n            Receiving.config({\n                channels: {\n                    [bodySendMessageChannel]: {\n                        onReceive: (comp, data) => {\n                            // Send the message to the iframe via postMessage\n                            descendant(comp.element, 'iframe').each((iframeEle) => {\n                                const iframeWin = iframeEle.dom.contentWindow;\n                                if (isNonNullable(iframeWin)) {\n                                    iframeWin.postMessage(data, iframeDomain);\n                                }\n                            });\n                        }\n                    }\n                }\n            })\n        ];\n        const spec = {\n            id: dialogId,\n            header,\n            body,\n            footer,\n            extraClasses: classes,\n            extraBehaviours,\n            extraStyles: styles\n        };\n        const dialog = renderModalDialog(spec, dialogEvents, backstage);\n        const instanceApi = getUrlDialogApi(dialog);\n        return {\n            dialog,\n            instanceApi\n        };\n    };\n\n    const setup$2 = (backstage) => {\n        const sharedBackstage = backstage.shared;\n        const open = (message, callback) => {\n            const closeDialog = () => {\n                ModalDialog.hide(alertDialog);\n                callback();\n            };\n            const memFooterClose = record(renderFooterButton({\n                context: 'any',\n                name: 'close-alert',\n                text: 'OK',\n                primary: true,\n                buttonType: Optional.some('primary'),\n                align: 'end',\n                enabled: true,\n                icon: Optional.none()\n            }, 'cancel', backstage));\n            const titleSpec = pUntitled();\n            const closeSpec = pClose(closeDialog, sharedBackstage.providers);\n            const alertDialog = build$1(renderDialog$1({\n                lazySink: () => sharedBackstage.getSink(),\n                header: hiddenHeader(titleSpec, closeSpec),\n                body: pBodyMessage(message, sharedBackstage.providers),\n                footer: Optional.some(pFooter(pFooterGroup([], [\n                    memFooterClose.asSpec()\n                ]))),\n                onEscape: closeDialog,\n                extraClasses: ['tox-alert-dialog'],\n                extraBehaviours: [],\n                extraStyles: {},\n                dialogEvents: [\n                    run$1(formCancelEvent, closeDialog)\n                ],\n                eventOrder: {}\n            }));\n            ModalDialog.show(alertDialog);\n            const footerCloseButton = memFooterClose.get(alertDialog);\n            Focusing.focus(footerCloseButton);\n        };\n        return {\n            open\n        };\n    };\n\n    const setup$1 = (backstage) => {\n        const sharedBackstage = backstage.shared;\n        // FIX: Extreme dupe with Alert dialog\n        const open = (message, callback) => {\n            const closeDialog = (state) => {\n                ModalDialog.hide(confirmDialog);\n                callback(state);\n            };\n            const memFooterYes = record(renderFooterButton({\n                context: 'any',\n                name: 'yes',\n                text: 'Yes',\n                primary: true,\n                buttonType: Optional.some('primary'),\n                align: 'end',\n                enabled: true,\n                icon: Optional.none()\n            }, 'submit', backstage));\n            const footerNo = renderFooterButton({\n                context: 'any',\n                name: 'no',\n                text: 'No',\n                primary: false,\n                buttonType: Optional.some('secondary'),\n                align: 'end',\n                enabled: true,\n                icon: Optional.none()\n            }, 'cancel', backstage);\n            const titleSpec = pUntitled();\n            const closeSpec = pClose(() => closeDialog(false), sharedBackstage.providers);\n            const confirmDialog = build$1(renderDialog$1({\n                lazySink: () => sharedBackstage.getSink(),\n                header: hiddenHeader(titleSpec, closeSpec),\n                body: pBodyMessage(message, sharedBackstage.providers),\n                footer: Optional.some(pFooter(pFooterGroup([], [\n                    footerNo,\n                    memFooterYes.asSpec()\n                ]))),\n                onEscape: () => closeDialog(false),\n                extraClasses: ['tox-confirm-dialog'],\n                extraBehaviours: [],\n                extraStyles: {},\n                dialogEvents: [\n                    run$1(formCancelEvent, () => closeDialog(false)),\n                    run$1(formSubmitEvent, () => closeDialog(true))\n                ],\n                eventOrder: {}\n            }));\n            ModalDialog.show(confirmDialog);\n            const footerYesButton = memFooterYes.get(confirmDialog);\n            Focusing.focus(footerYesButton);\n        };\n        return {\n            open\n        };\n    };\n\n    const validateData = (data, validator) => getOrDie(asRaw('data', validator, data));\n    const isAlertOrConfirmDialog = (target) => closest$1(target, '.tox-alert-dialog') || closest$1(target, '.tox-confirm-dialog');\n    const inlineAdditionalBehaviours = (editor, isStickyToolbar, isToolbarLocationTop, onHide) => {\n        // When using sticky toolbars it already handles the docking behaviours so applying docking would\n        // do nothing except add additional processing when scrolling, so we don't want to include it here\n        // (Except when the toolbar is located at the bottom since the anchor will be at the top)\n        if (isStickyToolbar && isToolbarLocationTop) {\n            return [];\n        }\n        else {\n            return [\n                Docking.config({\n                    contextual: {\n                        lazyContext: () => Optional.some(box$1(SugarElement.fromDom(editor.getContentAreaContainer()))),\n                        fadeInClass: 'tox-dialog-dock-fadein',\n                        fadeOutClass: 'tox-dialog-dock-fadeout',\n                        transitionClass: 'tox-dialog-dock-transition',\n                        onHide\n                    },\n                    modes: ['top'],\n                    lazyViewport: (comp) => {\n                        // If we don't have a special scrolling environment, then just use the default\n                        // viewport of (window)\n                        const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n                        return optScrollingContext\n                            .map((sc) => {\n                            const combinedBounds = getBoundsFrom(sc);\n                            return {\n                                bounds: combinedBounds,\n                                optScrollEnv: Optional.some({\n                                    currentScrollTop: sc.element.dom.scrollTop,\n                                    scrollElmTop: absolute$3(sc.element).top\n                                })\n                            };\n                        }).getOrThunk(() => ({\n                            bounds: win(),\n                            optScrollEnv: Optional.none()\n                        }));\n                    }\n                })\n            ];\n        }\n    };\n    const setup = (extras) => {\n        const editor = extras.editor;\n        const isStickyToolbar$1 = isStickyToolbar(editor);\n        // Alert and Confirm dialogs are Modal Dialogs\n        const alertDialog = setup$2(extras.backstages.dialog);\n        const confirmDialog = setup$1(extras.backstages.dialog);\n        const open = (config, params, closeWindow) => {\n            if (!isUndefined(params)) {\n                if (params.inline === 'toolbar') {\n                    return openInlineDialog(config, extras.backstages.popup.shared.anchors.inlineDialog(), closeWindow, params);\n                }\n                else if (params.inline === 'bottom') {\n                    return openBottomInlineDialog(config, extras.backstages.popup.shared.anchors.inlineBottomDialog(), closeWindow, params);\n                }\n                else if (params.inline === 'cursor') {\n                    return openInlineDialog(config, extras.backstages.popup.shared.anchors.cursor(), closeWindow, params);\n                }\n            }\n            return openModalDialog(config, closeWindow);\n        };\n        const openUrl = (config, closeWindow) => openModalUrlDialog(config, closeWindow);\n        const openModalUrlDialog = (config, closeWindow) => {\n            const factory = (contents) => {\n                const dialog = renderUrlDialog(contents, {\n                    closeWindow: () => {\n                        ModalDialog.hide(dialog.dialog);\n                        closeWindow(dialog.instanceApi);\n                    }\n                }, editor, extras.backstages.dialog);\n                ModalDialog.show(dialog.dialog);\n                return dialog.instanceApi;\n            };\n            return DialogManager.openUrl(factory, config);\n        };\n        const openModalDialog = (config, closeWindow) => {\n            const factory = (contents, internalInitialData, dataValidator) => {\n                // We used to validate data here, but it's done by the instanceApi.setData call below.\n                const initialData = internalInitialData;\n                const dialogInit = {\n                    dataValidator,\n                    initialData,\n                    internalDialog: contents\n                };\n                const dialog = renderDialog(dialogInit, {\n                    redial: DialogManager.redial,\n                    closeWindow: () => {\n                        ModalDialog.hide(dialog.dialog);\n                        closeWindow(dialog.instanceApi);\n                    }\n                }, extras.backstages.dialog);\n                ModalDialog.show(dialog.dialog);\n                dialog.instanceApi.setData(initialData);\n                return dialog.instanceApi;\n            };\n            return DialogManager.open(factory, config);\n        };\n        const openInlineDialog = (config$1, anchor, closeWindow, windowParams) => {\n            const factory = (contents, internalInitialData, dataValidator) => {\n                const initialData = validateData(internalInitialData, dataValidator);\n                const inlineDialog = value$2();\n                const isToolbarLocationTop = extras.backstages.popup.shared.header.isPositionedAtTop();\n                const dialogInit = {\n                    dataValidator,\n                    initialData,\n                    internalDialog: contents\n                };\n                const refreshDocking = () => inlineDialog.on((dialog) => {\n                    InlineView.reposition(dialog);\n                    if (!isStickyToolbar$1 || !isToolbarLocationTop) {\n                        Docking.refresh(dialog);\n                    }\n                });\n                const dialogUi = renderInlineDialog(dialogInit, {\n                    redial: DialogManager.redial,\n                    closeWindow: () => {\n                        inlineDialog.on(InlineView.hide);\n                        editor.off('ResizeEditor', refreshDocking);\n                        editor.off('ScrollWindow', repositionPopups$1);\n                        inlineDialog.clear();\n                        closeWindow(dialogUi.instanceApi);\n                    }\n                }, extras.backstages.popup, windowParams.ariaAttrs, refreshDocking);\n                const repositionPopups$1 = () => dialogUi.dialog.getSystem().broadcastOn([repositionPopups()], { target: dialogUi.dialog.element });\n                const dismissPopups$1 = () => dialogUi.dialog.getSystem().broadcastOn([dismissPopups()], { target: dialogUi.dialog.element });\n                const inlineDialogComp = build$1(InlineView.sketch({\n                    lazySink: extras.backstages.popup.shared.getSink,\n                    dom: {\n                        tag: 'div',\n                        classes: []\n                    },\n                    // Fires the default dismiss event.\n                    fireDismissalEventInstead: (windowParams.persistent ? { event: 'doNotDismissYet' } : {}),\n                    // TINY-9412: The docking behaviour for inline dialogs is inconsistent\n                    // for toolbar_location: bottom. We need to clarify exactly what the behaviour\n                    // should be. The intent here might have been that they shouldn't automatically\n                    // reposition at all because they aren't visually connected to the toolbar\n                    // (i.e. inline \"toolbar\" dialogs still display at the top, even when the\n                    // toolbar_location is bottom), but it's unclear.\n                    ...isToolbarLocationTop ? {} : { fireRepositionEventInstead: {} },\n                    inlineBehaviours: derive$1([\n                        config('window-manager-inline-events', [\n                            run$1(dismissRequested(), (_comp, _se) => {\n                                emit(dialogUi.dialog, formCancelEvent);\n                            })\n                        ]),\n                        ...inlineAdditionalBehaviours(editor, isStickyToolbar$1, isToolbarLocationTop, dismissPopups$1)\n                    ]),\n                    // Treat alert or confirm dialogs as part of the inline dialog\n                    isExtraPart: (_comp, target) => isAlertOrConfirmDialog(target)\n                }));\n                inlineDialog.set(inlineDialogComp);\n                const getInlineDialogBounds = () => {\n                    // At the moment the inline dialog is just put anywhere in the body, and docking is what is used to make\n                    // sure that it stays onscreen\n                    const elem = editor.inline ? body() : SugarElement.fromDom(editor.getContainer());\n                    const bounds = box$1(elem);\n                    return Optional.some(bounds);\n                };\n                // Position the inline dialog\n                InlineView.showWithinBounds(inlineDialogComp, premade(dialogUi.dialog), { anchor }, getInlineDialogBounds);\n                // Refresh the docking position if not using a sticky toolbar\n                if (!isStickyToolbar$1 || !isToolbarLocationTop) {\n                    Docking.refresh(inlineDialogComp);\n                    // Bind to the editor resize event and update docking as needed. We don't need to worry about\n                    // 'ResizeWindow` as that's handled by docking already.\n                    editor.on('ResizeEditor', refreshDocking);\n                }\n                editor.on('ScrollWindow', repositionPopups$1);\n                // Set the initial data in the dialog and focus the first focusable item\n                dialogUi.instanceApi.setData(initialData);\n                Keying.focusIn(dialogUi.dialog);\n                return dialogUi.instanceApi;\n            };\n            return DialogManager.open(factory, config$1);\n        };\n        const openBottomInlineDialog = (config$1, anchor, closeWindow, windowParams) => {\n            const factory = (contents, internalInitialData, dataValidator) => {\n                const initialData = validateData(internalInitialData, dataValidator);\n                const inlineDialog = value$2();\n                const isToolbarLocationTop = extras.backstages.popup.shared.header.isPositionedAtTop();\n                const dialogInit = {\n                    dataValidator,\n                    initialData,\n                    internalDialog: contents\n                };\n                const refreshDocking = () => inlineDialog.on((dialog) => {\n                    InlineView.reposition(dialog);\n                    Docking.refresh(dialog);\n                });\n                const dialogUi = renderInlineDialog(dialogInit, {\n                    redial: DialogManager.redial,\n                    closeWindow: () => {\n                        inlineDialog.on(InlineView.hide);\n                        editor.off('ResizeEditor ScrollWindow ElementScroll', refreshDocking);\n                        inlineDialog.clear();\n                        closeWindow(dialogUi.instanceApi);\n                    }\n                }, extras.backstages.popup, windowParams.ariaAttrs, refreshDocking);\n                const inlineDialogComp = build$1(InlineView.sketch({\n                    lazySink: extras.backstages.popup.shared.getSink,\n                    dom: {\n                        tag: 'div',\n                        classes: []\n                    },\n                    // Fires the default dismiss event.\n                    fireDismissalEventInstead: (windowParams.persistent ? { event: 'doNotDismissYet' } : {}),\n                    ...isToolbarLocationTop ? {} : { fireRepositionEventInstead: {} },\n                    inlineBehaviours: derive$1([\n                        config('window-manager-inline-events', [\n                            run$1(dismissRequested(), (_comp, _se) => {\n                                emit(dialogUi.dialog, formCancelEvent);\n                            })\n                        ]),\n                        Docking.config({\n                            contextual: {\n                                lazyContext: () => Optional.some(box$1(SugarElement.fromDom(editor.getContentAreaContainer()))),\n                                fadeInClass: 'tox-dialog-dock-fadein',\n                                fadeOutClass: 'tox-dialog-dock-fadeout',\n                                transitionClass: 'tox-dialog-dock-transition'\n                            },\n                            modes: ['top', 'bottom'],\n                            lazyViewport: (comp) => {\n                                const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n                                return optScrollingContext.map((sc) => {\n                                    const combinedBounds = getBoundsFrom(sc);\n                                    return {\n                                        bounds: combinedBounds,\n                                        optScrollEnv: Optional.some({\n                                            currentScrollTop: sc.element.dom.scrollTop,\n                                            scrollElmTop: absolute$3(sc.element).top\n                                        })\n                                    };\n                                }).getOrThunk(() => ({\n                                    bounds: win(),\n                                    optScrollEnv: Optional.none()\n                                }));\n                            }\n                        })\n                    ]),\n                    // Treat alert or confirm dialogs as part of the inline dialog\n                    isExtraPart: (_comp, target) => isAlertOrConfirmDialog(target)\n                }));\n                inlineDialog.set(inlineDialogComp);\n                const getInlineDialogBounds = () => {\n                    return extras.backstages.popup.shared.getSink().toOptional().bind((s) => {\n                        const optScrollingContext = detectWhenSplitUiMode(editor, s.element);\n                        // Margin between element and the bottom of the screen or the editor content area container\n                        const margin = 15;\n                        const bounds$1 = optScrollingContext.map((sc) => getBoundsFrom(sc)).getOr(win());\n                        const contentAreaContainer = box$1(SugarElement.fromDom(editor.getContentAreaContainer()));\n                        const constrainedBounds = constrain(contentAreaContainer, bounds$1);\n                        return Optional.some(bounds(constrainedBounds.x, constrainedBounds.y, constrainedBounds.width, constrainedBounds.height - margin));\n                    });\n                };\n                // Position the inline dialog\n                InlineView.showWithinBounds(inlineDialogComp, premade(dialogUi.dialog), { anchor }, getInlineDialogBounds);\n                Docking.refresh(inlineDialogComp);\n                editor.on('ResizeEditor ScrollWindow ElementScroll ResizeWindow', refreshDocking);\n                // Set the initial data in the dialog and focus the first focusable item\n                dialogUi.instanceApi.setData(initialData);\n                Keying.focusIn(dialogUi.dialog);\n                return dialogUi.instanceApi;\n            };\n            return DialogManager.open(factory, config$1);\n        };\n        const confirm = (message, callback) => {\n            confirmDialog.open(message, callback);\n        };\n        const alert = (message, callback) => {\n            alertDialog.open(message, callback);\n        };\n        const close = (instanceApi) => {\n            instanceApi.close();\n        };\n        return {\n            open,\n            openUrl,\n            alert,\n            close,\n            confirm\n        };\n    };\n\n    const registerOptions = (editor) => {\n        register$f(editor);\n        register$e(editor);\n        register(editor);\n    };\n    var Theme = () => {\n        global$b.add('silver', (editor) => {\n            registerOptions(editor);\n            // When using the ui_mode: split, the popup sink is placed as a sibling to the\n            // editor, which means that it might be subject to any scrolling environments\n            // that the editor has. Therefore, we want to make the popup sink have an overall\n            // bounds that is dependent on its scrolling environment. We don't know that ahead\n            // of time, so we use a mutable variable whose value will change if there is a scrolling context.\n            let popupSinkBounds = () => win();\n            const { dialogs, popups, renderUI: renderModeUI } = setup$3(editor, {\n                // consult the mutable variable to find out the bounds for the popup sink. When renderUI is\n                // called, this mutable variable might be reassigned\n                getPopupSinkBounds: () => popupSinkBounds()\n            });\n            // We wrap the `renderModeUI` function being returned by Render so that we can update\n            // the getPopupSinkBounds mutable variable if required.\n            // DON'T define this function as `async`; otherwise, it will slow down the rendering process and cause flickering if the editor is repeatedly removed and re-initialized.\n            const renderUI = () => {\n                const renderResult = renderModeUI();\n                const optScrollingContext = detectWhenSplitUiMode(editor, popups.getMothership().element);\n                optScrollingContext.each((sc) => {\n                    popupSinkBounds = () => {\n                        // At this stage, it looks like we need to calculate the bounds each time, just in\n                        // case the scrolling context details have changed since the last time. The bounds considers\n                        // the Boxes.box sizes, which might change over time.\n                        return getBoundsFrom(sc);\n                    };\n                });\n                return renderResult;\n            };\n            Autocompleter.register(editor, popups.backstage.shared);\n            const windowMgr = setup({\n                editor,\n                backstages: {\n                    popup: popups.backstage,\n                    dialog: dialogs.backstage\n                }\n            });\n            const notificationRegion = value$2();\n            // The NotificationManager uses the popup mothership (and sink)\n            const getNotificationManagerImpl = () => NotificationManagerImpl(editor, { backstage: popups.backstage }, popups.getMothership(), notificationRegion);\n            const getPromotionElement = () => {\n                return descendant(SugarElement.fromDom(editor.getContainer()), '.tox-promotion').map((promotion) => promotion.dom).getOrNull();\n            };\n            return {\n                renderUI,\n                getWindowManagerImpl: constant$1(windowMgr),\n                getNotificationManagerImpl,\n                getPromotionElement\n            };\n        });\n    };\n\n    Theme();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n", "// Exports the \"silver\" theme for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/themes/silver')\n//   ES2015:\n//     import 'tinymce/themes/silver'\nrequire('./theme.js');"],
  "mappings": "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",
  "names": ["t", "type", "value", "f", "b", "all", "binder", "thunk", "r", "name", "adt", "label", "get", "set", "map", "data", "run", "bind", "output", "error", "optional", "mapError", "min", "max", "prefix", "nu", "left", "text", "parts", "values", "revoke", "clear", "on", "suffix", "throttle", "html", "win", "range", "rect", "element", "dom", "base", "browser", "mediaMatch", "isTouch", "isTablet", "isPhone", "group", "browsers", "oses", "query", "stop", "offset", "filter", "sibling", "parent", "original", "owner", "clone", "image", "resolve", "l", "getOffset", "getOuter", "properties", "top", "translate", "box", "body", "is", "ancestor", "child", "is$1", "selector", "classes", "item", "transform", "anchor", "focus", "input", "width", "height", "path", "point", "position", "right", "bottom", "offsetParent$1", "SimpleResultType", "extract", "toString", "fallback", "partition", "field", "keys", "schema", "EventConfiguration", "sequence", "required", "touch", "handlers", "FocusInsideModes", "valueThunk", "components", "replace", "part", "detail", "units", "config", "uids", "getClasses", "make", "placement", "boundsRestriction", "labelPrefix", "southeast", "southwest", "northeast", "northwest", "south", "north", "east", "west", "bounds$1", "bounds", "layout", "AttributeValue", "HighlightOnOpen", "can", "abort", "closest$1", "active", "rest", "getEvents", "events", "init", "before", "after", "last", "getKeydownRules", "getKeyupRules", "rule", "toEvents", "focusIn", "isVisible", "findCurrent", "go", "execute", "move", "moveLeft", "moveRight", "first", "matrix", "children", "subs", "build", "hasFocus", "replacer", "behaviours", "getBusySpec", "builder", "viewport", "offsetParent", "isDocked", "change", "xRange", "yRange", "fixed", "snap", "factory", "sketch", "reset", "lookup", "store", "maxX", "maxY", "reposition", "round", "parse", "layouts", "renderComponents", "contents", "enabled", "open", "show", "getOpt", "stopper", "cutter", "pointerEvents", "unbind", "eventHandler", "find", "register", "add", "remove", "events$1", "menu", "primary", "expand", "refresh", "getMenus", "setup", "ExpandHighlightDecision", "onRight", "onLeft", "repositionMenus", "primaryMenu", "record", "setGroups", "button", "option", "select", "getBounds", "setContent", "handle", "title", "setValueFrom", "edge", "step", "snapStart", "rounded", "setValue", "choose", "overflow", "currentValue", "sandbox", "ToolbarMode", "ToolbarLocation", "isStickyToolbar", "freeze", "seal", "apply", "construct", "getGlobal", "_createTrustedTypesPolicy", "_createHooksMap", "window", "document", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "CUSTOM_ELEMENT", "isRegexOrFunction", "_parseConfig", "_checkValidNamespace", "_forceRemove", "_removeAttribute", "_initDocument", "_createNodeIterator", "_isClobbered", "_isNode", "hooks", "_sanitizeElements", "parentNode", "_isValidAttribute", "_isBasicCustomElement", "_sanitizeAttributes", "_sanitizeShadowDOM", "svg", "close", "anchorOverrides", "api", "ItemResponse", "placeholder", "isSeparator", "getApi", "search", "icon", "renderIcon", "rgbaColour", "red", "hexColour", "defaultCols", "custom", "onAction", "emitExecute", "render", "FocusMode", "menuHasIcons", "renderText", "onItemAction", "renderTextField", "errorId", "spectrumPart", "thumbPart", "pattern", "iframe", "img", "getCompByName", "role", "listRole", "labelPart", "thumb", "renderHeader", "leaf", "toggle", "childrenVisible", "expandedIds", "action", "url", "initialData", "bubbleSize", "inline", "getData", "getSink", "attach", "types", "meta", "elm", "getBehaviours$2", "isToggleButton", "getAction", "view", "exists", "toolbar", "toggleWithoutFocusing", "isOpen", "tooltip", "identifyButtons", "comp", "getFetch", "backstage", "dataset", "onSetup", "Delimiter", "fontFamily", "oldStart", "oldEnd", "number", "res", "fallbackFormat", "editor", "startNode", "getAnchor", "detection", "snapTo", "parents", "ResizeTypes", "resize", "singleton", "platform", "partMenubar", "partToolbar", "partMultipleToolbar", "partPromotion", "promotionLink", "partSocket", "partSidebar", "partHeader", "partThrobber", "partViewWrapper", "isHidden", "hasGrown", "pClose", "self", "isDisabled", "setEnabled", "block", "unblock", "showTab", "dialog", "root"]
}
